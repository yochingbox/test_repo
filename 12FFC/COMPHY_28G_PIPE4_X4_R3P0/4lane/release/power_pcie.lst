                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (May 26 2011) (Linux)
                              4 ; This file was generated Wed Apr 10 12:18:56 2019
                              5 ;--------------------------------------------------------
                              6 	.module power_pcie
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _TI
                             14 	.globl _RI
                             15 	.globl _EX12
                             16 	.globl _EX11
                             17 	.globl _EX10
                             18 	.globl _EX9
                             19 	.globl _EX8
                             20 	.globl _ES1
                             21 	.globl _PS1
                             22 	.globl _EX6
                             23 	.globl _EX5
                             24 	.globl _EX4
                             25 	.globl _EX3
                             26 	.globl _EX2
                             27 	.globl _EX7
                             28 	.globl _EA
                             29 	.globl _WDT
                             30 	.globl _ET2
                             31 	.globl _ES
                             32 	.globl _ET1
                             33 	.globl _EX1
                             34 	.globl _ET0
                             35 	.globl _EX0
                             36 	.globl _TF1
                             37 	.globl _TR1
                             38 	.globl _TF0
                             39 	.globl _TR0
                             40 	.globl _IE1
                             41 	.globl _IT1
                             42 	.globl _IE0
                             43 	.globl _IT0
                             44 	.globl _P3_7
                             45 	.globl _P3_6
                             46 	.globl _P3_5
                             47 	.globl _P3_4
                             48 	.globl _P3_3
                             49 	.globl _P3_2
                             50 	.globl _P3_1
                             51 	.globl _P3_0
                             52 	.globl _P2_7
                             53 	.globl _P2_6
                             54 	.globl _P2_5
                             55 	.globl _P2_4
                             56 	.globl _P2_3
                             57 	.globl _P2_2
                             58 	.globl _P2_1
                             59 	.globl _P2_0
                             60 	.globl _P1_7
                             61 	.globl _P1_6
                             62 	.globl _P1_5
                             63 	.globl _P1_4
                             64 	.globl _P1_3
                             65 	.globl _P1_2
                             66 	.globl _P1_1
                             67 	.globl _P1_0
                             68 	.globl _P0_7
                             69 	.globl _P0_6
                             70 	.globl _P0_5
                             71 	.globl _P0_4
                             72 	.globl _P0_3
                             73 	.globl _P0_2
                             74 	.globl _P0_1
                             75 	.globl _P0_0
                             76 	.globl _DMAC
                             77 	.globl _DMATA
                             78 	.globl _DMASA
                             79 	.globl _TMR2
                             80 	.globl _TMR1
                             81 	.globl _TMR0
                             82 	.globl _SRST
                             83 	.globl _B
                             84 	.globl _EIE
                             85 	.globl _ACC
                             86 	.globl _ADCON
                             87 	.globl _PSW
                             88 	.globl _TH2
                             89 	.globl _TL2
                             90 	.globl _RCAP2H
                             91 	.globl _RCAP2L
                             92 	.globl _T2CON
                             93 	.globl _CCEN
                             94 	.globl _IRCON
                             95 	.globl _S0RELH
                             96 	.globl _IP1
                             97 	.globl _IEN1
                             98 	.globl _DMAM1
                             99 	.globl _DMAM0
                            100 	.globl _DMASEL
                            101 	.globl _DMAC2
                            102 	.globl _DMAC1
                            103 	.globl _DMAC0
                            104 	.globl _P3
                            105 	.globl _S0RELL
                            106 	.globl _IP0
                            107 	.globl _IEN0
                            108 	.globl _DMAT2
                            109 	.globl _DMAT1
                            110 	.globl _DMAT0
                            111 	.globl _DMAS2
                            112 	.globl _DMAS1
                            113 	.globl _DMAS0
                            114 	.globl _P2
                            115 	.globl _IEN2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _PSBANK
                            119 	.globl _DPS
                            120 	.globl _P1
                            121 	.globl _CKCON
                            122 	.globl _TH1
                            123 	.globl _TH0
                            124 	.globl _TL1
                            125 	.globl _TL0
                            126 	.globl _TMOD
                            127 	.globl _TCON
                            128 	.globl _PCON
                            129 	.globl _WDTREL
                            130 	.globl _DPH
                            131 	.globl _DPL
                            132 	.globl _P0
                            133 	.globl _sq_thrs_ratio_tb
                            134 	.globl _train_save_tb
                            135 	.globl _tx_tb
                            136 	.globl _UPHY_ANAREG_REV_0
                            137 	.globl _dfe_sm_save
                            138 	.globl _dfe_sm_dc
                            139 	.globl _dfe_sm
                            140 	.globl _cds28
                            141 	.globl _lnx_spdoft_tx_preset_index_lane
                            142 	.globl _lnx_cal_sellv_rxeomclk
                            143 	.globl _lnx_cal_sellv_rxsampler
                            144 	.globl _lnx_cal_sellv_txpre
                            145 	.globl _lnx_cal_sellv_rxdataclk
                            146 	.globl _lnx_cal_sellv_txclk
                            147 	.globl _lnx_cal_sellv_txdata
                            148 	.globl _lnx_cal_align90_gm
                            149 	.globl _lnx_cal_align90_dac
                            150 	.globl _lnx_cal_align90_dummy_clk
                            151 	.globl _lnx_cal_eom_dpher
                            152 	.globl _lnx_cal_vdda_dll_eom_sel
                            153 	.globl _lnx_cal_dll_eom_gmsel
                            154 	.globl _lnx_cal_vdda_dll_sel
                            155 	.globl _lnx_cal_dll_gmsel
                            156 	.globl _lnx_cal_rxdcc_eom_hg
                            157 	.globl _lnx_cal_rxdcc_eom
                            158 	.globl _lnx_cal_rxdcc_data_hg
                            159 	.globl _lnx_cal_rxdcc_data
                            160 	.globl _lnx_cal_rxdcc_dll_hg
                            161 	.globl _lnx_cal_rxdcc_dll
                            162 	.globl _lnx_cal_txdcc_hg
                            163 	.globl _lnx_cal_txdcc
                            164 	.globl _lnx_cal_txdcc_pdiv_hg
                            165 	.globl _lnx_cal_txdcc_pdiv
                            166 	.globl _cmx_cal_sllp_dac_fine_ring
                            167 	.globl _cmx_cal_pll_sllp_dac_coarse_ring
                            168 	.globl _cmx_cal_pll_speed_ring
                            169 	.globl _cmx_cal_plldcc
                            170 	.globl _cmx_cal_lccap_lsb
                            171 	.globl _cmx_cal_lccap_msb
                            172 	.globl _cmx_cal_lcvco_dac_msb
                            173 	.globl _cmx_cal_lcvco_dac_lsb
                            174 	.globl _cmx_cal_lcvco_dac
                            175 	.globl _local_tx_preset_tb
                            176 	.globl _train_g0_index
                            177 	.globl _train_g1_index
                            178 	.globl _train_gn1_index
                            179 	.globl _phase_save
                            180 	.globl _txffe_save
                            181 	.globl _rc_save
                            182 	.globl _phy_mode_lane_table
                            183 	.globl _speedtable
                            184 	.globl _min_gen
                            185 	.globl _max_gen
                            186 	.globl _phy_mode_cmn_table
                            187 	.globl _ring_speedtable
                            188 	.globl _lc_speedtable
                            189 	.globl _CDS_READ_MISC1
                            190 	.globl _CDS_READ_MISC0
                            191 	.globl _DFE_READ_F0D_RIGHT_ODD
                            192 	.globl _DFE_READ_F0D_RIGHT_EVEN
                            193 	.globl _DFE_READ_F0D_LEFT_ODD
                            194 	.globl _DFE_READ_F0D_LEFT_EVEN
                            195 	.globl _DFE_READ_F0D_ODD
                            196 	.globl _DFE_READ_F0D_EVEN
                            197 	.globl _DFE_READ_F0B_ODD
                            198 	.globl _DFE_READ_F0B_EVEN
                            199 	.globl _DFE_READ_F0A_ODD
                            200 	.globl _DFE_READ_F0A_EVEN
                            201 	.globl _DFE_READ_ODD_REG8
                            202 	.globl _DFE_READ_EVEN_REG8
                            203 	.globl _DFE_READ_ODD_REG7
                            204 	.globl _DFE_READ_ODD_REG6
                            205 	.globl _DFE_READ_ODD_REG5
                            206 	.globl _DFE_READ_ODD_REG4
                            207 	.globl _DFE_READ_ODD_REG3
                            208 	.globl _DFE_READ_ODD_REG2
                            209 	.globl _DFE_READ_ODD_REG1
                            210 	.globl _DFE_READ_ODD_REG0
                            211 	.globl _DFE_READ_EVEN_REG7
                            212 	.globl _DFE_READ_EVEN_REG6
                            213 	.globl _DFE_READ_EVEN_REG5
                            214 	.globl _DFE_READ_EVEN_REG4
                            215 	.globl _DFE_READ_EVEN_REG3
                            216 	.globl _DFE_READ_EVEN_REG2
                            217 	.globl _DFE_READ_EVEN_REG1
                            218 	.globl _DFE_READ_EVEN_REG0
                            219 	.globl _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
                            220 	.globl _LINK_TRAIN_MODE3
                            221 	.globl _LINK_TRAIN_MODE2
                            222 	.globl _LINK_TRAIN_MODE1
                            223 	.globl _LINK_TRAIN_MODE0
                            224 	.globl _TX_TRAIN_IF_PHYTEST_CTRL
                            225 	.globl _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE
                            226 	.globl _TRX_TRAIN_IF_INTERRUPT_LANE
                            227 	.globl _TRX_TRAIN_IF_LOCAL_FIELD_INIT_LANE
                            228 	.globl _DME_DEC_LANE
                            229 	.globl _DME_ENC_LANE
                            230 	.globl _TRX_TRAIN_IF_CLK_RST
                            231 	.globl _TRX_TRAIN_IF_REMOTE_FIELD_LANE
                            232 	.globl _TRX_TRAIN_IF_LOCAL_FIELD_LANE
                            233 	.globl _TX_TRAIN_CTRL_LANE
                            234 	.globl _END_XDAT_CMN
                            235 	.globl _LOCAL_TX_PRESET_TB5
                            236 	.globl _LOCAL_TX_PRESET_TB4
                            237 	.globl _LOCAL_TX_PRESET_TB3
                            238 	.globl _LOCAL_TX_PRESET_TB2
                            239 	.globl _LOCAL_TX_PRESET_TB1
                            240 	.globl _LOCAL_TX_PRESET_TB0
                            241 	.globl _CDS_EYE_CLK_THR
                            242 	.globl _TX_SAVE_4
                            243 	.globl _TX_SAVE_3
                            244 	.globl _TX_SAVE_2
                            245 	.globl _TX_SAVE_1
                            246 	.globl _TX_SAVE_0
                            247 	.globl _ETH_PRESET1_TB
                            248 	.globl _ETH_PRESET0_TB
                            249 	.globl _SAS_PRESET2_TB
                            250 	.globl _SAS_PRESET1_TB
                            251 	.globl _SAS_PRESET0_TB
                            252 	.globl _G_SELLV_RXSAMPLER
                            253 	.globl _G_SELLV_RXDATACLK
                            254 	.globl _G_SELLV_RXEOMCLK
                            255 	.globl _G_SELLV_TXPRE
                            256 	.globl _G_SELLV_TXDATA
                            257 	.globl _G_SELLV_TXCLK
                            258 	.globl _TIMER_SEL3
                            259 	.globl _TIMER_SEL2
                            260 	.globl _TIMER_SEL1
                            261 	.globl _MCU_CONFIG1
                            262 	.globl _LOOP_CNTS
                            263 	.globl _CAL_DATA1
                            264 	.globl _MCU_CONFIG
                            265 	.globl _CAL_STATUS_READ
                            266 	.globl _CAL_TIME_OUT_AND_DIS
                            267 	.globl _CON_CAL_STEP_SIZE5
                            268 	.globl _CON_CAL_STEP_SIZE4
                            269 	.globl _CON_CAL_STEP_SIZE3
                            270 	.globl _CON_CAL_STEP_SIZE2
                            271 	.globl _CON_CAL_STEP_SIZE1
                            272 	.globl _CONTROL_CONFIG9
                            273 	.globl _CONTROL_CONFIG8
                            274 	.globl _TRAIN_IF_CONFIG
                            275 	.globl _CAL_DATA0
                            276 	.globl _CONTROL_CONFIG7
                            277 	.globl _CONTROL_CONFIG6
                            278 	.globl _CONTROL_CONFIG5
                            279 	.globl _CONTROL_CONFIG4
                            280 	.globl _CONTROL_CONFIG3
                            281 	.globl _CONTROL_CONFIG2
                            282 	.globl _CONTROL_CONFIG1
                            283 	.globl _CONTROL_CONFIG0
                            284 	.globl _FW_REV
                            285 	.globl _CID_REG1
                            286 	.globl _CID_REG0
                            287 	.globl _ECC_ADDR_1
                            288 	.globl _ECC_ADDR_0
                            289 	.globl _XDATA_MEM_CHECKSUM_CMN_2
                            290 	.globl _XDATA_MEM_CHECKSUM_CMN_1
                            291 	.globl _XDATA_MEM_CHECKSUM_CMN_0
                            292 	.globl _TEST5
                            293 	.globl _PM_CMN_REG2
                            294 	.globl _INPUT_CMN_PIN_REG3
                            295 	.globl __FIELDNAME_
                            296 	.globl _CMN_CALIBRATION
                            297 	.globl _OUTPUT_CMN_PIN_REG0
                            298 	.globl _SPD_CMN_REG1
                            299 	.globl _CLKGEN_CMN_REG1
                            300 	.globl _PLLCAL_REG1
                            301 	.globl _PLLCAL_REG0
                            302 	.globl _ANA_TSEN_CONTROL
                            303 	.globl _INPUT_CMN_PIN_REG2
                            304 	.globl _INPUT_CMN_PIN_REG1
                            305 	.globl _INPUT_CMN_PIN_REG0
                            306 	.globl _PM_CMN_REG1
                            307 	.globl _SYSTEM
                            308 	.globl _TEST4
                            309 	.globl _TEST3
                            310 	.globl _TEST2
                            311 	.globl _TEST1
                            312 	.globl _TEST0
                            313 	.globl _MCU_SYNC2
                            314 	.globl _MCU_SYNC1
                            315 	.globl _MEM_IRQ_CLEAR
                            316 	.globl _APB_CONTROL_REG
                            317 	.globl _ANA_IF_CMN_REG0
                            318 	.globl _MEM_IRQ_MASK
                            319 	.globl _MEM_IRQ
                            320 	.globl _MCU_INFO_43
                            321 	.globl _MCU_INFO_42
                            322 	.globl _MCU_INFO_41
                            323 	.globl _MCU_INFO_40
                            324 	.globl _MCU_INFO_39
                            325 	.globl _MCU_INFO_38
                            326 	.globl _MCU_INFO_37
                            327 	.globl _MCU_INFO_36
                            328 	.globl _MCU_INFO_35
                            329 	.globl _MCU_INFO_34
                            330 	.globl _MCU_INFO_33
                            331 	.globl _MCU_INFO_32
                            332 	.globl _MCU_INFO_31
                            333 	.globl _MCU_INFO_30
                            334 	.globl _MCU_INFO_29
                            335 	.globl _MCU_INFO_28
                            336 	.globl _MCU_INFO_27
                            337 	.globl _MCU_INFO_26
                            338 	.globl _MCU_INFO_25
                            339 	.globl _MCU_INFO_24
                            340 	.globl _MCU_INFO_23
                            341 	.globl _MCU_INFO_22
                            342 	.globl _MCU_INFO_21
                            343 	.globl _MCU_INFO_20
                            344 	.globl _MCU_INFO_19
                            345 	.globl _MCU_INFO_18
                            346 	.globl _MCU_INFO_17
                            347 	.globl _MCU_INFO_16
                            348 	.globl _MCU_INFO_15
                            349 	.globl _MCU_INFO_14
                            350 	.globl _MCU_INFO_13
                            351 	.globl _MCU_INFO_12
                            352 	.globl _MCU_INFO_11
                            353 	.globl _MCU_INFO_10
                            354 	.globl _MCU_INFO_9
                            355 	.globl _MCU_INFO_8
                            356 	.globl _MCU_INFO_7
                            357 	.globl _MCU_INFO_6
                            358 	.globl _MCU_INFO_5
                            359 	.globl _MCU_INFO_4
                            360 	.globl _MCU_INFO_3
                            361 	.globl _MCU_INFO_2
                            362 	.globl _MCU_INFO_1
                            363 	.globl _MCU_INFO_0
                            364 	.globl _MCU_CLK_CONTROL
                            365 	.globl _MEMORY_CONTROL_4
                            366 	.globl _MEMORY_CONTROL_3
                            367 	.globl _MEMORY_CONTROL_2
                            368 	.globl _MEMORY_CONTROL_1
                            369 	.globl _MEMORY_CONTROL_0
                            370 	.globl _MCU_DEBUG1
                            371 	.globl _MCU_DEBUG0
                            372 	.globl _MCU_CONTROL_2
                            373 	.globl _MCU_CONTROL_1
                            374 	.globl _MCU_CONTROL_0
                            375 	.globl _GLOB_PIPE_REVISION
                            376 	.globl _GLOB_BIST_DATA_HI
                            377 	.globl _GLOB_BIST_SEQR_CFG
                            378 	.globl _GLOB_BIST_RESULT
                            379 	.globl _GLOB_BIST_MASK
                            380 	.globl _GLOB_BIST_START
                            381 	.globl _GLOB_BIST_LANE_TYPE
                            382 	.globl _GLOB_BIST_CTRL
                            383 	.globl _GLOB_DP_BAL_CFG4
                            384 	.globl _GLOB_DP_BAL_CFG2
                            385 	.globl _GLOB_DP_BAL_CFG0
                            386 	.globl _GLOB_PM_DP_CTRL
                            387 	.globl _GLOB_COUNTER_HI
                            388 	.globl _GLOB_COUNTER_CTRL
                            389 	.globl _GLOB_PM_CFG0
                            390 	.globl _GLOB_DP_SAL_CFG5
                            391 	.globl _GLOB_DP_SAL_CFG3
                            392 	.globl _GLOB_DP_SAL_CFG1
                            393 	.globl _GLOB_DP_SAL_CFG
                            394 	.globl _GLOB_MISC_CTRL
                            395 	.globl _GLOB_CLK_SRC_HI
                            396 	.globl _GLOB_CLK_SRC_LO
                            397 	.globl _GLOB_RST_CLK_CTRL
                            398 	.globl _DFE_STATIC_REG6
                            399 	.globl _DFE_STATIC_REG5
                            400 	.globl _DFE_STATIC_REG4
                            401 	.globl _DFE_STATIC_REG3
                            402 	.globl _DFE_STATIC_REG1
                            403 	.globl _DFE_STATIC_REG0
                            404 	.globl _RX_CMN_0
                            405 	.globl _SRIS_REG1
                            406 	.globl _SRIS_REG0
                            407 	.globl _DTX_PHY_ALIGN_REG2
                            408 	.globl _DTX_PHY_ALIGN_REG1
                            409 	.globl _DTX_PHY_ALIGN_REG0
                            410 	.globl _DTX_REG4
                            411 	.globl _DTX_REG3
                            412 	.globl _DTX_REG2
                            413 	.globl _DTX_REG1
                            414 	.globl _DTX_REG0
                            415 	.globl _TX_CMN_REG
                            416 	.globl _END_XDAT_LANE
                            417 	.globl _TRAIN_CONTROL_17
                            418 	.globl _TRAIN_CONTROL_16
                            419 	.globl _TRAIN_CONTROL_15
                            420 	.globl _TRAIN_CONTROL_14
                            421 	.globl _TRAIN_CONTROL_13
                            422 	.globl _ESM_ERR_N_CNT_LOW_LANE
                            423 	.globl _ESM_POP_N_CNT_LOW_LANE
                            424 	.globl _TRAIN_CONTROL_12
                            425 	.globl _TRAIN_CONTROL_11
                            426 	.globl _TRAIN_CONTROL_10
                            427 	.globl _TRAIN_CONTROL_9
                            428 	.globl _TRAIN_CONTROL_8
                            429 	.globl _TRAIN_CONTROL_7
                            430 	.globl _TRAIN_CONTROL_6
                            431 	.globl _TRAIN_CONTROL_5
                            432 	.globl _TRAIN_CONTROL_4
                            433 	.globl _TRAIN_CONTROL_3
                            434 	.globl _ESM_ERR_POP_CNT_HIGH_LANE
                            435 	.globl _ESM_ERR_P_CNT_LOW_LANE
                            436 	.globl _ESM_POP_P_CNT_LOW_LANE
                            437 	.globl _CDS_CTRL_REG1
                            438 	.globl _CDS_CTRL_REG0
                            439 	.globl _DFE_CONTROL_11
                            440 	.globl _DFE_CONTROL_10
                            441 	.globl _DFE_CONTROL_9
                            442 	.globl _DFE_CONTROL_8
                            443 	.globl _DFE_CONTROL_7
                            444 	.globl _DFE_TEST_5
                            445 	.globl _DFE_TEST_4
                            446 	.globl _DFE_TEST_1
                            447 	.globl _DFE_TEST_0
                            448 	.globl _DFE_CONTROL_6
                            449 	.globl _TRAIN_PARA_3
                            450 	.globl _TRAIN_PARA_2
                            451 	.globl _TRAIN_PARA_1
                            452 	.globl _TRAIN_PARA_0
                            453 	.globl _DLL_CAL
                            454 	.globl _RPTA_CONFIG_1
                            455 	.globl _RPTA_CONFIG_0
                            456 	.globl _TRAIN_CONTROL_2
                            457 	.globl _TRAIN_CONTROL_1
                            458 	.globl _TRAIN_CONTROL_0
                            459 	.globl _DFE_CONTROL_5
                            460 	.globl _DFE_CONTROL_4
                            461 	.globl _DFE_CONTROL_3
                            462 	.globl _DFE_CONTROL_2
                            463 	.globl _DFE_CONTROL_1
                            464 	.globl _DFE_CONTROL_0
                            465 	.globl _TRX_TRAIN_IF_TIMERS_ENABLE_LANE
                            466 	.globl _TRX_TRAIN_IF_TIMERS2_LANE
                            467 	.globl _TRX_TRAIN_IF_TIMERS1_LANE
                            468 	.globl _PHY_LOCAL_VALUE_LANE
                            469 	.globl _PHY_REMOTE_CTRL_VALUE_LANE
                            470 	.globl _PHY_REMOTE_CTRL_COMMAND_LANE
                            471 	.globl _CAL_SAVE_DATA3_LANE
                            472 	.globl _CAL_SAVE_DATA2_LANE
                            473 	.globl _CAL_SAVE_DATA1_LANE
                            474 	.globl _CAL_CTRL4_LANE
                            475 	.globl _CAL_CTRL3_LANE
                            476 	.globl _CAL_CTRL2_LANE
                            477 	.globl _CAL_CTRL1_LANE
                            478 	.globl _LANE_MARGIN_REG0
                            479 	.globl _EOM_VLD_REG4
                            480 	.globl _EOM_REG0
                            481 	.globl _EOM_ERR_REG3
                            482 	.globl _EOM_ERR_REG2
                            483 	.globl _EOM_ERR_REG1
                            484 	.globl _EOM_ERR_REG0
                            485 	.globl _EOM_VLD_REG3
                            486 	.globl _EOM_VLD_REG2
                            487 	.globl _EOM_VLD_REG1
                            488 	.globl _EOM_VLD_REG0
                            489 	.globl _DFE_DCE_REG0
                            490 	.globl _CAL_OFST_REG2
                            491 	.globl _CAL_OFST_REG1
                            492 	.globl _CAL_OFST_REG0
                            493 	.globl _DFE_READ_ODD_2C_REG8
                            494 	.globl _DFE_READ_EVEN_2C_REG8
                            495 	.globl _DFE_READ_ODD_2C_REG7
                            496 	.globl _DFE_READ_ODD_2C_REG6
                            497 	.globl _DFE_READ_ODD_2C_REG5
                            498 	.globl _DFE_READ_ODD_2C_REG4
                            499 	.globl _DFE_READ_ODD_2C_REG3
                            500 	.globl _DFE_READ_ODD_2C_REG2
                            501 	.globl _DFE_READ_ODD_2C_REG1
                            502 	.globl _DFE_READ_ODD_2C_REG0
                            503 	.globl _DFE_READ_EVEN_2C_REG7
                            504 	.globl _DFE_READ_EVEN_2C_REG6
                            505 	.globl _DFE_READ_EVEN_2C_REG5
                            506 	.globl _DFE_READ_EVEN_2C_REG4
                            507 	.globl _DFE_READ_EVEN_2C_REG3
                            508 	.globl _DFE_READ_EVEN_2C_REG2
                            509 	.globl _DFE_READ_EVEN_2C_REG1
                            510 	.globl _DFE_READ_EVEN_2C_REG0
                            511 	.globl _DFE_READ_ODD_SM_REG8
                            512 	.globl _DFE_READ_EVEN_SM_REG8
                            513 	.globl _DFE_READ_ODD_SM_REG7
                            514 	.globl _DFE_READ_ODD_SM_REG6
                            515 	.globl _DFE_READ_ODD_SM_REG5
                            516 	.globl _DFE_READ_ODD_SM_REG4
                            517 	.globl _DFE_READ_ODD_SM_REG3
                            518 	.globl _DFE_READ_ODD_SM_REG2
                            519 	.globl _DFE_READ_ODD_SM_REG1
                            520 	.globl _DFE_READ_ODD_SM_REG0
                            521 	.globl _DFE_READ_EVEN_SM_REG7
                            522 	.globl _DFE_READ_EVEN_SM_REG6
                            523 	.globl _DFE_READ_EVEN_SM_REG5
                            524 	.globl _DFE_READ_EVEN_SM_REG4
                            525 	.globl _DFE_READ_EVEN_SM_REG3
                            526 	.globl _DFE_READ_EVEN_SM_REG2
                            527 	.globl _DFE_READ_EVEN_SM_REG1
                            528 	.globl _DFE_READ_EVEN_SM_REG0
                            529 	.globl _DFE_FEXT_ODD_REG7
                            530 	.globl _DFE_FEXT_ODD_REG6
                            531 	.globl _DFE_FEXT_ODD_REG5
                            532 	.globl _DFE_FEXT_ODD_REG4
                            533 	.globl _DFE_FEXT_ODD_REG3
                            534 	.globl _DFE_FEXT_ODD_REG2
                            535 	.globl _DFE_FEXT_ODD_REG1
                            536 	.globl _DFE_FEXT_ODD_REG0
                            537 	.globl _DFE_FEXT_EVEN_REG7
                            538 	.globl _DFE_FEXT_EVEN_REG6
                            539 	.globl _DFE_FEXT_EVEN_REG5
                            540 	.globl _DFE_FEXT_EVEN_REG4
                            541 	.globl _DFE_FEXT_EVEN_REG3
                            542 	.globl _DFE_FEXT_EVEN_REG2
                            543 	.globl _DFE_FEXT_EVEN_REG1
                            544 	.globl _DFE_FEXT_EVEN_REG0
                            545 	.globl _DFE_DC_ODD_REG8
                            546 	.globl _DFE_DC_EVEN_REG8
                            547 	.globl _DFE_FEN_ODD_REG
                            548 	.globl _DFE_FEN_EVEN_REG
                            549 	.globl _DFE_STEP_REG1
                            550 	.globl _DFE_STEP_REG0
                            551 	.globl _DFE_ANA_REG1
                            552 	.globl _DFE_ANA_REG0
                            553 	.globl _DFE_CTRL_REG4
                            554 	.globl _RX_EQ_CLK_CTRL
                            555 	.globl _DFE_CTRL_REG3
                            556 	.globl _DFE_CTRL_REG2
                            557 	.globl _DFE_CTRL_REG1
                            558 	.globl _DFE_CTRL_REG0
                            559 	.globl _PT_COUNTER2
                            560 	.globl _PT_COUNTER1
                            561 	.globl _PT_COUNTER0
                            562 	.globl _PT_USER_PATTERN2
                            563 	.globl _PT_USER_PATTERN1
                            564 	.globl _PT_USER_PATTERN0
                            565 	.globl _PT_CONTROL1
                            566 	.globl _PT_CONTROL0
                            567 	.globl _XDATA_MEM_CHECKSUM_LANE1
                            568 	.globl _XDATA_MEM_CHECKSUM_LANE0
                            569 	.globl _MEM_ECC_ERR_ADDRESS0
                            570 	.globl _MCU_COMMAND0
                            571 	.globl _MCU_INT_CONTROL_13
                            572 	.globl _MCU_WDT_LANE
                            573 	.globl _MCU_IRQ_ISR_LANE
                            574 	.globl _ANA_IF_DFEO_REG0
                            575 	.globl _ANA_IF_DFEE_REG0
                            576 	.globl _ANA_IF_TRX_REG0
                            577 	.globl _EXT_INT_CONTROL
                            578 	.globl _MCU_DEBUG_LANE
                            579 	.globl _MCU_DEBUG3_LANE
                            580 	.globl _MCU_DEBUG2_LANE
                            581 	.globl _MCU_DEBUG1_LANE
                            582 	.globl _MCU_DEBUG0_LANE
                            583 	.globl _MCU_TIMER_CTRL_7_LANE
                            584 	.globl _MCU_TIMER_CTRL_6_LANE
                            585 	.globl _MCU_TIMER_CTRL_5_LANE
                            586 	.globl _MCU_TIMER_CTRL_4_LANE
                            587 	.globl _MCU_TIMER_CTRL_3_LANE
                            588 	.globl _MCU_TIMER_CTRL_2_LANE
                            589 	.globl _MCU_TIMER_CTRL_1_LANE
                            590 	.globl _MCU_MEM_REG2_LANE
                            591 	.globl _MCU_MEM_REG1_LANE
                            592 	.globl _MCU_IRQ_MASK_LANE
                            593 	.globl _MCU_IRQ_LANE
                            594 	.globl _MCU_TIMER3_CONTROL
                            595 	.globl _MCU_TIMER2_CONTROL
                            596 	.globl _MCU_TIMER1_CONTROL
                            597 	.globl _MCU_TIMER0_CONTROL
                            598 	.globl _MCU_TIMER_CONTROL
                            599 	.globl _MCU_INT12_CONTROL
                            600 	.globl _MCU_INT11_CONTROL
                            601 	.globl _MCU_INT10_CONTROL
                            602 	.globl _MCU_INT9_CONTROL
                            603 	.globl _MCU_INT8_CONTROL
                            604 	.globl _MCU_INT7_CONTROL
                            605 	.globl _MCU_INT6_CONTROL
                            606 	.globl _MCU_INT5_CONTROL
                            607 	.globl _MCU_INT4_CONTROL
                            608 	.globl _MCU_INT3_CONTROL
                            609 	.globl _MCU_INT2_CONTROL
                            610 	.globl _MCU_INT1_CONTROL
                            611 	.globl _MCU_INT0_CONTROL
                            612 	.globl _MCU_STATUS3_LANE
                            613 	.globl _MCU_STATUS2_LANE
                            614 	.globl _MCU_STATUS1_LANE
                            615 	.globl _MCU_STATUS0_LANE
                            616 	.globl _MCU_INFO7_LANE
                            617 	.globl _MCU_INFO6_LANE
                            618 	.globl _MCU_INFO5_LANE
                            619 	.globl _MCU_INFO4_LANE
                            620 	.globl _MCU_INFO3_LANE
                            621 	.globl _MCU_INFO2_LANE
                            622 	.globl _MCU_INFO1_LANE
                            623 	.globl _MCU_INFO0_LANE
                            624 	.globl _CACHE_DEBUG1
                            625 	.globl _CACHE_DEBUG0
                            626 	.globl _MCU_GPIO
                            627 	.globl _MCU_CONTROL_LANE
                            628 	.globl _LANE_16G_PRESET_CFG16_LANE
                            629 	.globl _LANE_16G_PRESET_CFG14_LANE
                            630 	.globl _LANE_16G_PRESET_CFG12_LANE
                            631 	.globl _LANE_16G_PRESET_CFG10_LANE
                            632 	.globl _LANE_16G_PRESET_CFG8_LANE
                            633 	.globl _LANE_16G_PRESET_CFG6_LANE
                            634 	.globl _LANE_16G_PRESET_CFG4_LANE
                            635 	.globl _LANE_16G_PRESET_CFG2_LANE
                            636 	.globl _LANE_16G_PRESET_CFG0_LANE
                            637 	.globl _LANE_EQ_16G_CFG0_LANE
                            638 	.globl _LANE_REMOTE_SET_LANE
                            639 	.globl _LANE_COEFF_MAX0_LANE
                            640 	.globl _LANE_PRESET_CFG16_LANE
                            641 	.globl _LANE_PRESET_CFG14_LANE
                            642 	.globl _LANE_PRESET_CFG12_LANE
                            643 	.globl _LANE_PRESET_CFG10_LANE
                            644 	.globl _LANE_PRESET_CFG8_LANE
                            645 	.globl _LANE_PRESET_CFG6_LANE
                            646 	.globl _LANE_PRESET_CFG4_LANE
                            647 	.globl _LANE_PRESET_CFG2_LANE
                            648 	.globl _LANE_PRESET_CFG0_LANE
                            649 	.globl _LANE_EQ_CFG1_LANE
                            650 	.globl _LANE_EQ_CFG0_LANE
                            651 	.globl _LANE_USB_DP_CFG2_LANE
                            652 	.globl _LANE_USB_DP_CFG1_LANE
                            653 	.globl _LANE_DP_PIE8_CFG0_LANE
                            654 	.globl _LANE_CFG_STATUS3_LANE
                            655 	.globl _LANE_CFG4
                            656 	.globl _LANE_CFG2_LANE
                            657 	.globl _LANE_CFG_STATUS2_LANE
                            658 	.globl _LANE_STATUS0
                            659 	.globl _LANE_CFG0
                            660 	.globl _SQ_REG0
                            661 	.globl _DTL_REG3
                            662 	.globl _DTL_REG2
                            663 	.globl _DTL_REG1
                            664 	.globl _DTL_REG0
                            665 	.globl _RX_LANE_INTERRUPT_REG1
                            666 	.globl _RX_CALIBRATION_REG
                            667 	.globl _INPUT_RX_PIN_REG3_LANE
                            668 	.globl _RX_DATA_PATH_REG
                            669 	.globl _RX_LANE_INTERRUPT_MASK
                            670 	.globl _RX_LANE_INTERRUPT
                            671 	.globl _CDR_LOCK_REG
                            672 	.globl _FRAME_SYNC_DET_REG6
                            673 	.globl _FRAME_SYNC_DET_REG5
                            674 	.globl _FRAME_SYNC_DET_REG4
                            675 	.globl _FRAME_SYNC_DET_REG3
                            676 	.globl _FRAME_SYNC_DET_REG2
                            677 	.globl _FRAME_SYNC_DET_REG1
                            678 	.globl _FRAME_SYNC_DET_REG0
                            679 	.globl _CLKGEN_RX_LANE_REG1_LANE
                            680 	.globl _DIG_RX_RSVD_REG0
                            681 	.globl _SPD_CTRL_RX_LANE_REG1_LANE
                            682 	.globl _INPUT_RX_PIN_REG2_LANE
                            683 	.globl _INPUT_RX_PIN_REG1_LANE
                            684 	.globl _INPUT_RX_PIN_REG0_LANE
                            685 	.globl _RX_SYSTEM_LANE
                            686 	.globl _PM_CTRL_RX_LANE_REG1_LANE
                            687 	.globl _ANALOG_TX_REALTIME_REG_1
                            688 	.globl _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE
                            689 	.globl _PM_CTRL_INTERRUPT_ISR_REG1_LANE
                            690 	.globl __FIELDNAME__LANE
                            691 	.globl _INPUT_TX_PIN_REG5_LANE
                            692 	.globl _DIG_TX_RSVD_REG0
                            693 	.globl _TX_CALIBRATION_LANE
                            694 	.globl _INPUT_TX_PIN_REG4_LANE
                            695 	.globl _TX_SYSTEM_LANE
                            696 	.globl _SPD_CTRL_TX_LANE_REG1_LANE
                            697 	.globl _SPD_CTRL_INTERRUPT_REG2
                            698 	.globl _SPD_CTRL_INTERRUPT_REG1_LANE
                            699 	.globl _TX_SPEED_CONVERT_LANE
                            700 	.globl _CLKGEN_TX_LANE_REG1_LANE
                            701 	.globl _PM_CTRL_INTERRUPT_REG2
                            702 	.globl _PM_CTRL_INTERRUPT_REG1_LANE
                            703 	.globl _INPUT_TX_PIN_REG3_LANE
                            704 	.globl _INPUT_TX_PIN_REG2_LANE
                            705 	.globl _INPUT_TX_PIN_REG1_LANE
                            706 	.globl _INPUT_TX_PIN_REG0_LANE
                            707 	.globl _PM_CTRL_TX_LANE_REG2_LANE
                            708 	.globl _PM_CTRL_TX_LANE_REG1_LANE
                            709 	.globl _UPHY14_CMN_ANAREG_TOP_214
                            710 	.globl _UPHY14_CMN_ANAREG_TOP_213
                            711 	.globl _UPHY14_CMN_ANAREG_TOP_212
                            712 	.globl _UPHY14_CMN_ANAREG_TOP_211
                            713 	.globl _UPHY14_CMN_ANAREG_TOP_210
                            714 	.globl _UPHY14_CMN_ANAREG_TOP_209
                            715 	.globl _UPHY14_CMN_ANAREG_TOP_208
                            716 	.globl _UPHY14_CMN_ANAREG_TOP_207
                            717 	.globl _UPHY14_CMN_ANAREG_TOP_206
                            718 	.globl _UPHY14_CMN_ANAREG_TOP_205
                            719 	.globl _UPHY14_CMN_ANAREG_TOP_204
                            720 	.globl _UPHY14_CMN_ANAREG_TOP_203
                            721 	.globl _UPHY14_CMN_ANAREG_TOP_202
                            722 	.globl _UPHY14_CMN_ANAREG_TOP_201
                            723 	.globl _UPHY14_CMN_ANAREG_TOP_200
                            724 	.globl _UPHY14_CMN_ANAREG_TOP_199
                            725 	.globl _UPHY14_CMN_ANAREG_TOP_198
                            726 	.globl _UPHY14_CMN_ANAREG_TOP_197
                            727 	.globl _UPHY14_CMN_ANAREG_TOP_196
                            728 	.globl _UPHY14_CMN_ANAREG_TOP_195
                            729 	.globl _UPHY14_CMN_ANAREG_TOP_194
                            730 	.globl _UPHY14_CMN_ANAREG_TOP_193
                            731 	.globl _UPHY14_CMN_ANAREG_TOP_192
                            732 	.globl _UPHY14_CMN_ANAREG_TOP_191
                            733 	.globl _UPHY14_CMN_ANAREG_TOP_190
                            734 	.globl _UPHY14_CMN_ANAREG_TOP_189
                            735 	.globl _UPHY14_CMN_ANAREG_TOP_188
                            736 	.globl _UPHY14_CMN_ANAREG_TOP_187
                            737 	.globl _UPHY14_CMN_ANAREG_TOP_186
                            738 	.globl _UPHY14_CMN_ANAREG_TOP_185
                            739 	.globl _UPHY14_CMN_ANAREG_TOP_184
                            740 	.globl _UPHY14_CMN_ANAREG_TOP_183
                            741 	.globl _UPHY14_CMN_ANAREG_TOP_182
                            742 	.globl _UPHY14_CMN_ANAREG_TOP_181
                            743 	.globl _UPHY14_CMN_ANAREG_TOP_180
                            744 	.globl _UPHY14_CMN_ANAREG_TOP_179
                            745 	.globl _UPHY14_CMN_ANAREG_TOP_178
                            746 	.globl _UPHY14_CMN_ANAREG_TOP_177
                            747 	.globl _UPHY14_CMN_ANAREG_TOP_176
                            748 	.globl _UPHY14_CMN_ANAREG_TOP_175
                            749 	.globl _UPHY14_CMN_ANAREG_TOP_174
                            750 	.globl _UPHY14_CMN_ANAREG_TOP_173
                            751 	.globl _UPHY14_CMN_ANAREG_TOP_172
                            752 	.globl _UPHY14_CMN_ANAREG_TOP_171
                            753 	.globl _UPHY14_CMN_ANAREG_TOP_170
                            754 	.globl _UPHY14_CMN_ANAREG_TOP_169
                            755 	.globl _UPHY14_CMN_ANAREG_TOP_168
                            756 	.globl _UPHY14_CMN_ANAREG_TOP_167
                            757 	.globl _UPHY14_CMN_ANAREG_TOP_166
                            758 	.globl _UPHY14_CMN_ANAREG_TOP_165
                            759 	.globl _UPHY14_CMN_ANAREG_TOP_164
                            760 	.globl _UPHY14_CMN_ANAREG_TOP_163
                            761 	.globl _UPHY14_CMN_ANAREG_TOP_162
                            762 	.globl _UPHY14_CMN_ANAREG_TOP_161
                            763 	.globl _UPHY14_CMN_ANAREG_TOP_160
                            764 	.globl _UPHY14_CMN_ANAREG_TOP_159
                            765 	.globl _UPHY14_CMN_ANAREG_TOP_158
                            766 	.globl _UPHY14_CMN_ANAREG_TOP_157
                            767 	.globl _UPHY14_CMN_ANAREG_TOP_156
                            768 	.globl _UPHY14_CMN_ANAREG_TOP_155
                            769 	.globl _UPHY14_CMN_ANAREG_TOP_154
                            770 	.globl _UPHY14_CMN_ANAREG_TOP_153
                            771 	.globl _UPHY14_CMN_ANAREG_TOP_152
                            772 	.globl _UPHY14_CMN_ANAREG_TOP_151
                            773 	.globl _UPHY14_CMN_ANAREG_TOP_150
                            774 	.globl _UPHY14_CMN_ANAREG_TOP_149
                            775 	.globl _UPHY14_CMN_ANAREG_TOP_148
                            776 	.globl _UPHY14_CMN_ANAREG_TOP_147
                            777 	.globl _UPHY14_CMN_ANAREG_TOP_146
                            778 	.globl _UPHY14_CMN_ANAREG_TOP_145
                            779 	.globl _UPHY14_CMN_ANAREG_TOP_144
                            780 	.globl _UPHY14_CMN_ANAREG_TOP_143
                            781 	.globl _UPHY14_CMN_ANAREG_TOP_142
                            782 	.globl _UPHY14_CMN_ANAREG_TOP_141
                            783 	.globl _UPHY14_CMN_ANAREG_TOP_140
                            784 	.globl _UPHY14_CMN_ANAREG_TOP_139
                            785 	.globl _UPHY14_CMN_ANAREG_TOP_138
                            786 	.globl _UPHY14_CMN_ANAREG_TOP_137
                            787 	.globl _UPHY14_CMN_ANAREG_TOP_136
                            788 	.globl _UPHY14_CMN_ANAREG_TOP_135
                            789 	.globl _UPHY14_CMN_ANAREG_TOP_134
                            790 	.globl _UPHY14_CMN_ANAREG_TOP_133
                            791 	.globl _UPHY14_CMN_ANAREG_TOP_132
                            792 	.globl _UPHY14_CMN_ANAREG_TOP_131
                            793 	.globl _UPHY14_CMN_ANAREG_TOP_130
                            794 	.globl _UPHY14_CMN_ANAREG_TOP_129
                            795 	.globl _UPHY14_CMN_ANAREG_TOP_128
                            796 	.globl _ANA_DFEO_REG_0B
                            797 	.globl _ANA_DFEO_REG_0A
                            798 	.globl _ANA_DFEO_REG_09
                            799 	.globl _ANA_DFEO_REG_08
                            800 	.globl _ANA_DFEO_REG_07
                            801 	.globl _ANA_DFEO_REG_06
                            802 	.globl _ANA_DFEO_REG_05
                            803 	.globl _ANA_DFEO_REG_04
                            804 	.globl _ANA_DFEO_REG_03
                            805 	.globl _ANA_DFEO_REG_02
                            806 	.globl _ANA_DFEO_REG_01
                            807 	.globl _ANA_DFEO_REG_00
                            808 	.globl _ANA_DFEO_REG_27
                            809 	.globl _ANA_DFEO_REG_26
                            810 	.globl _ANA_DFEO_REG_25
                            811 	.globl _ANA_DFEO_REG_24
                            812 	.globl _ANA_DFEO_REG_23
                            813 	.globl _ANA_DFEO_REG_22
                            814 	.globl _ANA_DFEO_REG_21
                            815 	.globl _ANA_DFEO_REG_20
                            816 	.globl _ANA_DFEO_REG_1F
                            817 	.globl _ANA_DFEO_REG_1E
                            818 	.globl _ANA_DFEO_REG_1D
                            819 	.globl _ANA_DFEO_REG_1C
                            820 	.globl _ANA_DFEO_REG_1B
                            821 	.globl _ANA_DFEO_REG_1A
                            822 	.globl _ANA_DFEO_REG_19
                            823 	.globl _ANA_DFEO_REG_18
                            824 	.globl _ANA_DFEO_REG_17
                            825 	.globl _ANA_DFEO_REG_16
                            826 	.globl _ANA_DFEO_REG_15
                            827 	.globl _ANA_DFEO_REG_14
                            828 	.globl _ANA_DFEO_REG_13
                            829 	.globl _ANA_DFEO_REG_12
                            830 	.globl _ANA_DFEO_REG_11
                            831 	.globl _ANA_DFEO_REG_10
                            832 	.globl _ANA_DFEO_REG_0F
                            833 	.globl _ANA_DFEO_REG_0E
                            834 	.globl _ANA_DFEO_REG_0D
                            835 	.globl _ANA_DFEO_REG_0C
                            836 	.globl _ANA_DFEE_REG_1D
                            837 	.globl _ANA_DFEE_REG_1C
                            838 	.globl _ANA_DFEE_REG_1B
                            839 	.globl _ANA_DFEE_REG_1A
                            840 	.globl _ANA_DFEE_REG_19
                            841 	.globl _ANA_DFEE_REG_18
                            842 	.globl _ANA_DFEE_REG_17
                            843 	.globl _ANA_DFEE_REG_16
                            844 	.globl _ANA_DFEE_REG_15
                            845 	.globl _ANA_DFEE_REG_14
                            846 	.globl _ANA_DFEE_REG_13
                            847 	.globl _ANA_DFEE_REG_12
                            848 	.globl _ANA_DFEE_REG_11
                            849 	.globl _ANA_DFEE_REG_10
                            850 	.globl _ANA_DFEE_REG_0F
                            851 	.globl _ANA_DFEE_REG_0E
                            852 	.globl _ANA_DFEE_REG_0D
                            853 	.globl _ANA_DFEE_REG_0C
                            854 	.globl _ANA_DFEE_REG_0B
                            855 	.globl _ANA_DFEE_REG_0A
                            856 	.globl _ANA_DFEE_REG_09
                            857 	.globl _ANA_DFEE_REG_08
                            858 	.globl _ANA_DFEE_REG_07
                            859 	.globl _ANA_DFEE_REG_06
                            860 	.globl _ANA_DFEE_REG_05
                            861 	.globl _ANA_DFEE_REG_04
                            862 	.globl _ANA_DFEE_REG_03
                            863 	.globl _ANA_DFEE_REG_02
                            864 	.globl _ANA_DFEE_REG_01
                            865 	.globl _ANA_DFEE_REG_00
                            866 	.globl _ANA_DFEE_REG_27
                            867 	.globl _ANA_DFEE_REG_26
                            868 	.globl _ANA_DFEE_REG_25
                            869 	.globl _ANA_DFEE_REG_24
                            870 	.globl _ANA_DFEE_REG_23
                            871 	.globl _ANA_DFEE_REG_22
                            872 	.globl _ANA_DFEE_REG_21
                            873 	.globl _ANA_DFEE_REG_20
                            874 	.globl _ANA_DFEE_REG_1F
                            875 	.globl _ANA_DFEE_REG_1E
                            876 	.globl _UPHY14_TRX_ANAREG_BOT_32
                            877 	.globl _UPHY14_TRX_ANAREG_BOT_31
                            878 	.globl _UPHY14_TRX_ANAREG_BOT_30
                            879 	.globl _UPHY14_TRX_ANAREG_BOT_29
                            880 	.globl _UPHY14_TRX_ANAREG_BOT_28
                            881 	.globl _UPHY14_TRX_ANAREG_BOT_27
                            882 	.globl _UPHY14_TRX_ANAREG_BOT_26
                            883 	.globl _UPHY14_TRX_ANAREG_BOT_25
                            884 	.globl _UPHY14_TRX_ANAREG_BOT_24
                            885 	.globl _UPHY14_TRX_ANAREG_BOT_23
                            886 	.globl _UPHY14_TRX_ANAREG_BOT_22
                            887 	.globl _UPHY14_TRX_ANAREG_BOT_21
                            888 	.globl _UPHY14_TRX_ANAREG_BOT_20
                            889 	.globl _UPHY14_TRX_ANAREG_BOT_19
                            890 	.globl _UPHY14_TRX_ANAREG_BOT_18
                            891 	.globl _UPHY14_TRX_ANAREG_BOT_17
                            892 	.globl _UPHY14_TRX_ANAREG_BOT_16
                            893 	.globl _UPHY14_TRX_ANAREG_BOT_15
                            894 	.globl _UPHY14_TRX_ANAREG_BOT_14
                            895 	.globl _UPHY14_TRX_ANAREG_BOT_13
                            896 	.globl _UPHY14_TRX_ANAREG_BOT_12
                            897 	.globl _UPHY14_TRX_ANAREG_BOT_11
                            898 	.globl _UPHY14_TRX_ANAREG_BOT_10
                            899 	.globl _UPHY14_TRX_ANAREG_BOT_9
                            900 	.globl _UPHY14_TRX_ANAREG_BOT_8
                            901 	.globl _UPHY14_TRX_ANAREG_BOT_7
                            902 	.globl _UPHY14_TRX_ANAREG_BOT_6
                            903 	.globl _UPHY14_TRX_ANAREG_BOT_5
                            904 	.globl _UPHY14_TRX_ANAREG_BOT_4
                            905 	.globl _UPHY14_TRX_ANAREG_BOT_3
                            906 	.globl _UPHY14_TRX_ANAREG_BOT_2
                            907 	.globl _UPHY14_TRX_ANAREG_BOT_1
                            908 	.globl _UPHY14_TRX_ANAREG_BOT_0
                            909 	.globl _UPHY14_TRX_ANAREG_TOP_157
                            910 	.globl _UPHY14_TRX_ANAREG_TOP_156
                            911 	.globl _UPHY14_TRX_ANAREG_TOP_155
                            912 	.globl _UPHY14_TRX_ANAREG_TOP_154
                            913 	.globl _UPHY14_TRX_ANAREG_TOP_153
                            914 	.globl _UPHY14_TRX_ANAREG_TOP_152
                            915 	.globl _UPHY14_TRX_ANAREG_TOP_151
                            916 	.globl _UPHY14_TRX_ANAREG_TOP_150
                            917 	.globl _UPHY14_TRX_ANAREG_TOP_149
                            918 	.globl _UPHY14_TRX_ANAREG_TOP_148
                            919 	.globl _UPHY14_TRX_ANAREG_TOP_147
                            920 	.globl _UPHY14_TRX_ANAREG_TOP_146
                            921 	.globl _UPHY14_TRX_ANAREG_TOP_145
                            922 	.globl _UPHY14_TRX_ANAREG_TOP_144
                            923 	.globl _UPHY14_TRX_ANAREG_TOP_143
                            924 	.globl _UPHY14_TRX_ANAREG_TOP_142
                            925 	.globl _UPHY14_TRX_ANAREG_TOP_141
                            926 	.globl _UPHY14_TRX_ANAREG_TOP_140
                            927 	.globl _UPHY14_TRX_ANAREG_TOP_139
                            928 	.globl _UPHY14_TRX_ANAREG_TOP_138
                            929 	.globl _UPHY14_TRX_ANAREG_TOP_137
                            930 	.globl _UPHY14_TRX_ANAREG_TOP_136
                            931 	.globl _UPHY14_TRX_ANAREG_TOP_135
                            932 	.globl _UPHY14_TRX_ANAREG_TOP_134
                            933 	.globl _UPHY14_TRX_ANAREG_TOP_133
                            934 	.globl _UPHY14_TRX_ANAREG_TOP_132
                            935 	.globl _UPHY14_TRX_ANAREG_TOP_131
                            936 	.globl _UPHY14_TRX_ANAREG_TOP_130
                            937 	.globl _UPHY14_TRX_ANAREG_TOP_129
                            938 	.globl _UPHY14_TRX_ANAREG_TOP_128
                            939 	.globl _Power_P0s_P1
                            940 	.globl _Power_P1_P2
                            941 	.globl _Power_P2_P1
                            942 	.globl _Power_P1_P0
                            943 	.globl _Power_P2_P0
                            944 	.globl _Power_P1CLKREQ_P1
                            945 	.globl _P0Off_TXDETRX
                            946 	.globl _Power_P0_TXDETRX
                            947 	.globl _Power_P1_TXDETRX
                            948 	.globl _Power_P2_TXDETRX
                            949 	.globl _Power_P2_BEACON
                            950 ;--------------------------------------------------------
                            951 ; special function registers
                            952 ;--------------------------------------------------------
                            953 	.area RSEG    (ABS,DATA)
   0000                     954 	.org 0x0000
                    0080    955 _P0	=	0x0080
                    0082    956 _DPL	=	0x0082
                    0083    957 _DPH	=	0x0083
                    0086    958 _WDTREL	=	0x0086
                    0087    959 _PCON	=	0x0087
                    0088    960 _TCON	=	0x0088
                    0089    961 _TMOD	=	0x0089
                    008A    962 _TL0	=	0x008a
                    008B    963 _TL1	=	0x008b
                    008C    964 _TH0	=	0x008c
                    008D    965 _TH1	=	0x008d
                    008E    966 _CKCON	=	0x008e
                    0090    967 _P1	=	0x0090
                    0092    968 _DPS	=	0x0092
                    0094    969 _PSBANK	=	0x0094
                    0098    970 _SCON	=	0x0098
                    0099    971 _SBUF	=	0x0099
                    009A    972 _IEN2	=	0x009a
                    00A0    973 _P2	=	0x00a0
                    00A1    974 _DMAS0	=	0x00a1
                    00A2    975 _DMAS1	=	0x00a2
                    00A3    976 _DMAS2	=	0x00a3
                    00A4    977 _DMAT0	=	0x00a4
                    00A5    978 _DMAT1	=	0x00a5
                    00A6    979 _DMAT2	=	0x00a6
                    00A8    980 _IEN0	=	0x00a8
                    00A9    981 _IP0	=	0x00a9
                    00AA    982 _S0RELL	=	0x00aa
                    00B0    983 _P3	=	0x00b0
                    00B1    984 _DMAC0	=	0x00b1
                    00B2    985 _DMAC1	=	0x00b2
                    00B3    986 _DMAC2	=	0x00b3
                    00B4    987 _DMASEL	=	0x00b4
                    00B5    988 _DMAM0	=	0x00b5
                    00B6    989 _DMAM1	=	0x00b6
                    00B8    990 _IEN1	=	0x00b8
                    00B9    991 _IP1	=	0x00b9
                    00BA    992 _S0RELH	=	0x00ba
                    00C0    993 _IRCON	=	0x00c0
                    00C1    994 _CCEN	=	0x00c1
                    00C8    995 _T2CON	=	0x00c8
                    00CA    996 _RCAP2L	=	0x00ca
                    00CB    997 _RCAP2H	=	0x00cb
                    00CC    998 _TL2	=	0x00cc
                    00CD    999 _TH2	=	0x00cd
                    00D0   1000 _PSW	=	0x00d0
                    00D8   1001 _ADCON	=	0x00d8
                    00E0   1002 _ACC	=	0x00e0
                    00E8   1003 _EIE	=	0x00e8
                    00F0   1004 _B	=	0x00f0
                    00F7   1005 _SRST	=	0x00f7
                    8C8A   1006 _TMR0	=	0x8c8a
                    8D8B   1007 _TMR1	=	0x8d8b
                    CDCC   1008 _TMR2	=	0xcdcc
                    A2A1   1009 _DMASA	=	0xa2a1
                    A5A4   1010 _DMATA	=	0xa5a4
                    B2B1   1011 _DMAC	=	0xb2b1
                           1012 ;--------------------------------------------------------
                           1013 ; special function bits
                           1014 ;--------------------------------------------------------
                           1015 	.area RSEG    (ABS,DATA)
   0000                    1016 	.org 0x0000
                    0080   1017 _P0_0	=	0x0080
                    0081   1018 _P0_1	=	0x0081
                    0082   1019 _P0_2	=	0x0082
                    0083   1020 _P0_3	=	0x0083
                    0084   1021 _P0_4	=	0x0084
                    0085   1022 _P0_5	=	0x0085
                    0086   1023 _P0_6	=	0x0086
                    0087   1024 _P0_7	=	0x0087
                    0090   1025 _P1_0	=	0x0090
                    0091   1026 _P1_1	=	0x0091
                    0092   1027 _P1_2	=	0x0092
                    0093   1028 _P1_3	=	0x0093
                    0094   1029 _P1_4	=	0x0094
                    0095   1030 _P1_5	=	0x0095
                    0096   1031 _P1_6	=	0x0096
                    0097   1032 _P1_7	=	0x0097
                    00A0   1033 _P2_0	=	0x00a0
                    00A1   1034 _P2_1	=	0x00a1
                    00A2   1035 _P2_2	=	0x00a2
                    00A3   1036 _P2_3	=	0x00a3
                    00A4   1037 _P2_4	=	0x00a4
                    00A5   1038 _P2_5	=	0x00a5
                    00A6   1039 _P2_6	=	0x00a6
                    00A7   1040 _P2_7	=	0x00a7
                    00B0   1041 _P3_0	=	0x00b0
                    00B1   1042 _P3_1	=	0x00b1
                    00B2   1043 _P3_2	=	0x00b2
                    00B3   1044 _P3_3	=	0x00b3
                    00B4   1045 _P3_4	=	0x00b4
                    00B5   1046 _P3_5	=	0x00b5
                    00B6   1047 _P3_6	=	0x00b6
                    00B7   1048 _P3_7	=	0x00b7
                    0088   1049 _IT0	=	0x0088
                    0089   1050 _IE0	=	0x0089
                    008A   1051 _IT1	=	0x008a
                    008B   1052 _IE1	=	0x008b
                    008C   1053 _TR0	=	0x008c
                    008D   1054 _TF0	=	0x008d
                    008E   1055 _TR1	=	0x008e
                    008F   1056 _TF1	=	0x008f
                    00A8   1057 _EX0	=	0x00a8
                    00A9   1058 _ET0	=	0x00a9
                    00AA   1059 _EX1	=	0x00aa
                    00AB   1060 _ET1	=	0x00ab
                    00AC   1061 _ES	=	0x00ac
                    00AD   1062 _ET2	=	0x00ad
                    00AE   1063 _WDT	=	0x00ae
                    00AF   1064 _EA	=	0x00af
                    00B8   1065 _EX7	=	0x00b8
                    00B9   1066 _EX2	=	0x00b9
                    00BA   1067 _EX3	=	0x00ba
                    00BB   1068 _EX4	=	0x00bb
                    00BC   1069 _EX5	=	0x00bc
                    00BD   1070 _EX6	=	0x00bd
                    00BE   1071 _PS1	=	0x00be
                    009A   1072 _ES1	=	0x009a
                    009B   1073 _EX8	=	0x009b
                    009C   1074 _EX9	=	0x009c
                    009D   1075 _EX10	=	0x009d
                    009E   1076 _EX11	=	0x009e
                    009F   1077 _EX12	=	0x009f
                    0098   1078 _RI	=	0x0098
                    0099   1079 _TI	=	0x0099
                    00C6   1080 _TF2	=	0x00c6
                           1081 ;--------------------------------------------------------
                           1082 ; overlayable register banks
                           1083 ;--------------------------------------------------------
                           1084 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1085 	.ds 8
                           1086 ;--------------------------------------------------------
                           1087 ; internal ram data
                           1088 ;--------------------------------------------------------
                           1089 	.area DSEG    (DATA)
                           1090 ;--------------------------------------------------------
                           1091 ; overlayable items in internal ram 
                           1092 ;--------------------------------------------------------
                           1093 	.area OSEG    (OVR,DATA)
                           1094 ;--------------------------------------------------------
                           1095 ; indirectly addressable internal ram data
                           1096 ;--------------------------------------------------------
                           1097 	.area ISEG    (DATA)
                           1098 ;--------------------------------------------------------
                           1099 ; absolute internal ram data
                           1100 ;--------------------------------------------------------
                           1101 	.area IABS    (ABS,DATA)
                           1102 	.area IABS    (ABS,DATA)
                           1103 ;--------------------------------------------------------
                           1104 ; bit data
                           1105 ;--------------------------------------------------------
                           1106 	.area BSEG    (BIT)
                           1107 ;--------------------------------------------------------
                           1108 ; paged external ram data
                           1109 ;--------------------------------------------------------
                           1110 	.area PSEG    (PAG,XDATA)
                           1111 ;--------------------------------------------------------
                           1112 ; external ram data
                           1113 ;--------------------------------------------------------
                           1114 	.area XSEG    (XDATA)
                    0200   1115 _UPHY14_TRX_ANAREG_TOP_128	=	0x0200
                    0204   1116 _UPHY14_TRX_ANAREG_TOP_129	=	0x0204
                    0208   1117 _UPHY14_TRX_ANAREG_TOP_130	=	0x0208
                    020C   1118 _UPHY14_TRX_ANAREG_TOP_131	=	0x020c
                    0210   1119 _UPHY14_TRX_ANAREG_TOP_132	=	0x0210
                    0214   1120 _UPHY14_TRX_ANAREG_TOP_133	=	0x0214
                    0218   1121 _UPHY14_TRX_ANAREG_TOP_134	=	0x0218
                    021C   1122 _UPHY14_TRX_ANAREG_TOP_135	=	0x021c
                    0220   1123 _UPHY14_TRX_ANAREG_TOP_136	=	0x0220
                    0224   1124 _UPHY14_TRX_ANAREG_TOP_137	=	0x0224
                    0228   1125 _UPHY14_TRX_ANAREG_TOP_138	=	0x0228
                    022C   1126 _UPHY14_TRX_ANAREG_TOP_139	=	0x022c
                    0230   1127 _UPHY14_TRX_ANAREG_TOP_140	=	0x0230
                    0234   1128 _UPHY14_TRX_ANAREG_TOP_141	=	0x0234
                    0238   1129 _UPHY14_TRX_ANAREG_TOP_142	=	0x0238
                    023C   1130 _UPHY14_TRX_ANAREG_TOP_143	=	0x023c
                    0240   1131 _UPHY14_TRX_ANAREG_TOP_144	=	0x0240
                    0244   1132 _UPHY14_TRX_ANAREG_TOP_145	=	0x0244
                    0248   1133 _UPHY14_TRX_ANAREG_TOP_146	=	0x0248
                    024C   1134 _UPHY14_TRX_ANAREG_TOP_147	=	0x024c
                    0250   1135 _UPHY14_TRX_ANAREG_TOP_148	=	0x0250
                    0254   1136 _UPHY14_TRX_ANAREG_TOP_149	=	0x0254
                    0258   1137 _UPHY14_TRX_ANAREG_TOP_150	=	0x0258
                    025C   1138 _UPHY14_TRX_ANAREG_TOP_151	=	0x025c
                    0260   1139 _UPHY14_TRX_ANAREG_TOP_152	=	0x0260
                    0264   1140 _UPHY14_TRX_ANAREG_TOP_153	=	0x0264
                    0268   1141 _UPHY14_TRX_ANAREG_TOP_154	=	0x0268
                    026C   1142 _UPHY14_TRX_ANAREG_TOP_155	=	0x026c
                    0270   1143 _UPHY14_TRX_ANAREG_TOP_156	=	0x0270
                    0274   1144 _UPHY14_TRX_ANAREG_TOP_157	=	0x0274
                    0000   1145 _UPHY14_TRX_ANAREG_BOT_0	=	0x0000
                    0004   1146 _UPHY14_TRX_ANAREG_BOT_1	=	0x0004
                    0008   1147 _UPHY14_TRX_ANAREG_BOT_2	=	0x0008
                    000C   1148 _UPHY14_TRX_ANAREG_BOT_3	=	0x000c
                    0010   1149 _UPHY14_TRX_ANAREG_BOT_4	=	0x0010
                    0014   1150 _UPHY14_TRX_ANAREG_BOT_5	=	0x0014
                    0018   1151 _UPHY14_TRX_ANAREG_BOT_6	=	0x0018
                    001C   1152 _UPHY14_TRX_ANAREG_BOT_7	=	0x001c
                    0020   1153 _UPHY14_TRX_ANAREG_BOT_8	=	0x0020
                    0024   1154 _UPHY14_TRX_ANAREG_BOT_9	=	0x0024
                    0028   1155 _UPHY14_TRX_ANAREG_BOT_10	=	0x0028
                    002C   1156 _UPHY14_TRX_ANAREG_BOT_11	=	0x002c
                    0030   1157 _UPHY14_TRX_ANAREG_BOT_12	=	0x0030
                    0034   1158 _UPHY14_TRX_ANAREG_BOT_13	=	0x0034
                    0038   1159 _UPHY14_TRX_ANAREG_BOT_14	=	0x0038
                    003C   1160 _UPHY14_TRX_ANAREG_BOT_15	=	0x003c
                    0040   1161 _UPHY14_TRX_ANAREG_BOT_16	=	0x0040
                    0044   1162 _UPHY14_TRX_ANAREG_BOT_17	=	0x0044
                    0048   1163 _UPHY14_TRX_ANAREG_BOT_18	=	0x0048
                    004C   1164 _UPHY14_TRX_ANAREG_BOT_19	=	0x004c
                    0050   1165 _UPHY14_TRX_ANAREG_BOT_20	=	0x0050
                    0054   1166 _UPHY14_TRX_ANAREG_BOT_21	=	0x0054
                    0058   1167 _UPHY14_TRX_ANAREG_BOT_22	=	0x0058
                    005C   1168 _UPHY14_TRX_ANAREG_BOT_23	=	0x005c
                    0060   1169 _UPHY14_TRX_ANAREG_BOT_24	=	0x0060
                    0064   1170 _UPHY14_TRX_ANAREG_BOT_25	=	0x0064
                    0068   1171 _UPHY14_TRX_ANAREG_BOT_26	=	0x0068
                    006C   1172 _UPHY14_TRX_ANAREG_BOT_27	=	0x006c
                    0070   1173 _UPHY14_TRX_ANAREG_BOT_28	=	0x0070
                    0074   1174 _UPHY14_TRX_ANAREG_BOT_29	=	0x0074
                    0078   1175 _UPHY14_TRX_ANAREG_BOT_30	=	0x0078
                    007C   1176 _UPHY14_TRX_ANAREG_BOT_31	=	0x007c
                    0080   1177 _UPHY14_TRX_ANAREG_BOT_32	=	0x0080
                    0478   1178 _ANA_DFEE_REG_1E	=	0x0478
                    047C   1179 _ANA_DFEE_REG_1F	=	0x047c
                    0480   1180 _ANA_DFEE_REG_20	=	0x0480
                    0484   1181 _ANA_DFEE_REG_21	=	0x0484
                    0488   1182 _ANA_DFEE_REG_22	=	0x0488
                    048C   1183 _ANA_DFEE_REG_23	=	0x048c
                    0490   1184 _ANA_DFEE_REG_24	=	0x0490
                    0494   1185 _ANA_DFEE_REG_25	=	0x0494
                    0498   1186 _ANA_DFEE_REG_26	=	0x0498
                    049C   1187 _ANA_DFEE_REG_27	=	0x049c
                    0400   1188 _ANA_DFEE_REG_00	=	0x0400
                    0404   1189 _ANA_DFEE_REG_01	=	0x0404
                    0408   1190 _ANA_DFEE_REG_02	=	0x0408
                    040C   1191 _ANA_DFEE_REG_03	=	0x040c
                    0410   1192 _ANA_DFEE_REG_04	=	0x0410
                    0414   1193 _ANA_DFEE_REG_05	=	0x0414
                    0418   1194 _ANA_DFEE_REG_06	=	0x0418
                    041C   1195 _ANA_DFEE_REG_07	=	0x041c
                    0420   1196 _ANA_DFEE_REG_08	=	0x0420
                    0424   1197 _ANA_DFEE_REG_09	=	0x0424
                    0428   1198 _ANA_DFEE_REG_0A	=	0x0428
                    042C   1199 _ANA_DFEE_REG_0B	=	0x042c
                    0430   1200 _ANA_DFEE_REG_0C	=	0x0430
                    0434   1201 _ANA_DFEE_REG_0D	=	0x0434
                    0438   1202 _ANA_DFEE_REG_0E	=	0x0438
                    043C   1203 _ANA_DFEE_REG_0F	=	0x043c
                    0440   1204 _ANA_DFEE_REG_10	=	0x0440
                    0444   1205 _ANA_DFEE_REG_11	=	0x0444
                    0448   1206 _ANA_DFEE_REG_12	=	0x0448
                    044C   1207 _ANA_DFEE_REG_13	=	0x044c
                    0450   1208 _ANA_DFEE_REG_14	=	0x0450
                    0454   1209 _ANA_DFEE_REG_15	=	0x0454
                    0458   1210 _ANA_DFEE_REG_16	=	0x0458
                    045C   1211 _ANA_DFEE_REG_17	=	0x045c
                    0460   1212 _ANA_DFEE_REG_18	=	0x0460
                    0464   1213 _ANA_DFEE_REG_19	=	0x0464
                    0468   1214 _ANA_DFEE_REG_1A	=	0x0468
                    046C   1215 _ANA_DFEE_REG_1B	=	0x046c
                    0470   1216 _ANA_DFEE_REG_1C	=	0x0470
                    0474   1217 _ANA_DFEE_REG_1D	=	0x0474
                    0830   1218 _ANA_DFEO_REG_0C	=	0x0830
                    0834   1219 _ANA_DFEO_REG_0D	=	0x0834
                    0838   1220 _ANA_DFEO_REG_0E	=	0x0838
                    083C   1221 _ANA_DFEO_REG_0F	=	0x083c
                    0840   1222 _ANA_DFEO_REG_10	=	0x0840
                    0844   1223 _ANA_DFEO_REG_11	=	0x0844
                    0848   1224 _ANA_DFEO_REG_12	=	0x0848
                    084C   1225 _ANA_DFEO_REG_13	=	0x084c
                    0850   1226 _ANA_DFEO_REG_14	=	0x0850
                    0854   1227 _ANA_DFEO_REG_15	=	0x0854
                    0858   1228 _ANA_DFEO_REG_16	=	0x0858
                    085C   1229 _ANA_DFEO_REG_17	=	0x085c
                    0860   1230 _ANA_DFEO_REG_18	=	0x0860
                    0864   1231 _ANA_DFEO_REG_19	=	0x0864
                    0868   1232 _ANA_DFEO_REG_1A	=	0x0868
                    086C   1233 _ANA_DFEO_REG_1B	=	0x086c
                    0870   1234 _ANA_DFEO_REG_1C	=	0x0870
                    0874   1235 _ANA_DFEO_REG_1D	=	0x0874
                    0878   1236 _ANA_DFEO_REG_1E	=	0x0878
                    087C   1237 _ANA_DFEO_REG_1F	=	0x087c
                    0880   1238 _ANA_DFEO_REG_20	=	0x0880
                    0884   1239 _ANA_DFEO_REG_21	=	0x0884
                    0888   1240 _ANA_DFEO_REG_22	=	0x0888
                    088C   1241 _ANA_DFEO_REG_23	=	0x088c
                    0890   1242 _ANA_DFEO_REG_24	=	0x0890
                    0894   1243 _ANA_DFEO_REG_25	=	0x0894
                    0898   1244 _ANA_DFEO_REG_26	=	0x0898
                    089C   1245 _ANA_DFEO_REG_27	=	0x089c
                    0800   1246 _ANA_DFEO_REG_00	=	0x0800
                    0804   1247 _ANA_DFEO_REG_01	=	0x0804
                    0808   1248 _ANA_DFEO_REG_02	=	0x0808
                    080C   1249 _ANA_DFEO_REG_03	=	0x080c
                    0810   1250 _ANA_DFEO_REG_04	=	0x0810
                    0814   1251 _ANA_DFEO_REG_05	=	0x0814
                    0818   1252 _ANA_DFEO_REG_06	=	0x0818
                    081C   1253 _ANA_DFEO_REG_07	=	0x081c
                    0820   1254 _ANA_DFEO_REG_08	=	0x0820
                    0824   1255 _ANA_DFEO_REG_09	=	0x0824
                    0828   1256 _ANA_DFEO_REG_0A	=	0x0828
                    082C   1257 _ANA_DFEO_REG_0B	=	0x082c
                    8200   1258 _UPHY14_CMN_ANAREG_TOP_128	=	0x8200
                    8204   1259 _UPHY14_CMN_ANAREG_TOP_129	=	0x8204
                    8208   1260 _UPHY14_CMN_ANAREG_TOP_130	=	0x8208
                    820C   1261 _UPHY14_CMN_ANAREG_TOP_131	=	0x820c
                    8210   1262 _UPHY14_CMN_ANAREG_TOP_132	=	0x8210
                    8214   1263 _UPHY14_CMN_ANAREG_TOP_133	=	0x8214
                    8218   1264 _UPHY14_CMN_ANAREG_TOP_134	=	0x8218
                    821C   1265 _UPHY14_CMN_ANAREG_TOP_135	=	0x821c
                    8220   1266 _UPHY14_CMN_ANAREG_TOP_136	=	0x8220
                    8224   1267 _UPHY14_CMN_ANAREG_TOP_137	=	0x8224
                    8228   1268 _UPHY14_CMN_ANAREG_TOP_138	=	0x8228
                    822C   1269 _UPHY14_CMN_ANAREG_TOP_139	=	0x822c
                    8230   1270 _UPHY14_CMN_ANAREG_TOP_140	=	0x8230
                    8234   1271 _UPHY14_CMN_ANAREG_TOP_141	=	0x8234
                    8238   1272 _UPHY14_CMN_ANAREG_TOP_142	=	0x8238
                    823C   1273 _UPHY14_CMN_ANAREG_TOP_143	=	0x823c
                    8240   1274 _UPHY14_CMN_ANAREG_TOP_144	=	0x8240
                    8244   1275 _UPHY14_CMN_ANAREG_TOP_145	=	0x8244
                    8248   1276 _UPHY14_CMN_ANAREG_TOP_146	=	0x8248
                    824C   1277 _UPHY14_CMN_ANAREG_TOP_147	=	0x824c
                    8250   1278 _UPHY14_CMN_ANAREG_TOP_148	=	0x8250
                    8254   1279 _UPHY14_CMN_ANAREG_TOP_149	=	0x8254
                    8258   1280 _UPHY14_CMN_ANAREG_TOP_150	=	0x8258
                    825C   1281 _UPHY14_CMN_ANAREG_TOP_151	=	0x825c
                    8260   1282 _UPHY14_CMN_ANAREG_TOP_152	=	0x8260
                    8264   1283 _UPHY14_CMN_ANAREG_TOP_153	=	0x8264
                    8268   1284 _UPHY14_CMN_ANAREG_TOP_154	=	0x8268
                    826C   1285 _UPHY14_CMN_ANAREG_TOP_155	=	0x826c
                    8270   1286 _UPHY14_CMN_ANAREG_TOP_156	=	0x8270
                    8274   1287 _UPHY14_CMN_ANAREG_TOP_157	=	0x8274
                    8278   1288 _UPHY14_CMN_ANAREG_TOP_158	=	0x8278
                    827C   1289 _UPHY14_CMN_ANAREG_TOP_159	=	0x827c
                    8280   1290 _UPHY14_CMN_ANAREG_TOP_160	=	0x8280
                    8284   1291 _UPHY14_CMN_ANAREG_TOP_161	=	0x8284
                    8288   1292 _UPHY14_CMN_ANAREG_TOP_162	=	0x8288
                    828C   1293 _UPHY14_CMN_ANAREG_TOP_163	=	0x828c
                    8290   1294 _UPHY14_CMN_ANAREG_TOP_164	=	0x8290
                    8294   1295 _UPHY14_CMN_ANAREG_TOP_165	=	0x8294
                    8298   1296 _UPHY14_CMN_ANAREG_TOP_166	=	0x8298
                    829C   1297 _UPHY14_CMN_ANAREG_TOP_167	=	0x829c
                    82A0   1298 _UPHY14_CMN_ANAREG_TOP_168	=	0x82a0
                    82A4   1299 _UPHY14_CMN_ANAREG_TOP_169	=	0x82a4
                    82A8   1300 _UPHY14_CMN_ANAREG_TOP_170	=	0x82a8
                    82AC   1301 _UPHY14_CMN_ANAREG_TOP_171	=	0x82ac
                    82B0   1302 _UPHY14_CMN_ANAREG_TOP_172	=	0x82b0
                    82B4   1303 _UPHY14_CMN_ANAREG_TOP_173	=	0x82b4
                    82B8   1304 _UPHY14_CMN_ANAREG_TOP_174	=	0x82b8
                    82BC   1305 _UPHY14_CMN_ANAREG_TOP_175	=	0x82bc
                    82C0   1306 _UPHY14_CMN_ANAREG_TOP_176	=	0x82c0
                    82C4   1307 _UPHY14_CMN_ANAREG_TOP_177	=	0x82c4
                    82C8   1308 _UPHY14_CMN_ANAREG_TOP_178	=	0x82c8
                    82CC   1309 _UPHY14_CMN_ANAREG_TOP_179	=	0x82cc
                    82D0   1310 _UPHY14_CMN_ANAREG_TOP_180	=	0x82d0
                    82D4   1311 _UPHY14_CMN_ANAREG_TOP_181	=	0x82d4
                    82D8   1312 _UPHY14_CMN_ANAREG_TOP_182	=	0x82d8
                    82DC   1313 _UPHY14_CMN_ANAREG_TOP_183	=	0x82dc
                    82E0   1314 _UPHY14_CMN_ANAREG_TOP_184	=	0x82e0
                    82E4   1315 _UPHY14_CMN_ANAREG_TOP_185	=	0x82e4
                    82E8   1316 _UPHY14_CMN_ANAREG_TOP_186	=	0x82e8
                    82EC   1317 _UPHY14_CMN_ANAREG_TOP_187	=	0x82ec
                    82F0   1318 _UPHY14_CMN_ANAREG_TOP_188	=	0x82f0
                    82F4   1319 _UPHY14_CMN_ANAREG_TOP_189	=	0x82f4
                    82F8   1320 _UPHY14_CMN_ANAREG_TOP_190	=	0x82f8
                    82FC   1321 _UPHY14_CMN_ANAREG_TOP_191	=	0x82fc
                    8300   1322 _UPHY14_CMN_ANAREG_TOP_192	=	0x8300
                    8304   1323 _UPHY14_CMN_ANAREG_TOP_193	=	0x8304
                    8308   1324 _UPHY14_CMN_ANAREG_TOP_194	=	0x8308
                    830C   1325 _UPHY14_CMN_ANAREG_TOP_195	=	0x830c
                    8310   1326 _UPHY14_CMN_ANAREG_TOP_196	=	0x8310
                    8314   1327 _UPHY14_CMN_ANAREG_TOP_197	=	0x8314
                    8318   1328 _UPHY14_CMN_ANAREG_TOP_198	=	0x8318
                    831C   1329 _UPHY14_CMN_ANAREG_TOP_199	=	0x831c
                    8320   1330 _UPHY14_CMN_ANAREG_TOP_200	=	0x8320
                    8324   1331 _UPHY14_CMN_ANAREG_TOP_201	=	0x8324
                    8328   1332 _UPHY14_CMN_ANAREG_TOP_202	=	0x8328
                    832C   1333 _UPHY14_CMN_ANAREG_TOP_203	=	0x832c
                    8330   1334 _UPHY14_CMN_ANAREG_TOP_204	=	0x8330
                    8334   1335 _UPHY14_CMN_ANAREG_TOP_205	=	0x8334
                    8338   1336 _UPHY14_CMN_ANAREG_TOP_206	=	0x8338
                    833C   1337 _UPHY14_CMN_ANAREG_TOP_207	=	0x833c
                    8340   1338 _UPHY14_CMN_ANAREG_TOP_208	=	0x8340
                    8344   1339 _UPHY14_CMN_ANAREG_TOP_209	=	0x8344
                    8348   1340 _UPHY14_CMN_ANAREG_TOP_210	=	0x8348
                    834C   1341 _UPHY14_CMN_ANAREG_TOP_211	=	0x834c
                    8350   1342 _UPHY14_CMN_ANAREG_TOP_212	=	0x8350
                    8354   1343 _UPHY14_CMN_ANAREG_TOP_213	=	0x8354
                    8358   1344 _UPHY14_CMN_ANAREG_TOP_214	=	0x8358
                    2000   1345 _PM_CTRL_TX_LANE_REG1_LANE	=	0x2000
                    2004   1346 _PM_CTRL_TX_LANE_REG2_LANE	=	0x2004
                    2008   1347 _INPUT_TX_PIN_REG0_LANE	=	0x2008
                    200C   1348 _INPUT_TX_PIN_REG1_LANE	=	0x200c
                    2010   1349 _INPUT_TX_PIN_REG2_LANE	=	0x2010
                    2014   1350 _INPUT_TX_PIN_REG3_LANE	=	0x2014
                    2018   1351 _PM_CTRL_INTERRUPT_REG1_LANE	=	0x2018
                    201C   1352 _PM_CTRL_INTERRUPT_REG2	=	0x201c
                    2020   1353 _CLKGEN_TX_LANE_REG1_LANE	=	0x2020
                    2024   1354 _TX_SPEED_CONVERT_LANE	=	0x2024
                    2028   1355 _SPD_CTRL_INTERRUPT_REG1_LANE	=	0x2028
                    202C   1356 _SPD_CTRL_INTERRUPT_REG2	=	0x202c
                    2030   1357 _SPD_CTRL_TX_LANE_REG1_LANE	=	0x2030
                    2034   1358 _TX_SYSTEM_LANE	=	0x2034
                    203C   1359 _INPUT_TX_PIN_REG4_LANE	=	0x203c
                    2040   1360 _TX_CALIBRATION_LANE	=	0x2040
                    2044   1361 _DIG_TX_RSVD_REG0	=	0x2044
                    2048   1362 _INPUT_TX_PIN_REG5_LANE	=	0x2048
                    204C   1363 __FIELDNAME__LANE	=	0x204c
                    2050   1364 _PM_CTRL_INTERRUPT_ISR_REG1_LANE	=	0x2050
                    2054   1365 _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE	=	0x2054
                    2058   1366 _ANALOG_TX_REALTIME_REG_1	=	0x2058
                    2100   1367 _PM_CTRL_RX_LANE_REG1_LANE	=	0x2100
                    2104   1368 _RX_SYSTEM_LANE	=	0x2104
                    2108   1369 _INPUT_RX_PIN_REG0_LANE	=	0x2108
                    210C   1370 _INPUT_RX_PIN_REG1_LANE	=	0x210c
                    2110   1371 _INPUT_RX_PIN_REG2_LANE	=	0x2110
                    2114   1372 _SPD_CTRL_RX_LANE_REG1_LANE	=	0x2114
                    2118   1373 _DIG_RX_RSVD_REG0	=	0x2118
                    211C   1374 _CLKGEN_RX_LANE_REG1_LANE	=	0x211c
                    2120   1375 _FRAME_SYNC_DET_REG0	=	0x2120
                    2124   1376 _FRAME_SYNC_DET_REG1	=	0x2124
                    2128   1377 _FRAME_SYNC_DET_REG2	=	0x2128
                    212C   1378 _FRAME_SYNC_DET_REG3	=	0x212c
                    2130   1379 _FRAME_SYNC_DET_REG4	=	0x2130
                    2134   1380 _FRAME_SYNC_DET_REG5	=	0x2134
                    2138   1381 _FRAME_SYNC_DET_REG6	=	0x2138
                    213C   1382 _CDR_LOCK_REG	=	0x213c
                    2140   1383 _RX_LANE_INTERRUPT	=	0x2140
                    2144   1384 _RX_LANE_INTERRUPT_MASK	=	0x2144
                    2148   1385 _RX_DATA_PATH_REG	=	0x2148
                    214C   1386 _INPUT_RX_PIN_REG3_LANE	=	0x214c
                    2150   1387 _RX_CALIBRATION_REG	=	0x2150
                    2158   1388 _RX_LANE_INTERRUPT_REG1	=	0x2158
                    2160   1389 _DTL_REG0	=	0x2160
                    2164   1390 _DTL_REG1	=	0x2164
                    2168   1391 _DTL_REG2	=	0x2168
                    216C   1392 _DTL_REG3	=	0x216c
                    2170   1393 _SQ_REG0	=	0x2170
                    4000   1394 _LANE_CFG0	=	0x4000
                    4004   1395 _LANE_STATUS0	=	0x4004
                    4008   1396 _LANE_CFG_STATUS2_LANE	=	0x4008
                    400C   1397 _LANE_CFG2_LANE	=	0x400c
                    4010   1398 _LANE_CFG4	=	0x4010
                    4014   1399 _LANE_CFG_STATUS3_LANE	=	0x4014
                    4018   1400 _LANE_DP_PIE8_CFG0_LANE	=	0x4018
                    401C   1401 _LANE_USB_DP_CFG1_LANE	=	0x401c
                    4020   1402 _LANE_USB_DP_CFG2_LANE	=	0x4020
                    4024   1403 _LANE_EQ_CFG0_LANE	=	0x4024
                    4028   1404 _LANE_EQ_CFG1_LANE	=	0x4028
                    402C   1405 _LANE_PRESET_CFG0_LANE	=	0x402c
                    4030   1406 _LANE_PRESET_CFG2_LANE	=	0x4030
                    4034   1407 _LANE_PRESET_CFG4_LANE	=	0x4034
                    4038   1408 _LANE_PRESET_CFG6_LANE	=	0x4038
                    403C   1409 _LANE_PRESET_CFG8_LANE	=	0x403c
                    4040   1410 _LANE_PRESET_CFG10_LANE	=	0x4040
                    4044   1411 _LANE_PRESET_CFG12_LANE	=	0x4044
                    4048   1412 _LANE_PRESET_CFG14_LANE	=	0x4048
                    404C   1413 _LANE_PRESET_CFG16_LANE	=	0x404c
                    4050   1414 _LANE_COEFF_MAX0_LANE	=	0x4050
                    4054   1415 _LANE_REMOTE_SET_LANE	=	0x4054
                    4058   1416 _LANE_EQ_16G_CFG0_LANE	=	0x4058
                    405C   1417 _LANE_16G_PRESET_CFG0_LANE	=	0x405c
                    4060   1418 _LANE_16G_PRESET_CFG2_LANE	=	0x4060
                    4064   1419 _LANE_16G_PRESET_CFG4_LANE	=	0x4064
                    4068   1420 _LANE_16G_PRESET_CFG6_LANE	=	0x4068
                    406C   1421 _LANE_16G_PRESET_CFG8_LANE	=	0x406c
                    4070   1422 _LANE_16G_PRESET_CFG10_LANE	=	0x4070
                    4074   1423 _LANE_16G_PRESET_CFG12_LANE	=	0x4074
                    4078   1424 _LANE_16G_PRESET_CFG14_LANE	=	0x4078
                    407C   1425 _LANE_16G_PRESET_CFG16_LANE	=	0x407c
                    2200   1426 _MCU_CONTROL_LANE	=	0x2200
                    2204   1427 _MCU_GPIO	=	0x2204
                    2208   1428 _CACHE_DEBUG0	=	0x2208
                    220C   1429 _CACHE_DEBUG1	=	0x220c
                    2210   1430 _MCU_INFO0_LANE	=	0x2210
                    2214   1431 _MCU_INFO1_LANE	=	0x2214
                    2218   1432 _MCU_INFO2_LANE	=	0x2218
                    221C   1433 _MCU_INFO3_LANE	=	0x221c
                    2220   1434 _MCU_INFO4_LANE	=	0x2220
                    2224   1435 _MCU_INFO5_LANE	=	0x2224
                    2228   1436 _MCU_INFO6_LANE	=	0x2228
                    222C   1437 _MCU_INFO7_LANE	=	0x222c
                    2230   1438 _MCU_STATUS0_LANE	=	0x2230
                    2234   1439 _MCU_STATUS1_LANE	=	0x2234
                    2238   1440 _MCU_STATUS2_LANE	=	0x2238
                    223C   1441 _MCU_STATUS3_LANE	=	0x223c
                    2240   1442 _MCU_INT0_CONTROL	=	0x2240
                    2244   1443 _MCU_INT1_CONTROL	=	0x2244
                    2248   1444 _MCU_INT2_CONTROL	=	0x2248
                    224C   1445 _MCU_INT3_CONTROL	=	0x224c
                    2250   1446 _MCU_INT4_CONTROL	=	0x2250
                    2254   1447 _MCU_INT5_CONTROL	=	0x2254
                    2258   1448 _MCU_INT6_CONTROL	=	0x2258
                    225C   1449 _MCU_INT7_CONTROL	=	0x225c
                    2260   1450 _MCU_INT8_CONTROL	=	0x2260
                    2264   1451 _MCU_INT9_CONTROL	=	0x2264
                    2268   1452 _MCU_INT10_CONTROL	=	0x2268
                    226C   1453 _MCU_INT11_CONTROL	=	0x226c
                    2270   1454 _MCU_INT12_CONTROL	=	0x2270
                    2274   1455 _MCU_TIMER_CONTROL	=	0x2274
                    2278   1456 _MCU_TIMER0_CONTROL	=	0x2278
                    227C   1457 _MCU_TIMER1_CONTROL	=	0x227c
                    2280   1458 _MCU_TIMER2_CONTROL	=	0x2280
                    2284   1459 _MCU_TIMER3_CONTROL	=	0x2284
                    2288   1460 _MCU_IRQ_LANE	=	0x2288
                    228C   1461 _MCU_IRQ_MASK_LANE	=	0x228c
                    2290   1462 _MCU_MEM_REG1_LANE	=	0x2290
                    2294   1463 _MCU_MEM_REG2_LANE	=	0x2294
                    2298   1464 _MCU_TIMER_CTRL_1_LANE	=	0x2298
                    229C   1465 _MCU_TIMER_CTRL_2_LANE	=	0x229c
                    22A0   1466 _MCU_TIMER_CTRL_3_LANE	=	0x22a0
                    22A4   1467 _MCU_TIMER_CTRL_4_LANE	=	0x22a4
                    22A8   1468 _MCU_TIMER_CTRL_5_LANE	=	0x22a8
                    22AC   1469 _MCU_TIMER_CTRL_6_LANE	=	0x22ac
                    22B0   1470 _MCU_TIMER_CTRL_7_LANE	=	0x22b0
                    22B4   1471 _MCU_DEBUG0_LANE	=	0x22b4
                    22B8   1472 _MCU_DEBUG1_LANE	=	0x22b8
                    22BC   1473 _MCU_DEBUG2_LANE	=	0x22bc
                    22C0   1474 _MCU_DEBUG3_LANE	=	0x22c0
                    22C4   1475 _MCU_DEBUG_LANE	=	0x22c4
                    22C8   1476 _EXT_INT_CONTROL	=	0x22c8
                    22CC   1477 _ANA_IF_TRX_REG0	=	0x22cc
                    22D0   1478 _ANA_IF_DFEE_REG0	=	0x22d0
                    22D4   1479 _ANA_IF_DFEO_REG0	=	0x22d4
                    22D8   1480 _MCU_IRQ_ISR_LANE	=	0x22d8
                    22DC   1481 _MCU_WDT_LANE	=	0x22dc
                    22E0   1482 _MCU_INT_CONTROL_13	=	0x22e0
                    22E4   1483 _MCU_COMMAND0	=	0x22e4
                    22F4   1484 _MEM_ECC_ERR_ADDRESS0	=	0x22f4
                    22F8   1485 _XDATA_MEM_CHECKSUM_LANE0	=	0x22f8
                    22FC   1486 _XDATA_MEM_CHECKSUM_LANE1	=	0x22fc
                    2300   1487 _PT_CONTROL0	=	0x2300
                    2304   1488 _PT_CONTROL1	=	0x2304
                    2308   1489 _PT_USER_PATTERN0	=	0x2308
                    230C   1490 _PT_USER_PATTERN1	=	0x230c
                    2310   1491 _PT_USER_PATTERN2	=	0x2310
                    2314   1492 _PT_COUNTER0	=	0x2314
                    2318   1493 _PT_COUNTER1	=	0x2318
                    231C   1494 _PT_COUNTER2	=	0x231c
                    2400   1495 _DFE_CTRL_REG0	=	0x2400
                    2404   1496 _DFE_CTRL_REG1	=	0x2404
                    2408   1497 _DFE_CTRL_REG2	=	0x2408
                    240C   1498 _DFE_CTRL_REG3	=	0x240c
                    2410   1499 _RX_EQ_CLK_CTRL	=	0x2410
                    2414   1500 _DFE_CTRL_REG4	=	0x2414
                    2418   1501 _DFE_ANA_REG0	=	0x2418
                    241C   1502 _DFE_ANA_REG1	=	0x241c
                    2420   1503 _DFE_STEP_REG0	=	0x2420
                    2424   1504 _DFE_STEP_REG1	=	0x2424
                    2430   1505 _DFE_FEN_EVEN_REG	=	0x2430
                    2434   1506 _DFE_FEN_ODD_REG	=	0x2434
                    2438   1507 _DFE_DC_EVEN_REG8	=	0x2438
                    243C   1508 _DFE_DC_ODD_REG8	=	0x243c
                    2440   1509 _DFE_FEXT_EVEN_REG0	=	0x2440
                    2444   1510 _DFE_FEXT_EVEN_REG1	=	0x2444
                    2448   1511 _DFE_FEXT_EVEN_REG2	=	0x2448
                    244C   1512 _DFE_FEXT_EVEN_REG3	=	0x244c
                    2450   1513 _DFE_FEXT_EVEN_REG4	=	0x2450
                    2454   1514 _DFE_FEXT_EVEN_REG5	=	0x2454
                    2458   1515 _DFE_FEXT_EVEN_REG6	=	0x2458
                    245C   1516 _DFE_FEXT_EVEN_REG7	=	0x245c
                    2460   1517 _DFE_FEXT_ODD_REG0	=	0x2460
                    2464   1518 _DFE_FEXT_ODD_REG1	=	0x2464
                    2468   1519 _DFE_FEXT_ODD_REG2	=	0x2468
                    246C   1520 _DFE_FEXT_ODD_REG3	=	0x246c
                    2470   1521 _DFE_FEXT_ODD_REG4	=	0x2470
                    2474   1522 _DFE_FEXT_ODD_REG5	=	0x2474
                    2478   1523 _DFE_FEXT_ODD_REG6	=	0x2478
                    247C   1524 _DFE_FEXT_ODD_REG7	=	0x247c
                    2480   1525 _DFE_READ_EVEN_SM_REG0	=	0x2480
                    2484   1526 _DFE_READ_EVEN_SM_REG1	=	0x2484
                    2488   1527 _DFE_READ_EVEN_SM_REG2	=	0x2488
                    248C   1528 _DFE_READ_EVEN_SM_REG3	=	0x248c
                    2490   1529 _DFE_READ_EVEN_SM_REG4	=	0x2490
                    2494   1530 _DFE_READ_EVEN_SM_REG5	=	0x2494
                    2498   1531 _DFE_READ_EVEN_SM_REG6	=	0x2498
                    249C   1532 _DFE_READ_EVEN_SM_REG7	=	0x249c
                    24A0   1533 _DFE_READ_ODD_SM_REG0	=	0x24a0
                    24A4   1534 _DFE_READ_ODD_SM_REG1	=	0x24a4
                    24A8   1535 _DFE_READ_ODD_SM_REG2	=	0x24a8
                    24AC   1536 _DFE_READ_ODD_SM_REG3	=	0x24ac
                    24B0   1537 _DFE_READ_ODD_SM_REG4	=	0x24b0
                    24B4   1538 _DFE_READ_ODD_SM_REG5	=	0x24b4
                    24B8   1539 _DFE_READ_ODD_SM_REG6	=	0x24b8
                    24BC   1540 _DFE_READ_ODD_SM_REG7	=	0x24bc
                    24C0   1541 _DFE_READ_EVEN_SM_REG8	=	0x24c0
                    24C4   1542 _DFE_READ_ODD_SM_REG8	=	0x24c4
                    24D0   1543 _DFE_READ_EVEN_2C_REG0	=	0x24d0
                    24D4   1544 _DFE_READ_EVEN_2C_REG1	=	0x24d4
                    24D8   1545 _DFE_READ_EVEN_2C_REG2	=	0x24d8
                    24DC   1546 _DFE_READ_EVEN_2C_REG3	=	0x24dc
                    24E0   1547 _DFE_READ_EVEN_2C_REG4	=	0x24e0
                    24E4   1548 _DFE_READ_EVEN_2C_REG5	=	0x24e4
                    24E8   1549 _DFE_READ_EVEN_2C_REG6	=	0x24e8
                    24EC   1550 _DFE_READ_EVEN_2C_REG7	=	0x24ec
                    24F0   1551 _DFE_READ_ODD_2C_REG0	=	0x24f0
                    24F4   1552 _DFE_READ_ODD_2C_REG1	=	0x24f4
                    24F8   1553 _DFE_READ_ODD_2C_REG2	=	0x24f8
                    24FC   1554 _DFE_READ_ODD_2C_REG3	=	0x24fc
                    2500   1555 _DFE_READ_ODD_2C_REG4	=	0x2500
                    2504   1556 _DFE_READ_ODD_2C_REG5	=	0x2504
                    2508   1557 _DFE_READ_ODD_2C_REG6	=	0x2508
                    250C   1558 _DFE_READ_ODD_2C_REG7	=	0x250c
                    2510   1559 _DFE_READ_EVEN_2C_REG8	=	0x2510
                    2514   1560 _DFE_READ_ODD_2C_REG8	=	0x2514
                    2518   1561 _CAL_OFST_REG0	=	0x2518
                    251C   1562 _CAL_OFST_REG1	=	0x251c
                    2520   1563 _CAL_OFST_REG2	=	0x2520
                    2530   1564 _DFE_DCE_REG0	=	0x2530
                    2560   1565 _EOM_VLD_REG0	=	0x2560
                    2564   1566 _EOM_VLD_REG1	=	0x2564
                    2568   1567 _EOM_VLD_REG2	=	0x2568
                    256C   1568 _EOM_VLD_REG3	=	0x256c
                    2570   1569 _EOM_ERR_REG0	=	0x2570
                    2574   1570 _EOM_ERR_REG1	=	0x2574
                    2578   1571 _EOM_ERR_REG2	=	0x2578
                    257C   1572 _EOM_ERR_REG3	=	0x257c
                    2580   1573 _EOM_REG0	=	0x2580
                    25F0   1574 _EOM_VLD_REG4	=	0x25f0
                    25F4   1575 _LANE_MARGIN_REG0	=	0x25f4
                    6000   1576 _CAL_CTRL1_LANE	=	0x6000
                    6004   1577 _CAL_CTRL2_LANE	=	0x6004
                    6008   1578 _CAL_CTRL3_LANE	=	0x6008
                    600C   1579 _CAL_CTRL4_LANE	=	0x600c
                    6010   1580 _CAL_SAVE_DATA1_LANE	=	0x6010
                    6014   1581 _CAL_SAVE_DATA2_LANE	=	0x6014
                    6018   1582 _CAL_SAVE_DATA3_LANE	=	0x6018
                    601C   1583 _PHY_REMOTE_CTRL_COMMAND_LANE	=	0x601c
                    6020   1584 _PHY_REMOTE_CTRL_VALUE_LANE	=	0x6020
                    6024   1585 _PHY_LOCAL_VALUE_LANE	=	0x6024
                    6028   1586 _TRX_TRAIN_IF_TIMERS1_LANE	=	0x6028
                    602C   1587 _TRX_TRAIN_IF_TIMERS2_LANE	=	0x602c
                    6030   1588 _TRX_TRAIN_IF_TIMERS_ENABLE_LANE	=	0x6030
                    6034   1589 _DFE_CONTROL_0	=	0x6034
                    6038   1590 _DFE_CONTROL_1	=	0x6038
                    6040   1591 _DFE_CONTROL_2	=	0x6040
                    6044   1592 _DFE_CONTROL_3	=	0x6044
                    6048   1593 _DFE_CONTROL_4	=	0x6048
                    604C   1594 _DFE_CONTROL_5	=	0x604c
                    6050   1595 _TRAIN_CONTROL_0	=	0x6050
                    6054   1596 _TRAIN_CONTROL_1	=	0x6054
                    6058   1597 _TRAIN_CONTROL_2	=	0x6058
                    605C   1598 _RPTA_CONFIG_0	=	0x605c
                    6060   1599 _RPTA_CONFIG_1	=	0x6060
                    6064   1600 _DLL_CAL	=	0x6064
                    6068   1601 _TRAIN_PARA_0	=	0x6068
                    606C   1602 _TRAIN_PARA_1	=	0x606c
                    6070   1603 _TRAIN_PARA_2	=	0x6070
                    6074   1604 _TRAIN_PARA_3	=	0x6074
                    6078   1605 _DFE_CONTROL_6	=	0x6078
                    607C   1606 _DFE_TEST_0	=	0x607c
                    6080   1607 _DFE_TEST_1	=	0x6080
                    6084   1608 _DFE_TEST_4	=	0x6084
                    6088   1609 _DFE_TEST_5	=	0x6088
                    608C   1610 _DFE_CONTROL_7	=	0x608c
                    6090   1611 _DFE_CONTROL_8	=	0x6090
                    6094   1612 _DFE_CONTROL_9	=	0x6094
                    6098   1613 _DFE_CONTROL_10	=	0x6098
                    609C   1614 _DFE_CONTROL_11	=	0x609c
                    60A0   1615 _CDS_CTRL_REG0	=	0x60a0
                    60A4   1616 _CDS_CTRL_REG1	=	0x60a4
                    60A8   1617 _ESM_POP_P_CNT_LOW_LANE	=	0x60a8
                    60AC   1618 _ESM_ERR_P_CNT_LOW_LANE	=	0x60ac
                    60B0   1619 _ESM_ERR_POP_CNT_HIGH_LANE	=	0x60b0
                    60B4   1620 _TRAIN_CONTROL_3	=	0x60b4
                    60B8   1621 _TRAIN_CONTROL_4	=	0x60b8
                    60BC   1622 _TRAIN_CONTROL_5	=	0x60bc
                    60C0   1623 _TRAIN_CONTROL_6	=	0x60c0
                    60C4   1624 _TRAIN_CONTROL_7	=	0x60c4
                    60C8   1625 _TRAIN_CONTROL_8	=	0x60c8
                    60CC   1626 _TRAIN_CONTROL_9	=	0x60cc
                    60D0   1627 _TRAIN_CONTROL_10	=	0x60d0
                    60D4   1628 _TRAIN_CONTROL_11	=	0x60d4
                    60D8   1629 _TRAIN_CONTROL_12	=	0x60d8
                    60DC   1630 _ESM_POP_N_CNT_LOW_LANE	=	0x60dc
                    60E0   1631 _ESM_ERR_N_CNT_LOW_LANE	=	0x60e0
                    60E4   1632 _TRAIN_CONTROL_13	=	0x60e4
                    60E8   1633 _TRAIN_CONTROL_14	=	0x60e8
                    60EC   1634 _TRAIN_CONTROL_15	=	0x60ec
                    60F0   1635 _TRAIN_CONTROL_16	=	0x60f0
                    60F4   1636 _TRAIN_CONTROL_17	=	0x60f4
                    60F8   1637 _END_XDAT_LANE	=	0x60f8
                    A000   1638 _TX_CMN_REG	=	0xa000
                    A008   1639 _DTX_REG0	=	0xa008
                    A00C   1640 _DTX_REG1	=	0xa00c
                    A010   1641 _DTX_REG2	=	0xa010
                    A014   1642 _DTX_REG3	=	0xa014
                    A018   1643 _DTX_REG4	=	0xa018
                    A01C   1644 _DTX_PHY_ALIGN_REG0	=	0xa01c
                    A024   1645 _DTX_PHY_ALIGN_REG1	=	0xa024
                    A028   1646 _DTX_PHY_ALIGN_REG2	=	0xa028
                    A02C   1647 _SRIS_REG0	=	0xa02c
                    A030   1648 _SRIS_REG1	=	0xa030
                    A100   1649 _RX_CMN_0	=	0xa100
                    A110   1650 _DFE_STATIC_REG0	=	0xa110
                    A114   1651 _DFE_STATIC_REG1	=	0xa114
                    A118   1652 _DFE_STATIC_REG3	=	0xa118
                    A11C   1653 _DFE_STATIC_REG4	=	0xa11c
                    A120   1654 _DFE_STATIC_REG5	=	0xa120
                    A124   1655 _DFE_STATIC_REG6	=	0xa124
                    C000   1656 _GLOB_RST_CLK_CTRL	=	0xc000
                    C004   1657 _GLOB_CLK_SRC_LO	=	0xc004
                    C008   1658 _GLOB_CLK_SRC_HI	=	0xc008
                    C00C   1659 _GLOB_MISC_CTRL	=	0xc00c
                    C010   1660 _GLOB_DP_SAL_CFG	=	0xc010
                    C014   1661 _GLOB_DP_SAL_CFG1	=	0xc014
                    C018   1662 _GLOB_DP_SAL_CFG3	=	0xc018
                    C01C   1663 _GLOB_DP_SAL_CFG5	=	0xc01c
                    C020   1664 _GLOB_PM_CFG0	=	0xc020
                    C024   1665 _GLOB_COUNTER_CTRL	=	0xc024
                    C028   1666 _GLOB_COUNTER_HI	=	0xc028
                    C02C   1667 _GLOB_PM_DP_CTRL	=	0xc02c
                    C030   1668 _GLOB_DP_BAL_CFG0	=	0xc030
                    C034   1669 _GLOB_DP_BAL_CFG2	=	0xc034
                    C038   1670 _GLOB_DP_BAL_CFG4	=	0xc038
                    C03C   1671 _GLOB_BIST_CTRL	=	0xc03c
                    C040   1672 _GLOB_BIST_LANE_TYPE	=	0xc040
                    C044   1673 _GLOB_BIST_START	=	0xc044
                    C048   1674 _GLOB_BIST_MASK	=	0xc048
                    C04C   1675 _GLOB_BIST_RESULT	=	0xc04c
                    C050   1676 _GLOB_BIST_SEQR_CFG	=	0xc050
                    C054   1677 _GLOB_BIST_DATA_HI	=	0xc054
                    C058   1678 _GLOB_PIPE_REVISION	=	0xc058
                    A200   1679 _MCU_CONTROL_0	=	0xa200
                    A204   1680 _MCU_CONTROL_1	=	0xa204
                    A208   1681 _MCU_CONTROL_2	=	0xa208
                    A214   1682 _MCU_DEBUG0	=	0xa214
                    A218   1683 _MCU_DEBUG1	=	0xa218
                    A21C   1684 _MEMORY_CONTROL_0	=	0xa21c
                    A220   1685 _MEMORY_CONTROL_1	=	0xa220
                    A224   1686 _MEMORY_CONTROL_2	=	0xa224
                    A228   1687 _MEMORY_CONTROL_3	=	0xa228
                    A22C   1688 _MEMORY_CONTROL_4	=	0xa22c
                    A230   1689 _MCU_CLK_CONTROL	=	0xa230
                    A234   1690 _MCU_INFO_0	=	0xa234
                    A238   1691 _MCU_INFO_1	=	0xa238
                    A23C   1692 _MCU_INFO_2	=	0xa23c
                    A240   1693 _MCU_INFO_3	=	0xa240
                    A244   1694 _MCU_INFO_4	=	0xa244
                    A248   1695 _MCU_INFO_5	=	0xa248
                    A24C   1696 _MCU_INFO_6	=	0xa24c
                    A250   1697 _MCU_INFO_7	=	0xa250
                    A254   1698 _MCU_INFO_8	=	0xa254
                    A258   1699 _MCU_INFO_9	=	0xa258
                    A25C   1700 _MCU_INFO_10	=	0xa25c
                    A260   1701 _MCU_INFO_11	=	0xa260
                    A264   1702 _MCU_INFO_12	=	0xa264
                    A268   1703 _MCU_INFO_13	=	0xa268
                    A26C   1704 _MCU_INFO_14	=	0xa26c
                    A270   1705 _MCU_INFO_15	=	0xa270
                    A274   1706 _MCU_INFO_16	=	0xa274
                    A278   1707 _MCU_INFO_17	=	0xa278
                    A27C   1708 _MCU_INFO_18	=	0xa27c
                    A280   1709 _MCU_INFO_19	=	0xa280
                    A284   1710 _MCU_INFO_20	=	0xa284
                    A288   1711 _MCU_INFO_21	=	0xa288
                    A28C   1712 _MCU_INFO_22	=	0xa28c
                    A290   1713 _MCU_INFO_23	=	0xa290
                    A294   1714 _MCU_INFO_24	=	0xa294
                    A298   1715 _MCU_INFO_25	=	0xa298
                    A29C   1716 _MCU_INFO_26	=	0xa29c
                    A2A0   1717 _MCU_INFO_27	=	0xa2a0
                    A2A4   1718 _MCU_INFO_28	=	0xa2a4
                    A2A8   1719 _MCU_INFO_29	=	0xa2a8
                    A2AC   1720 _MCU_INFO_30	=	0xa2ac
                    A2B0   1721 _MCU_INFO_31	=	0xa2b0
                    A2B4   1722 _MCU_INFO_32	=	0xa2b4
                    A2B8   1723 _MCU_INFO_33	=	0xa2b8
                    A2BC   1724 _MCU_INFO_34	=	0xa2bc
                    A2C0   1725 _MCU_INFO_35	=	0xa2c0
                    A2C4   1726 _MCU_INFO_36	=	0xa2c4
                    A2C8   1727 _MCU_INFO_37	=	0xa2c8
                    A2CC   1728 _MCU_INFO_38	=	0xa2cc
                    A2D0   1729 _MCU_INFO_39	=	0xa2d0
                    A2D4   1730 _MCU_INFO_40	=	0xa2d4
                    A2D8   1731 _MCU_INFO_41	=	0xa2d8
                    A2DC   1732 _MCU_INFO_42	=	0xa2dc
                    A2E0   1733 _MCU_INFO_43	=	0xa2e0
                    A2E4   1734 _MEM_IRQ	=	0xa2e4
                    A2E8   1735 _MEM_IRQ_MASK	=	0xa2e8
                    A2EC   1736 _ANA_IF_CMN_REG0	=	0xa2ec
                    A2F0   1737 _APB_CONTROL_REG	=	0xa2f0
                    A2F4   1738 _MEM_IRQ_CLEAR	=	0xa2f4
                    A2F8   1739 _MCU_SYNC1	=	0xa2f8
                    A2FC   1740 _MCU_SYNC2	=	0xa2fc
                    A300   1741 _TEST0	=	0xa300
                    A304   1742 _TEST1	=	0xa304
                    A308   1743 _TEST2	=	0xa308
                    A30C   1744 _TEST3	=	0xa30c
                    A310   1745 _TEST4	=	0xa310
                    A314   1746 _SYSTEM	=	0xa314
                    A318   1747 _PM_CMN_REG1	=	0xa318
                    A31C   1748 _INPUT_CMN_PIN_REG0	=	0xa31c
                    A320   1749 _INPUT_CMN_PIN_REG1	=	0xa320
                    A324   1750 _INPUT_CMN_PIN_REG2	=	0xa324
                    A328   1751 _ANA_TSEN_CONTROL	=	0xa328
                    A32C   1752 _PLLCAL_REG0	=	0xa32c
                    A330   1753 _PLLCAL_REG1	=	0xa330
                    A334   1754 _CLKGEN_CMN_REG1	=	0xa334
                    A338   1755 _SPD_CMN_REG1	=	0xa338
                    A33C   1756 _OUTPUT_CMN_PIN_REG0	=	0xa33c
                    A340   1757 _CMN_CALIBRATION	=	0xa340
                    A344   1758 __FIELDNAME_	=	0xa344
                    A348   1759 _INPUT_CMN_PIN_REG3	=	0xa348
                    A34C   1760 _PM_CMN_REG2	=	0xa34c
                    A354   1761 _TEST5	=	0xa354
                    A358   1762 _XDATA_MEM_CHECKSUM_CMN_0	=	0xa358
                    A35C   1763 _XDATA_MEM_CHECKSUM_CMN_1	=	0xa35c
                    A360   1764 _XDATA_MEM_CHECKSUM_CMN_2	=	0xa360
                    A364   1765 _ECC_ADDR_0	=	0xa364
                    A368   1766 _ECC_ADDR_1	=	0xa368
                    A3F8   1767 _CID_REG0	=	0xa3f8
                    A3FC   1768 _CID_REG1	=	0xa3fc
                    E600   1769 _FW_REV	=	0xe600
                    E604   1770 _CONTROL_CONFIG0	=	0xe604
                    E608   1771 _CONTROL_CONFIG1	=	0xe608
                    E60C   1772 _CONTROL_CONFIG2	=	0xe60c
                    E610   1773 _CONTROL_CONFIG3	=	0xe610
                    E614   1774 _CONTROL_CONFIG4	=	0xe614
                    E618   1775 _CONTROL_CONFIG5	=	0xe618
                    E61C   1776 _CONTROL_CONFIG6	=	0xe61c
                    E620   1777 _CONTROL_CONFIG7	=	0xe620
                    E624   1778 _CAL_DATA0	=	0xe624
                    E628   1779 _TRAIN_IF_CONFIG	=	0xe628
                    E62C   1780 _CONTROL_CONFIG8	=	0xe62c
                    E630   1781 _CONTROL_CONFIG9	=	0xe630
                    E634   1782 _CON_CAL_STEP_SIZE1	=	0xe634
                    E638   1783 _CON_CAL_STEP_SIZE2	=	0xe638
                    E63C   1784 _CON_CAL_STEP_SIZE3	=	0xe63c
                    E640   1785 _CON_CAL_STEP_SIZE4	=	0xe640
                    E644   1786 _CON_CAL_STEP_SIZE5	=	0xe644
                    E648   1787 _CAL_TIME_OUT_AND_DIS	=	0xe648
                    E64C   1788 _CAL_STATUS_READ	=	0xe64c
                    E650   1789 _MCU_CONFIG	=	0xe650
                    E654   1790 _CAL_DATA1	=	0xe654
                    E658   1791 _LOOP_CNTS	=	0xe658
                    E65C   1792 _MCU_CONFIG1	=	0xe65c
                    E660   1793 _TIMER_SEL1	=	0xe660
                    E664   1794 _TIMER_SEL2	=	0xe664
                    E668   1795 _TIMER_SEL3	=	0xe668
                    E66C   1796 _G_SELLV_TXCLK	=	0xe66c
                    E670   1797 _G_SELLV_TXDATA	=	0xe670
                    E674   1798 _G_SELLV_TXPRE	=	0xe674
                    E678   1799 _G_SELLV_RXEOMCLK	=	0xe678
                    E67C   1800 _G_SELLV_RXDATACLK	=	0xe67c
                    E680   1801 _G_SELLV_RXSAMPLER	=	0xe680
                    E684   1802 _SAS_PRESET0_TB	=	0xe684
                    E688   1803 _SAS_PRESET1_TB	=	0xe688
                    E68C   1804 _SAS_PRESET2_TB	=	0xe68c
                    E690   1805 _ETH_PRESET0_TB	=	0xe690
                    E694   1806 _ETH_PRESET1_TB	=	0xe694
                    E698   1807 _TX_SAVE_0	=	0xe698
                    E69C   1808 _TX_SAVE_1	=	0xe69c
                    E6A0   1809 _TX_SAVE_2	=	0xe6a0
                    E6A4   1810 _TX_SAVE_3	=	0xe6a4
                    E6A8   1811 _TX_SAVE_4	=	0xe6a8
                    E6AC   1812 _CDS_EYE_CLK_THR	=	0xe6ac
                    E6B0   1813 _LOCAL_TX_PRESET_TB0	=	0xe6b0
                    E6B4   1814 _LOCAL_TX_PRESET_TB1	=	0xe6b4
                    E6B8   1815 _LOCAL_TX_PRESET_TB2	=	0xe6b8
                    E6C0   1816 _LOCAL_TX_PRESET_TB3	=	0xe6c0
                    E6C4   1817 _LOCAL_TX_PRESET_TB4	=	0xe6c4
                    E6C8   1818 _LOCAL_TX_PRESET_TB5	=	0xe6c8
                    E6D0   1819 _END_XDAT_CMN	=	0xe6d0
                    2600   1820 _TX_TRAIN_CTRL_LANE	=	0x2600
                    2604   1821 _TRX_TRAIN_IF_LOCAL_FIELD_LANE	=	0x2604
                    2608   1822 _TRX_TRAIN_IF_REMOTE_FIELD_LANE	=	0x2608
                    260C   1823 _TRX_TRAIN_IF_CLK_RST	=	0x260c
                    2610   1824 _DME_ENC_LANE	=	0x2610
                    2614   1825 _DME_DEC_LANE	=	0x2614
                    2618   1826 _TRX_TRAIN_IF_LOCAL_FIELD_INIT_LANE	=	0x2618
                    2620   1827 _TRX_TRAIN_IF_INTERRUPT_LANE	=	0x2620
                    2624   1828 _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE	=	0x2624
                    2630   1829 _TX_TRAIN_IF_PHYTEST_CTRL	=	0x2630
                    2634   1830 _LINK_TRAIN_MODE0	=	0x2634
                    2638   1831 _LINK_TRAIN_MODE1	=	0x2638
                    263C   1832 _LINK_TRAIN_MODE2	=	0x263c
                    2640   1833 _LINK_TRAIN_MODE3	=	0x2640
                    2644   1834 _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE	=	0x2644
                    6100   1835 _DFE_READ_EVEN_REG0	=	0x6100
                    6104   1836 _DFE_READ_EVEN_REG1	=	0x6104
                    6108   1837 _DFE_READ_EVEN_REG2	=	0x6108
                    610C   1838 _DFE_READ_EVEN_REG3	=	0x610c
                    6110   1839 _DFE_READ_EVEN_REG4	=	0x6110
                    6114   1840 _DFE_READ_EVEN_REG5	=	0x6114
                    6118   1841 _DFE_READ_EVEN_REG6	=	0x6118
                    611C   1842 _DFE_READ_EVEN_REG7	=	0x611c
                    6120   1843 _DFE_READ_ODD_REG0	=	0x6120
                    6124   1844 _DFE_READ_ODD_REG1	=	0x6124
                    6128   1845 _DFE_READ_ODD_REG2	=	0x6128
                    612C   1846 _DFE_READ_ODD_REG3	=	0x612c
                    6130   1847 _DFE_READ_ODD_REG4	=	0x6130
                    6134   1848 _DFE_READ_ODD_REG5	=	0x6134
                    6138   1849 _DFE_READ_ODD_REG6	=	0x6138
                    613C   1850 _DFE_READ_ODD_REG7	=	0x613c
                    6140   1851 _DFE_READ_EVEN_REG8	=	0x6140
                    6144   1852 _DFE_READ_ODD_REG8	=	0x6144
                    6148   1853 _DFE_READ_F0A_EVEN	=	0x6148
                    614C   1854 _DFE_READ_F0A_ODD	=	0x614c
                    6150   1855 _DFE_READ_F0B_EVEN	=	0x6150
                    6154   1856 _DFE_READ_F0B_ODD	=	0x6154
                    6158   1857 _DFE_READ_F0D_EVEN	=	0x6158
                    615C   1858 _DFE_READ_F0D_ODD	=	0x615c
                    6160   1859 _DFE_READ_F0D_LEFT_EVEN	=	0x6160
                    6164   1860 _DFE_READ_F0D_LEFT_ODD	=	0x6164
                    6168   1861 _DFE_READ_F0D_RIGHT_EVEN	=	0x6168
                    616C   1862 _DFE_READ_F0D_RIGHT_ODD	=	0x616c
                    6170   1863 _CDS_READ_MISC0	=	0x6170
                    6174   1864 _CDS_READ_MISC1	=	0x6174
                    E000   1865 _lc_speedtable	=	0xe000
                    E1C0   1866 _ring_speedtable	=	0xe1c0
                    E5C0   1867 _phy_mode_cmn_table	=	0xe5c0
                    6300   1868 _max_gen	=	0x6300
                    6301   1869 _min_gen	=	0x6301
                    6304   1870 _speedtable	=	0x6304
                    6564   1871 _phy_mode_lane_table	=	0x6564
                    60B4   1872 _rc_save	=	0x60b4
                    60D0   1873 _txffe_save	=	0x60d0
                    60E4   1874 _phase_save	=	0x60e4
                    6030   1875 _train_gn1_index	=	0x6030
                    6031   1876 _train_g1_index	=	0x6031
                    6032   1877 _train_g0_index	=	0x6032
                    E6B0   1878 _local_tx_preset_tb	=	0xe6b0
                    E5C1   1879 _cmx_cal_lcvco_dac	=	0xe5c1
                    E5C1   1880 _cmx_cal_lcvco_dac_lsb	=	0xe5c1
                    E5C4   1881 _cmx_cal_lcvco_dac_msb	=	0xe5c4
                    E5CA   1882 _cmx_cal_lccap_msb	=	0xe5ca
                    E5C8   1883 _cmx_cal_lccap_lsb	=	0xe5c8
                    E5CC   1884 _cmx_cal_plldcc	=	0xe5cc
                    E5D0   1885 _cmx_cal_pll_speed_ring	=	0xe5d0
                    E5D4   1886 _cmx_cal_pll_sllp_dac_coarse_ring	=	0xe5d4
                    E5D8   1887 _cmx_cal_sllp_dac_fine_ring	=	0xe5d8
                    6564   1888 _lnx_cal_txdcc_pdiv	=	0x6564
                    6568   1889 _lnx_cal_txdcc_pdiv_hg	=	0x6568
                    656A   1890 _lnx_cal_txdcc	=	0x656a
                    656E   1891 _lnx_cal_txdcc_hg	=	0x656e
                    6570   1892 _lnx_cal_rxdcc_dll	=	0x6570
                    6574   1893 _lnx_cal_rxdcc_dll_hg	=	0x6574
                    6576   1894 _lnx_cal_rxdcc_data	=	0x6576
                    6580   1895 _lnx_cal_rxdcc_data_hg	=	0x6580
                    6585   1896 _lnx_cal_rxdcc_eom	=	0x6585
                    658F   1897 _lnx_cal_rxdcc_eom_hg	=	0x658f
                    6594   1898 _lnx_cal_dll_gmsel	=	0x6594
                    6596   1899 _lnx_cal_vdda_dll_sel	=	0x6596
                    659A   1900 _lnx_cal_dll_eom_gmsel	=	0x659a
                    659C   1901 _lnx_cal_vdda_dll_eom_sel	=	0x659c
                    65A0   1902 _lnx_cal_eom_dpher	=	0x65a0
                    65A2   1903 _lnx_cal_align90_dummy_clk	=	0x65a2
                    65AA   1904 _lnx_cal_align90_dac	=	0x65aa
                    65B2   1905 _lnx_cal_align90_gm	=	0x65b2
                    65BA   1906 _lnx_cal_sellv_txdata	=	0x65ba
                    65C4   1907 _lnx_cal_sellv_txclk	=	0x65c4
                    65CE   1908 _lnx_cal_sellv_rxdataclk	=	0x65ce
                    65D8   1909 _lnx_cal_sellv_txpre	=	0x65d8
                    65E2   1910 _lnx_cal_sellv_rxsampler	=	0x65e2
                    65EC   1911 _lnx_cal_sellv_rxeomclk	=	0x65ec
                    65F6   1912 _lnx_spdoft_tx_preset_index_lane	=	0x65f6
                    6100   1913 _cds28	=	0x6100
                    6178   1914 _dfe_sm	=	0x6178
                    61B8   1915 _dfe_sm_dc	=	0x61b8
                    61C0   1916 _dfe_sm_save	=	0x61c0
                    03FC   1917 _UPHY_ANAREG_REV_0	=	0x03fc
                    E684   1918 _tx_tb	=	0xe684
                    E698   1919 _train_save_tb	=	0xe698
                    607C   1920 _sq_thrs_ratio_tb	=	0x607c
                           1921 ;--------------------------------------------------------
                           1922 ; absolute external ram data
                           1923 ;--------------------------------------------------------
                           1924 	.area XABS    (ABS,XDATA)
                           1925 ;--------------------------------------------------------
                           1926 ; external initialized ram data
                           1927 ;--------------------------------------------------------
                           1928 	.area HOME    (CODE)
                           1929 	.area GSINIT0 (CODE)
                           1930 	.area GSINIT1 (CODE)
                           1931 	.area GSINIT2 (CODE)
                           1932 	.area GSINIT3 (CODE)
                           1933 	.area GSINIT4 (CODE)
                           1934 	.area GSINIT5 (CODE)
                           1935 	.area GSINIT  (CODE)
                           1936 	.area GSFINAL (CODE)
                           1937 	.area CSEG    (CODE)
                           1938 ;--------------------------------------------------------
                           1939 ; global & static initialisations
                           1940 ;--------------------------------------------------------
                           1941 	.area HOME    (CODE)
                           1942 	.area GSINIT  (CODE)
                           1943 	.area GSFINAL (CODE)
                           1944 	.area GSINIT  (CODE)
                           1945 ;--------------------------------------------------------
                           1946 ; Home
                           1947 ;--------------------------------------------------------
                           1948 	.area HOME    (CODE)
                           1949 	.area HOME    (CODE)
                           1950 ;--------------------------------------------------------
                           1951 ; code
                           1952 ;--------------------------------------------------------
                           1953 	.area BANK1   (CODE)
                           1954 ;------------------------------------------------------------
                           1955 ;Allocation info for local variables in function 'Power_P0s_P1'
                           1956 ;------------------------------------------------------------
                           1957 ;------------------------------------------------------------
                           1958 ;	../src/power_pcie.c:29: void Power_P0s_P1( void ) BANKING_CTRL {
                           1959 ;	-----------------------------------------
                           1960 ;	 function Power_P0s_P1
                           1961 ;	-----------------------------------------
   0000                    1962 _Power_P0s_P1:
                    0002   1963 	ar2 = 0x02
                    0003   1964 	ar3 = 0x03
                    0004   1965 	ar4 = 0x04
                    0005   1966 	ar5 = 0x05
                    0006   1967 	ar6 = 0x06
                    0007   1968 	ar7 = 0x07
                    0000   1969 	ar0 = 0x00
                    0001   1970 	ar1 = 0x01
                           1971 ;	../src/power_pcie.c:43: reg_DFE_ADAPT_CONT_LANE = 0;
   0000 90 24 01           1972 	mov	dptr,#(_DFE_CTRL_REG0 + 0x0001)
   0003 E0                 1973 	movx	a,@dptr
   0004 54 DF              1974 	anl	a,#0xdf
   0006 F0                 1975 	movx	@dptr,a
                           1976 ;	../src/power_pcie.c:44: reg_DFE_START_LANE = 0;
   0007 90 24 02           1977 	mov	dptr,#(_DFE_CTRL_REG0 + 0x0002)
   000A E0                 1978 	movx	a,@dptr
   000B 54 FE              1979 	anl	a,#0xfe
   000D F0                 1980 	movx	@dptr,a
                           1981 ;	../src/power_pcie.c:47: reg_DTL_CLK_OFF_LANE = 1;
   000E 90 21 02           1982 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   0011 E0                 1983 	movx	a,@dptr
   0012 44 10              1984 	orl	a,#0x10
   0014 F0                 1985 	movx	@dptr,a
                           1986 ;	../src/power_pcie.c:48: reg_DFE_CLK_OFF_LANE = 1;
   0015 90 24 10           1987 	mov	dptr,#_RX_EQ_CLK_CTRL
   0018 E0                 1988 	movx	a,@dptr
   0019 44 01              1989 	orl	a,#0x01
   001B F0                 1990 	movx	@dptr,a
                           1991 ;	../src/power_pcie.c:50: if(cmx_BYPASS_PU_RX_P1==0 && reg_PIN_PU_PLL_RD_LANE==0) {
   001C 90 E6 04           1992 	mov	dptr,#_CONTROL_CONFIG0
   001F E0                 1993 	movx	a,@dptr
   0020 20 E3 1B           1994 	jb	acc.3,00102$
   0023 90 20 07           1995 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0026 E0                 1996 	movx	a,@dptr
   0027 20 E5 14           1997 	jb	acc.5,00102$
                           1998 ;	../src/power_pcie.c:51: reg_RESET_DTL_LANE = 1;
   002A 90 21 02           1999 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   002D E0                 2000 	movx	a,@dptr
   002E 44 20              2001 	orl	a,#0x20
   0030 F0                 2002 	movx	@dptr,a
                           2003 ;	../src/power_pcie.c:52: CKCON = 0x07 ;  //MCU WAIT time the slowest
   0031 75 8E 07           2004 	mov	_CKCON,#0x07
                           2005 ;	../src/power_pcie.c:53: reg_RESET_DFE_LANE = 1;
   0034 90 24 10           2006 	mov	dptr,#_RX_EQ_CLK_CTRL
   0037 E0                 2007 	movx	a,@dptr
   0038 44 04              2008 	orl	a,#0x04
   003A F0                 2009 	movx	@dptr,a
                           2010 ;	../src/power_pcie.c:54: CKCON = 0x00 ; //MCU WAIT time setting back to normal.
   003B 75 8E 00           2011 	mov	_CKCON,#0x00
   003E                    2012 00102$:
                           2013 ;	../src/power_pcie.c:57: reg_PIN_PLL_READY_RX_LANE = 0;
   003E 90 21 02           2014 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   0041 E0                 2015 	movx	a,@dptr
   0042 54 BF              2016 	anl	a,#0xbf
   0044 F0                 2017 	movx	@dptr,a
                           2018 ;	../src/power_pcie.c:60: if(reg_PIN_TX_IDLE_HIZ_RD_LANE) {
   0045 90 20 07           2019 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0048 E0                 2020 	movx	a,@dptr
   0049 30 E3 1D           2021 	jnb	acc.3,00105$
                           2022 ;	../src/power_pcie.c:61: reg_ANA_TX_LESS_CUR_IDLE_LANE = 1;
   004C 90 20 07           2023 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   004F E0                 2024 	movx	a,@dptr
   0050 44 40              2025 	orl	a,#0x40
   0052 F0                 2026 	movx	@dptr,a
                           2027 ;	../src/power_pcie.c:62: reg_MCU_DEBUG0_LANE_7_0 = 0x89;
   0053 90 22 B4           2028 	mov	dptr,#_MCU_DEBUG0_LANE
   0056 74 89              2029 	mov	a,#0x89
   0058 F0                 2030 	movx	@dptr,a
                           2031 ;	../src/power_pcie.c:64: short_delay(); //delay01(1);
   0059 78r00              2032 	mov	r0,#_short_delay
   005B 79s00              2033 	mov	r1,#(_short_delay >> 8)
   005D 7As00              2034 	mov	r2,#(_short_delay >> 16)
   005F 12s00r00           2035 	lcall	__sdcc_banked_call
                           2036 ;	../src/power_pcie.c:65: reg_ANA_TX_IDLE_HIZ_EN_LANE = 1;
   0062 90 20 07           2037 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0065 E0                 2038 	movx	a,@dptr
   0066 44 80              2039 	orl	a,#0x80
   0068 F0                 2040 	movx	@dptr,a
   0069                    2041 00105$:
                           2042 ;	../src/power_pcie.c:68: if(cmx_BYPASS_PU_RX_P1==0 && reg_PIN_PU_PLL_RD_LANE==0) {
   0069 90 E6 04           2043 	mov	dptr,#_CONTROL_CONFIG0
   006C E0                 2044 	movx	a,@dptr
   006D 20 E3 23           2045 	jb	acc.3,00107$
   0070 90 20 07           2046 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0073 E0                 2047 	movx	a,@dptr
   0074 20 E5 1C           2048 	jb	acc.5,00107$
                           2049 ;	../src/power_pcie.c:70: reg_FFE_PULSE_EN_LANE = 0;
   0077 90 02 0C           2050 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_131
   007A E0                 2051 	movx	a,@dptr
   007B 54 7F              2052 	anl	a,#0x7f
   007D F0                 2053 	movx	@dptr,a
                           2054 ;	../src/power_pcie.c:71: reg_ANA_PU_RX_LANE = 0;
   007E 90 21 03           2055 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0003)
   0081 E0                 2056 	movx	a,@dptr
   0082 54 BF              2057 	anl	a,#0xbf
   0084 F0                 2058 	movx	@dptr,a
                           2059 ;	../src/power_pcie.c:72: reg_ANA_PU_RX_DLY_LANE = 0;
   0085 90 21 01           2060 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0001)
   0088 E0                 2061 	movx	a,@dptr
   0089 54 7F              2062 	anl	a,#0x7f
   008B F0                 2063 	movx	@dptr,a
                           2064 ;	../src/power_pcie.c:73: reg_ANA_RX_PU_DLY2_LANE = 0;
   008C 90 21 4C           2065 	mov	dptr,#_INPUT_RX_PIN_REG3_LANE
   008F E0                 2066 	movx	a,@dptr
   0090 54 FE              2067 	anl	a,#0xfe
   0092 F0                 2068 	movx	@dptr,a
   0093                    2069 00107$:
                           2070 ;	../src/power_pcie.c:76: if( reg_PIN_PU_PLL_RD_LANE == 0) {
   0093 90 20 07           2071 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0096 E0                 2072 	movx	a,@dptr
   0097 20 E5 15           2073 	jb	acc.5,00121$
                           2074 ;	../src/power_pcie.c:77: PHY_STATUS = ST_P2;
   009A 90 22 30           2075 	mov	dptr,#_MCU_STATUS0_LANE
   009D 74 21              2076 	mov	a,#0x21
   009F F0                 2077 	movx	@dptr,a
                           2078 ;	../src/power_pcie.c:78: reg_PIN_PLL_READY_TX_LANE = 0;
   00A0 90 20 02           2079 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   00A3 E0                 2080 	movx	a,@dptr
   00A4 54 FB              2081 	anl	a,#0xfb
   00A6 F0                 2082 	movx	@dptr,a
                           2083 ;	../src/power_pcie.c:79: SYNC_STATUS_LANE_EN = 0;
   00A7 90 22 36           2084 	mov	dptr,#(_MCU_STATUS1_LANE + 0x0002)
   00AA E4                 2085 	clr	a
   00AB F0                 2086 	movx	@dptr,a
   00AC 02s01r25           2087 	ljmp	00123$
   00AF                    2088 00121$:
                           2089 ;	../src/power_pcie.c:82: PHY_STATUS = ST_P1_WK;
   00AF 90 22 30           2090 	mov	dptr,#_MCU_STATUS0_LANE
   00B2 74 23              2091 	mov	a,#0x23
   00B4 F0                 2092 	movx	@dptr,a
                           2093 ;	../src/power_pcie.c:83: SYNC_STATUS_LANE_EN = 1;
   00B5 90 22 36           2094 	mov	dptr,#(_MCU_STATUS1_LANE + 0x0002)
   00B8 74 01              2095 	mov	a,#0x01
   00BA F0                 2096 	movx	@dptr,a
                           2097 ;	../src/power_pcie.c:85: if(reg_PIN_PU_RX_RD_LANE==1) { //corner case
   00BB 90 21 02           2098 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   00BE E0                 2099 	movx	a,@dptr
   00BF 03                 2100 	rr	a
   00C0 03                 2101 	rr	a
   00C1 54 01              2102 	anl	a,#0x01
   00C3 FA                 2103 	mov	r2,a
   00C4 BA 01 04           2104 	cjne	r2,#0x01,00118$
                           2105 ;	../src/power_pcie.c:86: do_wake = 1;
   00C7 D2*00              2106 	setb	_do_wake
   00C9 80 53              2107 	sjmp	00119$
   00CB                    2108 00118$:
                           2109 ;	../src/power_pcie.c:88: else if( SYNC_SATUS_P2_2_P1_ON ) {
   00CB 90 A2 B6           2110 	mov	dptr,#(_MCU_INFO_32 + 0x0002)
   00CE E0                 2111 	movx	a,@dptr
   00CF 60 4D              2112 	jz	00119$
                           2113 ;	../src/power_pcie.c:89: txlane_align();
   00D1 78r00              2114 	mov	r0,#_txlane_align
   00D3 79s00              2115 	mov	r1,#(_txlane_align >> 8)
   00D5 7As00              2116 	mov	r2,#(_txlane_align >> 16)
   00D7 12s00r00           2117 	lcall	__sdcc_banked_call
                           2118 ;	../src/power_pcie.c:90: SYNC_SATUS_P2_2_P1_ON = 0;
   00DA 90 A2 B6           2119 	mov	dptr,#(_MCU_INFO_32 + 0x0002)
   00DD E4                 2120 	clr	a
   00DE F0                 2121 	movx	@dptr,a
                           2122 ;	../src/power_pcie.c:91: if(mcuid==master_mcu) {
   00DF 90 22 00           2123 	mov	dptr,#_MCU_CONTROL_LANE
   00E2 E0                 2124 	movx	a,@dptr
   00E3 FA                 2125 	mov	r2,a
   00E4 90 E6 50           2126 	mov	dptr,#_MCU_CONFIG
   00E7 E0                 2127 	movx	a,@dptr
   00E8 FB                 2128 	mov	r3,a
   00E9 EA                 2129 	mov	a,r2
   00EA B5 03 2A           2130 	cjne	a,ar3,00109$
                           2131 ;	../src/power_pcie.c:92: reg_DTX_CLK_OFF = 0;	reg_DTX_CLK_OFF_RING = 0;	
   00ED 90 A3 19           2132 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   00F0 E0                 2133 	movx	a,@dptr
   00F1 54 FE              2134 	anl	a,#0xfe
   00F3 F0                 2135 	movx	@dptr,a
   00F4 90 A3 18           2136 	mov	dptr,#_PM_CMN_REG1
   00F7 E0                 2137 	movx	a,@dptr
   00F8 54 FE              2138 	anl	a,#0xfe
   00FA F0                 2139 	movx	@dptr,a
                           2140 ;	../src/power_pcie.c:93: delay01(10);
   00FB 90 00 0A           2141 	mov	dptr,#0x000A
   00FE 78r00              2142 	mov	r0,#_delay01
   0100 79s00              2143 	mov	r1,#(_delay01 >> 8)
   0102 7As00              2144 	mov	r2,#(_delay01 >> 16)
   0104 12s00r00           2145 	lcall	__sdcc_banked_call
                           2146 ;	../src/power_pcie.c:94: reg_RESET_DTX	= 0;	reg_RESET_DTX_RING = 0;
   0107 90 A0 0A           2147 	mov	dptr,#(_DTX_REG0 + 0x0002)
   010A E0                 2148 	movx	a,@dptr
   010B 54 7F              2149 	anl	a,#0x7f
   010D F0                 2150 	movx	@dptr,a
   010E 90 A0 11           2151 	mov	dptr,#(_DTX_REG2 + 0x0001)
   0111 E0                 2152 	movx	a,@dptr
   0112 54 FB              2153 	anl	a,#0xfb
   0114 F0                 2154 	movx	@dptr,a
                           2155 ;	../src/power_pcie.c:96: else while(reg_RESET_DTX_RING);
   0115 80 07              2156 	sjmp	00119$
   0117                    2157 00109$:
   0117 90 A0 11           2158 	mov	dptr,#(_DTX_REG2 + 0x0001)
   011A E0                 2159 	movx	a,@dptr
   011B 20 E2 F9           2160 	jb	acc.2,00109$
   011E                    2161 00119$:
                           2162 ;	../src/power_pcie.c:98: reg_PIN_PLL_READY_TX_LANE = 1;
   011E 90 20 02           2163 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   0121 E0                 2164 	movx	a,@dptr
   0122 44 04              2165 	orl	a,#0x04
   0124 F0                 2166 	movx	@dptr,a
   0125                    2167 00123$:
   0125 02s00r00           2168 	ljmp	__sdcc_banked_ret
                           2169 ;------------------------------------------------------------
                           2170 ;Allocation info for local variables in function 'Power_P1_P2'
                           2171 ;------------------------------------------------------------
                           2172 ;------------------------------------------------------------
                           2173 ;	../src/power_pcie.c:114: void Power_P1_P2( void ) BANKING_CTRL {
                           2174 ;	-----------------------------------------
                           2175 ;	 function Power_P1_P2
                           2176 ;	-----------------------------------------
   0128                    2177 _Power_P1_P2:
                           2178 ;	../src/power_pcie.c:116: if(reg_ANA_RX_PU_DLY2_LANE) {
   0128 90 21 4C           2179 	mov	dptr,#_INPUT_RX_PIN_REG3_LANE
   012B E0                 2180 	movx	a,@dptr
   012C 30 E0 42           2181 	jnb	acc.0,00102$
                           2182 ;	../src/power_pcie.c:118: reg_DFE_ADAPT_CONT_LANE = 0;
   012F 90 24 01           2183 	mov	dptr,#(_DFE_CTRL_REG0 + 0x0001)
   0132 E0                 2184 	movx	a,@dptr
   0133 54 DF              2185 	anl	a,#0xdf
   0135 F0                 2186 	movx	@dptr,a
                           2187 ;	../src/power_pcie.c:119: reg_DFE_START_LANE = 0;		
   0136 90 24 02           2188 	mov	dptr,#(_DFE_CTRL_REG0 + 0x0002)
   0139 E0                 2189 	movx	a,@dptr
   013A 54 FE              2190 	anl	a,#0xfe
   013C F0                 2191 	movx	@dptr,a
                           2192 ;	../src/power_pcie.c:120: reg_DTL_CLK_OFF_LANE= 1; 
   013D 90 21 02           2193 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   0140 E0                 2194 	movx	a,@dptr
   0141 44 10              2195 	orl	a,#0x10
   0143 F0                 2196 	movx	@dptr,a
                           2197 ;	../src/power_pcie.c:121: reg_DFE_CLK_OFF_LANE = 1;
   0144 90 24 10           2198 	mov	dptr,#_RX_EQ_CLK_CTRL
   0147 E0                 2199 	movx	a,@dptr
   0148 44 01              2200 	orl	a,#0x01
   014A F0                 2201 	movx	@dptr,a
                           2202 ;	../src/power_pcie.c:122: reg_RESET_DTL_LANE = 1;
   014B 90 21 02           2203 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   014E E0                 2204 	movx	a,@dptr
   014F 44 20              2205 	orl	a,#0x20
   0151 F0                 2206 	movx	@dptr,a
                           2207 ;	../src/power_pcie.c:123: CKCON = 0x07 ;  //MCU WAIT time the slowest
   0152 75 8E 07           2208 	mov	_CKCON,#0x07
                           2209 ;	../src/power_pcie.c:124: reg_RESET_DFE_LANE = 1;
   0155 90 24 10           2210 	mov	dptr,#_RX_EQ_CLK_CTRL
   0158 E0                 2211 	movx	a,@dptr
   0159 44 04              2212 	orl	a,#0x04
   015B F0                 2213 	movx	@dptr,a
                           2214 ;	../src/power_pcie.c:125: CKCON = 0x00 ; //MCU WAIT time setting back to normal.
   015C 75 8E 00           2215 	mov	_CKCON,#0x00
                           2216 ;	../src/power_pcie.c:126: txloz2hiz();
   015F 78r00              2217 	mov	r0,#_txloz2hiz
   0161 79s00              2218 	mov	r1,#(_txloz2hiz >> 8)
   0163 7As00              2219 	mov	r2,#(_txloz2hiz >> 16)
   0165 12s00r00           2220 	lcall	__sdcc_banked_call
                           2221 ;	../src/power_pcie.c:127: pu_rx_off();			
   0168 78r00              2222 	mov	r0,#_pu_rx_off
   016A 79s00              2223 	mov	r1,#(_pu_rx_off >> 8)
   016C 7As00              2224 	mov	r2,#(_pu_rx_off >> 16)
   016E 12s00r00           2225 	lcall	__sdcc_banked_call
   0171                    2226 00102$:
                           2227 ;	../src/power_pcie.c:130: reg_ANA_TXDETRX_START_LANE = 0;
   0171 90 20 01           2228 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0174 E0                 2229 	movx	a,@dptr
   0175 54 7F              2230 	anl	a,#0x7f
   0177 F0                 2231 	movx	@dptr,a
                           2232 ;	../src/power_pcie.c:131: reg_ANA_TXDETRX_EN_LANE = 0;
   0178 90 20 02           2233 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   017B E0                 2234 	movx	a,@dptr
   017C 54 FE              2235 	anl	a,#0xfe
   017E F0                 2236 	movx	@dptr,a
                           2237 ;	../src/power_pcie.c:132: reg_PIN_TXDETRX_VALID_LANE = 0;
   017F 90 20 01           2238 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0182 E0                 2239 	movx	a,@dptr
   0183 54 BF              2240 	anl	a,#0xbf
   0185 F0                 2241 	movx	@dptr,a
                           2242 ;	../src/power_pcie.c:136: if( reg_PU_PLL_OR==0 ) {
   0186 90 A3 1A           2243 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   0189 E0                 2244 	movx	a,@dptr
   018A 20 E4 0B           2245 	jb	acc.4,00107$
                           2246 ;	../src/power_pcie.c:137: pu_pll_off();
   018D 78r00              2247 	mov	r0,#_pu_pll_off
   018F 79s00              2248 	mov	r1,#(_pu_pll_off >> 8)
   0191 7As00              2249 	mov	r2,#(_pu_pll_off >> 16)
   0193 12s00r00           2250 	lcall	__sdcc_banked_call
   0196 80 1A              2251 	sjmp	00108$
   0198                    2252 00107$:
                           2253 ;	../src/power_pcie.c:139: else if( reg_PU_PLL_OR==1 && SYNC_SATUS_PLL_OR_PLL_OFF_READ ) {
   0198 90 A3 1A           2254 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   019B E0                 2255 	movx	a,@dptr
   019C C4                 2256 	swap	a
   019D 54 01              2257 	anl	a,#0x01
   019F FA                 2258 	mov	r2,a
   01A0 BA 01 0F           2259 	cjne	r2,#0x01,00108$
   01A3 90 22 21           2260 	mov	dptr,#(_MCU_INFO4_LANE + 0x0001)
   01A6 E0                 2261 	movx	a,@dptr
   01A7 60 09              2262 	jz	00108$
                           2263 ;	../src/power_pcie.c:140: pu_pll_on();
   01A9 78r00              2264 	mov	r0,#_pu_pll_on
   01AB 79s00              2265 	mov	r1,#(_pu_pll_on >> 8)
   01AD 7As00              2266 	mov	r2,#(_pu_pll_on >> 16)
   01AF 12s00r00           2267 	lcall	__sdcc_banked_call
   01B2                    2268 00108$:
                           2269 ;	../src/power_pcie.c:143: reg_ANA_PU_TX_LANE = 0;	
   01B2 90 20 03           2270 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   01B5 E0                 2271 	movx	a,@dptr
   01B6 54 BF              2272 	anl	a,#0xbf
   01B8 F0                 2273 	movx	@dptr,a
                           2274 ;	../src/power_pcie.c:145: PHY_STATUS = ST_P2_WK;
   01B9 90 22 30           2275 	mov	dptr,#_MCU_STATUS0_LANE
   01BC 74 1B              2276 	mov	a,#0x1B
   01BE F0                 2277 	movx	@dptr,a
                           2278 ;	../src/power_pcie.c:147: if(reg_PIN_REFCLK_DIS_RD && reg_PU_PLL_OR==0) {
   01BF 90 A3 1A           2279 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   01C2 E0                 2280 	movx	a,@dptr
   01C3 30 E0 23           2281 	jnb	acc.0,00115$
   01C6 90 A3 1A           2282 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   01C9 E0                 2283 	movx	a,@dptr
   01CA 20 E4 1C           2284 	jb	acc.4,00115$
                           2285 ;	../src/power_pcie.c:148: if(reg_P2_STATE_LANE == 1) {
   01CD 90 20 01           2286 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   01D0 E0                 2287 	movx	a,@dptr
   01D1 03                 2288 	rr	a
   01D2 54 01              2289 	anl	a,#0x01
   01D4 FA                 2290 	mov	r2,a
   01D5 BA 01 09           2291 	cjne	r2,#0x01,00110$
                           2292 ;	../src/power_pcie.c:149: reg_REFCLK_DIS_FM_PM = 1;
   01D8 90 A3 1B           2293 	mov	dptr,#(_PM_CMN_REG1 + 0x0003)
   01DB E0                 2294 	movx	a,@dptr
   01DC 44 80              2295 	orl	a,#0x80
   01DE F0                 2296 	movx	@dptr,a
   01DF 80 15              2297 	sjmp	00118$
   01E1                    2298 00110$:
                           2299 ;	../src/power_pcie.c:152: PHY_STATUS = ST_P1CLKREQ_WK;
   01E1 90 22 30           2300 	mov	dptr,#_MCU_STATUS0_LANE
   01E4 74 26              2301 	mov	a,#0x26
   01E6 F0                 2302 	movx	@dptr,a
   01E7 80 0D              2303 	sjmp	00118$
   01E9                    2304 00115$:
                           2305 ;	../src/power_pcie.c:156: else if(reg_INT_TXDETRX_EN_CHG_ISR_LANE ) {
   01E9 90 20 1A           2306 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0002)
   01EC E0                 2307 	movx	a,@dptr
   01ED 30 E7 06           2308 	jnb	acc.7,00118$
                           2309 ;	../src/power_pcie.c:157: PHY_STATUS = ST_P2_TXDETRX;
   01F0 90 22 30           2310 	mov	dptr,#_MCU_STATUS0_LANE
   01F3 74 20              2311 	mov	a,#0x20
   01F5 F0                 2312 	movx	@dptr,a
   01F6                    2313 00118$:
   01F6 02s00r00           2314 	ljmp	__sdcc_banked_ret
                           2315 ;------------------------------------------------------------
                           2316 ;Allocation info for local variables in function 'Power_P2_P1'
                           2317 ;------------------------------------------------------------
                           2318 ;pll_already_on            Allocated to registers r2 
                           2319 ;------------------------------------------------------------
                           2320 ;	../src/power_pcie.c:178: void Power_P2_P1(void) BANKING_CTRL {
                           2321 ;	-----------------------------------------
                           2322 ;	 function Power_P2_P1
                           2323 ;	-----------------------------------------
   01F9                    2324 _Power_P2_P1:
                           2325 ;	../src/power_pcie.c:180: bool pll_already_on = 0;
   01F9 7A 00              2326 	mov	r2,#0x00
                           2327 ;	../src/power_pcie.c:182: do {
   01FB                    2328 00113$:
                           2329 ;	../src/power_pcie.c:183: if(reg_PIN_REFCLK_DIS_RD  && reg_PU_PLL_OR==0) {
   01FB 90 A3 1A           2330 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   01FE E0                 2331 	movx	a,@dptr
   01FF 30 E0 24           2332 	jnb	acc.0,00105$
   0202 90 A3 1A           2333 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   0205 E0                 2334 	movx	a,@dptr
   0206 20 E4 1D           2335 	jb	acc.4,00105$
                           2336 ;	../src/power_pcie.c:184: if(reg_P2_STATE_LANE == 1) {
   0209 90 20 01           2337 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   020C E0                 2338 	movx	a,@dptr
   020D 03                 2339 	rr	a
   020E 54 01              2340 	anl	a,#0x01
   0210 FB                 2341 	mov	r3,a
   0211 BB 01 09           2342 	cjne	r3,#0x01,00102$
                           2343 ;	../src/power_pcie.c:185: reg_REFCLK_DIS_FM_PM = 1;
   0214 90 A3 1B           2344 	mov	dptr,#(_PM_CMN_REG1 + 0x0003)
   0217 E0                 2345 	movx	a,@dptr
   0218 44 80              2346 	orl	a,#0x80
   021A F0                 2347 	movx	@dptr,a
   021B 80 09              2348 	sjmp	00105$
   021D                    2349 00102$:
                           2350 ;	../src/power_pcie.c:188: PHY_STATUS = ST_P1CLKREQ_WK;
   021D 90 22 30           2351 	mov	dptr,#_MCU_STATUS0_LANE
   0220 74 26              2352 	mov	a,#0x26
   0222 F0                 2353 	movx	@dptr,a
                           2354 ;	../src/power_pcie.c:190: return;
   0223 02s03r4F           2355 	ljmp	00137$
   0226                    2356 00105$:
                           2357 ;	../src/power_pcie.c:193: if(reg_INT_TXDETRX_EN_CHG_ISR_LANE ) {
   0226 90 20 1A           2358 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0002)
   0229 E0                 2359 	movx	a,@dptr
   022A 30 E7 09           2360 	jnb	acc.7,00108$
                           2361 ;	../src/power_pcie.c:194: PHY_STATUS = ST_P2_TXDETRX;
   022D 90 22 30           2362 	mov	dptr,#_MCU_STATUS0_LANE
   0230 74 20              2363 	mov	a,#0x20
   0232 F0                 2364 	movx	@dptr,a
                           2365 ;	../src/power_pcie.c:195: return;
   0233 02s03r4F           2366 	ljmp	00137$
   0236                    2367 00108$:
                           2368 ;	../src/power_pcie.c:197: if( reg_PIN_TX_ACJTAG_EN_RD_LANE==1 ) { 
   0236 90 20 06           2369 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0002)
   0239 E0                 2370 	movx	a,@dptr
   023A 23                 2371 	rl	a
   023B 54 01              2372 	anl	a,#0x01
   023D FB                 2373 	mov	r3,a
   023E BB 01 09           2374 	cjne	r3,#0x01,00110$
                           2375 ;	../src/power_pcie.c:198: PHY_STATUS = ST_P2_BEACON;
   0241 90 22 30           2376 	mov	dptr,#_MCU_STATUS0_LANE
   0244 74 1E              2377 	mov	a,#0x1E
   0246 F0                 2378 	movx	@dptr,a
                           2379 ;	../src/power_pcie.c:199: return;
   0247 02s03r4F           2380 	ljmp	00137$
   024A                    2381 00110$:
                           2382 ;	../src/power_pcie.c:201: if ( 1 == reg_PIN_PU_PLL_RD_LANE )
   024A 90 20 07           2383 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   024D E0                 2384 	movx	a,@dptr
   024E C4                 2385 	swap	a
   024F 03                 2386 	rr	a
   0250 54 01              2387 	anl	a,#0x01
   0252 FB                 2388 	mov	r3,a
   0253 BB 01 02           2389 	cjne	r3,#0x01,00114$
                           2390 ;	../src/power_pcie.c:202: do_wake = 1; // handles the case that PIN_PU_PLL went high, but the interrupt is cleared by mcu_reset call
   0256 D2*00              2391 	setb	_do_wake
   0258                    2392 00114$:
                           2393 ;	../src/power_pcie.c:203: } while(!do_wake);
   0258 30*00 A0           2394 	jnb	_do_wake,00113$
                           2395 ;	../src/power_pcie.c:205: SYNC_STATUS_LANE_EN = 1;
   025B 90 22 36           2396 	mov	dptr,#(_MCU_STATUS1_LANE + 0x0002)
   025E 74 01              2397 	mov	a,#0x01
   0260 F0                 2398 	movx	@dptr,a
                           2399 ;	../src/power_pcie.c:207: if(reg_PIN_PU_TX_RD_LANE==1 && reg_PIN_PU_RX_RD_LANE == 1) {
   0261 90 20 07           2400 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0264 E0                 2401 	movx	a,@dptr
   0265 C4                 2402 	swap	a
   0266 54 01              2403 	anl	a,#0x01
   0268 FB                 2404 	mov	r3,a
   0269 BB 01 15           2405 	cjne	r3,#0x01,00117$
   026C 90 21 02           2406 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   026F E0                 2407 	movx	a,@dptr
   0270 03                 2408 	rr	a
   0271 03                 2409 	rr	a
   0272 54 01              2410 	anl	a,#0x01
   0274 FB                 2411 	mov	r3,a
   0275 BB 01 09           2412 	cjne	r3,#0x01,00117$
                           2413 ;	../src/power_pcie.c:208: PHY_STATUS = ST_P2_P0;
   0278 90 22 30           2414 	mov	dptr,#_MCU_STATUS0_LANE
   027B 74 32              2415 	mov	a,#0x32
   027D F0                 2416 	movx	@dptr,a
                           2417 ;	../src/power_pcie.c:209: return;
   027E 02s03r4F           2418 	ljmp	00137$
   0281                    2419 00117$:
                           2420 ;	../src/power_pcie.c:212: reg_REFCLK_DIS_FM_PM = 0;
   0281 90 A3 1B           2421 	mov	dptr,#(_PM_CMN_REG1 + 0x0003)
   0284 E0                 2422 	movx	a,@dptr
   0285 54 7F              2423 	anl	a,#0x7f
   0287 F0                 2424 	movx	@dptr,a
                           2425 ;	../src/power_pcie.c:214: reg_ANA_PU_TX_LANE = 1;
   0288 90 20 03           2426 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   028B E0                 2427 	movx	a,@dptr
   028C 44 40              2428 	orl	a,#0x40
   028E F0                 2429 	movx	@dptr,a
                           2430 ;	../src/power_pcie.c:216: if(reg_PU_PLL_OR && SYNC_SATUS_PLL_OR_PLL_OFF_READ) {
   028F 90 A3 1A           2431 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   0292 E0                 2432 	movx	a,@dptr
   0293 30 E4 21           2433 	jnb	acc.4,00120$
   0296 90 22 21           2434 	mov	dptr,#(_MCU_INFO4_LANE + 0x0001)
   0299 E0                 2435 	movx	a,@dptr
   029A 60 1B              2436 	jz	00120$
                           2437 ;	../src/power_pcie.c:217: pu_pll_on();
   029C C0 02              2438 	push	ar2
   029E 78r00              2439 	mov	r0,#_pu_pll_on
   02A0 79s00              2440 	mov	r1,#(_pu_pll_on >> 8)
   02A2 7As00              2441 	mov	r2,#(_pu_pll_on >> 16)
   02A4 12s00r00           2442 	lcall	__sdcc_banked_call
                           2443 ;	../src/power_pcie.c:218: delay01(50);
   02A7 90 00 32           2444 	mov	dptr,#0x0032
   02AA 78r00              2445 	mov	r0,#_delay01
   02AC 79s00              2446 	mov	r1,#(_delay01 >> 8)
   02AE 7As00              2447 	mov	r2,#(_delay01 >> 16)
   02B0 12s00r00           2448 	lcall	__sdcc_banked_call
   02B3 D0 02              2449 	pop	ar2
   02B5 80 02              2450 	sjmp	00121$
   02B7                    2451 00120$:
                           2452 ;	../src/power_pcie.c:220: else pll_already_on = 1;
   02B7 7A 01              2453 	mov	r2,#0x01
   02B9                    2454 00121$:
                           2455 ;	../src/power_pcie.c:222: txlane_align();
   02B9 C0 02              2456 	push	ar2
   02BB 78r00              2457 	mov	r0,#_txlane_align
   02BD 79s00              2458 	mov	r1,#(_txlane_align >> 8)
   02BF 7As00              2459 	mov	r2,#(_txlane_align >> 16)
   02C1 12s00r00           2460 	lcall	__sdcc_banked_call
   02C4 D0 02              2461 	pop	ar2
                           2462 ;	../src/power_pcie.c:223: SYNC_SATUS_P2_2_P1_ON = 0;
   02C6 90 A2 B6           2463 	mov	dptr,#(_MCU_INFO_32 + 0x0002)
   02C9 E4                 2464 	clr	a
   02CA F0                 2465 	movx	@dptr,a
                           2466 ;	../src/power_pcie.c:225: if(mcuid==master_mcu) {
   02CB 90 22 00           2467 	mov	dptr,#_MCU_CONTROL_LANE
   02CE E0                 2468 	movx	a,@dptr
   02CF FB                 2469 	mov	r3,a
   02D0 90 E6 50           2470 	mov	dptr,#_MCU_CONFIG
   02D3 E0                 2471 	movx	a,@dptr
   02D4 FC                 2472 	mov	r4,a
   02D5 EB                 2473 	mov	a,r3
   02D6 B5 04 2E           2474 	cjne	a,ar4,00123$
                           2475 ;	../src/power_pcie.c:226: reg_DTX_CLK_OFF = 0;	reg_DTX_CLK_OFF_RING = 0;	
   02D9 90 A3 19           2476 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   02DC E0                 2477 	movx	a,@dptr
   02DD 54 FE              2478 	anl	a,#0xfe
   02DF F0                 2479 	movx	@dptr,a
   02E0 90 A3 18           2480 	mov	dptr,#_PM_CMN_REG1
   02E3 E0                 2481 	movx	a,@dptr
   02E4 54 FE              2482 	anl	a,#0xfe
   02E6 F0                 2483 	movx	@dptr,a
                           2484 ;	../src/power_pcie.c:227: delay01(10);
   02E7 90 00 0A           2485 	mov	dptr,#0x000A
   02EA C0 02              2486 	push	ar2
   02EC 78r00              2487 	mov	r0,#_delay01
   02EE 79s00              2488 	mov	r1,#(_delay01 >> 8)
   02F0 7As00              2489 	mov	r2,#(_delay01 >> 16)
   02F2 12s00r00           2490 	lcall	__sdcc_banked_call
   02F5 D0 02              2491 	pop	ar2
                           2492 ;	../src/power_pcie.c:228: reg_RESET_DTX	= 0;	reg_RESET_DTX_RING = 0;
   02F7 90 A0 0A           2493 	mov	dptr,#(_DTX_REG0 + 0x0002)
   02FA E0                 2494 	movx	a,@dptr
   02FB 54 7F              2495 	anl	a,#0x7f
   02FD F0                 2496 	movx	@dptr,a
   02FE 90 A0 11           2497 	mov	dptr,#(_DTX_REG2 + 0x0001)
   0301 E0                 2498 	movx	a,@dptr
   0302 54 FB              2499 	anl	a,#0xfb
   0304 F0                 2500 	movx	@dptr,a
                           2501 ;	../src/power_pcie.c:230: else while(reg_RESET_DTX_RING);
   0305 80 07              2502 	sjmp	00128$
   0307                    2503 00123$:
   0307 90 A0 11           2504 	mov	dptr,#(_DTX_REG2 + 0x0001)
   030A E0                 2505 	movx	a,@dptr
   030B 20 E2 F9           2506 	jb	acc.2,00123$
   030E                    2507 00128$:
                           2508 ;	../src/power_pcie.c:233: if (pll_already_on==0 && 
   030E EA                 2509 	mov	a,r2
   030F 70 28              2510 	jnz	00130$
                           2511 ;	../src/power_pcie.c:234: (reg_INIT_TXFOFFS_9_0_b0 || reg_INIT_TXFOFFS_9_0_b1 || reg_INIT_TXFOFFS_RING_9_0_b0 || reg_INIT_TXFOFFS_RING_9_0_b1) ){
   0311 90 A0 08           2512 	mov	dptr,#_DTX_REG0
   0314 E0                 2513 	movx	a,@dptr
   0315 70 16              2514 	jnz	00129$
   0317 90 A0 09           2515 	mov	dptr,#(_DTX_REG0 + 0x0001)
   031A E0                 2516 	movx	a,@dptr
   031B 54 03              2517 	anl	a,#0x03
   031D 70 0E              2518 	jnz	00129$
   031F 90 A0 10           2519 	mov	dptr,#_DTX_REG2
   0322 E0                 2520 	movx	a,@dptr
   0323 70 08              2521 	jnz	00129$
   0325 90 A0 11           2522 	mov	dptr,#(_DTX_REG2 + 0x0001)
   0328 E0                 2523 	movx	a,@dptr
   0329 54 03              2524 	anl	a,#0x03
   032B 60 0C              2525 	jz	00130$
   032D                    2526 00129$:
                           2527 ;	../src/power_pcie.c:235: delay01(50);
   032D 90 00 32           2528 	mov	dptr,#0x0032
   0330 78r00              2529 	mov	r0,#_delay01
   0332 79s00              2530 	mov	r1,#(_delay01 >> 8)
   0334 7As00              2531 	mov	r2,#(_delay01 >> 16)
   0336 12s00r00           2532 	lcall	__sdcc_banked_call
   0339                    2533 00130$:
                           2534 ;	../src/power_pcie.c:239: if( reg_PIN_PU_RX_RD_LANE == 0 )
   0339 90 21 02           2535 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   033C E0                 2536 	movx	a,@dptr
   033D 20 E2 02           2537 	jb	acc.2,00136$
                           2538 ;	../src/power_pcie.c:240: do_wake = 0;
   0340 C2*00              2539 	clr	_do_wake
   0342                    2540 00136$:
                           2541 ;	../src/power_pcie.c:241: PHY_STATUS = ST_P1_WK;
   0342 90 22 30           2542 	mov	dptr,#_MCU_STATUS0_LANE
   0345 74 23              2543 	mov	a,#0x23
   0347 F0                 2544 	movx	@dptr,a
                           2545 ;	../src/power_pcie.c:243: reg_PIN_PLL_READY_TX_LANE = 1;
   0348 90 20 02           2546 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   034B E0                 2547 	movx	a,@dptr
   034C 44 04              2548 	orl	a,#0x04
   034E F0                 2549 	movx	@dptr,a
   034F                    2550 00137$:
   034F 02s00r00           2551 	ljmp	__sdcc_banked_ret
                           2552 ;------------------------------------------------------------
                           2553 ;Allocation info for local variables in function 'Power_P1_P0'
                           2554 ;------------------------------------------------------------
                           2555 ;------------------------------------------------------------
                           2556 ;	../src/power_pcie.c:257: void Power_P1_P0(void) BANKING_CTRL {
                           2557 ;	-----------------------------------------
                           2558 ;	 function Power_P1_P0
                           2559 ;	-----------------------------------------
   0352                    2560 _Power_P1_P0:
                           2561 ;	../src/power_pcie.c:258: if(reg_INT_TXDETRX_EN_CHG_ISR_LANE ) {
   0352 90 20 1A           2562 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0002)
   0355 E0                 2563 	movx	a,@dptr
   0356 30 E7 08           2564 	jnb	acc.7,00101$
                           2565 ;	../src/power_pcie.c:259: PHY_STATUS = ST_P1_TXDETRX;
   0359 90 22 30           2566 	mov	dptr,#_MCU_STATUS0_LANE
   035C 74 33              2567 	mov	a,#0x33
   035E F0                 2568 	movx	@dptr,a
                           2569 ;	../src/power_pcie.c:260: return;	
                           2570 ;	../src/power_pcie.c:262: else while(!do_wake); 
   035F 80 61              2571 	sjmp	00109$
   0361                    2572 00101$:
   0361 30*00 FD           2573 	jnb	_do_wake,00101$
                           2574 ;	../src/power_pcie.c:264: pu_rx_on();
   0364 78r00              2575 	mov	r0,#_pu_rx_on
   0366 79s00              2576 	mov	r1,#(_pu_rx_on >> 8)
   0368 7As00              2577 	mov	r2,#(_pu_rx_on >> 16)
   036A 12s00r00           2578 	lcall	__sdcc_banked_call
                           2579 ;	../src/power_pcie.c:266: txhiz2loz();
   036D 78r00              2580 	mov	r0,#_txhiz2loz
   036F 79s00              2581 	mov	r1,#(_txhiz2loz >> 8)
   0371 7As00              2582 	mov	r2,#(_txhiz2loz >> 16)
   0373 12s00r00           2583 	lcall	__sdcc_banked_call
                           2584 ;	../src/power_pcie.c:268: reg_RXDCC_EN_DLLCLK_LANE = 1;
   0376 90 02 18           2585 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_134
   0379 E0                 2586 	movx	a,@dptr
   037A 44 01              2587 	orl	a,#0x01
   037C F0                 2588 	movx	@dptr,a
                           2589 ;	../src/power_pcie.c:269: reg_RXDCC_EN_DATACLK_LANE = 1;
   037D 90 02 1C           2590 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_135
   0380 E0                 2591 	movx	a,@dptr
   0381 44 01              2592 	orl	a,#0x01
   0383 F0                 2593 	movx	@dptr,a
                           2594 ;	../src/power_pcie.c:270: reg_RXDCC_EN_EOMCLK_LANE = 1;			
   0384 90 00 3C           2595 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_15
   0387 E0                 2596 	movx	a,@dptr
   0388 44 02              2597 	orl	a,#0x02
   038A F0                 2598 	movx	@dptr,a
                           2599 ;	../src/power_pcie.c:271: if(cmx_BYPASS_PU_RX_P1==0) load_cal_data_dll();
   038B 90 E6 04           2600 	mov	dptr,#_CONTROL_CONFIG0
   038E E0                 2601 	movx	a,@dptr
   038F 20 E3 09           2602 	jb	acc.3,00108$
   0392 78r00              2603 	mov	r0,#_load_cal_data_dll
   0394 79s00              2604 	mov	r1,#(_load_cal_data_dll >> 8)
   0396 7As00              2605 	mov	r2,#(_load_cal_data_dll >> 16)
   0398 12s00r00           2606 	lcall	__sdcc_banked_call
   039B                    2607 00108$:
                           2608 ;	../src/power_pcie.c:274: delay01(25); 	
   039B 90 00 19           2609 	mov	dptr,#0x0019
   039E 78r00              2610 	mov	r0,#_delay01
   03A0 79s00              2611 	mov	r1,#(_delay01 >> 8)
   03A2 7As00              2612 	mov	r2,#(_delay01 >> 16)
   03A4 12s00r00           2613 	lcall	__sdcc_banked_call
                           2614 ;	../src/power_pcie.c:276: DTL_DTX_DFE_clkoff_reset_0();
   03A7 78r00              2615 	mov	r0,#_DTL_DTX_DFE_clkoff_reset_0
   03A9 79s00              2616 	mov	r1,#(_DTL_DTX_DFE_clkoff_reset_0 >> 8)
   03AB 7As00              2617 	mov	r2,#(_DTL_DTX_DFE_clkoff_reset_0 >> 16)
   03AD 12s00r00           2618 	lcall	__sdcc_banked_call
                           2619 ;	../src/power_pcie.c:278: rx_init_done = 0;
   03B0 90s00r00           2620 	mov	dptr,#_rx_init_done
   03B3 E4                 2621 	clr	a
   03B4 F0                 2622 	movx	@dptr,a
                           2623 ;	../src/power_pcie.c:283: PHY_STATUS = ST_DTL;
   03B5 90 22 30           2624 	mov	dptr,#_MCU_STATUS0_LANE
   03B8 74 2C              2625 	mov	a,#0x2C
   03BA F0                 2626 	movx	@dptr,a
                           2627 ;	../src/power_pcie.c:285: reg_PIN_PLL_READY_RX_LANE = 1;
   03BB 90 21 02           2628 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   03BE E0                 2629 	movx	a,@dptr
   03BF 44 40              2630 	orl	a,#0x40
   03C1 F0                 2631 	movx	@dptr,a
   03C2                    2632 00109$:
   03C2 02s00r00           2633 	ljmp	__sdcc_banked_ret
                           2634 ;------------------------------------------------------------
                           2635 ;Allocation info for local variables in function 'Power_P2_P0'
                           2636 ;------------------------------------------------------------
                           2637 ;pll_already_on            Allocated to registers r2 
                           2638 ;------------------------------------------------------------
                           2639 ;	../src/power_pcie.c:289: void Power_P2_P0(void) BANKING_CTRL {
                           2640 ;	-----------------------------------------
                           2641 ;	 function Power_P2_P0
                           2642 ;	-----------------------------------------
   03C5                    2643 _Power_P2_P0:
                           2644 ;	../src/power_pcie.c:290: bool pll_already_on = 0;
   03C5 7A 00              2645 	mov	r2,#0x00
                           2646 ;	../src/power_pcie.c:291: reg_REFCLK_DIS_FM_PM = 0; 	
   03C7 90 A3 1B           2647 	mov	dptr,#(_PM_CMN_REG1 + 0x0003)
   03CA E0                 2648 	movx	a,@dptr
   03CB 54 7F              2649 	anl	a,#0x7f
   03CD F0                 2650 	movx	@dptr,a
                           2651 ;	../src/power_pcie.c:293: reg_ANA_PU_TX_LANE = 1;	
   03CE 90 20 03           2652 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   03D1 E0                 2653 	movx	a,@dptr
   03D2 44 40              2654 	orl	a,#0x40
   03D4 F0                 2655 	movx	@dptr,a
                           2656 ;	../src/power_pcie.c:294: pu_rx_on();
   03D5 C0 02              2657 	push	ar2
   03D7 78r00              2658 	mov	r0,#_pu_rx_on
   03D9 79s00              2659 	mov	r1,#(_pu_rx_on >> 8)
   03DB 7As00              2660 	mov	r2,#(_pu_rx_on >> 16)
   03DD 12s00r00           2661 	lcall	__sdcc_banked_call
   03E0 D0 02              2662 	pop	ar2
                           2663 ;	../src/power_pcie.c:296: if( SYNC_SATUS_PLL_OR_PLL_OFF==1 ) {
   03E2 90 A2 B5           2664 	mov	dptr,#(_MCU_INFO_32 + 0x0001)
   03E5 E0                 2665 	movx	a,@dptr
   03E6 FB                 2666 	mov	r3,a
   03E7 BB 01 02           2667 	cjne	r3,#0x01,00128$
   03EA 80 03              2668 	sjmp	00129$
   03EC                    2669 00128$:
   03EC 02s04r77           2670 	ljmp	00114$
   03EF                    2671 00129$:
                           2672 ;	../src/power_pcie.c:297: if(slave_phy_on==0 && mcuid== master_mcu) {
   03EF 90s00r00           2673 	mov	dptr,#_slave_phy_on
   03F2 E0                 2674 	movx	a,@dptr
   03F3 FB                 2675 	mov	r3,a
   03F4 70 36              2676 	jnz	00107$
   03F6 90 22 00           2677 	mov	dptr,#_MCU_CONTROL_LANE
   03F9 E0                 2678 	movx	a,@dptr
   03FA FB                 2679 	mov	r3,a
   03FB 90 E6 50           2680 	mov	dptr,#_MCU_CONFIG
   03FE E0                 2681 	movx	a,@dptr
   03FF FC                 2682 	mov	r4,a
   0400 EB                 2683 	mov	a,r3
   0401 B5 04 28           2684 	cjne	a,ar4,00107$
                           2685 ;	../src/power_pcie.c:300: if(lc_pll_used || ring_use_250m) //LCPLL always on
   0404 20*00 03           2686 	jb	_lc_pll_used,00101$
   0407 30*00 0D           2687 	jnb	_ring_use_250m,00102$
   040A                    2688 00101$:
                           2689 ;	../src/power_pcie.c:302: pll_fast_cal(); 
   040A C0 02              2690 	push	ar2
   040C 78r00              2691 	mov	r0,#_pll_fast_cal
   040E 79s00              2692 	mov	r1,#(_pll_fast_cal >> 8)
   0410 7As00              2693 	mov	r2,#(_pll_fast_cal >> 16)
   0412 12s00r00           2694 	lcall	__sdcc_banked_call
   0415 D0 02              2695 	pop	ar2
   0417                    2696 00102$:
                           2697 ;	../src/power_pcie.c:303: if(ring_pll_enabled) {
   0417 30*00 0D           2698 	jnb	_ring_pll_enabled,00105$
                           2699 ;	../src/power_pcie.c:304: ring_pll_fast_cal();
   041A C0 02              2700 	push	ar2
   041C 78r00              2701 	mov	r0,#_ring_pll_fast_cal
   041E 79s00              2702 	mov	r1,#(_ring_pll_fast_cal >> 8)
   0420 7As00              2703 	mov	r2,#(_ring_pll_fast_cal >> 16)
   0422 12s00r00           2704 	lcall	__sdcc_banked_call
   0425 D0 02              2705 	pop	ar2
   0427                    2706 00105$:
                           2707 ;	../src/power_pcie.c:307: SYNC_SATUS_PLL_OR_PLL_OFF = 0;
   0427 90 A2 B5           2708 	mov	dptr,#(_MCU_INFO_32 + 0x0001)
   042A E4                 2709 	clr	a
   042B F0                 2710 	movx	@dptr,a
   042C                    2711 00107$:
                           2712 ;	../src/power_pcie.c:311: if(slave_phy_on) {
   042C 90s00r00           2713 	mov	dptr,#_slave_phy_on
   042F E0                 2714 	movx	a,@dptr
   0430 FB                 2715 	mov	r3,a
   0431 60 35              2716 	jz	00112$
                           2717 ;	../src/power_pcie.c:312: check_master_phy_status(CHECK_MP_PLL_CLK_READY_ON);
   0433 75 82 03           2718 	mov	dpl,#0x03
   0436 C0 02              2719 	push	ar2
   0438 78r00              2720 	mov	r0,#_check_master_phy_status
   043A 79s00              2721 	mov	r1,#(_check_master_phy_status >> 8)
   043C 7As00              2722 	mov	r2,#(_check_master_phy_status >> 16)
   043E 12s00r00           2723 	lcall	__sdcc_banked_call
                           2724 ;	../src/power_pcie.c:313: pll_clk_ready_1();
   0441 78r00              2725 	mov	r0,#_pll_clk_ready_1
   0443 79s00              2726 	mov	r1,#(_pll_clk_ready_1 >> 8)
   0445 7As00              2727 	mov	r2,#(_pll_clk_ready_1 >> 16)
   0447 12s00r00           2728 	lcall	__sdcc_banked_call
   044A D0 02              2729 	pop	ar2
                           2730 ;	../src/power_pcie.c:314: if(ring_pll_enabled) {
   044C 30*00 19           2731 	jnb	_ring_pll_enabled,00112$
                           2732 ;	../src/power_pcie.c:315: check_master_phy_status(CHECK_MP_PLL_CLK_READY_RING_ON);
   044F 75 82 05           2733 	mov	dpl,#0x05
   0452 C0 02              2734 	push	ar2
   0454 78r00              2735 	mov	r0,#_check_master_phy_status
   0456 79s00              2736 	mov	r1,#(_check_master_phy_status >> 8)
   0458 7As00              2737 	mov	r2,#(_check_master_phy_status >> 16)
   045A 12s00r00           2738 	lcall	__sdcc_banked_call
                           2739 ;	../src/power_pcie.c:316: pll_clk_ready_ring_1();
   045D 78r00              2740 	mov	r0,#_pll_clk_ready_ring_1
   045F 79s00              2741 	mov	r1,#(_pll_clk_ready_ring_1 >> 8)
   0461 7As00              2742 	mov	r2,#(_pll_clk_ready_ring_1 >> 16)
   0463 12s00r00           2743 	lcall	__sdcc_banked_call
   0466 D0 02              2744 	pop	ar2
   0468                    2745 00112$:
                           2746 ;	../src/power_pcie.c:320: check_pll_clk_ready_pcie();
   0468 C0 02              2747 	push	ar2
   046A 78r00              2748 	mov	r0,#_check_pll_clk_ready_pcie
   046C 79s00              2749 	mov	r1,#(_check_pll_clk_ready_pcie >> 8)
   046E 7As00              2750 	mov	r2,#(_check_pll_clk_ready_pcie >> 16)
   0470 12s00r00           2751 	lcall	__sdcc_banked_call
   0473 D0 02              2752 	pop	ar2
   0475 80 02              2753 	sjmp	00115$
   0477                    2754 00114$:
                           2755 ;	../src/power_pcie.c:323: pll_already_on = 1;
   0477 7A 01              2756 	mov	r2,#0x01
   0479                    2757 00115$:
                           2758 ;	../src/power_pcie.c:326: txhiz2loz();
   0479 C0 02              2759 	push	ar2
   047B 78r00              2760 	mov	r0,#_txhiz2loz
   047D 79s00              2761 	mov	r1,#(_txhiz2loz >> 8)
   047F 7As00              2762 	mov	r2,#(_txhiz2loz >> 16)
   0481 12s00r00           2763 	lcall	__sdcc_banked_call
                           2764 ;	../src/power_pcie.c:328: reg_RXDCC_EN_DLLCLK_LANE = 1;
   0484 90 02 18           2765 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_134
   0487 E0                 2766 	movx	a,@dptr
   0488 44 01              2767 	orl	a,#0x01
   048A F0                 2768 	movx	@dptr,a
                           2769 ;	../src/power_pcie.c:329: reg_RXDCC_EN_DATACLK_LANE = 1;
   048B 90 02 1C           2770 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_135
   048E E0                 2771 	movx	a,@dptr
   048F 44 01              2772 	orl	a,#0x01
   0491 F0                 2773 	movx	@dptr,a
                           2774 ;	../src/power_pcie.c:330: reg_RXDCC_EN_EOMCLK_LANE = 1;			
   0492 90 00 3C           2775 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_15
   0495 E0                 2776 	movx	a,@dptr
   0496 44 02              2777 	orl	a,#0x02
   0498 F0                 2778 	movx	@dptr,a
                           2779 ;	../src/power_pcie.c:331: load_cal_data_dll();
   0499 78r00              2780 	mov	r0,#_load_cal_data_dll
   049B 79s00              2781 	mov	r1,#(_load_cal_data_dll >> 8)
   049D 7As00              2782 	mov	r2,#(_load_cal_data_dll >> 16)
   049F 12s00r00           2783 	lcall	__sdcc_banked_call
                           2784 ;	../src/power_pcie.c:333: txlane_align();
   04A2 78r00              2785 	mov	r0,#_txlane_align
   04A4 79s00              2786 	mov	r1,#(_txlane_align >> 8)
   04A6 7As00              2787 	mov	r2,#(_txlane_align >> 16)
   04A8 12s00r00           2788 	lcall	__sdcc_banked_call
                           2789 ;	../src/power_pcie.c:334: SYNC_SATUS_P2_2_P1_ON = 0;
   04AB 90 A2 B6           2790 	mov	dptr,#(_MCU_INFO_32 + 0x0002)
   04AE E4                 2791 	clr	a
   04AF F0                 2792 	movx	@dptr,a
                           2793 ;	../src/power_pcie.c:336: DTL_DTX_DFE_clkoff_reset_0();
   04B0 78r00              2794 	mov	r0,#_DTL_DTX_DFE_clkoff_reset_0
   04B2 79s00              2795 	mov	r1,#(_DTL_DTX_DFE_clkoff_reset_0 >> 8)
   04B4 7As00              2796 	mov	r2,#(_DTL_DTX_DFE_clkoff_reset_0 >> 16)
   04B6 12s00r00           2797 	lcall	__sdcc_banked_call
   04B9 D0 02              2798 	pop	ar2
                           2799 ;	../src/power_pcie.c:338: if(!pll_already_on)	
   04BB EA                 2800 	mov	a,r2
   04BC 70 0C              2801 	jnz	00117$
                           2802 ;	../src/power_pcie.c:339: delay01(100);
   04BE 90 00 64           2803 	mov	dptr,#0x0064
   04C1 78r00              2804 	mov	r0,#_delay01
   04C3 79s00              2805 	mov	r1,#(_delay01 >> 8)
   04C5 7As00              2806 	mov	r2,#(_delay01 >> 16)
   04C7 12s00r00           2807 	lcall	__sdcc_banked_call
   04CA                    2808 00117$:
                           2809 ;	../src/power_pcie.c:341: rx_init_done = 0;
   04CA 90s00r00           2810 	mov	dptr,#_rx_init_done
   04CD E4                 2811 	clr	a
   04CE F0                 2812 	movx	@dptr,a
                           2813 ;	../src/power_pcie.c:346: PHY_STATUS = ST_DTL;
   04CF 90 22 30           2814 	mov	dptr,#_MCU_STATUS0_LANE
   04D2 74 2C              2815 	mov	a,#0x2C
   04D4 F0                 2816 	movx	@dptr,a
                           2817 ;	../src/power_pcie.c:348: reg_PIN_PLL_READY_TX_LANE = 1;
   04D5 90 20 02           2818 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   04D8 E0                 2819 	movx	a,@dptr
   04D9 44 04              2820 	orl	a,#0x04
   04DB F0                 2821 	movx	@dptr,a
                           2822 ;	../src/power_pcie.c:349: reg_PIN_PLL_READY_RX_LANE = 1;
   04DC 90 21 02           2823 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   04DF E0                 2824 	movx	a,@dptr
   04E0 44 40              2825 	orl	a,#0x40
   04E2 F0                 2826 	movx	@dptr,a
   04E3 02s00r00           2827 	ljmp	__sdcc_banked_ret
                           2828 ;------------------------------------------------------------
                           2829 ;Allocation info for local variables in function 'Power_P1CLKREQ_P1'
                           2830 ;------------------------------------------------------------
                           2831 ;------------------------------------------------------------
                           2832 ;	../src/power_pcie.c:364: void Power_P1CLKREQ_P1(void) BANKING_CTRL {
                           2833 ;	-----------------------------------------
                           2834 ;	 function Power_P1CLKREQ_P1
                           2835 ;	-----------------------------------------
   04E6                    2836 _Power_P1CLKREQ_P1:
                           2837 ;	../src/power_pcie.c:366: TCON  = 0x04; //EX0=LVL 
   04E6 75 88 04           2838 	mov	_TCON,#0x04
                           2839 ;	../src/power_pcie.c:367: reg_INT_REFCLK_DIS_CHG_ISR_LANE = 0;
   04E9 90 20 1B           2840 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0003)
   04EC E0                 2841 	movx	a,@dptr
   04ED 54 FD              2842 	anl	a,#0xfd
   04EF F0                 2843 	movx	@dptr,a
                           2844 ;	../src/power_pcie.c:368: reg_INT0_REFCLK_DIS_EN_INT_EN_LANE = 1;
   04F0 90 22 42           2845 	mov	dptr,#(_MCU_INT0_CONTROL + 0x0002)
   04F3 E0                 2846 	movx	a,@dptr
   04F4 44 20              2847 	orl	a,#0x20
   04F6 F0                 2848 	movx	@dptr,a
                           2849 ;	../src/power_pcie.c:369: PCON = 0x8a; //mcu stop 
   04F7 75 87 8A           2850 	mov	_PCON,#0x8A
                           2851 ;	../src/power_pcie.c:372: TCON  = 0x05; //EX0=FALL
   04FA 75 88 05           2852 	mov	_TCON,#0x05
                           2853 ;	../src/power_pcie.c:373: reg_INT0_REFCLK_DIS_EN_INT_EN_LANE = 0;
   04FD 90 22 42           2854 	mov	dptr,#(_MCU_INT0_CONTROL + 0x0002)
   0500 E0                 2855 	movx	a,@dptr
   0501 54 DF              2856 	anl	a,#0xdf
   0503 F0                 2857 	movx	@dptr,a
                           2858 ;	../src/power_pcie.c:374: reg_REFCLK_DIS_FM_PM = 0; 
   0504 90 A3 1B           2859 	mov	dptr,#(_PM_CMN_REG1 + 0x0003)
   0507 E0                 2860 	movx	a,@dptr
   0508 54 7F              2861 	anl	a,#0x7f
   050A F0                 2862 	movx	@dptr,a
                           2863 ;	../src/power_pcie.c:375: reg_INT_REFCLK_DIS_CHG_ISR_LANE = 0;
   050B 90 20 1B           2864 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0003)
   050E E0                 2865 	movx	a,@dptr
   050F 54 FD              2866 	anl	a,#0xfd
   0511 F0                 2867 	movx	@dptr,a
                           2868 ;	../src/power_pcie.c:378: if(reg_PIN_TX_IDLE_HIZ_RD_LANE) {
   0512 90 20 07           2869 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0515 E0                 2870 	movx	a,@dptr
   0516 30 E3 17           2871 	jnb	acc.3,00102$
                           2872 ;	../src/power_pcie.c:379: reg_ANA_TX_LESS_CUR_IDLE_LANE = 1;
   0519 90 20 07           2873 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   051C E0                 2874 	movx	a,@dptr
   051D 44 40              2875 	orl	a,#0x40
   051F F0                 2876 	movx	@dptr,a
                           2877 ;	../src/power_pcie.c:380: short_delay(); //delay01(1);
   0520 78r00              2878 	mov	r0,#_short_delay
   0522 79s00              2879 	mov	r1,#(_short_delay >> 8)
   0524 7As00              2880 	mov	r2,#(_short_delay >> 16)
   0526 12s00r00           2881 	lcall	__sdcc_banked_call
                           2882 ;	../src/power_pcie.c:381: reg_ANA_TX_IDLE_HIZ_EN_LANE = 1;
   0529 90 20 07           2883 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   052C E0                 2884 	movx	a,@dptr
   052D 44 80              2885 	orl	a,#0x80
   052F F0                 2886 	movx	@dptr,a
   0530                    2887 00102$:
                           2888 ;	../src/power_pcie.c:384: if( reg_PU_IVREF_FELL == 1 ) {
   0530 90 A3 18           2889 	mov	dptr,#_PM_CMN_REG1
   0533 E0                 2890 	movx	a,@dptr
   0534 03                 2891 	rr	a
   0535 54 01              2892 	anl	a,#0x01
   0537 FA                 2893 	mov	r2,a
   0538 BA 01 02           2894 	cjne	r2,#0x01,00152$
   053B 80 03              2895 	sjmp	00153$
   053D                    2896 00152$:
   053D 02s05rBF           2897 	ljmp	00116$
   0540                    2898 00153$:
                           2899 ;	../src/power_pcie.c:385: if( reg_PU_BG_FELL == 1)
   0540 90 A3 18           2900 	mov	dptr,#_PM_CMN_REG1
   0543 E0                 2901 	movx	a,@dptr
   0544 C4                 2902 	swap	a
   0545 23                 2903 	rl	a
   0546 54 01              2904 	anl	a,#0x01
   0548 FA                 2905 	mov	r2,a
   0549 BA 01 08           2906 	cjne	r2,#0x01,00104$
                           2907 ;	../src/power_pcie.c:386: PHY_STATUS = ST_P1OFF_WK;
   054C 90 22 30           2908 	mov	dptr,#_MCU_STATUS0_LANE
   054F 74 24              2909 	mov	a,#0x24
   0551 F0                 2910 	movx	@dptr,a
   0552 80 06              2911 	sjmp	00105$
   0554                    2912 00104$:
                           2913 ;	../src/power_pcie.c:387: else PHY_STATUS = ST_P1SNOOZE_WK;
   0554 90 22 30           2914 	mov	dptr,#_MCU_STATUS0_LANE
   0557 74 25              2915 	mov	a,#0x25
   0559 F0                 2916 	movx	@dptr,a
   055A                    2917 00105$:
                           2918 ;	../src/power_pcie.c:389: reg_ANA_PU_SQ_LANE = 0;
   055A 90 21 03           2919 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0003)
   055D E0                 2920 	movx	a,@dptr
   055E 54 DF              2921 	anl	a,#0xdf
   0560 F0                 2922 	movx	@dptr,a
                           2923 ;	../src/power_pcie.c:390: PM_CMN_REG2.BT.B2 = 0;
   0561 90 A3 4E           2924 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0564 E4                 2925 	clr	a
   0565 F0                 2926 	movx	@dptr,a
                           2927 ;	../src/power_pcie.c:392: if(mcuid== master_mcu) {
   0566 90 22 00           2928 	mov	dptr,#_MCU_CONTROL_LANE
   0569 E0                 2929 	movx	a,@dptr
   056A FA                 2930 	mov	r2,a
   056B 90 E6 50           2931 	mov	dptr,#_MCU_CONFIG
   056E E0                 2932 	movx	a,@dptr
   056F FB                 2933 	mov	r3,a
   0570 EA                 2934 	mov	a,r2
   0571 B5 03 23           2935 	cjne	a,ar3,00109$
                           2936 ;	../src/power_pcie.c:395: if( reg_PU_BG_FELL == 1) //will be cleared by hardware when ANA_PU_IVREF=1
   0574 90 A3 18           2937 	mov	dptr,#_PM_CMN_REG1
   0577 E0                 2938 	movx	a,@dptr
   0578 C4                 2939 	swap	a
   0579 23                 2940 	rl	a
   057A 54 01              2941 	anl	a,#0x01
   057C FA                 2942 	mov	r2,a
   057D BA 01 0C           2943 	cjne	r2,#0x01,00107$
                           2944 ;	../src/power_pcie.c:396: delay01(200);
   0580 90 00 C8           2945 	mov	dptr,#0x00C8
   0583 78r00              2946 	mov	r0,#_delay01
   0585 79s00              2947 	mov	r1,#(_delay01 >> 8)
   0587 7As00              2948 	mov	r2,#(_delay01 >> 16)
   0589 12s00r00           2949 	lcall	__sdcc_banked_call
   058C                    2950 00107$:
                           2951 ;	../src/power_pcie.c:398: pu_ivref_on();
   058C 78r00              2952 	mov	r0,#_pu_ivref_on
   058E 79s00              2953 	mov	r1,#(_pu_ivref_on >> 8)
   0590 7As00              2954 	mov	r2,#(_pu_ivref_on >> 16)
   0592 12s00r00           2955 	lcall	__sdcc_banked_call
   0595 80 09              2956 	sjmp	00110$
   0597                    2957 00109$:
                           2958 ;	../src/power_pcie.c:403: check_pu_ivref();
   0597 78r00              2959 	mov	r0,#_check_pu_ivref
   0599 79s00              2960 	mov	r1,#(_check_pu_ivref >> 8)
   059B 7As00              2961 	mov	r2,#(_check_pu_ivref >> 16)
   059D 12s00r00           2962 	lcall	__sdcc_banked_call
   05A0                    2963 00110$:
                           2964 ;	../src/power_pcie.c:405: delay01(50);
   05A0 90 00 32           2965 	mov	dptr,#0x0032
   05A3 78r00              2966 	mov	r0,#_delay01
   05A5 79s00              2967 	mov	r1,#(_delay01 >> 8)
   05A7 7As00              2968 	mov	r2,#(_delay01 >> 16)
   05A9 12s00r00           2969 	lcall	__sdcc_banked_call
                           2970 ;	../src/power_pcie.c:406: reg_ANA_PU_SQ_LANE=1;
   05AC 90 21 03           2971 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0003)
   05AF E0                 2972 	movx	a,@dptr
   05B0 44 20              2973 	orl	a,#0x20
   05B2 F0                 2974 	movx	@dptr,a
                           2975 ;	../src/power_pcie.c:407: delay01(150);
   05B3 90 00 96           2976 	mov	dptr,#0x0096
   05B6 78r00              2977 	mov	r0,#_delay01
   05B8 79s00              2978 	mov	r1,#(_delay01 >> 8)
   05BA 7As00              2979 	mov	r2,#(_delay01 >> 16)
   05BC 12s00r00           2980 	lcall	__sdcc_banked_call
                           2981 ;	../src/power_pcie.c:410: while(reg_PIN_PU_PLL_RD_LANE==0 || reg_PIN_PU_TX_RD_LANE==0){
   05BF                    2982 00116$:
   05BF 90 20 07           2983 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   05C2 E0                 2984 	movx	a,@dptr
   05C3 30 E5 07           2985 	jnb	acc.5,00117$
   05C6 90 20 07           2986 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   05C9 E0                 2987 	movx	a,@dptr
   05CA 20 E4 10           2988 	jb	acc.4,00118$
   05CD                    2989 00117$:
                           2990 ;	../src/power_pcie.c:411: if(reg_PIN_REFCLK_DIS_RD) {
   05CD 90 A3 1A           2991 	mov	dptr,#(_PM_CMN_REG1 + 0x0002)
   05D0 E0                 2992 	movx	a,@dptr
   05D1 30 E0 EB           2993 	jnb	acc.0,00116$
                           2994 ;	../src/power_pcie.c:412: PHY_STATUS = ST_P1CLKREQ_WK;
   05D4 90 22 30           2995 	mov	dptr,#_MCU_STATUS0_LANE
   05D7 74 26              2996 	mov	a,#0x26
   05D9 F0                 2997 	movx	@dptr,a
                           2998 ;	../src/power_pcie.c:413: return;
   05DA 02s06rBD           2999 	ljmp	00134$
   05DD                    3000 00118$:
                           3001 ;	../src/power_pcie.c:417: reg_ANA_PU_TX_LANE = 1;
   05DD 90 20 03           3002 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   05E0 E0                 3003 	movx	a,@dptr
   05E1 44 40              3004 	orl	a,#0x40
   05E3 F0                 3005 	movx	@dptr,a
                           3006 ;	../src/power_pcie.c:419: pu_pll_on();
   05E4 78r00              3007 	mov	r0,#_pu_pll_on
   05E6 79s00              3008 	mov	r1,#(_pu_pll_on >> 8)
   05E8 7As00              3009 	mov	r2,#(_pu_pll_on >> 16)
   05EA 12s00r00           3010 	lcall	__sdcc_banked_call
                           3011 ;	../src/power_pcie.c:421: delay01(50);
   05ED 90 00 32           3012 	mov	dptr,#0x0032
   05F0 78r00              3013 	mov	r0,#_delay01
   05F2 79s00              3014 	mov	r1,#(_delay01 >> 8)
   05F4 7As00              3015 	mov	r2,#(_delay01 >> 16)
   05F6 12s00r00           3016 	lcall	__sdcc_banked_call
                           3017 ;	../src/power_pcie.c:422: txlane_align();
   05F9 78r00              3018 	mov	r0,#_txlane_align
   05FB 79s00              3019 	mov	r1,#(_txlane_align >> 8)
   05FD 7As00              3020 	mov	r2,#(_txlane_align >> 16)
   05FF 12s00r00           3021 	lcall	__sdcc_banked_call
                           3022 ;	../src/power_pcie.c:424: if(mcuid==master_mcu) {
   0602 90 22 00           3023 	mov	dptr,#_MCU_CONTROL_LANE
   0605 E0                 3024 	movx	a,@dptr
   0606 FA                 3025 	mov	r2,a
   0607 90 E6 50           3026 	mov	dptr,#_MCU_CONFIG
   060A E0                 3027 	movx	a,@dptr
   060B FB                 3028 	mov	r3,a
   060C EA                 3029 	mov	a,r2
   060D B5 03 2A           3030 	cjne	a,ar3,00119$
                           3031 ;	../src/power_pcie.c:425: reg_DTX_CLK_OFF = 0;	reg_DTX_CLK_OFF_RING = 0;	
   0610 90 A3 19           3032 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   0613 E0                 3033 	movx	a,@dptr
   0614 54 FE              3034 	anl	a,#0xfe
   0616 F0                 3035 	movx	@dptr,a
   0617 90 A3 18           3036 	mov	dptr,#_PM_CMN_REG1
   061A E0                 3037 	movx	a,@dptr
   061B 54 FE              3038 	anl	a,#0xfe
   061D F0                 3039 	movx	@dptr,a
                           3040 ;	../src/power_pcie.c:426: delay01(10);
   061E 90 00 0A           3041 	mov	dptr,#0x000A
   0621 78r00              3042 	mov	r0,#_delay01
   0623 79s00              3043 	mov	r1,#(_delay01 >> 8)
   0625 7As00              3044 	mov	r2,#(_delay01 >> 16)
   0627 12s00r00           3045 	lcall	__sdcc_banked_call
                           3046 ;	../src/power_pcie.c:427: reg_RESET_DTX	= 0;	reg_RESET_DTX_RING = 0;
   062A 90 A0 0A           3047 	mov	dptr,#(_DTX_REG0 + 0x0002)
   062D E0                 3048 	movx	a,@dptr
   062E 54 7F              3049 	anl	a,#0x7f
   0630 F0                 3050 	movx	@dptr,a
   0631 90 A0 11           3051 	mov	dptr,#(_DTX_REG2 + 0x0001)
   0634 E0                 3052 	movx	a,@dptr
   0635 54 FB              3053 	anl	a,#0xfb
   0637 F0                 3054 	movx	@dptr,a
                           3055 ;	../src/power_pcie.c:429: else while(reg_RESET_DTX_RING);
   0638 80 07              3056 	sjmp	00124$
   063A                    3057 00119$:
   063A 90 A0 11           3058 	mov	dptr,#(_DTX_REG2 + 0x0001)
   063D E0                 3059 	movx	a,@dptr
   063E 20 E2 F9           3060 	jb	acc.2,00119$
   0641                    3061 00124$:
                           3062 ;	../src/power_pcie.c:431: if( PHY_STATUS == ST_P1OFF_WK ) { 
   0641 90 22 30           3063 	mov	dptr,#_MCU_STATUS0_LANE
   0644 E0                 3064 	movx	a,@dptr
   0645 FA                 3065 	mov	r2,a
   0646 BA 24 36           3066 	cjne	r2,#0x24,00126$
                           3067 ;	../src/power_pcie.c:432: reg_ANA_TX_IDLE_HIZ_EN_LANE = 0; //LOZ idle time
   0649 90 20 07           3068 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   064C E0                 3069 	movx	a,@dptr
   064D 54 7F              3070 	anl	a,#0x7f
   064F F0                 3071 	movx	@dptr,a
                           3072 ;	../src/power_pcie.c:433: reg_ANA_TX_LESS_CUR_IDLE_LANE = 0;
   0650 90 20 07           3073 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0653 E0                 3074 	movx	a,@dptr
   0654 54 BF              3075 	anl	a,#0xbf
   0656 F0                 3076 	movx	@dptr,a
                           3077 ;	../src/power_pcie.c:434: reg_ANA_TX_LESS_CUR_IDLE_LANE = 0;
   0657 90 20 07           3078 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   065A E0                 3079 	movx	a,@dptr
   065B 54 BF              3080 	anl	a,#0xbf
   065D F0                 3081 	movx	@dptr,a
                           3082 ;	../src/power_pcie.c:435: reg_ANA_TX_LESS_CUR_IDLE_LANE = 0;
   065E 90 20 07           3083 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0661 E0                 3084 	movx	a,@dptr
   0662 54 BF              3085 	anl	a,#0xbf
   0664 F0                 3086 	movx	@dptr,a
                           3087 ;	../src/power_pcie.c:436: delay01(400); //ana_tx_idle_hiz_en low must be larger than 40 us
   0665 90 01 90           3088 	mov	dptr,#0x0190
   0668 78r00              3089 	mov	r0,#_delay01
   066A 79s00              3090 	mov	r1,#(_delay01 >> 8)
   066C 7As00              3091 	mov	r2,#(_delay01 >> 16)
   066E 12s00r00           3092 	lcall	__sdcc_banked_call
                           3093 ;	../src/power_pcie.c:437: reg_ANA_TX_LESS_CUR_IDLE_LANE = 1;
   0671 90 20 07           3094 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0674 E0                 3095 	movx	a,@dptr
   0675 44 40              3096 	orl	a,#0x40
   0677 F0                 3097 	movx	@dptr,a
                           3098 ;	../src/power_pcie.c:438: reg_ANA_TX_IDLE_HIZ_EN_LANE = 1;
   0678 90 20 07           3099 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   067B E0                 3100 	movx	a,@dptr
   067C 44 80              3101 	orl	a,#0x80
   067E F0                 3102 	movx	@dptr,a
   067F                    3103 00126$:
                           3104 ;	../src/power_pcie.c:442: if (reg_INIT_TXFOFFS_9_0_b0 || reg_INIT_TXFOFFS_9_0_b1 || reg_INIT_TXFOFFS_RING_9_0_b0 || reg_INIT_TXFOFFS_RING_9_0_b1) {
   067F 90 A0 08           3105 	mov	dptr,#_DTX_REG0
   0682 E0                 3106 	movx	a,@dptr
   0683 70 16              3107 	jnz	00127$
   0685 90 A0 09           3108 	mov	dptr,#(_DTX_REG0 + 0x0001)
   0688 E0                 3109 	movx	a,@dptr
   0689 54 03              3110 	anl	a,#0x03
   068B 70 0E              3111 	jnz	00127$
   068D 90 A0 10           3112 	mov	dptr,#_DTX_REG2
   0690 E0                 3113 	movx	a,@dptr
   0691 70 08              3114 	jnz	00127$
   0693 90 A0 11           3115 	mov	dptr,#(_DTX_REG2 + 0x0001)
   0696 E0                 3116 	movx	a,@dptr
   0697 54 03              3117 	anl	a,#0x03
   0699 60 0C              3118 	jz	00128$
   069B                    3119 00127$:
                           3120 ;	../src/power_pcie.c:443: delay01(50);
   069B 90 00 32           3121 	mov	dptr,#0x0032
   069E 78r00              3122 	mov	r0,#_delay01
   06A0 79s00              3123 	mov	r1,#(_delay01 >> 8)
   06A2 7As00              3124 	mov	r2,#(_delay01 >> 16)
   06A4 12s00r00           3125 	lcall	__sdcc_banked_call
   06A7                    3126 00128$:
                           3127 ;	../src/power_pcie.c:446: if( reg_PIN_PU_RX_RD_LANE == 0 )
   06A7 90 21 02           3128 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   06AA E0                 3129 	movx	a,@dptr
   06AB 20 E2 02           3130 	jb	acc.2,00133$
                           3131 ;	../src/power_pcie.c:447: do_wake = 0;
   06AE C2*00              3132 	clr	_do_wake
   06B0                    3133 00133$:
                           3134 ;	../src/power_pcie.c:448: PHY_STATUS = ST_P1_WK;
   06B0 90 22 30           3135 	mov	dptr,#_MCU_STATUS0_LANE
   06B3 74 23              3136 	mov	a,#0x23
   06B5 F0                 3137 	movx	@dptr,a
                           3138 ;	../src/power_pcie.c:450: reg_PIN_PLL_READY_TX_LANE = 1;
   06B6 90 20 02           3139 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   06B9 E0                 3140 	movx	a,@dptr
   06BA 44 04              3141 	orl	a,#0x04
   06BC F0                 3142 	movx	@dptr,a
   06BD                    3143 00134$:
   06BD 02s00r00           3144 	ljmp	__sdcc_banked_ret
                           3145 ;------------------------------------------------------------
                           3146 ;Allocation info for local variables in function 'P0Off_TXDETRX'
                           3147 ;------------------------------------------------------------
                           3148 ;------------------------------------------------------------
                           3149 ;	../src/power_pcie.c:464: void P0Off_TXDETRX(void) BANKING_CTRL {
                           3150 ;	-----------------------------------------
                           3151 ;	 function P0Off_TXDETRX
                           3152 ;	-----------------------------------------
   06C0                    3153 _P0Off_TXDETRX:
                           3154 ;	../src/power_pcie.c:465: PHY_STATUS = ST_POFF_TXDETRX;
   06C0 90 22 30           3155 	mov	dptr,#_MCU_STATUS0_LANE
   06C3 74 2E              3156 	mov	a,#0x2E
   06C5 F0                 3157 	movx	@dptr,a
                           3158 ;	../src/power_pcie.c:467: delay01(200);
   06C6 90 00 C8           3159 	mov	dptr,#0x00C8
   06C9 78r00              3160 	mov	r0,#_delay01
   06CB 79s00              3161 	mov	r1,#(_delay01 >> 8)
   06CD 7As00              3162 	mov	r2,#(_delay01 >> 16)
   06CF 12s00r00           3163 	lcall	__sdcc_banked_call
                           3164 ;	../src/power_pcie.c:469: if( cmx_TX_LANE_ALIGN_OFF==0 ) {
   06D2 90 E6 04           3165 	mov	dptr,#_CONTROL_CONFIG0
   06D5 E0                 3166 	movx	a,@dptr
   06D6 20 E4 24           3167 	jb	acc.4,00107$
                           3168 ;	../src/power_pcie.c:470: if(mcuid== master_mcu) {	
   06D9 90 22 00           3169 	mov	dptr,#_MCU_CONTROL_LANE
   06DC E0                 3170 	movx	a,@dptr
   06DD FA                 3171 	mov	r2,a
   06DE 90 E6 50           3172 	mov	dptr,#_MCU_CONFIG
   06E1 E0                 3173 	movx	a,@dptr
   06E2 FB                 3174 	mov	r3,a
   06E3 EA                 3175 	mov	a,r2
   06E4 B5 03 0B           3176 	cjne	a,ar3,00102$
                           3177 ;	../src/power_pcie.c:471: pu_ivref_on();	
   06E7 78r00              3178 	mov	r0,#_pu_ivref_on
   06E9 79s00              3179 	mov	r1,#(_pu_ivref_on >> 8)
   06EB 7As00              3180 	mov	r2,#(_pu_ivref_on >> 16)
   06ED 12s00r00           3181 	lcall	__sdcc_banked_call
   06F0 80 6A              3182 	sjmp	00108$
   06F2                    3183 00102$:
                           3184 ;	../src/power_pcie.c:473: check_pu_ivref();
   06F2 78r00              3185 	mov	r0,#_check_pu_ivref
   06F4 79s00              3186 	mov	r1,#(_check_pu_ivref >> 8)
   06F6 7As00              3187 	mov	r2,#(_check_pu_ivref >> 16)
   06F8 12s00r00           3188 	lcall	__sdcc_banked_call
   06FB 80 5F              3189 	sjmp	00108$
   06FD                    3190 00107$:
                           3191 ;	../src/power_pcie.c:477: if(reg_ANA_PU_IVREF_DLY3==0) {			
   06FD 90 A3 4E           3192 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0700 E0                 3193 	movx	a,@dptr
   0701 20 E0 58           3194 	jb	acc.0,00108$
                           3195 ;	../src/power_pcie.c:479: PM_CMN_REG2.BT.B2 = PM_CMN_REG2.BT.B2 | 0x08;
   0704 90 A3 4E           3196 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0707 E0                 3197 	movx	a,@dptr
   0708 FA                 3198 	mov	r2,a
   0709 43 02 08           3199 	orl	ar2,#0x08
   070C 90 A3 4E           3200 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   070F EA                 3201 	mov	a,r2
   0710 F0                 3202 	movx	@dptr,a
                           3203 ;	../src/power_pcie.c:480: delay01(10); //1us
   0711 90 00 0A           3204 	mov	dptr,#0x000A
   0714 78r00              3205 	mov	r0,#_delay01
   0716 79s00              3206 	mov	r1,#(_delay01 >> 8)
   0718 7As00              3207 	mov	r2,#(_delay01 >> 16)
   071A 12s00r00           3208 	lcall	__sdcc_banked_call
                           3209 ;	../src/power_pcie.c:481: PM_CMN_REG2.BT.B2 = PM_CMN_REG2.BT.B2 | 0x0c;
   071D 90 A3 4E           3210 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0720 E0                 3211 	movx	a,@dptr
   0721 FA                 3212 	mov	r2,a
   0722 43 02 0C           3213 	orl	ar2,#0x0C
   0725 90 A3 4E           3214 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0728 EA                 3215 	mov	a,r2
   0729 F0                 3216 	movx	@dptr,a
                           3217 ;	../src/power_pcie.c:482: delay01(10); //1us
   072A 90 00 0A           3218 	mov	dptr,#0x000A
   072D 78r00              3219 	mov	r0,#_delay01
   072F 79s00              3220 	mov	r1,#(_delay01 >> 8)
   0731 7As00              3221 	mov	r2,#(_delay01 >> 16)
   0733 12s00r00           3222 	lcall	__sdcc_banked_call
                           3223 ;	../src/power_pcie.c:483: PM_CMN_REG2.BT.B2 = PM_CMN_REG2.BT.B2 | 0x0e;
   0736 90 A3 4E           3224 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0739 E0                 3225 	movx	a,@dptr
   073A FA                 3226 	mov	r2,a
   073B 43 02 0E           3227 	orl	ar2,#0x0E
   073E 90 A3 4E           3228 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0741 EA                 3229 	mov	a,r2
   0742 F0                 3230 	movx	@dptr,a
                           3231 ;	../src/power_pcie.c:484: delay01(10); //1us
   0743 90 00 0A           3232 	mov	dptr,#0x000A
   0746 78r00              3233 	mov	r0,#_delay01
   0748 79s00              3234 	mov	r1,#(_delay01 >> 8)
   074A 7As00              3235 	mov	r2,#(_delay01 >> 16)
   074C 12s00r00           3236 	lcall	__sdcc_banked_call
                           3237 ;	../src/power_pcie.c:485: PM_CMN_REG2.BT.B2 = PM_CMN_REG2.BT.B2 | 0x0f;				
   074F 90 A3 4E           3238 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   0752 E0                 3239 	movx	a,@dptr
   0753 FA                 3240 	mov	r2,a
   0754 43 02 0F           3241 	orl	ar2,#0x0F
   0757 90 A3 4E           3242 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   075A EA                 3243 	mov	a,r2
   075B F0                 3244 	movx	@dptr,a
   075C                    3245 00108$:
                           3246 ;	../src/power_pcie.c:489: delay01(200);
   075C 90 00 C8           3247 	mov	dptr,#0x00C8
   075F 78r00              3248 	mov	r0,#_delay01
   0761 79s00              3249 	mov	r1,#(_delay01 >> 8)
   0763 7As00              3250 	mov	r2,#(_delay01 >> 16)
   0765 12s00r00           3251 	lcall	__sdcc_banked_call
                           3252 ;	../src/power_pcie.c:490: reg_ANA_PU_TX_LANE = 1;
   0768 90 20 03           3253 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   076B E0                 3254 	movx	a,@dptr
   076C 44 40              3255 	orl	a,#0x40
   076E F0                 3256 	movx	@dptr,a
                           3257 ;	../src/power_pcie.c:491: short_delay();//delay01(1);
   076F 78r00              3258 	mov	r0,#_short_delay
   0771 79s00              3259 	mov	r1,#(_short_delay >> 8)
   0773 7As00              3260 	mov	r2,#(_short_delay >> 16)
   0775 12s00r00           3261 	lcall	__sdcc_banked_call
                           3262 ;	../src/power_pcie.c:492: reg_ANA_TXDETRX_EN_LANE = 1;
   0778 90 20 02           3263 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   077B E0                 3264 	movx	a,@dptr
   077C 44 01              3265 	orl	a,#0x01
   077E F0                 3266 	movx	@dptr,a
                           3267 ;	../src/power_pcie.c:493: delay01(200);
   077F 90 00 C8           3268 	mov	dptr,#0x00C8
   0782 78r00              3269 	mov	r0,#_delay01
   0784 79s00              3270 	mov	r1,#(_delay01 >> 8)
   0786 7As00              3271 	mov	r2,#(_delay01 >> 16)
   0788 12s00r00           3272 	lcall	__sdcc_banked_call
                           3273 ;	../src/power_pcie.c:495: txdetrx();
   078B 78r00              3274 	mov	r0,#_txdetrx
   078D 79s00              3275 	mov	r1,#(_txdetrx >> 8)
   078F 7As00              3276 	mov	r2,#(_txdetrx >> 16)
   0791 12s00r00           3277 	lcall	__sdcc_banked_call
                           3278 ;	../src/power_pcie.c:513: reg_PIN_TXDETRX_VALID_LANE = 1;
   0794 90 20 01           3279 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0797 E0                 3280 	movx	a,@dptr
   0798 44 40              3281 	orl	a,#0x40
   079A F0                 3282 	movx	@dptr,a
                           3283 ;	../src/power_pcie.c:515: reg_ANA_PU_TX_LANE = 0;
   079B 90 20 03           3284 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   079E E0                 3285 	movx	a,@dptr
   079F 54 BF              3286 	anl	a,#0xbf
   07A1 F0                 3287 	movx	@dptr,a
                           3288 ;	../src/power_pcie.c:517: if(reg_PIN_PU_IVREF_RD==0) {
   07A2 90 A3 1B           3289 	mov	dptr,#(_PM_CMN_REG1 + 0x0003)
   07A5 E0                 3290 	movx	a,@dptr
   07A6 20 E5 05           3291 	jb	acc.5,00111$
                           3292 ;	../src/power_pcie.c:518: PM_CMN_REG2.BT.B2 = 0; //pu_ivref**=0
   07A9 90 A3 4E           3293 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   07AC E4                 3294 	clr	a
   07AD F0                 3295 	movx	@dptr,a
                           3296 ;	../src/power_pcie.c:521: while(reg_PIN_TXDETRX_EN_RD_LANE);
   07AE                    3297 00111$:
   07AE 90 20 07           3298 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   07B1 E0                 3299 	movx	a,@dptr
   07B2 20 E0 F9           3300 	jb	acc.0,00111$
                           3301 ;	../src/power_pcie.c:523: reg_PIN_TXDETRX_VALID_LANE = 0;
   07B5 90 20 01           3302 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   07B8 E0                 3303 	movx	a,@dptr
   07B9 54 BF              3304 	anl	a,#0xbf
   07BB F0                 3305 	movx	@dptr,a
   07BC 02s00r00           3306 	ljmp	__sdcc_banked_ret
                           3307 ;------------------------------------------------------------
                           3308 ;Allocation info for local variables in function 'Power_P0_TXDETRX'
                           3309 ;------------------------------------------------------------
                           3310 ;------------------------------------------------------------
                           3311 ;	../src/power_pcie.c:538: void Power_P0_TXDETRX(void) BANKING_CTRL {
                           3312 ;	-----------------------------------------
                           3313 ;	 function Power_P0_TXDETRX
                           3314 ;	-----------------------------------------
   07BF                    3315 _Power_P0_TXDETRX:
                           3316 ;	../src/power_pcie.c:540: reg_ANA_TXDETRX_EN_LANE = 1;
   07BF 90 20 02           3317 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   07C2 E0                 3318 	movx	a,@dptr
   07C3 44 01              3319 	orl	a,#0x01
   07C5 F0                 3320 	movx	@dptr,a
                           3321 ;	../src/power_pcie.c:542: txdetrx();
   07C6 78r00              3322 	mov	r0,#_txdetrx
   07C8 79s00              3323 	mov	r1,#(_txdetrx >> 8)
   07CA 7As00              3324 	mov	r2,#(_txdetrx >> 16)
   07CC 12s00r00           3325 	lcall	__sdcc_banked_call
                           3326 ;	../src/power_pcie.c:560: delay01(200);
   07CF 90 00 C8           3327 	mov	dptr,#0x00C8
   07D2 78r00              3328 	mov	r0,#_delay01
   07D4 79s00              3329 	mov	r1,#(_delay01 >> 8)
   07D6 7As00              3330 	mov	r2,#(_delay01 >> 16)
   07D8 12s00r00           3331 	lcall	__sdcc_banked_call
                           3332 ;	../src/power_pcie.c:561: reg_PIN_TXDETRX_VALID_LANE = 1;	
   07DB 90 20 01           3333 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   07DE E0                 3334 	movx	a,@dptr
   07DF 44 40              3335 	orl	a,#0x40
   07E1 F0                 3336 	movx	@dptr,a
                           3337 ;	../src/power_pcie.c:563: while(reg_PIN_TXDETRX_EN_RD_LANE);
   07E2                    3338 00101$:
   07E2 90 20 07           3339 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   07E5 E0                 3340 	movx	a,@dptr
   07E6 20 E0 F9           3341 	jb	acc.0,00101$
                           3342 ;	../src/power_pcie.c:565: reg_PIN_TXDETRX_VALID_LANE = 0;
   07E9 90 20 01           3343 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   07EC E0                 3344 	movx	a,@dptr
   07ED 54 BF              3345 	anl	a,#0xbf
   07EF F0                 3346 	movx	@dptr,a
                           3347 ;	../src/power_pcie.c:567: rx_init_done = 0;
   07F0 90s00r00           3348 	mov	dptr,#_rx_init_done
   07F3 E4                 3349 	clr	a
   07F4 F0                 3350 	movx	@dptr,a
                           3351 ;	../src/power_pcie.c:572: PHY_STATUS = ST_DTL;
   07F5 90 22 30           3352 	mov	dptr,#_MCU_STATUS0_LANE
   07F8 74 2C              3353 	mov	a,#0x2C
   07FA F0                 3354 	movx	@dptr,a
   07FB 02s00r00           3355 	ljmp	__sdcc_banked_ret
                           3356 ;------------------------------------------------------------
                           3357 ;Allocation info for local variables in function 'Power_P1_TXDETRX'
                           3358 ;------------------------------------------------------------
                           3359 ;------------------------------------------------------------
                           3360 ;	../src/power_pcie.c:587: void Power_P1_TXDETRX(void) BANKING_CTRL {
                           3361 ;	-----------------------------------------
                           3362 ;	 function Power_P1_TXDETRX
                           3363 ;	-----------------------------------------
   07FE                    3364 _Power_P1_TXDETRX:
                           3365 ;	../src/power_pcie.c:589: reg_INT_TXDETRX_EN_CHG_ISR_LANE = 0;
   07FE 90 20 1A           3366 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0002)
   0801 E0                 3367 	movx	a,@dptr
   0802 54 7F              3368 	anl	a,#0x7f
   0804 F0                 3369 	movx	@dptr,a
                           3370 ;	../src/power_pcie.c:592: if(cmx_VIRTUAL_TDR_SIM_EN) {
   0805 90 E6 07           3371 	mov	dptr,#(_CONTROL_CONFIG0 + 0x0003)
   0808 E0                 3372 	movx	a,@dptr
   0809 30 E7 17           3373 	jnb	acc.7,00105$
                           3374 ;	../src/power_pcie.c:593: if(reg_ANA_DPHY_SQ_DETECTED_LANE)  //lane reduce test by sq_detect
   080C 90 40 08           3375 	mov	dptr,#_LANE_CFG_STATUS2_LANE
   080F E0                 3376 	movx	a,@dptr
   0810 30 E1 09           3377 	jnb	acc.1,00102$
                           3378 ;	../src/power_pcie.c:594: reg_TRX_VIRTUAL_CTRL_LANE = 1; //3fc[0]
   0813 90 03 FC           3379 	mov	dptr,#_UPHY_ANAREG_REV_0
   0816 E0                 3380 	movx	a,@dptr
   0817 44 01              3381 	orl	a,#0x01
   0819 F0                 3382 	movx	@dptr,a
   081A 80 07              3383 	sjmp	00105$
   081C                    3384 00102$:
                           3385 ;	../src/power_pcie.c:596: reg_TRX_VIRTUAL_CTRL_LANE = 0;
   081C 90 03 FC           3386 	mov	dptr,#_UPHY_ANAREG_REV_0
   081F E0                 3387 	movx	a,@dptr
   0820 54 FE              3388 	anl	a,#0xfe
   0822 F0                 3389 	movx	@dptr,a
   0823                    3390 00105$:
                           3391 ;	../src/power_pcie.c:599: short_delay();//delay01(1);
   0823 78r00              3392 	mov	r0,#_short_delay
   0825 79s00              3393 	mov	r1,#(_short_delay >> 8)
   0827 7As00              3394 	mov	r2,#(_short_delay >> 16)
   0829 12s00r00           3395 	lcall	__sdcc_banked_call
                           3396 ;	../src/power_pcie.c:600: txloz2hiz_quick();
   082C 78r00              3397 	mov	r0,#_txloz2hiz_quick
   082E 79s00              3398 	mov	r1,#(_txloz2hiz_quick >> 8)
   0830 7As00              3399 	mov	r2,#(_txloz2hiz_quick >> 16)
   0832 12s00r00           3400 	lcall	__sdcc_banked_call
                           3401 ;	../src/power_pcie.c:602: reg_ANA_TXDETRX_EN_LANE = 1;
   0835 90 20 02           3402 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   0838 E0                 3403 	movx	a,@dptr
   0839 44 01              3404 	orl	a,#0x01
   083B F0                 3405 	movx	@dptr,a
                           3406 ;	../src/power_pcie.c:604: reg_ANA_TXDETRX_START_LANE = 1;
   083C 90 20 01           3407 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   083F E0                 3408 	movx	a,@dptr
   0840 44 80              3409 	orl	a,#0x80
   0842 F0                 3410 	movx	@dptr,a
                           3411 ;	../src/power_pcie.c:606: while(!reg_TXDETRX_SAMPLE_DONE_LANE);
   0843                    3412 00106$:
   0843 90 20 00           3413 	mov	dptr,#_PM_CTRL_TX_LANE_REG1_LANE
   0846 E0                 3414 	movx	a,@dptr
   0847 30 E1 F9           3415 	jnb	acc.1,00106$
                           3416 ;	../src/power_pcie.c:608: short_delay();//delay01(1);
   084A 78r00              3417 	mov	r0,#_short_delay
   084C 79s00              3418 	mov	r1,#(_short_delay >> 8)
   084E 7As00              3419 	mov	r2,#(_short_delay >> 16)
   0850 12s00r00           3420 	lcall	__sdcc_banked_call
                           3421 ;	../src/power_pcie.c:609: reg_ANA_TXDETRX_START_LANE = 0;
   0853 90 20 01           3422 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0856 E0                 3423 	movx	a,@dptr
   0857 54 7F              3424 	anl	a,#0x7f
   0859 F0                 3425 	movx	@dptr,a
                           3426 ;	../src/power_pcie.c:610: short_delay();//delay01(1);
   085A 78r00              3427 	mov	r0,#_short_delay
   085C 79s00              3428 	mov	r1,#(_short_delay >> 8)
   085E 7As00              3429 	mov	r2,#(_short_delay >> 16)
   0860 12s00r00           3430 	lcall	__sdcc_banked_call
                           3431 ;	../src/power_pcie.c:611: reg_ANA_TXDETRX_EN_LANE = 0;
   0863 90 20 02           3432 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   0866 E0                 3433 	movx	a,@dptr
   0867 54 FE              3434 	anl	a,#0xfe
   0869 F0                 3435 	movx	@dptr,a
                           3436 ;	../src/power_pcie.c:613: txloz2hiz_quick();
   086A 78r00              3437 	mov	r0,#_txloz2hiz_quick
   086C 79s00              3438 	mov	r1,#(_txloz2hiz_quick >> 8)
   086E 7As00              3439 	mov	r2,#(_txloz2hiz_quick >> 16)
   0870 12s00r00           3440 	lcall	__sdcc_banked_call
                           3441 ;	../src/power_pcie.c:615: reg_PIN_TXDETRX_VALID_LANE = 1;
   0873 90 20 01           3442 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0876 E0                 3443 	movx	a,@dptr
   0877 44 40              3444 	orl	a,#0x40
   0879 F0                 3445 	movx	@dptr,a
                           3446 ;	../src/power_pcie.c:617: while(reg_PIN_TXDETRX_EN_RD_LANE);
   087A                    3447 00109$:
   087A 90 20 07           3448 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   087D E0                 3449 	movx	a,@dptr
   087E 20 E0 F9           3450 	jb	acc.0,00109$
                           3451 ;	../src/power_pcie.c:619: reg_PIN_TXDETRX_VALID_LANE = 0;
   0881 90 20 01           3452 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0884 E0                 3453 	movx	a,@dptr
   0885 54 BF              3454 	anl	a,#0xbf
   0887 F0                 3455 	movx	@dptr,a
                           3456 ;	../src/power_pcie.c:621: if(cmx_LOAD_CTLE_SPDTBL_TXDETRX_EN)
   0888 90 E6 2E           3457 	mov	dptr,#(_CONTROL_CONFIG8 + 0x0002)
   088B E0                 3458 	movx	a,@dptr
   088C 30 E7 05           3459 	jnb	acc.7,00113$
                           3460 ;	../src/power_pcie.c:622: TRAIN_CONTROL_9.BT.B1 = 0; //clear rxtrain pass
   088F 90 60 CD           3461 	mov	dptr,#(_TRAIN_CONTROL_9 + 0x0001)
   0892 E4                 3462 	clr	a
   0893 F0                 3463 	movx	@dptr,a
   0894                    3464 00113$:
                           3465 ;	../src/power_pcie.c:625: PHY_STATUS = ST_P1_WK ; 
   0894 90 22 30           3466 	mov	dptr,#_MCU_STATUS0_LANE
   0897 74 23              3467 	mov	a,#0x23
   0899 F0                 3468 	movx	@dptr,a
   089A 02s00r00           3469 	ljmp	__sdcc_banked_ret
                           3470 ;------------------------------------------------------------
                           3471 ;Allocation info for local variables in function 'Power_P2_TXDETRX'
                           3472 ;------------------------------------------------------------
                           3473 ;------------------------------------------------------------
                           3474 ;	../src/power_pcie.c:639: void Power_P2_TXDETRX(void) BANKING_CTRL {
                           3475 ;	-----------------------------------------
                           3476 ;	 function Power_P2_TXDETRX
                           3477 ;	-----------------------------------------
   089D                    3478 _Power_P2_TXDETRX:
                           3479 ;	../src/power_pcie.c:640: reg_INT_TXDETRX_EN_CHG_ISR_LANE = 0;
   089D 90 20 1A           3480 	mov	dptr,#(_PM_CTRL_INTERRUPT_REG1_LANE + 0x0002)
   08A0 E0                 3481 	movx	a,@dptr
   08A1 54 7F              3482 	anl	a,#0x7f
   08A3 F0                 3483 	movx	@dptr,a
                           3484 ;	../src/power_pcie.c:641: reg_ANA_PU_TX_LANE = 1;
   08A4 90 20 03           3485 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   08A7 E0                 3486 	movx	a,@dptr
   08A8 44 40              3487 	orl	a,#0x40
   08AA F0                 3488 	movx	@dptr,a
                           3489 ;	../src/power_pcie.c:643: short_delay();//delay01(1);
   08AB 78r00              3490 	mov	r0,#_short_delay
   08AD 79s00              3491 	mov	r1,#(_short_delay >> 8)
   08AF 7As00              3492 	mov	r2,#(_short_delay >> 16)
   08B1 12s00r00           3493 	lcall	__sdcc_banked_call
                           3494 ;	../src/power_pcie.c:644: txloz2hiz_quick();
   08B4 78r00              3495 	mov	r0,#_txloz2hiz_quick
   08B6 79s00              3496 	mov	r1,#(_txloz2hiz_quick >> 8)
   08B8 7As00              3497 	mov	r2,#(_txloz2hiz_quick >> 16)
   08BA 12s00r00           3498 	lcall	__sdcc_banked_call
                           3499 ;	../src/power_pcie.c:646: reg_ANA_TXDETRX_EN_LANE = 1;
   08BD 90 20 02           3500 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   08C0 E0                 3501 	movx	a,@dptr
   08C1 44 01              3502 	orl	a,#0x01
   08C3 F0                 3503 	movx	@dptr,a
                           3504 ;	../src/power_pcie.c:647: short_delay();//delay01(1);
   08C4 78r00              3505 	mov	r0,#_short_delay
   08C6 79s00              3506 	mov	r1,#(_short_delay >> 8)
   08C8 7As00              3507 	mov	r2,#(_short_delay >> 16)
   08CA 12s00r00           3508 	lcall	__sdcc_banked_call
                           3509 ;	../src/power_pcie.c:648: reg_ANA_TXDETRX_START_LANE = 1;
   08CD 90 20 01           3510 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   08D0 E0                 3511 	movx	a,@dptr
   08D1 44 80              3512 	orl	a,#0x80
   08D3 F0                 3513 	movx	@dptr,a
                           3514 ;	../src/power_pcie.c:650: while(!reg_TXDETRX_SAMPLE_DONE_LANE);
   08D4                    3515 00101$:
   08D4 90 20 00           3516 	mov	dptr,#_PM_CTRL_TX_LANE_REG1_LANE
   08D7 E0                 3517 	movx	a,@dptr
   08D8 30 E1 F9           3518 	jnb	acc.1,00101$
                           3519 ;	../src/power_pcie.c:652: short_delay();//delay01(1);
   08DB 78r00              3520 	mov	r0,#_short_delay
   08DD 79s00              3521 	mov	r1,#(_short_delay >> 8)
   08DF 7As00              3522 	mov	r2,#(_short_delay >> 16)
   08E1 12s00r00           3523 	lcall	__sdcc_banked_call
                           3524 ;	../src/power_pcie.c:653: reg_ANA_TXDETRX_START_LANE = 0;
   08E4 90 20 01           3525 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   08E7 E0                 3526 	movx	a,@dptr
   08E8 54 7F              3527 	anl	a,#0x7f
   08EA F0                 3528 	movx	@dptr,a
                           3529 ;	../src/power_pcie.c:654: reg_ANA_TXDETRX_EN_LANE = 0;
   08EB 90 20 02           3530 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   08EE E0                 3531 	movx	a,@dptr
   08EF 54 FE              3532 	anl	a,#0xfe
   08F1 F0                 3533 	movx	@dptr,a
                           3534 ;	../src/power_pcie.c:656: txloz2hiz_quick();
   08F2 78r00              3535 	mov	r0,#_txloz2hiz_quick
   08F4 79s00              3536 	mov	r1,#(_txloz2hiz_quick >> 8)
   08F6 7As00              3537 	mov	r2,#(_txloz2hiz_quick >> 16)
   08F8 12s00r00           3538 	lcall	__sdcc_banked_call
                           3539 ;	../src/power_pcie.c:658: reg_ANA_PU_TX_LANE = 0;
   08FB 90 20 03           3540 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   08FE E0                 3541 	movx	a,@dptr
   08FF 54 BF              3542 	anl	a,#0xbf
   0901 F0                 3543 	movx	@dptr,a
                           3544 ;	../src/power_pcie.c:660: reg_PIN_TXDETRX_VALID_LANE = 1;
   0902 90 20 01           3545 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0905 E0                 3546 	movx	a,@dptr
   0906 44 40              3547 	orl	a,#0x40
   0908 F0                 3548 	movx	@dptr,a
                           3549 ;	../src/power_pcie.c:662: while(reg_PIN_TXDETRX_EN_RD_LANE);
   0909                    3550 00104$:
   0909 90 20 07           3551 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   090C E0                 3552 	movx	a,@dptr
   090D 20 E0 F9           3553 	jb	acc.0,00104$
                           3554 ;	../src/power_pcie.c:664: reg_PIN_TXDETRX_VALID_LANE = 0;
   0910 90 20 01           3555 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0001)
   0913 E0                 3556 	movx	a,@dptr
   0914 54 BF              3557 	anl	a,#0xbf
   0916 F0                 3558 	movx	@dptr,a
                           3559 ;	../src/power_pcie.c:667: PHY_STATUS = ST_P2_WK ; 
   0917 90 22 30           3560 	mov	dptr,#_MCU_STATUS0_LANE
   091A 74 1B              3561 	mov	a,#0x1B
   091C F0                 3562 	movx	@dptr,a
   091D 02s00r00           3563 	ljmp	__sdcc_banked_ret
                           3564 ;------------------------------------------------------------
                           3565 ;Allocation info for local variables in function 'Power_P2_BEACON'
                           3566 ;------------------------------------------------------------
                           3567 ;------------------------------------------------------------
                           3568 ;	../src/power_pcie.c:682: void Power_P2_BEACON(void) BANKING_CTRL {
                           3569 ;	-----------------------------------------
                           3570 ;	 function Power_P2_BEACON
                           3571 ;	-----------------------------------------
   0920                    3572 _Power_P2_BEACON:
                           3573 ;	../src/power_pcie.c:708: reg_ANA_PU_TX_LANE = 1;
   0920 90 20 03           3574 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   0923 E0                 3575 	movx	a,@dptr
   0924 44 40              3576 	orl	a,#0x40
   0926 F0                 3577 	movx	@dptr,a
                           3578 ;	../src/power_pcie.c:709: delay01(4);
   0927 90 00 04           3579 	mov	dptr,#0x0004
   092A 78r00              3580 	mov	r0,#_delay01
   092C 79s00              3581 	mov	r1,#(_delay01 >> 8)
   092E 7As00              3582 	mov	r2,#(_delay01 >> 16)
   0930 12s00r00           3583 	lcall	__sdcc_banked_call
                           3584 ;	../src/power_pcie.c:710: reg_ANA_TX_IDLE_HIZ_EN_LANE = 0;
   0933 90 20 07           3585 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0936 E0                 3586 	movx	a,@dptr
   0937 54 7F              3587 	anl	a,#0x7f
   0939 F0                 3588 	movx	@dptr,a
                           3589 ;	../src/power_pcie.c:711: delay01(5);
   093A 90 00 05           3590 	mov	dptr,#0x0005
   093D 78r00              3591 	mov	r0,#_delay01
   093F 79s00              3592 	mov	r1,#(_delay01 >> 8)
   0941 7As00              3593 	mov	r2,#(_delay01 >> 16)
   0943 12s00r00           3594 	lcall	__sdcc_banked_call
                           3595 ;	../src/power_pcie.c:712: reg_ANA_TX_LESS_CUR_IDLE_LANE = 0;
   0946 90 20 07           3596 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0949 E0                 3597 	movx	a,@dptr
   094A 54 BF              3598 	anl	a,#0xbf
   094C F0                 3599 	movx	@dptr,a
                           3600 ;	../src/power_pcie.c:714: reg_ANA_BEACON_EN_LANE = 1;
   094D 90 20 00           3601 	mov	dptr,#_PM_CTRL_TX_LANE_REG1_LANE
   0950 E0                 3602 	movx	a,@dptr
   0951 44 40              3603 	orl	a,#0x40
   0953 F0                 3604 	movx	@dptr,a
                           3605 ;	../src/power_pcie.c:716: while(!do_wake);
   0954                    3606 00101$:
   0954 30*00 FD           3607 	jnb	_do_wake,00101$
                           3608 ;	../src/power_pcie.c:718: reg_ANA_TX_LESS_CUR_IDLE_LANE = 1;
   0957 90 20 07           3609 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   095A E0                 3610 	movx	a,@dptr
   095B 44 40              3611 	orl	a,#0x40
   095D F0                 3612 	movx	@dptr,a
                           3613 ;	../src/power_pcie.c:719: short_delay();//delay01(1);
   095E 78r00              3614 	mov	r0,#_short_delay
   0960 79s00              3615 	mov	r1,#(_short_delay >> 8)
   0962 7As00              3616 	mov	r2,#(_short_delay >> 16)
   0964 12s00r00           3617 	lcall	__sdcc_banked_call
                           3618 ;	../src/power_pcie.c:720: reg_ANA_TX_IDLE_HIZ_EN_LANE = 1;
   0967 90 20 07           3619 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   096A E0                 3620 	movx	a,@dptr
   096B 44 80              3621 	orl	a,#0x80
   096D F0                 3622 	movx	@dptr,a
                           3623 ;	../src/power_pcie.c:721: short_delay();//delay01(1);
   096E 78r00              3624 	mov	r0,#_short_delay
   0970 79s00              3625 	mov	r1,#(_short_delay >> 8)
   0972 7As00              3626 	mov	r2,#(_short_delay >> 16)
   0974 12s00r00           3627 	lcall	__sdcc_banked_call
                           3628 ;	../src/power_pcie.c:722: reg_ANA_PU_TX_LANE = 0;
   0977 90 20 03           3629 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   097A E0                 3630 	movx	a,@dptr
   097B 54 BF              3631 	anl	a,#0xbf
   097D F0                 3632 	movx	@dptr,a
                           3633 ;	../src/power_pcie.c:724: PHY_STATUS = ST_P2_WK; 
   097E 90 22 30           3634 	mov	dptr,#_MCU_STATUS0_LANE
   0981 74 1B              3635 	mov	a,#0x1B
   0983 F0                 3636 	movx	@dptr,a
                           3637 ;	../src/power_pcie.c:726: do_wake = 0;
   0984 C2*00              3638 	clr	_do_wake
   0986 02s00r00           3639 	ljmp	__sdcc_banked_ret
                           3640 	.area CSEG    (CODE)
                           3641 	.area CONST   (CODE)
                           3642 	.area CABS    (ABS,CODE)
