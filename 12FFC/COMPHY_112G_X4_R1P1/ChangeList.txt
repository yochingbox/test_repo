//*********************************************************************
//	    COMPHY_112G_X4 Firmware Change History			
//
//   Copyright (c) 2019 Marvell Semiconductor, Inc. All rights reserved
//*********************************************************************
//Rule:
// <date> <name(must be two words)> <revision#> <JIRA#> <CETask#> <SOC release info>
// - summary of "what" change for "why" 
//*********************************************************************
08/24/2020 Xunzhi Wang 0.10.12.29
  - sync with r1.2 0.10.11.66
  - mcu_cmn_debug22_lane[7:0].6->sweep_r_without_dfe_tap_mode_change_rd (Xin)
  - R train: sweep index from 3 to 15 for all rates (Xin)
  - R train: RESET_DFE_TAP_MODE=1 during r sweep (Xin)
  - Added read_testbus0 for final remote_control_bits to get realtime TTIU, so wrong TTIU latched at remote tx complete does not affect grey code setting (Xu)
  -- Changed lane/cmn handshake interface
  -- train_debug3_lane[7:0].3->tag_NO_CONTROL_BITS_BY_TESTBUS
  - [CONFIG] disable RUN_REGRESSION
  - train_debug3_lane[7:0].4->tag_SINGLE_RX_TRAIN_FOR_TX_TRAIN
08/12/2020 Xunzhi Wang 0.10.12.28 GLC5616-501
  - [53G] Final res train uses CDS_EN_RECOVER_HR (0x420F30, remove reset_en stage) (Xin)
  -- Improved 1/4000 tx training f0d failure (SoC)
  - train_debug3_lane[7:0].5->tag_STOP_DFE_CONT_AFTER_TRAIN, debug feature set before training (Xin)
07/30/2020 Xunzhi Wang 0.10.12.27
  - cmx_PHY_GEN_MAX_4_0 only set to 0x1f in mcu_cmn (do not use max_gen in lane speedtable) (Xu)
07/30/2020 Xunzhi Wang 0.10.12.26
  - [CONFIG] SUPPORT_COMPHY_INT_01; disable SUPPORT_PHASE_ADAPT_HR
07/29/2020 Xunzhi Wang 0.10.12.25
  - [MISL][53G] Added rtpa_hr, ported from 7nm; SUPPORT_PHASE_ADAPT_HR (Xin/Grace/Fang)
  -- mcu_reservedx10_lane[7:0].2->tag_PHASE_EN_HR
  -- mcu_reservedx10_lane[7:0].3->tag_PHASE_CONFIG_EN_HR
  -- mcu_reservedx08_lane[7:0].[7:4]->tag_PHASE_F0B_HYST_LOW_HR, if(!tag_PHASE_CONFIG_EN_HR):2
  -- mcu_reservedx08_lane[7:0].[3:0]->tag_PHASE_F0B_HYST_HIGH_HR, if(!tag_PHASE_CONFIG_EN_HR):10
  -- mcu_reservedx09_lane[7:0].[7:4]->tag_PHASE_F1_THRS3_HR, if(!tag_PHASE_CONFIG_EN_HR):3
  -- mcu_reservedx09_lane[7:0].[3:0]->tag_PHASE_F1_THRS1_HR, if(!tag_PHASE_CONFIG_EN_HR):1
  -- mcu_reservedx0a_lane[7:0]->tag_PHASE_ADAPT_LPNUM_HR, if(!tag_PHASE_CONFIG_EN_HR):8
  -- mcu_reservedx0b_lane[7:0]->tag_PHASE_TIMER_HR, if(!tag_PHASE_CONFIG_EN_HR):50ms
  -- Added cds_call CDS_EN_FINAL_MEASURE
  -- Add bit_performing_phase_train_adv for tracking_dfe_adaptation
  -- Changed f0d measure cds to CDS_EN_FINAL_MEASURE
  - [CONFIG] Special: disable SUPPORT_COMPHY_INT_01
  - Added CTLE_TIMER, PHASE_TIMER init
07/29/2020 Xunzhi Wang 0.10.12.24
  - sync with r1.2 0.10.11.60
  - Kept reg_RESET_DFE_TAP_MODE_LANE=1 during final res train->vref res change would not cause eye closure (Xin/Grace)
  - DFE_SAT_EN restore at the end of trx_train_end; SQ*EN after trx_train_end
  - Added debug features
07/22/2020 Xunzhi Wang 0.10.12.23
  - sync with r1.2 0.10.11.59
  - Changed drv_train_if_cfg as specification changed (Xu)
  -- PAM4's tx_train_pat_coding_sel_lane=0 before first tx request
  -- LOCAL_TX_PRESET_INDEX_LANE = 1
  - tx_reset without cds call before it to prevent short channel cdr no lock. (Xin)
  - [53G] Added tx_reset_adjust after tx_reset: request post+6,pre2-2 (Xin/Xu)
  - Added _DBG_TXTRAIN_STATUS_VALID debug feature
  -- mcu_debug_lane[31:0]->valid_bits for tx requests. Bit0 is latest request.
  -- mcu_reservedx23_lane[7:0]->count of requests
07/14/2020 Xunzhi Wang 0.10.12.22
  - [SIM] Added ANA_TRX_PLL_TXCLK_SYNC_EN, ANA_TX_TXCLK_SYNC_EN sequence for all_cal_ext
07/13/2020 Xunzhi Wang 0.10.12.21
  - During speed change unexpected pattern issue
  -- do not set ana_pu_tx if already on
  -- Added ANA_TRX_PLL_TXCLK_SYNC_EN, ANA_TX_TXCLK_SYNC_EN sequence
  -- [Workaround] do not touch tx_idle control (do not define SUPPORT_TX_IDLE)
  -- Future macro SUPPORT_TX_IDLE:
  -- Changed tx_idle sequence: mainly only set after ana_pu_tx to enter tx_idle correctly instead of unexpected pattern. This is the key change. (Peng Liu)
  -- Strictly followed reg_ANA_TX_IDLE_FORCE_LANE=0 is after reg_PIN_PLL_READY_TX_LANE=1 (Xu)
  - Moved rx training timer config to init_xdata_at_core_reset
  - reg_TRX_TRAIN_TIMEOUT_EN_LANE = 0 once for all in init_xdata_at_core_reset to get cleaner txdata when train fails(SoC)
  - Disabled reg_PATTERN_LOCK_LOST_TIMEOUT_EN_LANE also for r1.2 to improve tx train success rate (Xu); Moved this part to init_xdata_at_core_reset
  - Fixed after tx train unexpected pattern issue (Xu)
  -- Checked reg_INT_TX_TRAIN_FAILED_LANE when checking TX_READY
  -- Added PT_TX_CLK_EN_LANE control along with TX_TRAIN_PAT_EN_LANE
  - Added train abort workaround: return when entering dfe_adaptation if train_en is 0. Sped up tx and rx train abort.
  - Fixed conflict debug reg: cmx_MCU_DEBUG_CMN_25/24_7_0 changed to cmx_MCU_DEBUG_CMN_27/26_7_0 at r train for dfe_loop. Also guarded by _DBG_R_TRAIN_DFE_LOOP
07/01/2020 Xunzhi Wang 0.10.12.20
  - Added dfe_adapt_en+dfe_accu_en before CDS_EN_F0D with tag_DFE_LOAD_EN = 0 (Xin)
07/01/2020 Xunzhi Wang 0.10.12.19
  - Changed to CDS_EN_F0D (changed to 0x820000: restore dfe regs) to measure f0d->not affect long trace BER (Xin) 
  - Do not set ana_pu_pll before pin_pu_pll=1->r1.2 no unexplained current without mode
  - [r1.2] Changed reg_TX_EMPH3_DEFAULT2_LANE_4_0 to 0x0. Correct preset value. (Xu)
06/19/2020 Xunzhi Wang 2.10.12.18
  - tx_train_if debug version from Xu: correct valid bit; each request waits enough time
06/18/2020 Xunzhi Wang 0.10.12.18
  - Added more debug records for 53G short channel tx_gray_code_en issue (Xu)
  - Removed reg_REMOTE_RD_REQ_LANE = 0 (to not affect tx training complete sequence)
06/16/2020 Xunzhi Wang 0.10.12.17
  - Do not set pll ready when slumber/partial slumber wakeup, if next state is still slumber/partial slumber (Xu)
  - 53G short channel tx_gray_code_en issue: read REMOTE_CTRL_BITS_LANE at different places for debugging (Xu)
06/11/2020 Xunzhi Wang 0.10.12.16
  - Syncing with pll speed table on rate 1 by hard code (ICP/LPFR/LPFC). Reduce crosstalk. (Hui)
  - PLL rate 1: force LANE_ALIGN_POFFSET_LANE to be different values for adjacent lanes to reduce crosstalk (Hui)
  -- mcu_reservedx08_lane[7:0].[6:0]->lane_align_poffset_rate1, default lane0/2:0x4,lane1/3:0x14
  - 53G short channel tx_gray_code_en issue: read REMOTE_CTRL_BITS_LANE before it could be cleared (Xu)
06/04/2020 Xunzhi Wang 0.10.12.15
  - [25G](Extend from 53g)train_debug1_lane[7:0].0->good_ber, train_debug2_lane*8*32>train_f0b_lane(average_eye)*ber_indicator_factor_25g (John)
  -- mcu_debug_cmn_24[7:0]->ber_indicator_factor_25g, default 90 (set by FW)
05/21/2020 Xunzhi Wang 0.10.12.14
  - Fixed train.eo/train.f0_data's calculation by using sum_f0d/sum_f0x. No impact. (Grace)
  - Enabled RUN_REGRESSION
05/19/2020 Xunzhi Wang 0.10.12.13 IPCE_COMPHY-1669
  - Fixed RXCLK_25M_DIV_LANE and RXCLK_25M_FIX_DIV_EN loading from speedtable
05/19/2020 Xunzhi Wang 0.10.12.12
  - [SIM] Use delay_ram for slumber_wakeup_delay to enable speed up
05/07/2020 Xunzhi Wang 0.10.12.11
  - [SIM] Do not set reg_INT_RX_TRAIN_FAILED_LANE = opt.eye_check_pass==0 in simulation
05/05/2020 Xunzhi Wang 0.10.12.10
  - merged https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r6348
  - Changed short channel R train:
  -- Changed R train short channel cds call to CDS_EN_PHASETRAIN
  -- mcu_debug_cmn_22[7:0].[3:0]->0 means 15, non-0 value would be forced short channel r index
  -- mcu_debug_cmn_22[7:0].4->always_sweep_r, no matter short channel or not
  -- Added PAUSE_ST_TEST_B at R train to test cds
  -- [53G] Changed Tdfe_coarse/Tdfe_fine to (mcu_debug_cmn_25[7:0]<<8|mcu_debug_cmn_24[7:0])(if not 0) only for the cds after R train
  - Added reg_DTL_CLAMPING_SEL_LANE_2_0 = 0x7; reg_DTL_CLAMPING_SCALE_LANE = 1 (Xinyu)
  -- 'The new DTL clamping setting, is to limit the frequency offset within +/- 400 ppm. With the original setting, the DTL frequency offset might go to a large value like 7000 ppm and cannot recover. Ideally the DTL should be still recover. But the test in 7nm 56G PHY shows we need extra steps to pre-adapt VREF/F0 first.'
  -- mcu_debug_cmn_22[7:0].5->short_channel_change_step_vref_rd. [53G] If 1, change DFE_STEP_COARSE/FINE_VREF to 1,3 only for the CDS_EN_RECOVER after R train  - Break down CDS_EN_RECOVER at R train, and change recording regs
  - Added mcu_debug7_lane[7:0] for [31:24] of training time
  - Removed redundant checksum check
  - [r1.2] Update get_program_memory_checksum for checksum 1 (Ping-Jui)
  - (John/Grace) Train failure condition change:
  -- Added INT_RX_TRAIN_FAILED_LANE condition: eye_check_pass=0
  -- Changed eye_check_pass condition from train.eo>=tag_EYE_CHECK_EO_THRE to train.eo>tag_EYE_CHECK_EO_THRE
  - Removed PT_OUT_TIME_TRAIN_COMP_LANE setting->provide user with full control
  - Changed mem2dat.pl to add checksum padding back to main.mem
  - Make sure parameter strings of DBG_PS/DBG_Printf are optimized out
  - Added checking SQ to guard realtime functions (CTLE_Adaptation,dc_vref_adj)(John)
  - Changed tx_fir_init sequence: set tx_fir_update=0 at the start and end of the function<-analog takes effect on tx_fir_update level instead of rising edge.
  - dfe_spd_init(): Added disable dfe for 1G (Mo)
  - Renamed init_xdata_bank1 as init_xdata_at_core_reset
  - Added all tx fir min/max restore as SoC request
  - Changed tag_VREF_RES_HIGH_THRES's alias to variable
  - Changed mcuclk_mc address to 0xe710 for mcu_cmn to access -> Fixed wrong delay in mcu_cmn
  - Set EA=1 for mcu_cmn
  - Moved functions to misc*.c
  - Moved dfe_cnt,dfe_max_cnt to local; Comment on global.c
  - Moved unused files into not-compiled folders
  - Created misc1.c/misc2.c/misc3.c for different banks
  - [PAM2] Uncomment tx.gn1_is_max/tx.gn1_is_min checking to fix fir sum <63 when gn1 hit boundary
  - [PAM2] Added decrease g0 before per-tap fir train to let gx_is_min/max indicate per-tap boundary. Restore g0 afterwards. Note: gx_index may still have one code mismatch.
  - [112G] phase adapt: clear vote every 8 callings
05/01/2020 Xunzhi Wang 2.10.12.9
 - Changed tag_NEVER_CTLE_BYPASS1 from train_debug2_lane[7:0] to train_debug3_lane[7:0].6
 - Changed opt.f0a from train_debug1_lane[7:0] to train_debug6_lane[7:0]
 - Measure f0d at real time function for eye indicator:
 -- train_debug2_lane[7:0]->average train_f0d_lane (inner_eye) sampled by ctle_adapt_timer. It updates per 8*ctle_adapt_timer
 -- train_debug1_lane[7:0].0->good_ber, train_debug2_lane*8>train_f0b_lane(average_eye)
04/08/2020 Xunzhi Wang 0.10.12.9
 - Changed RX_Init() in tx train to rx_init_internal() to leave rx_init_done untouched
 - [r1.2]TX_READY patch: abort if reg_PIN_PLL_READY_RX_LANE=0
 - Removed reg_PT_TX_PATTERN_SEL_LANE_5_0 restore in restore_xdata so FW does not control it
 - Removed pt_en restore in restore_xdata <- Note: reconsider if later SUPPORT_PRBS_CHECKER is defined
03/30/2020 Marc Yu 0.10.12.8
 - Compiled r6237
 - Changed tx train ending sequence: extend training pattern till train_en=0; move grey/pre code setting to after train_en=0; removed PT_TX_PATTERN_SEL setting and restore
 - [r1.2]Added TX_READY patch when TX_READY_PATCH_EN_LANE=1
03/11/2020 Xunzhi Wang 0.10.12.7 GLC5616-356
  - By default disable slumber_wakeup_with_speed_change
  - Added txclk_nt_config/rxclk_nt_config at slumber wake up
  - Added slumber_wakeup_delay+0.5(ms) delay at slumber wake up before pll ready
  -- mcu_debug_cmn_21[7:0]->slumber_wakeup_delay(ms)
03/09/2020 Xunzhi Wang 0.10.12.6
  - Adjusted BANK size for r1.2 (r1.2 bank2 needs ~0.35% more)
03/09/2020 Xunzhi Wang 0.10.12.5
  - merged https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r6121
  - [56G] When ctle_bypass1 is 1 after R sweep, bypass the res_f0 train.
03/06/2020 Xunzhi Wang 0.10.12.4
  - merged https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r6114
  - [r1.2][106G] sync with r1.1 tx fir
  - Fixed tx fir checking condition RXSPEED_DIV_LANE->TXSPEED_DIV_LANE
  - [56G] When ctle_bypass1 is 1 after gain_train, bypass the res_f0 train.
  - Changed DFE_ADAPT_ADJ_VREF_DC_THRESH* only for [112G] (200GR4 AN mode issue)
03/06/2020 Marc Yu 0.10.12.3
- merged https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r6098
(IPCE_COMPHY-1564/IPCE_COMPHY-1657)
- [112G] Added advance phase training debug feature
-- mcu_debug_cmn_8[7:0].4->apt_parameter_sel, 0 for f1_fn1, 1 for f0d
-- mcu_debug_cmn_8[7:0].5->apt_de_sweep_down_first
-- mcu_debug_cmn_8[7:0].6->apt_dd_sweep_down_first
- Added speed_change_debug3_lane[7:0].4->no_tx_fir_reset_at_rx_init (GLC5616-529)
- [112G] Added vref_shift_adj and changed res train for John/Grace:
-- Disable VREF_resolution train
-- mcu_debug_cmn_8[7:0].2->vref_shift_adj enable
-- mcu_debug_cmn_8[7:0].3->vref target overwrite enable (if 0, slope=3, intercept=48)
-- mcu_debug_cmn_11[7:0]->vref target slope
-- mcu_debug_cmn_12[7:0]->vref target intercept
-- Added f0_resolution+1 at the end of training for temperature>30
-- Put vref_shift_adj before adv phase train; also BEFORE force_de_setting_before_apt (vref_shift_adj changes phase)
-- Removed reg_CDS_VREF_VAL_FORCE_LANE = 1, and set ctrl_cdr_phase_on = 0 for vref_shift_adj
- Code size reduce: 
-- Removed SUPPORT_PRBS_CHECKER, SUPPORT_DFE_POWER_SAVING
-- Removed unused cds_load cases, Rl2_sel_Table/ffe_final_gain_adjust, gt1_dfe_res, script_init duplicate settings, load_from_ph_train_adv
-- Optimized adv_rx_phase_opt, optimize_ckpx_tune, compute_avg_f0d, compute_f1_fn1
- Changed dc_vref_adj for Mo:
-- use FW to do dc_vref transfer without dfe_fsm: Enable DC VREF code transfer if for any samplers, abs(dc_sum) > thresh_2. Otherwise, exit function directly. In firmware based solution, reg_DFE_ADAPT_ADJ_VREF_DC_EN_LANE should be 0 all the time. While in hardware based solution, it should be set to 1 only during the '1 code transfer' operation.
-- call dfe_save; call cds_save
-- Changed to 0xf07 as dfe_lpnum
- Comphy_int changes (IPCE_COMPHY-1330):
-- Fixed comphy_int 0x01 to use d1 instead of d2
-- Changed comphy_int 0x17: force input tx fir instead of current analog value; NOTE: speed_change_debug3_lane[7:0].4->no_tx_fir_reset_at_rx_init needs to be set to work
-- comphy_int 0x17: fixed main fir and [r1.2] fir bit issue
- Restart ctle/phase adapt timer at the beginning of task instead of at the end
- Changed dfe_fsm for Mo:
-- Prevent vref cross 0 boundary
-- Fixed cds_load_vref() P4->P1
-- Added calling cds_save(Savvref)
- Fixed cds_load_vref: wrong bitwise-or operation
- [112G] Changed TX fir to (pre3)1,3,13,46 (Samuel)
- Changed temp-based ctle adapt rl2_sel2 formular to support rl2_sel2 less that tag_CTLE_TEMP_CONST_HR
- Added programmable default de_cal_setting for 112g/56g (John):
-- mcu_debug_cmn_16[7:0].0->force_default_de_setting_112g
-- mcu_debug_cmn_16[7:0].1->force_default_de_setting_56g
-- mcu_debug_cmn_17[7:0]->default_de_setting_112g
-- mcu_debug_cmn_18[7:0]->default_de_setting_56g
- Added programmable SQ refthr for 112g/56g:
-- calibration_debug0_lane[7:0].0->force SQ_REFTHR enable, if 0 use default 5 (53g)
-- calibration_debug1_lane[7:0].[3:0]->force SQ_REFTHR value (53g)
-- calibration_debug0_lane[7:0].1->force SQ_REFTHR enable, if 0 use default 5 (112g)
-- calibration_debug1_lane[7:0].[7:4]->force SQ_REFTHR value (112g)
- [112G] Bypass phase train (John)
- [112G] Set opt.phase_offset_data=0 before and after gain train (force_phase_offset_data_before_gain_train_rd only for 56g)
- [112G] Added ffe_rl2_tune_adjust_qr() to train ctle_rl2_tune using f0b-based metric
-- mcu_debug_cmn_20[7:0].0->ffe_rl2_tune_adjust_qr_en
-- Added PAUSE_ST_TEST_F/9 in ffe_rl2_tune_adjust_qr
- [112G] Added adv_rx_phase_opt debug feature:
-- Added PAUSE_ST_TEST_A~E to adv_rx_phase_opt
-- Record f1,fn1 between phase_train_qr and ffe_rl2_tune_adjust_qr. (start from 0x6fcc); cli 0xb1 calls record_f1_fn1
- Changed keeping rx_init_done value at Power_Slumber
- [112G] Changed adv_rx_phase_opt:
-- Changed dd/de/rxdcc/ckpx adjust max_cnt 
-- Changed adv phase train time_delay to 6us
-- Changed adv phase train loops for sub-functions 
-- Added train_debuga_lane[7:0].1->bypass_optimize_ckpx_tune
-- rxdcc metric uses abs(Px's f1-fn1 minus Px+2's f1-fn1)
-- ckpx metric uses abs(Data's f1-fn1 minus Slicer's f1-fn1)
- [112G] Do not restore dfe_sat_en after training
- [112G] Changed init dd setting from 0x184 to 0x180
- [112G] Added phase_train_qr() to change de setting based on fn1-f1
-- mcu_debug_cmn_20[7:0].1->phase_train_qr_en
- Improved EOM sequence (IPCE_COMPHY-1748 M-2021)
-- Moved 'reg_EOM_DLL_VDDA_CAL_BYPASS_EN_LANE = 1' from rx_eom_on_demand_cal_init_ram() to esm_exit(), must be before 'reg_EOM_CLK_EN_LANE = 0'. This is to handle phase shift during eom drawing.
-- Added programmable delay for eom dll cal. This depends on user environment impact on phase shift (temperature, etc.), so better leave a key. Default still 100us.
-- EOM_DEBUG1_LANE[7:0].7: 1 means using 1ms as unit for [6:0]; 0 means using 100us as unit
-- EOM_DEBUG1_LANE[7:0].6:0: delay time for EOM_DLL_VDDA_CAL before PI alignment; 0 means using default 100us
- [112G] Changed CKP*_DA_TUNE_CODE default setting to 7,c,a,f (John)
- [112G] Changed CDR_MODE_LANE to 5
- Changed CTLE_Adaptation_Init called position
- [112G] Changed rl2_sel init formula to temperature/5
- [112G] Added ffe_rl2_sel_adjust_qr inside ffe_rl2_tune_adjust_qr if rl2_tune saturate
- [112G] Changed tag_CTLE_F0B_DIVISOR default to 4
- Added mcu_debug_cmn_1[7:0].7->disable program memory check
- Added new default settings in init_xdata_bank1(). 
- Enabled slumber_wakeup_with_speed_change to work around Repeater->PCS mode change issue (GLC5616-356)
-- Calling Calibration without init_tx_fir (using force_calibration flag)
-- Included sampler cal and sq cal into power up cal
- [112G] Changed init tx fir to (pre3)1,4,13,45
- [112G] Added changes: PLL_LPFR_LANE=1,RX_SELMUFF_LANE=6,REG_SELMUPF_LANE=5
02/24/2020 Marc Yu 0.10.12.2
  - Added (bench) regression checkpoint/trap feature
01/30/2020 Xunzhi Wang 0.10.12.1
  - [r1.2] tx fir setting/ANA_REG_SU_DLY_SEL compiling fix after merge
01/30/2020 Marc Yu 0.10.12.00
  - x7121m initial firmware release
  - Supported data rate: 10.3125G, 25.78125G, 53.125G, 106.25G
  - Limitations: a. 100G RX train time is about 30s, b. 100G TX train is not supported in current R1.1 COMPHY
01/28/2020 Marc Yu 0.10.11.146
  - Merged 0.10.11.145 from https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r5790
01/28/2020 Marc Yu 0.10.11.145
  - Merged 0.10.11.145 from https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r5784
01/28/2020 Marc Yu 0.10.11.144
  - Merged 0.10.11.144 from https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r5737
01/14/2020 Xunzhi Wang 0.10.11.80 IPCE_COMPHY-1661
  - Use ETHERNET_MODE_LANE>=2 for pam2 to be compatible with r1.1/r1.2
01/06/2020 Xunzhi Wang 0.10.11.79 IPCE_COMPHY-1661
  - [r1.2] set ETHERNET_MODE_LANE according to speed instead of driver function (Ka-Kit)
12/17/2019 Marc Yu 0.10.11.78
  - removed changes of const bank (-c -5288)
12/09/2019 Xunzhi Wang 0.10.11.77
  - Updated save_pt_tx_pattern_sel_lane_5_0 in comphy_int -> restore_xdata gets correct value
12/06/2019 Marc Yu 0.10.11.76
  - consolidated all const to bank0
12/05/2019 Xunzhi Wang 0.10.11.75
  - Adjust TRAIN_SIM_EN coverage: include train_status_reset()
12/05/2019 Xunzhi Wang 0.10.11.74
  - revert "Speed up train timer for simulation" (0.10.11.67)-> no longer needed because of 0.10.11.71
12/05/2019 Xunzhi Wang 0.10.11.73
  - Removed pt_en control for trx_train complete sequence (r1.1 risk: SQ behavior if long 0 and long 1 happens)
12/05/2019 Marc Yu 0.10.11.72
  - merged 0.10.11.84 from main devBranch, svn merge https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r4864 .
  - code and image are the same as r5213
12/04/2019 Xunzhi Wang 0.10.11.71
  - Do not force internal train enable -> allow retimer mode fast abort
12/02/2019 Xunzhi Wang 0.10.11.70
  - CDR_MODE fix:
  -- vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r4961: 0.10.11.90
  -- Save and restore the CDR_MODE value in CDS. The CDS would set CDR_MODE to 0 in DTL init stage, and load back its value after then.
  -- vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r5157: 0.10.11.104
  -- added reg_CDR_MODE_LANE_2_0 assignment in spd_ctrl.c according to JIRA https://essjira.marvell.com/browse/IPCE_COMPHY-1564, removed corresponding setting in script_init
  -- {Note 106G init script not merged yet}
11/27/2019 Xunzhi Wang 0.10.11.69
  - comphy_int 0x17: clear force for all fir; enable r1.2 as old spec (no C0/pre3)
  - Do not force tx_train_en if tx_train_en already down; train abort condition is always reg_TRX_TRAIN_STOP_ISR_LANE|!reg_TX_TRAIN_ENABLE_RD_LANE
11/26/2019 Xunzhi Wang 0.10.11.68
  - Keep reg_TX_TRAIN_COMP_WAIT_FRAME_LANE_6_0 as default 3 but wait 6us after tx train remote complete: solve frame detection loss issue at train complete
  - r1.2 tx fir init
11/25/2019 Xunzhi Wang 0.10.11.67
  - Speed up train timer for simulation
  - Use isr_clear to clear isr
  - Open comphy_int feature without 0x17
11/21/2019 Xunzhi Wang 0.10.11.66
  - Keep PATTERN_LOCK_LOST_TIMEOUT_EN and TX_TRAIN_FRAME_DET_TIMER_ENABLE as default in r1.2 (0.10.11.50)
11/21/2019 Xunzhi Wang 0.10.11.65
  - Toggle reg_MCU_INT*_EN_LANE to re-trigger interrupts after mcu_reset
11/19/2019 Xunzhi Wang 0.10.11.64
  - Adjusted train_sim_en coverage (Xu)
11/19/2019 Xunzhi Wang 0.10.11.63
  - dfe_spd_init should always follows loadspeedtbl_gen even in simulation (Xu)
11/14/2019 Marc Yu 0.10.11.62
  - removed broken changes from r4679
10/25/2019 Marc Yu 0.10.11.61
  - Reintegrated latest change from devBranch
  - https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r4671
10/25/2019 Marc Yu 0.10.11.60
  - Merged updates from trunk /proj/cphyc12/wa/my/current/COMPHY_112G_X4_R1P1/firmware_rev/current@r4670
10/24/2019 Xunzhi Wang 0.10.11.59
  - TXDCC calibration sync up with SP4PHY14_TOP_CAL_pseudo_code_RELEASE_Oct23_2019
  -- Fully init txdcc cal settings
  -- In Cal_Cont, use CONT_EN instead of BYPASS_EN
10/24/2019 Mo Yang 0.10.11.58
  - set_dfe_en: always take control of DFE_EN
10/23/2019 Xunzhi Wang 0.10.11.57
  - Removed Mo's '0.10.11.54 set analog f0* to 32': FW would stuck when access related registers
10/23/2019 Xunzhi Wang 0.10.11.56
  - Added polling comphy_int at ST_NORMAL: handle comphy interrupt in unplug case
  - Changed TXDCC3/4 cal gm min value (IPCE_COMPHY-1541)
  - TXDCC calibration sync up in progress
  - Set reg_PLL_AMP_TOP_CONT_START_LANE = 0 in Calibration() and turn_on_cont_cal() to lower the risk in temperature ramping (From Hui Zhao)
  - Customized pll cal settings given cmx_PLLAMP_CAL_SPEEDUP_DISABLE
  - Enhanced ChangeList rule: name must be two words for SoC to parse version
  - Added checksum padding -> main.dat has 0 checksum
10/23/2019 Marc Yu 0.10.11.55
  - Help Xu to add code to save and restore rx_dcc_cal_bypass_en regs
  - ph_ctrl.c 
10/23/2019 Mo Yang 0.10.11.54
  - dfe_spd_init: toggle reset_dfe if reset_dfe != 1
  - dfe_spd_init: set fext* to 0, fext0* to 32, set analog f0* to 32
10/22/2019 Xunzhi Wang 0.10.11.53
  - Partially merged https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1 r4419:4619: Mo's change on 
  -- dfe_spd_init: disable DFE EQ for low data rates
  -- set_dfe_mod: comment reg_EN_DFE_VREF_LANE settings
  - Jackson's change on rxspeed.txt: change reg_dfe_dis_lane to be always 0 so that pu_dfe in analog is always 1 to fix a bug where offset dac is controlled by pu_dfe. digital will use rx_speed_div =>6 to turn off DFE on digital side
10/17/2019 Marc Yu 0.10.11.52
  - Modified sampler_cal.c according to the revised pseudo code
  - Justify indv_ext_en vaule based on RX_SPEED_DIV_LANE 
  - https://essjira.marvell.com/browse/IPCE_COMPHY-1537
10/17/2019 Marc Yu 0.10.11.51
  - Modified sampler_cal.c according to the most recently discussed pseudo code
  - Found root cause and fixed 3G mode sampler calibration all zero issue after pu toggling (reg_RESET_DFE_LANE can't be active during PU_PLL = 0) 
10/16/2019 Xunzhi Wang 0.10.11.50 IPCE_COMPHY-1509
  - Turned off PATTERN_LOCK_LOST_TIMEOUT_EN_LANE and TX_TRAIN_FRAME_DET_TIMER_ENABLE_LANE: workaround for tx training case if two PHY power up time skew is too large
  - Cleared FRAME_DET_TIMEOUT_ISR, STATUS_DET_TIMEOUT_ISR at starting of training for clean debugging
10/16/2019 Paulo Urriza 0.10.11.49
  - turn off/on phase train at trx_train_init (data rate dependent)
10/15/2019 Paulo Urriza 0.10.11.48
  - Improved handling of VREF_SHIFT when doing gain train with bypass
  - It will go through the train_c and bypass first before VREF_SHIFT
  - TRAIN_DEBUG2_LANE_7_0 (set to 0 (default) if BYPASS is allowed,
    Set to NOT 0 if BYPASS is NOT allowed (old gain train)
10/15/2019 Xunzhi Wang 0.10.11.47
  - Added 0.5us delay protection after PLL_DCC_TOP_START=1
  - Hard-coded SELMUPF/SELMUFF settings for 25G
  - Updated pll speed table to deal with crosstalk at 25G & 53G (From Hui Zhao)
10/14/2019 Paulo Urriza 0.10.11.46
  - initialize CTLE_BYPASS1_EN
  - measure f0d during gain train
  - new gain train (includes CTLE bypass)
  - rx train force to r=15 when CTLE bypass
10/11/2019 Xunzhi Wang 0.10.11.45
  - PLL cal consistency fix:
  -- Set reg_LCPLL_TEMPC_EXT_EN_LANE=1 to force LCPLL_TEMPC_MUX*
  -- Increase timer for amp cal to converge: 
  -- PLL_AMP_CAL_SINGLE_MODE_STEPSIZE_LANE = 2; PLL_AMP_CAL_CONT_MODE_STEPSIZE_LANE = 2; PLL_AMP_CAL_SAMPLE_PULSE_DIV_LANE = 0xff
  -- Accumulate cal_pll_amp_result to reg_PLL_AMP_CAL_RESULT_EXT_LANE_7_0
  -- Set *DIG_CAL2M_DIV to 0x4e
  - reg_SMPLR_CAL_EN_P1P3_LANE = 0 position change in sampler cal (Marc)
10/11/2019 Xunzhi Wang 0.10.11.44
  - Use lane regs for speed_thresh->Different lanes can do pll_cal at different speeds
  - Calibration sequence sync up with SP4PHY14_TOP_CAL_pseudo_code (partial):
  -- Wait for reg_TSEN_ADC_RDY before calibration
  -- Delay 8us after pll_cal_init
  -- Commented load_init_temp_table as it is outdated
  -- Added MSB_CAL,flag=1 finishing condition
  -- Set reg_PLL_AMP_CAL_SAMPLE_PULSE_DIV_LANE_7_0 to 0x64
  -- Sampler cal: uncomment set OFST as SMPLR*CAL_RESULT_RD
10/08/2019 Xunzhi Wang 0.10.11.43
  - Changed TX_TRAIN_COMP_WAIT_FRAME_LANE to 0x3f (add both FW and HW delay) to send enough complete messages
  - Added Marc's wtag debug feature
10/08/2019 Xunzhi Wang 0.10.11.42
  - Hard-coded SELMUPF/SELMUFF settings: later will be in speed table pending analog designer review
  - Restored CTLE_CAP1_SEL as 21 at loadspeedtbl_gen
  - Sync'ed up with SP4PHY14_TOP_CAL_pseudo_code on dcc cal
  - Do not restore_xdata in reg_PHY_FM_RST_LANE branch
10/07/2019 Marc Yu 0.10.11.41
  - remove changes of 100G training to keep 53G code clean (r4464:r4456)
10/07/2019 Xunzhi Wang 0.10.11.40
  - By default enabled script_init
  - At align90_phase_update, check RX_CLK_TOP_CONT_START first to avoid stuck at RX_CLK_TOP_CONT_DONE
  - Turn on cont cal at slumber wakeup. Removed(Reverted) *DIG_CAL_CLK_RST* toggle at the end of turn_off_cont_cal
10/07/2019 Marc Yu 0.10.11.39
  - Merged latest 100G data rate training codes from R1P0 to R1P1
  - Merged r4228:r4425 https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P0_shared
10/01/2019 Xunzhi Wang 0.10.11.38
  - Improved TX train sequence/performance after AutoNeg:
  -- Changed tag_TX_PRESET_INDEX_HR to 2
  -- Added reg_TX_TRAIN_ENABLE_FM_REG_LANE control for internal train_enable
  -- Added break on train_stop in set_remote_tx
  -- Toggled RST_TX_TRAIN_IF_CLK before setting tx fir to get back control from previous tx training
  -- Not send internal tx train complete if train_stop
  -- Not restore reg_TRAIN_TX_SEL_BITS_LANE/reg_TRAIN_RX_SEL_BITS_LANE after training
  -- Added *DIG_CAL_CLK_RST* toggle at the end of turn_off_cont_cal; call turn_off_cont_cal before slumber
  - Added speed change protection for Power_Patial_Slumber (check speed change when waking up)
  - Added checking pu level at Power_Patial_Slumber in case of fast pu_pll up
  - Changed LCPLL_TEMPC_MUX_SEL_EXT/LCPLL_TEMPC_MUX_HOLD_SEL_EXT from default 2 to 7 (3 to 5 in binary) before pll_cal: avoid marginal cal result
  - Added 0.5us delay between reg_RX_SQ_TOP_START_LANE=1 and reading reg_RX_SQ_TOP_DONE_LANE, as the protection from reading previous result
09/27/2019 Xunzhi Wang 0.10.11.37
  - Updated script_init
  - Added 53g tx equalizer settings in loadspeedtbl_gen
  - Disabled sq settings during trx_train
  - GLC5616-370: Fixed RX train stuck at speed change: do not operate on DTL/DTX/DFE at speed change isr
  - Added debug state info by train_debug4~b, phase_debug0, interrupt_debug0~2, speed_change_debug0~1
  - Reduced TX train stuck chance after AutoNeg:
  -- Break on train_stop when waiting for remote complete
  -- Disable interrupt from setting internal complete to getting remote complete
  -- Kept train_enable on internally during training for digital to work as expected
  -- Changed tag_TX_PRESET_INDEX_HR from 3 to 1
09/24/2019 Xunzhi Wang 0.10.11.36
  - Added ctle/ana_rsvd part in script_init
  - GLC5616-377: Changed init value for CTLE_RES1_SEL at 1G/2.5G/5G
  - !Ignore PLL_TEMP_CAL_CONT_EN. Later change midas.
09/23/2019 Xunzhi Wang 0.10.11.35
  - !X7121M A0 workaround warning: Added reg_SFT_RST_NO_REG_FM_REG_LANE=1
09/20/2019 Xunzhi Wang 0.10.11.34
  - Added TRAIN_USE_S/TRAIN_USE_D in script_init 
09/19/2019 Xunzhi Wang 0.10.11.33 GLC5616-368
  - TX train end: wait for TX_TRAIN_COMP_WAIT_FRAME_LANE instead of 4*TX_TRAIN_COMP_WAIT_FRAME_LANE; Manage the time between int_tx_train_comlete digital pin_tx_train_complete
  - Changed saturation criteria from opt.eo/opt.level to train.eo/train.level
09/16/2019 Xunzhi Wang 0.10.11.32 GLC5616-370
  - Changes to help FW work at SFT_RST_NO_REG_FM_REG_LANE=1:
  -- Added speed change/pu down protection: do not speed change when pu down; detect speed change at wake up and main
  -- Speed change at main goes to ST_INIT as a temp solution for clean speed change
  -- At Power_Slumber_Wakeup, poll reg_PIN_PU_PLL_RD_LANE in case of fast pu_pll up
  - At Power_Slumber, check reg_PIN_PU_PLL_RD_LANE instead of reg_PU_PLL_LANE
09/13/2019 Xunzhi Wang 0.10.11.31 GLC5616-330/GLC5616-333
  - PLL_AMP_CAL: 1) Keep VCOAMP_VTH_SEL = TH_NORMAL; 2) PLL_AMP_TOP_CONT can still be controlled by cmx_PLLAMP_CAL_CONT_EN
  - Updated turn_off_cont_cal; called at the beginning of calibration
09/11/2019 Xunzhi Wang 0.10.11.30
  - Added pt_en/PT_TX_PATTERN_SEL/tx_sel_bits/rx_sel_bits restore for SoC AutoNeg speed change issue (restore_xdata)
  - Use calibration_debug0_lane.0 to control script_init
09/10/2019 Xunzhi Wang 0.10.11.29
  - Added r1.0 test chip script as script_init() after calibration
09/10/2019 Xunzhi Wang 0.10.11.28
  - Applied new sequence on PLL_AMP_CAL based on Hui Zhao's 20190909 requirement
09/09/2019 Xunzhi Wang 0.10.11.27
  - Added forcing pll amp cal result to 0x80; Changed sequence to before reg_PLL_AMP_TOP_CONT_START_LANE
09/09/2019 Xunzhi Wang 0.10.11.26
  - Added forcing pll amp cal result to 0xbf
09/06/2019 Xunzhi Wang 0.10.11.25 GLC5616-343
  - Initialized RX_TRAIN_TIMER as 2999ms
  - Initialized REF1M_GEN_DIV_LANE as ref clock for *_TRAIN_TIMER to work at correct frequency
  - Set gray code and pt_prbs_inv based on signaling (GLC5616-343)
09/05/2019 Xunzhi Wang 0.10.11.24 GLC5616-326
  - Added delay before checking imp cal done
  - New imp cal sync up control: lane mcu issues request and cmn mcu gives permission
08/23/2019 Marc Yu 
  - Engineering image for Datacom X7121 (0.10.11.23)
  - Support of 53G TRX training
  - Support of stage 1 COMPHY INT funtions (0x0, 0x10, 0x11, 0x12, 0x13, 0x14, 0x17, 0x20)
  - Limitation: For 53G data rate, if long trace training results are applied to short trace, TXFFE C-1 need to be decreased under saturation condition.
08/23/2019 Marc Yu 0.10.11.23
  - Commented out _LAB to remove UART debug information print-out
08/22/2019 Marc Yu 0.10.11.22
  - Added Datacom COMPHY_INT feature, supporting function: 0x0, 0x10 ~ 0x14, 0x17, 0x20
08/21/2019 Xunzhi Wang 0.10.11.21
  - Changed rx_init polling to interrupt with mcu_reset for fast response
  - Removed set_dfe_cont in ctle adaptation to avoid issue after mcu_reset
  - Changed prbs_check_uninit position for simulation
08/18/2019 Marc Yu
  - Repo locked for X7121 release preparation
08/15/2019 Marc Yu 0.10.11.20
  - Merged changes from R1P0 upto r4117
08/08/2019 Xunzhi Wang 0.10.11.19 IPCE_COMPHY-1424 M-1587
  - Added TX_TRAIN_CODING_MODE_LANE option for user to choose gray code setting at training
  - Removed rom test calling for SoC simulation
  - At training end, added waiting for reg_REMOTE_STATUS_BITS_LANE_15_0 bit 15 to 1
08/01/2019 Xunzhi Wang 0.10.11.18 <> M-1587
  - Update reg_TRAIN_TX_SEL_BITS_LANE/reg_TRAIN_RX_SEL_BITS_LANE sequence at trx_train: set 1 at ethernet mode(0 otherwise), and take reg_*_sel_bits_lane when completed.
06/12/2019 Xinyu Yi 0.10.11.17
  - In CDS function, use register reg_DFE_EN_LANE to replace FW varibale dfe_dis to skip DFE run.
05/13/2019 Marc Yu 0.10.11.16
  - Generated ROM code for DataCom SOC release
  - Re-structured ROM/RAM files and codes
  - Moved unused code to unused folders
05/10/2019 Xinyu Yi 0.10.11.15
  - Change the bit width for reg_RXTRAIN_C_IDX_LANE from 4 to 8.
04/25/2019 Xunzhi Wang 0.10.11.14 <> M-1587
  - Clear gray code en bits at trx_train
  - Update Xu's trx_train ending sequence with enough TTIU and no exposed clock change 
04/24/2019 Xinyu Yi 0.10.11.13 
  - Updated CDS timer to get faster training time. These values are based on testing result from previous COMPHY_56G_X4 PHY. 
04/15/2019 Xunzhi Wang 0.10.10.13 <> M-1587
  - Update reg_TRAIN_TX_SEL_BITS_LANE/reg_TRAIN_RX_SEL_BITS_LANE sequence at trx_train.
04/12/2019 Marc Yu 0.10.10.12
  - Merged latest R1P0 and R1P1
  - R1P0: 0.10.10.19, svn rev: 3319, Last Changed Author: pmurriza
  - R1P1: 0.10.10.11, svn rev: 3254, Last Changed Author: my
  - Added R1P0 latest changes to R1P1
  - Kept R1P1-specific new RTL changes and latest FW changes
  - Updated and re-compiled header files to latest midas 
  - Combined reg_PT_TX_PATTERN_SEL_LANE_5_0_b_0 and reg_PT_TX_PATTERN_SEL_LANE_5_0_b_1 into the new midas-defined reg_PT_TX_PATTERN_SEL_LANE_5_0 
03/07/2019 Marc Yu 0.10.10.11
  - modified txspeed.txt, DSP made change to swap tx_emph0_default3_lane[4:0] and tx_emph1_default3_lane[4:0] contents
  - no compiling need, only SERDES_REFxxMHz_SPDCHG0_LANE.dat and SERDES_REFxxMHz_SPDCHG0_LANE.mem are committed 
03/05/2019 Marc Yu 0.10.10.10
  - change the hard-coded registers to follow the speed table values
03/01/2019 Heejeong Ryu
  - fixed train simulation failue
02/27/2019 Heejeong Ryu 0.10.10.8
  - updated uart to use MCUCLK=400MHz
  - added MCU_FREQ control and updated delay_ram function  
  - fixed train_if simulation stuck
  - updated spdtbl, spdchg
02/21/2019 Paulo Urriza
  - update train_done_lane everytime trx_train_control is called
02/21/2019 Peter Wang
  - clear repeater mode clamping flag for rx and tx
02/21/2019 Heejeong Ryu
  - updated spdtbl
02/20/2019 Heejeong Ryu
  - Roll back MCU_FREQ for temp
02/15/2019 Heejeong Ryu
  - fixed delay time for various mcuclk
  - updated tx preset 3 default value (0,f,30,0): TODO: speed table update
02/16/2019 Paulo Urriza
  - increase g0 again if gn1 or gn2 magnitude increase failed (maintain
    p2phold)
  - display remote_status_g after set_remote_tx() is called (not before)
  - increase tx step num from 6 to 10 (just for safety)
  - tx train now functional, and preserves p2p
02/15/2019 Heejeong Ryu
  - added MCU_FREQ and updated delay function
02/14/2019 Paulo Urriza
  - temporarily disable TX_TRAIN_FAILED_LANE condition (trx train is still
    > 3sec which causes timeout)
02/14/2019 Paulo Urriza
  - fix order of tx train remote commands to avoid exceeding P2P
  - move order of debug message in req_local_ctrl
  - do CDS call before first tx train vote
02/14/2019 Paulo Urriza
  - set f0x_select to FN2 during trx_train_init if in HR mode
02/13/2019 Paulo Urriza
  - use CDS_PHASETRAIN2 for tx train
  - reverse gn1_adjust voting polarity
  - change order of tx train and rx train
  - do txtrain twice
  - tx train is functional on relatively short channels
02/12/2019 Paulo Urriza
  - remove extra CDS call before phase train
  - use f0a_max for f0_res adaptation instead of average f0
02/12/2019 Peter Wang
  - remove config_sampler_p1to3_ext and config_sampler_p2to4_ext from power up functions 
02/12/2019 Paulo Urriza
  - re-adapt DFE after phase jump at end of gain train
02/10/2019 Paulo Urriza
  - use single vref_low threshold
02/09/2019 Paulo Urriza
  - start VREF_SHIFT=1 (identical to 0)
  - remove reset from CDS_RECOVER
  - use VREF forcing value (25) when using VREF_SHIFT 
02/07/2019 Paulo Urriza
  - added CDS_RECOVER cds_call (to re-adapt VREF from reset)
  - do vref resolution adapt after Rx-FFE
  - change vref_low_thres to all 25 (avoid toggling of vref_res)
  - cds_call=CDS_RECOVER whenever vref_shift is changed
02/06/2019 Paulo Urriza
  - reset ctrl_cdr_phase_on to 0 after phase train
  - do vref resoultion adapt at trx_train_end
  - reversed changelist again (was reversed on previous commit)
02/06/2019 Peter Wang
  - toggle reg_clear_dtl_clamping_triggered_lane before RX_INIT_DONE, RX_TRAIN_COMPLETE, and TX_TRAIN_COMPLETE
    this is to clear DTL clamping info before normal data transfer 
02/05/2019 Heejeong Ryu
  - added CDR_PHASE_OPT_FIRST_EN_LANE control register
  - reversed train gn1 polarity
  - fixed PT pattern change after txtrain
02/05/2019 Paulo Urriza
  - reorder ChangeList.txt (start from newest)
  - phase train: don't go right anymore (causes phase jump)
  - phase train: changed phase clamps to clamp16
  - enable midpoint on phase train (default k=12/16)
02/05/2019 Minh Tran 0.10.0.4
  - missing BANKING_CTRL in reset_pwr_reg() caused FW keeps restarting
  - reset reg_RX_INIT_DONE_LANE, reg_PIN_PLL_READY_RX_LANE and reg_PIN_PLL_READY_TX_LANE
    early as suggested by designer
02/05/2019 Paulo Urriza
  - replace ++ with >> for excel display
  - added more levels of R (via rs2) to maximize 16 R settings
  - changed gain train R to 3, which matches the old 7
02/02/2019 Paulo Urriza
  - fix long channel training failures after final resolution train
  - change phase train range to [-160,0] (positive ofsts are never optimal)
  - simplified CDS call for restrain (only DFE adapt)
  - bugfix: CDS_RESTRAIN was not properly called
  - [edit] redo dfe_init1/2 in phase train to reduce dependence from step to
    step
01/31/2019 Heejeong Ryu
  - set tag_MAX_BIG_LOOP=0
  - Updated txtrain driver polarity
  - updated trxtrain sequence
01/31/2019 Paulo Urriza
  - adjusted boost targets
  - fixed signs of boost target calculation
  - rx train will now prefer less boosting CTLE setting
  - [edit] slight correction to boost target based on all benchmark data
01/31/2019 Paulo Urriza
  - PAM2 fixes
  - use DFE_F0_RES_DOUBLE in outer eye calculation
  - bring gain train phase back to -80
01/30/2019 Heejeong Ryu
  - added FINAL_GAIN_ADJUST_EN register
01/30/2019 Paulo Urriza
  - added Final Gain Adjust feature (tag_FINAL_GAIN_ADJUST)
  - do not adapt vref during tx_train_init (ony f0)
01/30/2019 Heejeong Ryu
  - txtrain sequnce: do rxtrain first then txtrain
  - added P2P hold
  - forced tx ffe preset 2, 3 default value for test
  - fixed typo
  - c-1, c-2 reverse direction
1/29/2019 Peter Wang 
  - restated startup code that checks and clears reset status. This fixes a soc simulation issue where one lane does not power up after reset 
01/29/2019 Paulo Urriza
  - updated boost target based on 1st benchmark data
01/28/2019 Paulo Urriza
  - added DFE_FX_SEL_FP1 for f0x_select x = +1 (measure f1 in 112g)
  - added CLI command 0xF8 to measure fx via train_fn2_lane[7:0]
  - bug fix: fn2 readback was assigned to fn1
01/28/2019 Heejeong Ryu
  - added train_fn2_lane[7:0], train_f0x_lane[7:0] registers
  - updated txtrain 
  - added pt_out restore after train
  - set tx_preset_index = 3
01/25/2019 Paulo Urriza
  - added f0x measurement to CDS_PHASETRAIN and CDS_PHASETRAIN2 (used for
    benchmarking)
  - fixed missing train.f0x average (used in calculating fn2)
  - add vref resolution adaptation in trx_train_init()  
01/24/2019 Xu Han
  - fixed CDS stuck issue by adding delay before check calibration done in align90ee and ph_ctrl
01/24/2019 Paulo Urriza
  - refactored vrefshift code for improved clarity
  - no functional change from previous training algorithm
01/23/2019 Heejeong Ryu 
  - added missing txtrain rx sel bit control
01/23/2019 Paulo Urriza
  - added vrefshift to gaintrain (for very short channels)
  - added vrefshift to vref resolution train
  - fixed bug in phase train which causes early termination if f0d>f0a.
    This happens in short channel due to custom f0d resolution 
01/23/2019 Heejeong Ryu 0.10.0.1
  - added DFE_F0X_SEL_LANE control for Half rate F0x select to Fn2  
