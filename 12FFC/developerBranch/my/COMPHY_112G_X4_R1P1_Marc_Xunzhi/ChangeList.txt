//*********************************************************************
//	    COMPHY_112G_X4 Firmware Change History			
//
//   Copyright (c) 2019 Marvell Semiconductor, Inc. All rights reserved
//*********************************************************************
//Rule:
// <date> <name(must be two words)> <revision#> <JIRA#> <CETask#> <SOC release info>
// - summary of "what" change for "why" 
//*********************************************************************
03/05/2020 Marc Yu 40.10.12.1
  - Merged changes from https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1@r6093
03/05/2020 Xunzhi Wang 39.10.12.1
  - slumber_wakeup_with_speed_change: do not set pll ready twice in the sequence
  - Included sampler cal and sq cal into power up cal
  - [112G] Changed default_de_setting_112g(0x1f), DFE_RES_F0A_HIGH_THRES_INIT_112G_INTERCEPT(0x54)
03/04/2020 Xunzhi Wang 38.10.12.1
  - Reverted timer2_init position (34.10.12.1) because cpu_init set ET2=0 at rx_init mcu reset
  - slumber_wakeup_with_speed_change: just calling Calibration without init_tx_fir (using force_calibration flag)
  - Reverted '[56G] ctle_bypass==1: set opt.phase_offset_data=0 after gain train'(37.10.12.1) because 0.5M cable tests become worse
03/04/2020 Xunzhi Wang 37.10.12.1
  - [112G] Changed adv phase train loops for sub-functions
  - [112G] Added changes: PLL_LPFR_LANE=1,RX_SELMUFF_LANE=6,REG_SELMUPF_LANE=5
03/03/2020 Xunzhi Wang 36.10.12.1
  - Added mcu_debug_cmn_1[7:0].7->disable program memory check
  - Added new default settings in init_xdata_bank1(). User can use PWRON_SEQ_LANE==1 as indicator for the end of this function.
  -- Enabled slumber_wakeup_with_speed_change to work around Repeater->PCS mode change issue
  - [112G] Changed init tx fir to (pre3)1,4,13,45
  - [56G] ctle_bypass==1: set opt.phase_offset_data=0 after gain train
  - [112G] Record f1,fn1 moved to 0x6fcc+20*2
03/02/2020 Xunzhi Wang 35.10.12.1
  - [112G] Changed rl2_sel init formula to temperature/5
  - [112G] Added ffe_rl2_sel_adjust_qr inside ffe_rl2_tune_adjust_qr if rl2_tune saturate
  - [112G] Changed tag_CTLE_F0B_DIVISOR default to 4
  - [112G] rxdcc metric uses abs(Px's f1-fn1 minus Px+2's f1-fn1)
  - [112G] ckpx metric uses abs(Data's f1-fn1 minus Slicer's f1-fn1)
  - [112G] Changed adv phase train loops for sub-functions
02/27/2020 Xunzhi Wang 34.10.12.1
  - Removed load_from_ph_train_adv as it is not used
  - [112G] Changed f1,fn1 record order; cli 0xb1 calls record_f1_fn1
  - Changed timer2_init, CTLE_Adaptation_Init called position
02/26/2020 Xunzhi Wang 33.10.12.1
  - [112G] Changed CKP*_DA_TUNE_CODE default setting to 7,c,a,f (John)
  - [112G] Record f1,fn1 between phase_train_qr and ffe_rl2_tune_adjust_qr. 0x6fd8+18bytes.
  - [112G] Changed CDR_MODE_LANE to 5
02/26/2020 Xunzhi Wang 32.10.12.1 IPCE_COMPHY-1748 M-2021
  - Move 'reg_EOM_DLL_VDDA_CAL_BYPASS_EN_LANE = 1' from rx_eom_on_demand_cal_init_ram() to esm_exit(), must be before 'reg_EOM_CLK_EN_LANE = 0'. This is to handle phase shift during eom drawing.
  - Add programmable delay for eom dll cal. This depends on user environment impact on phase shift (temperature, etc.), so better leave a key. Default still 100us.
  -- EOM_DEBUG1_LANE[7:0].7: 1 means using 1ms as unit for [6:0]; 0 means using 100us as unit
  -- EOM_DEBUG1_LANE[7:0].6:0: delay time for EOM_DLL_VDDA_CAL before PI alignment; 0 means using default 100us
02/24/2020 Xunzhi Wang 31.10.12.1
  - [112G] Added phase_train_qr(), mcu_debug_cmn_20[7:0].1->phase_train_qr_en
  - [112G] Changed adv phase train time_delay to 6us
  - [112G] Do not restore dfe_sat_en after training
  - [112G] Changed adv phase train loops for sub-functions
  - [112G] Added train_debuga_lane[7:0].1->bypass_optimize_ckpx_tune
02/21/2020 Xunzhi Wang 30.10.12.1
  - [112G] Changed dd/de adjust max_cnt to 3, dd/de pair loop to 4
02/21/2020 Xunzhi Wang 29.10.12.1
  - Changed PAUSE_ST_TEST_A~E in adv_rx_phase_opt for all loops
  - [112G] Changed dd/de adjust max_cnt from 20 to 5
  - [112G] Changed init dd setting from 0x184 to 0x180
  - Added PAUSE_ST_TEST_F/9 in ffe_rl2_tune_adjust_qr
02/21/2020 Xunzhi Wang 28.10.12.1
  - Changed keeping rx_init_done value at Power_Slumber (23.10.12.1)
  - Reverted int2_isr (25.10.12.1)
  - Added PAUSE_ST_TEST_A~E to adv_rx_phase_opt
02/20/2020 Xunzhi Wang 27.10.12.1
  - [112G] Added ffe_rl2_tune_adjust_qr() to train ctle_rl2_tune using f0b-based metric
  -- mcu_debug_cmn_20[7:0].0->ffe_rl2_tune_adjust_qr_en
  - [112G] Added dd/de record at adv_rx_phase_opt (start from 0x6fcc, record 10 bytes)
02/19/2020 Xunzhi Wang 26.10.12.1
  - [112G] Bypass phase train (John)
  - [112G] Set opt.phase_offset_data=0 before and after gain train (force_phase_offset_data_before_gain_train_rd only for 56g)
02/18/2020 Xunzhi Wang 25.10.12.1
  - Code optimization: int2_isr, adv_rx_phase_opt, optimize_ckpx_tune, compute_avg_f0d, compute_f1_fn1
02/18/2020 Xunzhi Wang 24.10.12.1
  - Added cli 0xd1 for program memory reading; 0xd2 for internal memory reading; 0xd3 for checksum (result at cli_args_lane)
  - Do not check memory if FAST_POWER_ON_EN
02/14/2020 Xunzhi Wang 23.10.12.1
  - Changed setting rx_init_done to clearing it at Power_Slumber (Marc)
  - Changed mem2dat.pl: pad main.dat till 0x17ffc and add a 4-byte after for 0 checksum
  - Added 'program memory checksum check' feature at PowerUp_Seq_CMN (SoC, GLC5616-538)
  -- mcu_debug_cmn_1[7:0].0->check program memory done
  -- mcu_debug_cmn_1[7:0].1->program memory has wrong checksum 
02/13/2020 Xunzhi Wang 22.10.12.1
  - script_init: removed duplicate settings
  - SQ refthr reverted settings: trigger repeater mode unexpectedly
  -- calibration_debug0_lane[7:0].0->force SQ_REFTHR enable, if 0 use default 5 (53g)
  -- calibration_debug1_lane[7:0].[3:0]->force SQ_REFTHR value (53g)
  -- calibration_debug0_lane[7:0].1->force SQ_REFTHR enable, if 0 use default 5 (112g)
  -- calibration_debug1_lane[7:0].[7:4]->force SQ_REFTHR value (112g)
02/12/2020 Xunzhi Wang 21.10.12.1
  - Changed temp-based ctle adapt rl2_sel2 formular to support code less that tag_CTLE_TEMP_CONST_HR
  - Added programmable default de_cal_setting for 112g/56g (John):
  - mcu_debug_cmn_16[7:0].0->force_default_de_setting_112g
  - mcu_debug_cmn_16[7:0].1->force_default_de_setting_56g
  - mcu_debug_cmn_17[7:0]->default_de_setting_112g
  - mcu_debug_cmn_18[7:0]->default_de_setting_56g
02/11/2020 Xunzhi Wang 20.10.12.1
  - [112G] Swap vref_shift_adj and force_de_setting_before_apt as workaround: vref_shift_adj would change phase (John/Samuel)
02/11/2020 Xunzhi Wang 19.10.12.1
  - Include cli 0xb0 in SUPPORT_PRBS_CHECKER
  - Samuel's requests:
  -- [112G] SQ refthr 5->2; [53G] 5->3
  -- [112G] TX fir (pre3)1,3,13,46
02/10/2020 Xunzhi Wang 18.10.12.1 IPCE_COMPHY-1330
  - comphy_int 0x17: fixed main fir and [r1.2] fir bit issue
  - Comment gt1_dfe_res; include dfe_setoff/dfe_backon in SUPPORT_DFE_POWER_SAVING
  - Help Mo change dc_vref_adj: Enable DC VREF code transfer if for any samplers, abs(dc_sum) > thresh_2. Otherwise, exit function directly. In firmware based solution, reg_DFE_ADAPT_ADJ_VREF_DC_EN_LANE should be 0 all the time. While in hardware based solution, it should be set to 1 only during the '1 code transfer' operation.
02/07/2020 Xunzhi Wang 17.10.12.1
  - Fixed cds_load_vref: wrong bitwise-or operation
  - Added banking ctrl for calculate_train_fn1_fx_tmb
02/07/2020 Xunzhi Wang 16.10.12.1
  - Help Mo change dc_vref_adj: use FW to do dc_vref transfer without dfe_fsm; call dfe_save 
  - Reduce cds_load cases; Move debug.c to bank0
02/07/2020 Xunzhi Wang 15.10.12.1
  - Help Mo change dc_vref_adj: call cds_save
  - Help Mo change dfe_fsm: call cds_save(Savvref)
02/06/2020 Xunzhi Wang 14.10.12.1 IPCE_COMPHY-1330
  - Comment Rl2_sel_Table/ffe_final_gain_adjust (thanks to Grace's suggestion)
  - comphy_int 0x17: force input tx fir instead of current analog value; NOTE: speed_change_debug3_lane[7:0].4->no_tx_fir_reset_at_rx_init needs to be set to work
02/06/2020 Xunzhi Wang 13.10.12.1
  - Help Mo: Updated dfe_fsm() to prevent vref cross 0 boundary
  - Disable SUPPORT_DFE_POWER_SAVING for memory issue...
  - Fixed cds_load_vref() P4->P1
02/06/2020 Xunzhi Wang 12.10.12.1
  - dc_vref_adj calling: use 0xf07 as dfe_lpnum
  - dc_vref_adj: Mo fixed abort logic
  - vref_shift_adj: abort thresh 10->13; fix distance comparing logic
02/05/2020 Xunzhi Wang 11.10.12.1
  - Help Mo change dc_vref_adj: speed up: 1.abort when transfer finish; 2.reduce dfe_lpnum; 3.transfer_lpnum as input argument
  - Minor condition changes on gen number
02/05/2020 Xunzhi Wang 10.10.12.1
  - Restart ctle/phase adapt timer at the beginning of task instead of at the end
  - Added TEST_TIMER: record at mcu_reservedx03~00->measuing ctle adapt
02/04/2020 Xunzhi Wang 9.10.12.1 IPCE_COMPHY-1330
  - Fixed comphy_int 0x01 to use d1 instead of d2
02/04/2020 Xunzhi Wang 8.10.12.1
  - Help Mo change dc_vref_adj: updated the condition of disabling dc vref transfer for each path
02/04/2020 Xunzhi Wang 7.10.12.1
  - Help Mo change dc_vref_adj: adjust one dc code of data or slicer at a time; do not adjust when top vref<2 or bottom vref>-2
  - Comment SUPPORT_PRBS_CHECKER
02/03/2020 Xunzhi Wang 6.10.12.1
  - Fix 5.10.12.1
  -- get_vref_distance banking match issue
  -- vref_shift_adj before adv phase train
  -- no reg_CDS_VREF_VAL_FORCE_LANE = 1, set ctrl_cdr_phase_on = 0 for vref_shift_adj
02/03/2020 Xunzhi Wang 5.10.12.1
  - Move rx_init.c to bank2
  - [112G] res train from John/Grace:
  -- Disable VREF_resolution train
  -- mcu_debug_cmn_8[7:0].2->vref_shift_adj enable
  -- mcu_debug_cmn_8[7:0].3->vref target overwrite enable (if 0, slope=3, intercept=48)
  -- mcu_debug_cmn_11[7:0]->vref target slope
  -- mcu_debug_cmn_12[7:0]->vref target intercept
  -- f0_resolution+1 at the end of training for temperature>30
02/03/2020 Xunzhi Wang 4.10.12.1
  - SQ 53g overwrite feature (From Zhongjie):
  -- calibration_debug1_lane[7:0].4->force SQ_REFTHR enable, if 0 use default 5 (53g)
  -- calibration_debug1_lane[7:0].[3:0]->force SQ_REFTHR value (53g)
01/31/2020 Xunzhi Wang 3.10.12.1 GLC5616-529
  - speed_change_debug3_lane[7:0].4->no_tx_fir_reset_at_rx_init
01/30/2020 Xunzhi Wang 2.10.12.1
  - [112G] Advance phase training debug feature
  -- mcu_debug_cmn_8[7:0].4->apt_parameter_sel, 0 for f1_fn1, 1 for f0d
  -- mcu_debug_cmn_8[7:0].5->apt_de_sweep_down_first
  -- mcu_debug_cmn_8[7:0].6->apt_dd_sweep_down_first
01/30/2020 Xunzhi Wang 0.10.12.1
  - [r1.2] tx fir setting/ANA_REG_SU_DLY_SEL compiling fix after merge
01/30/2020 Marc Yu 0.10.12.00
  - x7121m initial firmware release
  - Supported data rate: 10.3125G, 25.78125G, 53.125G, 106.25G
  - Limitations: a. 100G RX train time is about 30s, b. 100G TX train is not supported in current R1.1 COMPHY
01/28/2020 Xunzhi Wang 9.10.11.144
  - [112G]Added programmable RX_ALIGN90_DE_CAL_SETTING_LANE[7:0] at the beginning of advanced phase training
01/28/2020 Xunzhi Wang 8.10.11.144
  - [PAM4]Added programmable RX_ALIGN90_DE_CAL_SETTING_LANE[7:0] at the beginning of advanced phase training
  -- mcu_debug_cmn_8[7:0].1->overwrite enable for RX_ALIGN90_DE_CAL_SETTING_LANE[7:0]
  -- mcu_debug_cmn_10[7:0]->RX_ALIGN90_DE_CAL_SETTING_LANE[7:0] before advanced phase training
01/23/2020 Xunzhi Wang 7.10.11.144
  - Fixed mcu_debug_cmn_9/mcu_debug_cmn_10 conversion
01/23/2020 Xunzhi Wang 6.10.11.144
  - Added programmable init phase_offset_data for pam4 
  -- mcu_debug_cmn_8[7:0].0->overwrite enable for gain_train
  -- mcu_debug_cmn_8[7:0].1->overwrite enable for phase_train
  -- mcu_debug_cmn_9[7:0]->gain_train init phase_offset_data for pam4
  -- mcu_debug_cmn_10[7:0]->phase_train init phase_offset_data for pam4
  - Added reg recording before advance phase train
  -- 0x6fe0: lsb of PH_OS_DAT
  -- 0x6fe1: msb of PH_OS_DAT
  -- 0x6fe2: lsb of RX_ALIGN90_DE_CAL_SETTING
  -- 0x6fe3: msb of RX_ALIGN90_DE_CAL_SETTING
01/27/2020 Xunzhi Wang 5.10.11.144
  - tx train call RX_Init (2.10.11.144) and do not change mcu_status
01/23/2020 Xunzhi Wang 4.10.11.144
  - Only tx_train re-apply script_init (2.10.11.144)
01/23/2020 Xunzhi Wang 3.10.11.144
  - Use interrupt_debug3 for rx_init interrupt counter
01/22/2020 Xunzhi Wang 2.10.11.144
  - Use MCU_RESERVEDX10_LANE.2 as phase adapt enable for non-qr; train_debug0_lane.2 only for 106g
  - Call script_init and real-time adapt init at the start of train
01/21/2020 Xunzhi Wang 9.10.11.143
  - Changed fir for 25g (pre 0x6,main 0x39,post 0)
  - Set dfe_sat_en_lane.0 = 0 during training
01/21/2020 Xunzhi Wang 8.10.11.143
  - Fixed reg_TX_FIR_TAP_POL_LANE_5_0 (set wrong register)
01/17/2020 Xunzhi Wang 7.10.11.143
  - Call tx_fir_init() in script_init
  - Added if(train.dfe_saturate==0) condition for gain_train credit++
  - updated cap table (John)
01/16/2020 Xunzhi Wang 6.10.11.143
  - enable SUPPORT_COMPHY_INT_01
01/16/2020 Xunzhi Wang 5.10.11.143
  - (Not enabled) Added bound feature for comphy_int 0x01
  - Gain train changed to credit-based control
01/16/2020 Xunzhi Wang 4.10.11.143 IPCE_COMPHY-1657
  - gain_train remove dfe_saturate condition
01/16/2020 Xunzhi Wang 3.10.11.143 IPCE_COMPHY-1657
  - Use DFE_RES_F0A_HIGH_THRES regs in 5.10.11.141 as mcu_debugd
  - comment break in gain_train
01/16/2020 Xunzhi Wang 2.10.11.143 IPCE_COMPHY-1657
  - revert 'pam4 gain train criteria change: use f0'
  - record gain train saturate
  - sync with main dev changes at 0.10.11.143
  - Changed dfe_adaptation.c:sum_my_abs_fx calculation
  For merge to 0.10.11.143:
  - Change to new cap training table (Xin Ma)
  - Record gain train saturate
  - Changed dfe_adaptation.c:sum_my_abs_fx calculation
01/15/2020 Xunzhi Wang 8.10.11.141 IPCE_COMPHY-1657
  - pam4 gain train criteria change: use f0
  - gain train cds call change (adapt f0)
  - record gain train f0
01/15/2020 Xunzhi Wang 7.10.11.141 IPCE_COMPHY-1657
  - Change to new cap table (Xin Ma)
01/15/2020 Xunzhi Wang 6.10.11.141 IPCE_COMPHY-1657
  - Use DFE_RES_F0A_HIGH_THRES regs in 5.10.11.141 as VREF_RES_HIGH_THRES
  - Updated record_train_result
01/14/2020 Xunzhi Wang 5.10.11.141 IPCE_COMPHY-1657
  - [Midas] updated. Included cds_lane part. Added cmn_xdat regs.
  - Added programable DFE_RES_F0A_HIGH_THRES_INIT overwrite registers for slope and intercept of pam2/53g/112g
  - Changed to TSEN_DAT_CEL for FW converted temperature
01/13/2020 Xunzhi Wang 4.10.11.141
  - Changed imp_cal sync interface to one byte per mcu_lane
01/13/2020 Xunzhi Wang 3.10.11.141
  - Changed 106g ctle rl2_sel2 init formula to Celsius-based
  - read_tsen_ram: adjust sequence of delay and reg_TSEN_ADC_RD_REQ = 1 (Xu)
01/13/2020 Xunzhi Wang 2.10.11.141
  - Changed tsen reading sequence; put in cmn_mcu and use mcu_debug_cmn_1 for buffered Celsius degree temperature
  - Updated cmx_CAL_DONE interface
  - reg_DFE_SAT_EN_LANE_1_0 only clear bit 1 in init_reg()
01/10/2020 Marc Yu 0.10.11.141
  - Added settings (IPCE_COMPHY-1564/IPCE_COMPHY-1657)
    -- [106G]tx_fir,pll_lpfr_lane,ckp*_da_tune_code,sq
    -- CDS_F2T_VAL,dfe_sat_en,real-time adaptation init settings
  - Added record_temp feature
  - Grace's suggestion (IPCE_COMPHY-1657, 0.10.11.138):
  	1.	tag_THRE_EXCELLENT is used at the beginning of R sweep, which means if f0d is greater than the threshold, R sweep will be skipped. In previous version, it was 31 as default for all the modes, 
	  	31 is useful for PAM4 at some other stages of training, and PAM4 f0d is usually smaller than 31, so there's no problem for PAM4. But for PAM2 (25G and 10G), f0d is usually less than 31, 
	  	so R sweep was skipped for most cases in LJ's test. And that's why R was always 3 (default). By changing it to 60 for PAM2, R sweep will nor be skipped any more, because f0d will not be greater than 60. 
      	2. 	DFE Res Train (F0) adjusts f0_resolution one more time after gain train, which often causes f0b saturation for PAM2 (no problem for PAM4). So I disable it. 
  - Grace's suggestion (IPCE_COMPHY-1657): Set pam2 tag_DFE_RES_F0A_HIGH_THRES_INIT saturate threshold to 40
  - [106G] Changed ctle adapt metric to fn1+f1-f0b/x (Xin Ma, IPCE_COMPHY-1571, fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P1_Marc_Xunzhi@r5572:5583)
01/09/2020 Marc Yu 0.10.11.140
  - Sync up to trunk https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1@r5585
01/08/2020 Xunzhi Wang 0.10.11.139
  - Revert change on cds_init(): cds_vref_value (0.10.11.136) -> prevent 53G/106G worse training performance
01/07/2020 Marc Yu 0.10.11.138
  - Grace's suggest:
	  1. tag_THRE_EXCELLENT is used at the beginning of R sweep, which means if f0d is greater than the threshold, R sweep will be skipped. 
	  In previous version, it was 31 as default for all the modes, 31 is useful for PAM4 at some other stages of training, 
	  and PAM4 f0d is usually smaller than 31, so there's no problem for PAM4. But for PAM2 (25G and 10G), f0d is usually less than 31, 
	  so R sweep was skipped for most cases in LJ's test. And that's why R was always 3 (default). By changing it to 60 for PAM2, R sweep will nor be skipped any more, because f0d will not be greater than 60. 
	  2. DFE Res Train (F0) adjusts f0_resolution one more time after gain train, which often causes f0b saturation for PAM2 (no problem for PAM4). So I disable it. 
  - https://essjira.marvell.com/browse/IPCE_COMPHY-1657
01/07/2020 Marc Yu 0.10.11.137
  - Commented out 100G rx_align90_de (&dd)_cal_setting based on updated JIRA
  - https://essjira.marvell.com/browse/IPCE_COMPHY-1564
01/06/2020 Xunzhi Wang 0.10.11.136 IPCE_COMPHY-1564/IPCE_COMPHY-1657
  - Added settings on:
  -- [106G]tx_fir,pll_lpfr_lane,dcc_cal,ckp*_da_tune_code,sq
  -- CDS_F2T_VAL,dfe_sat_en,real-time adaptation settings
  - Worked around cds part of midas missing issue: added settings in cds_init
01/03/2020 Xunzhi Wang 0.10.11.135 IPCE_COMPHY-1657
  - Added record_train_result feature (4 groups for phase train) for training debug (Grace)
01/02/2020 Xunzhi Wang 0.10.11.134 IPCE_COMPHY-1558
  - Added programmable starting rl2_sel2 at temperature 0: lnx_MCU_RESERVEDX14_LANE_7_0 (Xin Ma)
  - Moved ctle_adaptation.c to bank0: bank1 overflow
01/02/2020 Min Wu 0.10.11.133
  - Update the 106 CTLE C table based on Mengxi's data for better gain increase linearity.
12/20/2019 Xunzhi Wang 0.10.11.132
  - 56G and below: added new CTLE temperature-based rl2_sel2 control scheme [Same as informal version 2.10.11.131 from Xunzhi]
12/20/2019 Andrew Danilovic 0.10.11.131
  - All changes to sync up with the 
    SP4PHY14_TOP_CAL_pseudo_code_RELEASE_Dec18_2019 psuedo code document:
    - Add missing RX DCC5 Bypass clear in rx clk cal init
12/20/2019 Andrew Danilovic 0.10.11.130
  - All changes to sync up with the 
    SP4PHY14_TOP_CAL_pseudo_code_RELEASE_Nov22_2019 psuedo code document:
    - PLL Power on cal
       ...a. VCOAMP_VTH_SEL = 4'hD
    - EOM Power Saving (EOM clock disabled after power on cal, re-enabled
      if user requests EOM eye draw and disabled again after eye draw complete)
12/19/2019 Xunzhi Wang 0.10.11.129 IPCE_COMPHY-1558
  - script_init(): ctle iptat->1, mid->3 (John)
12/19/2019 Xunzhi Wang 0.10.11.128 IPCE_COMPHY-1558
  - dc_vref_adj: do not call dfe_fsm if reg_DFE_ADAPT_SPLR_EN_LANE_7_0==0
  - enable dc_vref_adj for non-QR
  - lnx_CAL_SAMPLER_RES_LANE_7_0 = OFST_RES after sampler cal
12/17/2019 Min Wu 0.10.11.127
  - Update the 106 CTLE C table based on John's suggestion.
12/17/2019 Jacky Liu 0.10.11.126
  - In phase_adaptation.c, fixed bug in the boundary checking logic to ensure align90de code is in between MIN and MAX_ALIGN90_REFCODE (0 to 192).
12/17/2019 Xunzhi Wang 0.10.11.125
  - Added more states for pause/trap interface(0.10.11.63): (Min Wu,IPCE_COMPHY-1609)
  -- PAUSE_ST_TRAIN_INIT 6: before gain train
  -- PAUSE_ST_GAIN_TRAIN 7: after gain train
  -- PAUSE_ST_DFE_RES_TRAIN 8: after dfe res train
  -- PAUSE_ST_INIT_PHASE_TRAIN 9: after init phase train
  - Init pre_code_on as 0 in loadspeedtbl_gen -> pam2 cannot work with pre_code_on
  - Do not let EOM functions access cds_table variable -> decouple const banking
  - Adjust debug registers
12/17/2019 Paulo Urriza 0.10.11.124
  - fixed fn1 averaging bug in RTPA (HR mode only uses P2 and P4, while QR uses
    P1-P4)
12/17/2019 Marc Yu 0.10.11.123
  - Soaked trunk's changes to r5431
12/16/2019 Xunzhi Wang 0.10.11.122
  - reverted back 'removing pt_en control' as 0.10.11.112: turned out not the cause for stuck (0.10.11.113)
  - Changed dc_vref_adj()'s place in dfe_backon(). MCU_DEBUGB_LANE.0 to control: for dfe_power_saving only, unverified (0.10.11.120)
12/16/2019 Marc Yu 0.10.11.121
  - Added debug feature for Min Wu to control APT on/off
  - APT on if lnx_TRAIN_DEBUGA_LANE_7_0 == 0, APT off otherwise
  - JIRA: https://essjira.marvell.com/browse/IPCE_COMPHY-1609
12/13/2019 Mo Yang 0.10.11.120
  - removed dfe_save() and dfe_load() in dc_vref_adj()
  - called dc_vref_adj() at the beginning of dfe_backon()
12/13/2019 Marc Yu 0.10.11.119
  - reverted to r5376 (0.10.11.117)
  - removed changes of r5370, r5369, r5368, [r5290, r5289(const banking)]
12/12/2019 Jacky Liu 0.10.11.118
  - In trx_train(), disabled advanced phase train (APT) and disabled save, load of APT registers. 
12/12/2019 Paulo Urriza 0.10.11.117
  - RTPA in 56G mode
12/10/2019 Marc Yu 0.10.11.116
  - Added debug feature for Min Wu to manually tune ctle c
  - JIRA: https://essjira.marvell.com/browse/IPCE_COMPHY-1609 
12/10/2019 Xinyu Yi 0.10.11.115
  - Added more snapshot save at different CDS stages.
12/09/2019 Xunzhi Wang 0.10.11.114
  - Added protection for all while loops in align90_phase_update/align90ee_ref_adapt
12/09/2019 Paulo Urriza 0.10.11.113
  - reverted pt_en change from 0.10.11.112 because it breaks regression
  - disabled alignee CDS stage on all modes not QR
12/06/2019 Xunzhi Wang 0.10.11.112
  - Merged trunk changes (https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1@r5288)
  -- Changes in r[5269,5280]
  -- Removed pt_en control for trx_train complete sequence
  -- Revert 'Speed up train timer for simulation'
  -- Adjust TRAIN_SIM_EN coverage: include train_status_reset()
12/06/2019 Marc Yu 0.10.11.111
  - soaked trunk changes of r5288 only
  -- svn merge -c r5288 https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1
  -- moved all const to bank0
12/05/2019 Marc Yu 0.10.11.110
  - soaked trunk changes (https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1@r5258)
  -- r1.2 support 
  -- comphy_int 0x17: clear force for all fir; trx_train: do not force internal train enable
  -- Keep reg_TX_TRAIN_COMP_WAIT_FRAME_LANE_6_0 as default 3 but wait 6us after tx train remote complete: solve frame detection loss issue at train complete
12/04/2019 Xunzhi Wang 0.10.11.109
  - Remove BANKING_CTRL for EOM_clock_analog_align() in bank0 (moved in 0.10.11.108): fix strange behavior that eom counters keep increasing in esm_measure()
12/04/2019 Xunzhi Wang 0.10.11.108
  - [106G] Merge phase adaptation functions
  - [106G] CTLE adaptation:
  -- Use new metric f0a-f1
  -- Changed CTLE init formula for rl2_sel and rl2_sel2
  -- Put reg_DFE_ADAPT_ADJ_VREF_DC_EN_LANE control inside dc_vref_adj
  - [106G] Added realtime dc_vref_adj()
  - Bank adjustment: phase_adaptation.c, ctle_adaptation.c
12/04/2019 Paulo Urriza 0.10.11.107
  - reverted rest of 0.10.11.103 which still caused 106G failure
12/02/2019 Paulo Urriza 0.10.11.106
  - reverted CDS full reset from 0.10.11.103 causing 106G failure
12/02/2019 Xunzhi Wang 0.10.11.105
  - Added rxdcc settings init at trx_train_init -> prepare for mcu_reset during phase functions
  - dfe_spd_init: no delay in the end
  - Added PowerUp_Seq_CMN to pull up ivref in mcu_cmn->independent process cal/tsen support
  - Removed first waiting for reg_PIN_PU_PLL_RD_LANE in PowerUp_Seq
  - Combine train_debug regs
  - Refine tx fir/SELMUPF/SELMUFF init logic
  - Added realtime_adapt_en: clear at rx_init and train start; set at train end
12/02/2019 Marc Yu 0.10.11.104
  - added reg_CDR_MODE_LANE_2_0 assignment in spd_ctrl.c according to JIRA https://essjira.marvell.com/browse/IPCE_COMPHY-1564
  - removed corresponding setting in script_init
12/01/2019 Paulo Urriza 0.10.11.103
  - added F0K as additional metric in gain train
  - in CDS_RECOVER and CDS_FINAL do a full reset of DFE via tag_DFE_LOAD_EN=0
  - [PAM4] final phase train at end of final_gain_adjust
  - [PAM4] if eye is closed after gain train, do an initial phase train
11/27/2019 Xunzhi Wang 0.10.11.102
  - [106G] Changed reg_selmupf_lane[3:0] from 5 to 6 (script_init, Fang/John/Zhengdong)
  - Init SELLV_TXCLK/SELLV_TXDATA as 9 (power.c:init_reg, Fang/John/Zhengdong) 
11/26/2019 Mo Yang 0.10.11.101
  - updated dc_vref_adi(): save dfe taps after aborting from dfe cont mode.
11/26/2019 Paulo Urriza 0.10.11.100
  - disabled FINAL_GAIN_ADJUST causing stuck 50G training in high/low temp
  - FINAL_GAIN_ADJUST stage is skipped pending debug of stuck issue
11/25/2019 Xunzhi Wang 0.10.11.99
  - vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1:r5061: 
  -- Speed up train timer for simulation
  -- Use isr_clear to clear isr
  - [106G] CDR_MODE_LANE=2 for 106g as in 2019/11/25 script for better performance (Fang)
11/23/2019 Paulo Urriza 0.10.11.98
  - [106G] CTLE table update, Rs2=0 (based on analog tuning)
11/22/2019 Xunzhi Wang 0.10.11.97
  - IPCE_COMPHY-1571: Keep reg_ANA_RSVD7_LANE_7_0[3:0] unchanged when setting [7:4]
  - Toggle reg_MCU_INT*_EN_LANE to re-trigger interrupts after mcu_reset (vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1:r5010)
  - Put script_init before rx_init_done=1 to make sure called before train_en
11/22/2019 Paulo Urriza 0.10.11.96
  - forced disable final_gain_adjust for QR (106G) modes
11/22/2019 Mo Yang 0.10.11.95
  - Disable dc vref transfer in PAM2 mode
  - Disable dc vref transfer for middle sampler when vref_shift is > 1
11/22/2019 Paulo Urriza 0.10.11.94
  - forced disable final_gain_adjust for PAM2 modes
11/21/2019 Andrew Danilovic 0.10.11.93
  - This commit brings the following calibration routines in sync with the
    SP4PHY14_TOP_CAL_pseudo_code_RELEASE_Nov20_2019 pseudo code document:
    - Rx clk power-on cal
    - Rx EOM power-on cal
    - DLL power-on cal
    - Tx/Rx power-on impedance cal
    - PLL DCC power-on cal
    - SQ power-on cal
    - Sampler power-on cal
    - TXDCC continuous cal
    - PLL DCC continuous cal
    More changes are still needed to implement EOM Power Saving.
11/21/2019 Paulo Urriza 0.10.11.92
  - phase train: start phase train at previous optimal
  - phase train (50G): do initial phase train at beginning of RxTrain
  - boost_target_c of 50G set back to 18
  - 50G/100G ffe_final_gain_adjust() updated to sweep res1, cap1, cap2, rs1_mid,
    cs1_mid
  - changed to accomodate extra sweeping - opt2train() will no longer Set_RxFFE
    (needs to be triggered separately)
11/20/2019 Xunzhi Wang 0.10.11.91
  - (0.10.11.77) Fixed missing storing/restoring reg_RX_ALIGN90_EE_CAL_BYPASS_EN_LANE
  - Removed reg_RX_DC_TERM_EN_LANE setting (SoC uses pin to control)
  - Adjusted train_sim_en coverage (suggested by Xu, vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1:r4967)
11/19/2019 Xinyu Yi 0.10.11.90
  - Save and restore the CDR_MODE value in CDS. The CDS would set CDR_MODE to 0 in DTL init stage, and load back its value after then.
11/18/2019 Xunzhi Wang 0.10.11.89
  - Set TRX_TRAIN_TIMEOUT_EN=0 for 106G
  - dfe_spd_init should always follows loadspeedtbl_gen even in simulation (Xu)
  - Fully init rxdcc cal settings
11/15/2019 Marc Yu 0.10.11.88
  - Grace requested to comment out an if branch in function: cdr_phase_opt()
  - JIRA: https://essjira.marvell.com/browse/IPCE_COMPHY-1578
11/15/2019 Xunzhi Wang 0.10.11.87
  - Added train_done=1 before rx_train_en=0
  - Included ANA_RSVD*(ctle_rl2_sel2_g_*) into ctle tuning:
  -- Changed set_ctle_tune to set_ctle_sel and set_ctle_sel2 (also changed "get" functions)
  -- Training calls set_ctle_sel2 based on temperature
  -- CTLE_Adaptation adjusts sel2 first. It only adjusts sel when sel2 hits boundary.
  - IPCE_COMPHY-1557 reduce 10G training time regarding phase
  -- cal_phase = RX_ALIGN90_DE_CAL_SETTING[7:0]
  -- flexible CDR_PHASE_MIN/MAX
  -- CDR_MIN_PHASE_OS_MODE01 = cal_phase - CDR_PHASE_MAX; CDR_MAX_PHASE_OS_MODE01 = cal_phase - CDR_PHASE_MIN
11/13/2019 Paulo Urriza 0.10.11.86
  - revert gain train change from 0.10.11.80
11/13/2019 Marc Yu 0.10.11.85
  - Enabled midpoint and related registers for Grace Yang
  - -r4761:r4887 https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P0_shared
  - https://essjira.marvell.com/browse/IPCE_COMPHY-1578
11/12/2019 Ka-Kit Ling 0.10.11.84
  - Remove the changes for  default value of amp_min and emph1_max 
11/11/2019 Xunzhi Wang 0.10.11.83
  - Changed reg_SQ_REFTHR_LANE_4_0 from 3 to 5 for 53G to fix retimer training ctle result overflow issue
11/11/2019 Andrew Danilovic 0.10.11.82
  - Fixed the sq offset and threshold calibration calculations by correctly converting to/from the HW numberline representation.
  - Set reg_SQ_CAL_INDV_EXT_EN_LANE to 0 in rx_sq_ofst_init_ram, to fix the case when sq offset cal is performed after power up, e.g. as part of speed change.
11/11/2019 Ka-Kit Ling 0.10.11.81
  - Changed default value for amp_min and emph1_max
11/11/2019 Marc Yu 0.10.11.80
  - 100G Re-aligned with Paulo's branch and added adv_ph at the end of training
11/08/2019 Marc Yu 0.10.11.79
  - fix of no response of PT_ERR_CNT and PT_CNT at 100G
  - root cause: AE forgot to include the following script (reg_TX_FIR_UPDATE_LANE = 0x0 -> 1) in JIRA https://essjira.marvell.com/browse/IPCE_COMPHY-1564
11/08/2019 Xunzhi Wang 0.10.11.78
  - Set TX_TRAIN_CODING_MODE_LANE to 1 only if reg_ETHERNET_MODE_LANE_1_0 is 2 or 3 -> keep PAM2 coding as user settings after training
11/06/2019 Xunzhi Wang 0.10.11.77
  - (Along with 0.10.11.55) Help Xu to add code to save and restore rx_dcc_cal_bypass_en regs: align90ee_ref_adapt.c ->fix dcc3/dcc4  wrong bypass_en after speed change from 100G to lower ones
  - Changed dfe_spd_init delay from 50ms to 100us to save training time (agreed by Xu)
11/06/2019 Paulo Urriza 0.10.11.76
  - removed redundant adapt_data/slicer_en
  - PAM2 Tx Preset set to 2 (different from PAM4)
  - set tag_THRE_EXCELLENT = 31 in script_init (fix Rx Train variation)
  - ignore train level during Rx Train except if it is level==5
  - PAM2 modes start at phase=0 before Rx Train
  - [100G] f1 saturation set to 63 (measured F1 via F0X)
  - [100G] do not overwrite target_c for QR
11/06/2019 Xunzhi Wang 0.10.11.75
  - Changed TX_TRAIN_CODING_MODE_LANE to 1: fix pre/gray coding mismatch issue with other vendors
  - Dedicate mcu_debug4/5/6 to train timer only
11/06/2019 Mo Yang 0.10.11.74
  - sampler_cal.c: add delay before sampler caliration done. Consult Xu for detail.
  - power.c: shut down DFE continuous mode when pull up RESET_DFE
11/05/2019 Xunzhi Wang 0.10.11.73
  - Group ctle-related speed table loading in one function. Called at trx_train_init.
  - Added options for speed_change_with_slumber, speed_change_with_analog_reset, slumber_wakeup_with_speed_change
11/04/2019 Xunzhi Wang 0.10.11.72
  - Changed reg_SQ_REFTHR_LANE_4_0 from 7 to 3 for 53G to fix link drop issue
  - Move rx_init checkpoint forward to before set_ctle_tune; do not redo rx_init when trapped at checkpoint
11/04/2019 Paulo Urriza 0.10.11.71
  - enable phase train for 25G
  - fix for tx train in PAM2
11/01/2019 Xunzhi Wang 0.10.11.70
  - Set/clear reg_RXIMPCAL_EN and reg_TXIMPCAL_EN only when the lane get the access
  - Load all CTLE related speed table at trx_train_init
  - [SPEEDTABLE CHANGE] Changed init CTLE settings based on Xin Ma's new requirement (v33.0 at sharepoint)
11/01/2019 Marc Yu 0.10.11.69
  - Made changes on 106G related code based on updated inputs from Paulo and Fang
  - https://essjira.marvell.com/browse/IPCE_COMPHY-1564
11/01/2019 Marc Yu 0.10.11.68
  - Merged Paulo's code related to the time of adv phase train according to https://essjira.marvell.com/browse/IPCE_COMPHY-1564
    -r4425:4465 https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P0_shared
10/31/2019 Marc Yu 0.10.11.67
  - Merged 106G training algo from:
    -r4228:r4425 https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P0_shared
  - Added 106G init script based on the following JIRA:
	https://essjira.marvell.com/browse/IPCE_COMPHY-1564
10/31/2019 Marc Yu 0.10.11.66
  - Removed all wtag to save code space.
10/30/2019 Andrew Danilovic 0.10.11.65
  - Change reg_TXSPEED_DIV_LANE_2_0 -> reg_RXSPEED_DIV_LANE_2_0 in rx_clk_cal_init_ram
  - Set reg_RXDCC_EN_DATACLK_LANE = 1 during continuous rx clk calibration to match the pseudo code
10/30/2019 Paulo Urriza 0.10.11.64
  - SUMF_BOOST_TARGET_C_LANE_7_0 unified to use 1 register
  - SUMF_BOOST_TARGET_K_LANE_7_0 unified to use 1 register
  - CDS_F0DK_RES_CUSTOM_EN_LANE = 0 (F0D stuck at F0A bug fix, phase train 
    should improve)
  - removed fn1 based logic (not needed after F0D fix)
  - target_c = 18 for PAM2, target_c = 96 for PAM4 (improve R consistency)
  - full Rx Train in PAM2 even with CTLE bypass on
  - disable 1st phase train except in QR
  - starting phase (for Rx Train) shifted to -60 (instead of 0)
10/30/2019 Xunzhi Wang 0.10.11.63
  - Do not set pll_ready at end of calibraion if next state is slumber to prevent pll_ready glitch
  - Added pause/trap interface (IPCE_COMPHY-1550):
  -- lnx_CLI_DEBUG0_LANE_7_0 bits definition:
  -- 7:4 pause_state_to_trap
  --- PAUSE_ST_CAL_START 0: start of cal
  --- PAUSE_ST_PLL_CAL 1: after pll cal before turn_off_cont_cal
  --- (reserved 2)
  --- PAUSE_ST_CAL_END 3: end of cal before pll ready
  --- PAUSE_ST_DTL 4: after rx_init and call trx_train_init (before gain train)
  --- PAUSE_ST_SLUMBER_WK 5: slumber wake up before pll ready
  -- 2: auto_trap_en: automatically trap next pause_state after release
  -- 1: trapped_flag: read only
  -- 0: trap_request
  -- trap: set pause_state_to_trap and trap_request, then FW sets trapped_flag when it reaches pause_state_to_trap
  -- auto_trap: set auto_trap_en, then FW sets trapped_flag, pause_state_to_trap and trap_request when it reaches next pause_state
  -- release: clear trap_request or change pause_state_to_trap
  -- Limitation: still actively respond to rx_init when trapped
  - TXDCC calibration sync up with SP4PHY14_TOP_CAL_pseudo_code_RELEASE_Oct28_2019
10/30/2019 Mo Yang 0.10.11.62
  - sampler_cal.c: disable writing calibration directly to analog register. There is no need to do it now.
  - cal_top.c move DFE_RESET release after loading calibration results to FEXT.
  - power.c: increase DFE_RESET release timeout period to guarantee enough time writing to analog register.
  - cdr_dfe_scheme.c, dfe_spd_init(): added timeout when dfe reset releases
10/28/2019 Xunzhi Wang 0.10.11.61 IPCE_COMPHY-1550
  - Added CTLE and DFE clear in trx_train_init
  - Added debug interface (cli_debug0_lane.0) to pause FW after rx_init
  - Initialize ANA_RSVD2/7/3/6,CTLE_RES1_SEL,CTLE_CAP1_SEL,CTLE_RS2_SEL_G_P*,CTLE_CAP2_SEL in loadspeedtbl_gen
  - Call CTLE_Adaptation_Init after rx_init
10/25/2019 Marc Yu 0.10.11.60
  - Merged updates from trunk /proj/cphyc12/wa/my/current/COMPHY_112G_X4_R1P1/firmware_rev/current@r4670
10/24/2019 Xunzhi Wang 0.10.11.59
  - TXDCC calibration sync up with SP4PHY14_TOP_CAL_pseudo_code_RELEASE_Oct23_2019
  -- Fully init txdcc cal settings
  -- In Cal_Cont, use CONT_EN instead of BYPASS_EN
10/24/2019 Mo Yang 0.10.11.58
  - set_dfe_en: always take control of DFE_EN
10/23/2019 Xunzhi Wang 0.10.11.57
  - Removed Mo's '0.10.11.54 set analog f0* to 32': FW would stuck when access related registers
10/23/2019 Xunzhi Wang 0.10.11.56
  - Added polling comphy_int at ST_NORMAL: handle comphy interrupt in unplug case
  - Changed TXDCC3/4 cal gm min value (IPCE_COMPHY-1541)
  - TXDCC calibration sync up in progress
  - Set reg_PLL_AMP_TOP_CONT_START_LANE = 0 in Calibration() and turn_on_cont_cal() to lower the risk in temperature ramping (From Hui Zhao)
  - Customized pll cal settings given cmx_PLLAMP_CAL_SPEEDUP_DISABLE
  - Enhanced ChangeList rule: name must be two words for SoC to parse version
  - Added checksum padding -> main.dat has 0 checksum
10/23/2019 Marc Yu 0.10.11.55
  - Help Xu to add code to save and restore rx_dcc_cal_bypass_en regs
  - ph_ctrl.c 
10/23/2019 Mo Yang 0.10.11.54
  - dfe_spd_init: toggle reset_dfe if reset_dfe != 1
  - dfe_spd_init: set fext* to 0, fext0* to 32, set analog f0* to 32
10/22/2019 Xunzhi Wang 0.10.11.53
  - Partially merged https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/COMPHY_112G_X4_R1P1 r4419:4619: Mo's change on 
  -- dfe_spd_init: disable DFE EQ for low data rates
  -- set_dfe_mod: comment reg_EN_DFE_VREF_LANE settings
  - Jackson's change on rxspeed.txt: change reg_dfe_dis_lane to be always 0 so that pu_dfe in analog is always 1 to fix a bug where offset dac is controlled by pu_dfe. digital will use rx_speed_div =>6 to turn off DFE on digital side
10/17/2019 Marc Yu 0.10.11.52
  - Modified sampler_cal.c according to the revised pseudo code
  - Justify indv_ext_en vaule based on RX_SPEED_DIV_LANE 
  - https://essjira.marvell.com/browse/IPCE_COMPHY-1537
10/17/2019 Marc Yu 0.10.11.51
  - Modified sampler_cal.c according to the most recently discussed pseudo code
  - Found root cause and fixed 3G mode sampler calibration all zero issue after pu toggling (reg_RESET_DFE_LANE can't be active during PU_PLL = 0) 
10/16/2019 Xunzhi Wang 0.10.11.50 IPCE_COMPHY-1509
  - Turned off PATTERN_LOCK_LOST_TIMEOUT_EN_LANE and TX_TRAIN_FRAME_DET_TIMER_ENABLE_LANE: workaround for tx training case if two PHY power up time skew is too large
  - Cleared FRAME_DET_TIMEOUT_ISR, STATUS_DET_TIMEOUT_ISR at starting of training for clean debugging
10/16/2019 Paulo Urriza 0.10.11.49
  - turn off/on phase train at trx_train_init (data rate dependent)
10/15/2019 Paulo Urriza 0.10.11.48
  - Improved handling of VREF_SHIFT when doing gain train with bypass
  - It will go through the train_c and bypass first before VREF_SHIFT
  - TRAIN_DEBUG2_LANE_7_0 (set to 0 (default) if BYPASS is allowed,
    Set to NOT 0 if BYPASS is NOT allowed (old gain train)
10/15/2019 Xunzhi Wang 0.10.11.47
  - Added 0.5us delay protection after PLL_DCC_TOP_START=1
  - Hard-coded SELMUPF/SELMUFF settings for 25G
  - Updated pll speed table to deal with crosstalk at 25G & 53G (From Hui Zhao)
10/14/2019 Paulo Urriza 0.10.11.46
  - initialize CTLE_BYPASS1_EN
  - measure f0d during gain train
  - new gain train (includes CTLE bypass)
  - rx train force to r=15 when CTLE bypass
10/11/2019 Xunzhi Wang 0.10.11.45
  - PLL cal consistency fix:
  -- Set reg_LCPLL_TEMPC_EXT_EN_LANE=1 to force LCPLL_TEMPC_MUX*
  -- Increase timer for amp cal to converge: 
  -- PLL_AMP_CAL_SINGLE_MODE_STEPSIZE_LANE = 2; PLL_AMP_CAL_CONT_MODE_STEPSIZE_LANE = 2; PLL_AMP_CAL_SAMPLE_PULSE_DIV_LANE = 0xff
  -- Accumulate cal_pll_amp_result to reg_PLL_AMP_CAL_RESULT_EXT_LANE_7_0
  -- Set *DIG_CAL2M_DIV to 0x4e
  - reg_SMPLR_CAL_EN_P1P3_LANE = 0 position change in sampler cal (Marc)
10/11/2019 Xunzhi Wang 0.10.11.44
  - Use lane regs for speed_thresh->Different lanes can do pll_cal at different speeds
  - Calibration sequence sync up with SP4PHY14_TOP_CAL_pseudo_code (partial):
  -- Wait for reg_TSEN_ADC_RDY before calibration
  -- Delay 8us after pll_cal_init
  -- Commented load_init_temp_table as it is outdated
  -- Added MSB_CAL,flag=1 finishing condition
  -- Set reg_PLL_AMP_CAL_SAMPLE_PULSE_DIV_LANE_7_0 to 0x64
  -- Sampler cal: uncomment set OFST as SMPLR*CAL_RESULT_RD
10/08/2019 Xunzhi Wang 0.10.11.43
  - Changed TX_TRAIN_COMP_WAIT_FRAME_LANE to 0x3f (add both FW and HW delay) to send enough complete messages
  - Added Marc's wtag debug feature
10/08/2019 Xunzhi Wang 0.10.11.42
  - Hard-coded SELMUPF/SELMUFF settings: later will be in speed table pending analog designer review
  - Restored CTLE_CAP1_SEL as 21 at loadspeedtbl_gen
  - Sync'ed up with SP4PHY14_TOP_CAL_pseudo_code on dcc cal
  - Do not restore_xdata in reg_PHY_FM_RST_LANE branch
10/07/2019 Marc Yu 0.10.11.41
  - remove changes of 100G training to keep 53G code clean (r4464:r4456)
10/07/2019 Xunzhi Wang 0.10.11.40
  - By default enabled script_init
  - At align90_phase_update, check RX_CLK_TOP_CONT_START first to avoid stuck at RX_CLK_TOP_CONT_DONE
  - Turn on cont cal at slumber wakeup. Removed(Reverted) *DIG_CAL_CLK_RST* toggle at the end of turn_off_cont_cal
10/07/2019 Marc Yu 0.10.11.39
  - Merged latest 100G data rate training codes from R1P0 to R1P1
  - Merged r4228:r4425 https://vc01.marvell.com/svn/CESD/fw_repo/12FFC/developerBranch/my/COMPHY_112G_X4_R1P0_shared
10/01/2019 Xunzhi Wang 0.10.11.38
  - Improved TX train sequence/performance after AutoNeg:
  -- Changed tag_TX_PRESET_INDEX_HR to 2
  -- Added reg_TX_TRAIN_ENABLE_FM_REG_LANE control for internal train_enable
  -- Added break on train_stop in set_remote_tx
  -- Toggled RST_TX_TRAIN_IF_CLK before setting tx fir to get back control from previous tx training
  -- Not send internal tx train complete if train_stop
  -- Not restore reg_TRAIN_TX_SEL_BITS_LANE/reg_TRAIN_RX_SEL_BITS_LANE after training
  -- Added *DIG_CAL_CLK_RST* toggle at the end of turn_off_cont_cal; call turn_off_cont_cal before slumber
  - Added speed change protection for Power_Patial_Slumber (check speed change when waking up)
  - Added checking pu level at Power_Patial_Slumber in case of fast pu_pll up
  - Changed LCPLL_TEMPC_MUX_SEL_EXT/LCPLL_TEMPC_MUX_HOLD_SEL_EXT from default 2 to 7 (3 to 5 in binary) before pll_cal: avoid marginal cal result
  - Added 0.5us delay between reg_RX_SQ_TOP_START_LANE=1 and reading reg_RX_SQ_TOP_DONE_LANE, as the protection from reading previous result
09/27/2019 Xunzhi Wang 0.10.11.37
  - Updated script_init
  - Added 53g tx equalizer settings in loadspeedtbl_gen
  - Disabled sq settings during trx_train
  - GLC5616-370: Fixed RX train stuck at speed change: do not operate on DTL/DTX/DFE at speed change isr
  - Added debug state info by train_debug4~b, phase_debug0, interrupt_debug0~2, speed_change_debug0~1
  - Reduced TX train stuck chance after AutoNeg:
  -- Break on train_stop when waiting for remote complete
  -- Disable interrupt from setting internal complete to getting remote complete
  -- Kept train_enable on internally during training for digital to work as expected
  -- Changed tag_TX_PRESET_INDEX_HR from 3 to 1
09/24/2019 Xunzhi Wang 0.10.11.36
  - Added ctle/ana_rsvd part in script_init
  - GLC5616-377: Changed init value for CTLE_RES1_SEL at 1G/2.5G/5G
  - !Ignore PLL_TEMP_CAL_CONT_EN. Later change midas.
09/23/2019 Xunzhi Wang 0.10.11.35
  - !X7121M A0 workaround warning: Added reg_SFT_RST_NO_REG_FM_REG_LANE=1
09/20/2019 Xunzhi Wang 0.10.11.34
  - Added TRAIN_USE_S/TRAIN_USE_D in script_init 
09/19/2019 Xunzhi Wang 0.10.11.33 GLC5616-368
  - TX train end: wait for TX_TRAIN_COMP_WAIT_FRAME_LANE instead of 4*TX_TRAIN_COMP_WAIT_FRAME_LANE; Manage the time between int_tx_train_comlete digital pin_tx_train_complete
  - Changed saturation criteria from opt.eo/opt.level to train.eo/train.level
09/16/2019 Xunzhi Wang 0.10.11.32 GLC5616-370
  - Changes to help FW work at SFT_RST_NO_REG_FM_REG_LANE=1:
  -- Added speed change/pu down protection: do not speed change when pu down; detect speed change at wake up and main
  -- Speed change at main goes to ST_INIT as a temp solution for clean speed change
  -- At Power_Slumber_Wakeup, poll reg_PIN_PU_PLL_RD_LANE in case of fast pu_pll up
  - At Power_Slumber, check reg_PIN_PU_PLL_RD_LANE instead of reg_PU_PLL_LANE
09/13/2019 Xunzhi Wang 0.10.11.31 GLC5616-330/GLC5616-333
  - PLL_AMP_CAL: 1) Keep VCOAMP_VTH_SEL = TH_NORMAL; 2) PLL_AMP_TOP_CONT can still be controlled by cmx_PLLAMP_CAL_CONT_EN
  - Updated turn_off_cont_cal; called at the beginning of calibration
09/11/2019 Xunzhi Wang 0.10.11.30
  - Added pt_en/PT_TX_PATTERN_SEL/tx_sel_bits/rx_sel_bits restore for SoC AutoNeg speed change issue (restore_xdata)
  - Use calibration_debug0_lane.0 to control script_init
09/10/2019 Xunzhi Wang 0.10.11.29
  - Added r1.0 test chip script as script_init() after calibration
09/10/2019 Xunzhi Wang 0.10.11.28
  - Applied new sequence on PLL_AMP_CAL based on Hui Zhao's 20190909 requirement
09/09/2019 Xunzhi Wang 0.10.11.27
  - Added forcing pll amp cal result to 0x80; Changed sequence to before reg_PLL_AMP_TOP_CONT_START_LANE
09/09/2019 Xunzhi Wang 0.10.11.26
  - Added forcing pll amp cal result to 0xbf
09/06/2019 Xunzhi Wang 0.10.11.25 GLC5616-343
  - Initialized RX_TRAIN_TIMER as 2999ms
  - Initialized REF1M_GEN_DIV_LANE as ref clock for *_TRAIN_TIMER to work at correct frequency
  - Set gray code and pt_prbs_inv based on signaling (GLC5616-343)
09/05/2019 Xunzhi Wang 0.10.11.24 GLC5616-326
  - Added delay before checking imp cal done
  - New imp cal sync up control: lane mcu issues request and cmn mcu gives permission
08/23/2019 Marc Yu 
  - Engineering image for Datacom X7121 (0.10.11.23)
  - Support of 53G TRX training
  - Support of stage 1 COMPHY INT funtions (0x0, 0x10, 0x11, 0x12, 0x13, 0x14, 0x17, 0x20)
  - Limitation: For 53G data rate, if long trace training results are applied to short trace, TXFFE C-1 need to be decreased under saturation condition.
08/23/2019 Marc Yu 0.10.11.23
  - Commented out _LAB to remove UART debug information print-out
08/22/2019 Marc Yu 0.10.11.22
  - Added Datacom COMPHY_INT feature, supporting function: 0x0, 0x10 ~ 0x14, 0x17, 0x20
08/21/2019 Xunzhi Wang 0.10.11.21
  - Changed rx_init polling to interrupt with mcu_reset for fast response
  - Removed set_dfe_cont in ctle adaptation to avoid issue after mcu_reset
  - Changed prbs_check_uninit position for simulation
08/18/2019 Marc Yu
  - Repo locked for X7121 release preparation
08/15/2019 Marc Yu 0.10.11.20
  - Merged changes from R1P0 upto r4117
08/08/2019 Xunzhi Wang 0.10.11.19 IPCE_COMPHY-1424 M-1587
  - Added TX_TRAIN_CODING_MODE_LANE option for user to choose gray code setting at training
  - Removed rom test calling for SoC simulation
  - At training end, added waiting for reg_REMOTE_STATUS_BITS_LANE_15_0 bit 15 to 1
08/01/2019 Xunzhi Wang 0.10.11.18 <> M-1587
  - Update reg_TRAIN_TX_SEL_BITS_LANE/reg_TRAIN_RX_SEL_BITS_LANE sequence at trx_train: set 1 at ethernet mode(0 otherwise), and take reg_*_sel_bits_lane when completed.
06/12/2019 Xinyu Yi 0.10.11.17
  - In CDS function, use register reg_DFE_EN_LANE to replace FW varibale dfe_dis to skip DFE run.
05/13/2019 Marc Yu 0.10.11.16
  - Generated ROM code for DataCom SOC release
  - Re-structured ROM/RAM files and codes
  - Moved unused code to unused folders
05/10/2019 Xinyu Yi 0.10.11.15
  - Change the bit width for reg_RXTRAIN_C_IDX_LANE from 4 to 8.
04/25/2019 Xunzhi Wang 0.10.11.14 <> M-1587
  - Clear gray code en bits at trx_train
  - Update Xu's trx_train ending sequence with enough TTIU and no exposed clock change 
04/24/2019 Xinyu Yi 0.10.11.13 
  - Updated CDS timer to get faster training time. These values are based on testing result from previous COMPHY_56G_X4 PHY. 
04/15/2019 Xunzhi Wang 0.10.10.13 <> M-1587
  - Update reg_TRAIN_TX_SEL_BITS_LANE/reg_TRAIN_RX_SEL_BITS_LANE sequence at trx_train.
04/12/2019 Marc Yu 0.10.10.12
  - Merged latest R1P0 and R1P1
  - R1P0: 0.10.10.19, svn rev: 3319, Last Changed Author: pmurriza
  - R1P1: 0.10.10.11, svn rev: 3254, Last Changed Author: my
  - Added R1P0 latest changes to R1P1
  - Kept R1P1-specific new RTL changes and latest FW changes
  - Updated and re-compiled header files to latest midas 
  - Combined reg_PT_TX_PATTERN_SEL_LANE_5_0_b_0 and reg_PT_TX_PATTERN_SEL_LANE_5_0_b_1 into the new midas-defined reg_PT_TX_PATTERN_SEL_LANE_5_0 
03/07/2019 Marc Yu 0.10.10.11
  - modified txspeed.txt, DSP made change to swap tx_emph0_default3_lane[4:0] and tx_emph1_default3_lane[4:0] contents
  - no compiling need, only SERDES_REFxxMHz_SPDCHG0_LANE.dat and SERDES_REFxxMHz_SPDCHG0_LANE.mem are committed 
03/05/2019 Marc Yu 0.10.10.10
  - change the hard-coded registers to follow the speed table values
03/01/2019 Heejeong Ryu
  - fixed train simulation failue
02/27/2019 Heejeong Ryu 0.10.10.8
  - updated uart to use MCUCLK=400MHz
  - added MCU_FREQ control and updated delay_ram function  
  - fixed train_if simulation stuck
  - updated spdtbl, spdchg
02/21/2019 Paulo Urriza
  - update train_done_lane everytime trx_train_control is called
02/21/2019 Peter Wang
  - clear repeater mode clamping flag for rx and tx
02/21/2019 Heejeong Ryu
  - updated spdtbl
02/20/2019 Heejeong Ryu
  - Roll back MCU_FREQ for temp
02/15/2019 Heejeong Ryu
  - fixed delay time for various mcuclk
  - updated tx preset 3 default value (0,f,30,0): TODO: speed table update
02/16/2019 Paulo Urriza
  - increase g0 again if gn1 or gn2 magnitude increase failed (maintain
    p2phold)
  - display remote_status_g after set_remote_tx() is called (not before)
  - increase tx step num from 6 to 10 (just for safety)
  - tx train now functional, and preserves p2p
02/15/2019 Heejeong Ryu
  - added MCU_FREQ and updated delay function
02/14/2019 Paulo Urriza
  - temporarily disable TX_TRAIN_FAILED_LANE condition (trx train is still
    > 3sec which causes timeout)
02/14/2019 Paulo Urriza
  - fix order of tx train remote commands to avoid exceeding P2P
  - move order of debug message in req_local_ctrl
  - do CDS call before first tx train vote
02/14/2019 Paulo Urriza
  - set f0x_select to FN2 during trx_train_init if in HR mode
02/13/2019 Paulo Urriza
  - use CDS_PHASETRAIN2 for tx train
  - reverse gn1_adjust voting polarity
  - change order of tx train and rx train
  - do txtrain twice
  - tx train is functional on relatively short channels
02/12/2019 Paulo Urriza
  - remove extra CDS call before phase train
  - use f0a_max for f0_res adaptation instead of average f0
02/12/2019 Peter Wang
  - remove config_sampler_p1to3_ext and config_sampler_p2to4_ext from power up functions 
02/12/2019 Paulo Urriza
  - re-adapt DFE after phase jump at end of gain train
02/10/2019 Paulo Urriza
  - use single vref_low threshold
02/09/2019 Paulo Urriza
  - start VREF_SHIFT=1 (identical to 0)
  - remove reset from CDS_RECOVER
  - use VREF forcing value (25) when using VREF_SHIFT 
02/07/2019 Paulo Urriza
  - added CDS_RECOVER cds_call (to re-adapt VREF from reset)
  - do vref resolution adapt after Rx-FFE
  - change vref_low_thres to all 25 (avoid toggling of vref_res)
  - cds_call=CDS_RECOVER whenever vref_shift is changed
02/06/2019 Paulo Urriza
  - reset ctrl_cdr_phase_on to 0 after phase train
  - do vref resoultion adapt at trx_train_end
  - reversed changelist again (was reversed on previous commit)
02/06/2019 Peter Wang
  - toggle reg_clear_dtl_clamping_triggered_lane before RX_INIT_DONE, RX_TRAIN_COMPLETE, and TX_TRAIN_COMPLETE
    this is to clear DTL clamping info before normal data transfer 
02/05/2019 Heejeong Ryu
  - added CDR_PHASE_OPT_FIRST_EN_LANE control register
  - reversed train gn1 polarity
  - fixed PT pattern change after txtrain
02/05/2019 Paulo Urriza
  - reorder ChangeList.txt (start from newest)
  - phase train: don't go right anymore (causes phase jump)
  - phase train: changed phase clamps to clamp16
  - enable midpoint on phase train (default k=12/16)
02/05/2019 Minh Tran 0.10.0.4
  - missing BANKING_CTRL in reset_pwr_reg() caused FW keeps restarting
  - reset reg_RX_INIT_DONE_LANE, reg_PIN_PLL_READY_RX_LANE and reg_PIN_PLL_READY_TX_LANE
    early as suggested by designer
02/05/2019 Paulo Urriza
  - replace ++ with >> for excel display
  - added more levels of R (via rs2) to maximize 16 R settings
  - changed gain train R to 3, which matches the old 7
02/02/2019 Paulo Urriza
  - fix long channel training failures after final resolution train
  - change phase train range to [-160,0] (positive ofsts are never optimal)
  - simplified CDS call for restrain (only DFE adapt)
  - bugfix: CDS_RESTRAIN was not properly called
  - [edit] redo dfe_init1/2 in phase train to reduce dependence from step to
    step
01/31/2019 Heejeong Ryu
  - set tag_MAX_BIG_LOOP=0
  - Updated txtrain driver polarity
  - updated trxtrain sequence
01/31/2019 Paulo Urriza
  - adjusted boost targets
  - fixed signs of boost target calculation
  - rx train will now prefer less boosting CTLE setting
  - [edit] slight correction to boost target based on all benchmark data
01/31/2019 Paulo Urriza
  - PAM2 fixes
  - use DFE_F0_RES_DOUBLE in outer eye calculation
  - bring gain train phase back to -80
01/30/2019 Heejeong Ryu
  - added FINAL_GAIN_ADJUST_EN register
01/30/2019 Paulo Urriza
  - added Final Gain Adjust feature (tag_FINAL_GAIN_ADJUST)
  - do not adapt vref during tx_train_init (ony f0)
01/30/2019 Heejeong Ryu
  - txtrain sequnce: do rxtrain first then txtrain
  - added P2P hold
  - forced tx ffe preset 2, 3 default value for test
  - fixed typo
  - c-1, c-2 reverse direction
1/29/2019 Peter Wang 
  - restated startup code that checks and clears reset status. This fixes a soc simulation issue where one lane does not power up after reset 
01/29/2019 Paulo Urriza
  - updated boost target based on 1st benchmark data
01/28/2019 Paulo Urriza
  - added DFE_FX_SEL_FP1 for f0x_select x = +1 (measure f1 in 112g)
  - added CLI command 0xF8 to measure fx via train_fn2_lane[7:0]
  - bug fix: fn2 readback was assigned to fn1
01/28/2019 Heejeong Ryu
  - added train_fn2_lane[7:0], train_f0x_lane[7:0] registers
  - updated txtrain 
  - added pt_out restore after train
  - set tx_preset_index = 3
01/25/2019 Paulo Urriza
  - added f0x measurement to CDS_PHASETRAIN and CDS_PHASETRAIN2 (used for
    benchmarking)
  - fixed missing train.f0x average (used in calculating fn2)
  - add vref resolution adaptation in trx_train_init()  
01/24/2019 Xu Han
  - fixed CDS stuck issue by adding delay before check calibration done in align90ee and ph_ctrl
01/24/2019 Paulo Urriza
  - refactored vrefshift code for improved clarity
  - no functional change from previous training algorithm
01/23/2019 Heejeong Ryu 
  - added missing txtrain rx sel bit control
01/23/2019 Paulo Urriza
  - added vrefshift to gaintrain (for very short channels)
  - added vrefshift to vref resolution train
  - fixed bug in phase train which causes early termination if f0d>f0a.
    This happens in short channel due to custom f0d resolution 
01/23/2019 Heejeong Ryu 0.10.0.1
  - added DFE_F0X_SEL_LANE control for Half rate F0x select to Fn2  

