                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (May 26 2011) (Linux)
                              4 ; This file was generated Thu Oct 18 21:22:06 2018
                              5 ;--------------------------------------------------------
                              6 	.module tx_train
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _TI
                             14 	.globl _RI
                             15 	.globl _EX12
                             16 	.globl _EX11
                             17 	.globl _EX10
                             18 	.globl _EX9
                             19 	.globl _EX8
                             20 	.globl _ES1
                             21 	.globl _PS1
                             22 	.globl _EX6
                             23 	.globl _EX5
                             24 	.globl _EX4
                             25 	.globl _EX3
                             26 	.globl _EX2
                             27 	.globl _EX7
                             28 	.globl _EA
                             29 	.globl _WDT
                             30 	.globl _ET2
                             31 	.globl _ES
                             32 	.globl _ET1
                             33 	.globl _EX1
                             34 	.globl _ET0
                             35 	.globl _EX0
                             36 	.globl _TF1
                             37 	.globl _TR1
                             38 	.globl _TF0
                             39 	.globl _TR0
                             40 	.globl _IE1
                             41 	.globl _IT1
                             42 	.globl _IE0
                             43 	.globl _IT0
                             44 	.globl _P3_7
                             45 	.globl _P3_6
                             46 	.globl _P3_5
                             47 	.globl _P3_4
                             48 	.globl _P3_3
                             49 	.globl _P3_2
                             50 	.globl _P3_1
                             51 	.globl _P3_0
                             52 	.globl _P2_7
                             53 	.globl _P2_6
                             54 	.globl _P2_5
                             55 	.globl _P2_4
                             56 	.globl _P2_3
                             57 	.globl _P2_2
                             58 	.globl _P2_1
                             59 	.globl _P2_0
                             60 	.globl _P1_7
                             61 	.globl _P1_6
                             62 	.globl _P1_5
                             63 	.globl _P1_4
                             64 	.globl _P1_3
                             65 	.globl _P1_2
                             66 	.globl _P1_1
                             67 	.globl _P1_0
                             68 	.globl _P0_7
                             69 	.globl _P0_6
                             70 	.globl _P0_5
                             71 	.globl _P0_4
                             72 	.globl _P0_3
                             73 	.globl _P0_2
                             74 	.globl _P0_1
                             75 	.globl _P0_0
                             76 	.globl _DMAC
                             77 	.globl _DMATA
                             78 	.globl _DMASA
                             79 	.globl _TMR2
                             80 	.globl _TMR1
                             81 	.globl _TMR0
                             82 	.globl _SRST
                             83 	.globl _B
                             84 	.globl _EIE
                             85 	.globl _ACC
                             86 	.globl _ADCON
                             87 	.globl _PSW
                             88 	.globl _TH2
                             89 	.globl _TL2
                             90 	.globl _RCAP2H
                             91 	.globl _RCAP2L
                             92 	.globl _T2CON
                             93 	.globl _CCEN
                             94 	.globl _IRCON
                             95 	.globl _S0RELH
                             96 	.globl _IP1
                             97 	.globl _IEN1
                             98 	.globl _DMAM1
                             99 	.globl _DMAM0
                            100 	.globl _DMASEL
                            101 	.globl _DMAC2
                            102 	.globl _DMAC1
                            103 	.globl _DMAC0
                            104 	.globl _P3
                            105 	.globl _S0RELL
                            106 	.globl _IP0
                            107 	.globl _IEN0
                            108 	.globl _DMAT2
                            109 	.globl _DMAT1
                            110 	.globl _DMAT0
                            111 	.globl _DMAS2
                            112 	.globl _DMAS1
                            113 	.globl _DMAS0
                            114 	.globl _P2
                            115 	.globl _IEN2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _PSBANK
                            119 	.globl _DPS
                            120 	.globl _P1
                            121 	.globl _CKCON
                            122 	.globl _TH1
                            123 	.globl _TH0
                            124 	.globl _TL1
                            125 	.globl _TL0
                            126 	.globl _TMOD
                            127 	.globl _TCON
                            128 	.globl _PCON
                            129 	.globl _WDTREL
                            130 	.globl _DPH
                            131 	.globl _DPL
                            132 	.globl _P0
                            133 	.globl _sq_thrs_ratio_tb
                            134 	.globl _train_save_tb
                            135 	.globl _tx_tb
                            136 	.globl _UPHY_ANAREG_REV_0
                            137 	.globl _dfe_sm_save
                            138 	.globl _dfe_sm_dc
                            139 	.globl _dfe_sm
                            140 	.globl _cds28
                            141 	.globl _lnx_calx_align90_gm
                            142 	.globl _lnx_calx_align90_dac
                            143 	.globl _lnx_calx_align90_dummy_clk
                            144 	.globl _lnx_calx_eom_dpher
                            145 	.globl _lnx_calx_vdda_dll_eom_sel
                            146 	.globl _lnx_calx_dll_eom_gmsel
                            147 	.globl _lnx_calx_vdda_dll_sel
                            148 	.globl _lnx_calx_dll_gmsel
                            149 	.globl _lnx_calx_rxdcc_dll_hg
                            150 	.globl _lnx_calx_rxdcc_dll
                            151 	.globl _lnx_calx_txdcc_hg
                            152 	.globl _lnx_calx_txdcc
                            153 	.globl _lnx_calx_txdcc_pdiv_hg
                            154 	.globl _lnx_calx_txdcc_pdiv
                            155 	.globl _lnx_spdoft_tx_preset_index_lane
                            156 	.globl _lnx_cal_sellv_rxeomclk
                            157 	.globl _lnx_cal_sellv_rxsampler
                            158 	.globl _lnx_cal_sellv_txpre
                            159 	.globl _lnx_cal_sellv_rxdataclk
                            160 	.globl _lnx_cal_sellv_txclk
                            161 	.globl _lnx_cal_sellv_txdata
                            162 	.globl _lnx_cal_align90_gm
                            163 	.globl _lnx_cal_align90_dac
                            164 	.globl _lnx_cal_align90_dummy_clk
                            165 	.globl _lnx_cal_eom_dpher
                            166 	.globl _lnx_cal_vdda_dll_eom_sel
                            167 	.globl _lnx_cal_dll_eom_gmsel
                            168 	.globl _lnx_cal_vdda_dll_sel
                            169 	.globl _lnx_cal_dll_gmsel
                            170 	.globl _lnx_cal_rxdcc_eom_hg
                            171 	.globl _lnx_cal_rxdcc_eom
                            172 	.globl _lnx_cal_rxdcc_data_hg
                            173 	.globl _lnx_cal_rxdcc_data
                            174 	.globl _lnx_cal_rxdcc_dll_hg
                            175 	.globl _lnx_cal_rxdcc_dll
                            176 	.globl _lnx_cal_txdcc_hg
                            177 	.globl _lnx_cal_txdcc
                            178 	.globl _lnx_cal_txdcc_pdiv_hg
                            179 	.globl _lnx_cal_txdcc_pdiv
                            180 	.globl _cmx_cal_sllp_dac_fine_ring
                            181 	.globl _cmx_cal_pll_sllp_dac_coarse_ring
                            182 	.globl _cmx_cal_pll_speed_ring
                            183 	.globl _cmx_cal_plldcc
                            184 	.globl _cmx_cal_lccap_lsb
                            185 	.globl _cmx_cal_lccap_msb
                            186 	.globl _cmx_cal_lcvco_dac_msb
                            187 	.globl _cmx_cal_lcvco_dac_lsb
                            188 	.globl _cmx_cal_lcvco_dac
                            189 	.globl _local_tx_preset_tb
                            190 	.globl _train_g0_index
                            191 	.globl _train_g1_index
                            192 	.globl _train_gn1_index
                            193 	.globl _phase_save
                            194 	.globl _txffe_save
                            195 	.globl _rc_save
                            196 	.globl _phy_mode_lane_table
                            197 	.globl _speedtable
                            198 	.globl _min_gen
                            199 	.globl _max_gen
                            200 	.globl _phy_mode_cmn_table
                            201 	.globl _ring_speedtable
                            202 	.globl _lc_speedtable
                            203 	.globl _TXTRAIN_IF_REG0
                            204 	.globl _CDS_READ_MISC1
                            205 	.globl _CDS_READ_MISC0
                            206 	.globl _DFE_READ_F0D_RIGHT_ODD
                            207 	.globl _DFE_READ_F0D_RIGHT_EVEN
                            208 	.globl _DFE_READ_F0D_LEFT_ODD
                            209 	.globl _DFE_READ_F0D_LEFT_EVEN
                            210 	.globl _DFE_READ_F0D_ODD
                            211 	.globl _DFE_READ_F0D_EVEN
                            212 	.globl _DFE_READ_F0B_ODD
                            213 	.globl _DFE_READ_F0B_EVEN
                            214 	.globl _DFE_READ_F0A_ODD
                            215 	.globl _DFE_READ_F0A_EVEN
                            216 	.globl _DFE_READ_ODD_REG8
                            217 	.globl _DFE_READ_EVEN_REG8
                            218 	.globl _DFE_READ_ODD_REG7
                            219 	.globl _DFE_READ_ODD_REG6
                            220 	.globl _DFE_READ_ODD_REG5
                            221 	.globl _DFE_READ_ODD_REG4
                            222 	.globl _DFE_READ_ODD_REG3
                            223 	.globl _DFE_READ_ODD_REG2
                            224 	.globl _DFE_READ_ODD_REG1
                            225 	.globl _DFE_READ_ODD_REG0
                            226 	.globl _DFE_READ_EVEN_REG7
                            227 	.globl _DFE_READ_EVEN_REG6
                            228 	.globl _DFE_READ_EVEN_REG5
                            229 	.globl _DFE_READ_EVEN_REG4
                            230 	.globl _DFE_READ_EVEN_REG3
                            231 	.globl _DFE_READ_EVEN_REG2
                            232 	.globl _DFE_READ_EVEN_REG1
                            233 	.globl _DFE_READ_EVEN_REG0
                            234 	.globl _TX_TRAIN_IF_REG8
                            235 	.globl _TX_TRAIN_CTRL_LANE
                            236 	.globl _TX_TRAIN_IF_REG7
                            237 	.globl _TX_TRAIN_IF_REG6
                            238 	.globl _TX_TRAIN_IF_REG5
                            239 	.globl _TX_TRAIN_IF_REG4
                            240 	.globl _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
                            241 	.globl _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE
                            242 	.globl _TRX_TRAIN_IF_INTERRUPT_LANE
                            243 	.globl _TX_AMP_CTRL_REG0
                            244 	.globl _TX_DRV_RD_OUT_REG0
                            245 	.globl _LINK_TRAIN_MODE0
                            246 	.globl _TX_EMPH_CTRL_REG0
                            247 	.globl _TX_TRAIN_DEFAULT_REG5
                            248 	.globl _TX_TRAIN_DEFAULT_REG4
                            249 	.globl _TX_TRAIN_DEFAULT_REG3
                            250 	.globl _TX_TRAIN_DEFAULT_REG2
                            251 	.globl _TX_TRAIN_DEFAULT_REG1
                            252 	.globl _TX_TRAIN_DEFAULT_REG0
                            253 	.globl _TX_TRAIN_DRIVER_REG2
                            254 	.globl _TX_TRAIN_DRIVER_REG1
                            255 	.globl _TX_TRAIN_DRIVER_REG0
                            256 	.globl _TX_TRAIN_PATTTERN_REG0
                            257 	.globl _TX_TRAIN_IF_REG3
                            258 	.globl _TX_TRAIN_IF_REG2
                            259 	.globl _TX_TRAIN_IF_REG1
                            260 	.globl _TX_TRAIN_IF_REG0
                            261 	.globl _DME_DEC_REG1
                            262 	.globl _DME_DEC_REG0
                            263 	.globl _DME_ENC_REG2
                            264 	.globl _DME_ENC_REG1
                            265 	.globl _DME_ENC_REG0
                            266 	.globl _END_XDAT_CMN
                            267 	.globl _MCU_INFO_13
                            268 	.globl _MCU_INFO_12
                            269 	.globl _MCU_INFO_5
                            270 	.globl _MCU_INFO_4
                            271 	.globl _SYNC_INFO
                            272 	.globl _CDS_EYE_CLK_THR
                            273 	.globl _TX_SAVE_4
                            274 	.globl _TX_SAVE_3
                            275 	.globl _TX_SAVE_2
                            276 	.globl _TX_SAVE_1
                            277 	.globl _TX_SAVE_0
                            278 	.globl _ETH_PRESET1_TB
                            279 	.globl _ETH_PRESET0_TB
                            280 	.globl _SAS_PRESET2_TB
                            281 	.globl _SAS_PRESET1_TB
                            282 	.globl _SAS_PRESET0_TB
                            283 	.globl _G_SELLV_RXSAMPLER
                            284 	.globl _G_SELLV_RXDATACLK
                            285 	.globl _G_SELLV_RXEOMCLK
                            286 	.globl _G_SELLV_TXPRE
                            287 	.globl _G_SELLV_TXDATA
                            288 	.globl _G_SELLV_TXCLK
                            289 	.globl _TIMER_SEL3
                            290 	.globl _TIMER_SEL2
                            291 	.globl _TIMER_SEL1
                            292 	.globl _MCU_CONFIG1
                            293 	.globl _LOOP_CNTS
                            294 	.globl _CAL_DATA1
                            295 	.globl _MCU_CONFIG
                            296 	.globl _CAL_STATUS_READ
                            297 	.globl _CAL_TIME_OUT_AND_DIS
                            298 	.globl _CON_CAL_STEP_SIZE5
                            299 	.globl _CON_CAL_STEP_SIZE4
                            300 	.globl _CON_CAL_STEP_SIZE3
                            301 	.globl _CON_CAL_STEP_SIZE2
                            302 	.globl _CON_CAL_STEP_SIZE1
                            303 	.globl _CONTROL_CONFIG9
                            304 	.globl _CONTROL_CONFIG8
                            305 	.globl _TRAIN_IF_CONFIG
                            306 	.globl _CAL_DATA0
                            307 	.globl _CONTROL_CONFIG7
                            308 	.globl _CONTROL_CONFIG6
                            309 	.globl _CONTROL_CONFIG5
                            310 	.globl _CONTROL_CONFIG4
                            311 	.globl _CONTROL_CONFIG3
                            312 	.globl _CONTROL_CONFIG2
                            313 	.globl _CONTROL_CONFIG1
                            314 	.globl _CONTROL_CONFIG0
                            315 	.globl _FW_REV
                            316 	.globl _CID_REG1
                            317 	.globl _CID_REG0
                            318 	.globl _CMN_MCU_REG
                            319 	.globl _SET_LANE_ISR
                            320 	.globl _CMN_ISR_MASK_1
                            321 	.globl _CMN_ISR_1
                            322 	.globl _CMN_MCU_TIMER3_CONTROL
                            323 	.globl _CMN_MCU_TIMER2_CONTROL
                            324 	.globl _CMN_MCU_TIMER1_CONTROL
                            325 	.globl _CMN_MCU_TIMER0_CONTROL
                            326 	.globl _CMN_MCU_TIMER_CTRL_5_LANE
                            327 	.globl _CMN_MCU_TIMER_CTRL_4_LANE
                            328 	.globl _CMN_MCU_TIMER_CTRL_3_LANE
                            329 	.globl _CMN_MCU_TIMER_CTRL_2_LANE
                            330 	.globl _CMN_MCU_TIMER_CONTROL
                            331 	.globl _CMN_CACHE_DEBUG1
                            332 	.globl _CMN_MCU_GPIO
                            333 	.globl _CMN_ISR_CLEAR_2
                            334 	.globl _CMN_ISR_MASK_2
                            335 	.globl _CMN_ISR_2
                            336 	.globl _MCU_INT_ADDR
                            337 	.globl _CMN_CACHE_DEBUG0
                            338 	.globl _MCU_SDT_CMN
                            339 	.globl _XDATA_MEM_CHECKSUM_CMN_2
                            340 	.globl _XDATA_MEM_CHECKSUM_CMN_1
                            341 	.globl _XDATA_MEM_CHECKSUM_CMN_0
                            342 	.globl _TEST5
                            343 	.globl _PM_CMN_REG2
                            344 	.globl _INPUT_CMN_PIN_REG3
                            345 	.globl __FIELDNAME_
                            346 	.globl _CMN_CALIBRATION
                            347 	.globl _OUTPUT_CMN_PIN_REG0
                            348 	.globl _SPD_CMN_REG1
                            349 	.globl _CLKGEN_CMN_REG1
                            350 	.globl _PLLCAL_REG1
                            351 	.globl _PLLCAL_REG0
                            352 	.globl _ANA_TSEN_CONTROL
                            353 	.globl _INPUT_CMN_PIN_REG2
                            354 	.globl _INPUT_CMN_PIN_REG1
                            355 	.globl _INPUT_CMN_PIN_REG0
                            356 	.globl _PM_CMN_REG1
                            357 	.globl _SYSTEM
                            358 	.globl _TEST4
                            359 	.globl _TEST3
                            360 	.globl _TEST2
                            361 	.globl _TEST1
                            362 	.globl _TEST0
                            363 	.globl _MCU_SYNC2
                            364 	.globl _MCU_SYNC1
                            365 	.globl _MEM_IRQ_CLEAR
                            366 	.globl _APB_CONTROL_REG
                            367 	.globl _ANA_IF_CMN_REG0
                            368 	.globl _MEM_IRQ_MASK
                            369 	.globl _MEM_IRQ
                            370 	.globl _ANA_IF_CMN_REG1
                            371 	.globl _MEM_CMN_ECC_ERR_ADDRESS0
                            372 	.globl _MCU_INFO_3
                            373 	.globl _MCU_INFO_2
                            374 	.globl _MCU_INFO_1
                            375 	.globl _MCU_INFO_0
                            376 	.globl _MEMORY_CONTROL_4
                            377 	.globl _MEMORY_CONTROL_3
                            378 	.globl _MEMORY_CONTROL_2
                            379 	.globl _MEMORY_CONTROL_1
                            380 	.globl _MEMORY_CONTROL_0
                            381 	.globl _MCU_DEBUG1
                            382 	.globl _MCU_DEBUG0
                            383 	.globl _MCU_CONTROL_4
                            384 	.globl _MCU_CONTROL_3
                            385 	.globl _MCU_CONTROL_2
                            386 	.globl _MCU_CONTROL_1
                            387 	.globl _MCU_CONTROL_0
                            388 	.globl _GLOB_L1_SUBSTATES_CFG
                            389 	.globl _GLOB_PIPE_REVISION
                            390 	.globl _GLOB_BIST_DATA_HI
                            391 	.globl _GLOB_BIST_SEQR_CFG
                            392 	.globl _GLOB_BIST_RESULT
                            393 	.globl _GLOB_BIST_MASK
                            394 	.globl _GLOB_BIST_START
                            395 	.globl _GLOB_BIST_LANE_TYPE
                            396 	.globl _GLOB_BIST_CTRL
                            397 	.globl _GLOB_DP_BAL_CFG4
                            398 	.globl _GLOB_DP_BAL_CFG2
                            399 	.globl _GLOB_DP_BAL_CFG0
                            400 	.globl _GLOB_PM_DP_CTRL
                            401 	.globl _GLOB_COUNTER_HI
                            402 	.globl _GLOB_COUNTER_CTRL
                            403 	.globl _GLOB_PM_CFG0
                            404 	.globl _GLOB_DP_SAL_CFG5
                            405 	.globl _GLOB_DP_SAL_CFG3
                            406 	.globl _GLOB_DP_SAL_CFG1
                            407 	.globl _GLOB_DP_SAL_CFG
                            408 	.globl _GLOB_MISC_CTRL
                            409 	.globl _GLOB_CLK_SRC_HI
                            410 	.globl _GLOB_CLK_SRC_LO
                            411 	.globl _GLOB_RST_CLK_CTRL
                            412 	.globl _DFE_STATIC_REG6
                            413 	.globl _DFE_STATIC_REG5
                            414 	.globl _DFE_STATIC_REG4
                            415 	.globl _DFE_STATIC_REG3
                            416 	.globl _DFE_STATIC_REG1
                            417 	.globl _DFE_STATIC_REG0
                            418 	.globl _RX_CMN_0
                            419 	.globl _SRIS_REG1
                            420 	.globl _SRIS_REG0
                            421 	.globl _DTX_PHY_ALIGN_REG2
                            422 	.globl _DTX_PHY_ALIGN_REG1
                            423 	.globl _DTX_PHY_ALIGN_REG0
                            424 	.globl _DTX_REG4
                            425 	.globl _DTX_REG3
                            426 	.globl _DTX_REG2
                            427 	.globl _DTX_REG1
                            428 	.globl _DTX_REG0
                            429 	.globl _TX_CMN_REG
                            430 	.globl _END_XDAT_LANE
                            431 	.globl _TRAIN_CONTROL_17
                            432 	.globl _TRAIN_CONTROL_16
                            433 	.globl _TRAIN_CONTROL_15
                            434 	.globl _TRAIN_CONTROL_14
                            435 	.globl _TRAIN_CONTROL_13
                            436 	.globl _ESM_ERR_N_CNT_LOW_LANE
                            437 	.globl _ESM_POP_N_CNT_LOW_LANE
                            438 	.globl _TRAIN_CONTROL_12
                            439 	.globl _TRAIN_CONTROL_11
                            440 	.globl _TRAIN_CONTROL_10
                            441 	.globl _TRAIN_CONTROL_9
                            442 	.globl _TRAIN_CONTROL_8
                            443 	.globl _TRAIN_CONTROL_7
                            444 	.globl _TRAIN_CONTROL_6
                            445 	.globl _TRAIN_CONTROL_5
                            446 	.globl _TRAIN_CONTROL_4
                            447 	.globl _TRAIN_CONTROL_3
                            448 	.globl _ESM_ERR_POP_CNT_HIGH_LANE
                            449 	.globl _ESM_ERR_P_CNT_LOW_LANE
                            450 	.globl _ESM_POP_P_CNT_LOW_LANE
                            451 	.globl _CDS_CTRL_REG1
                            452 	.globl _CDS_CTRL_REG0
                            453 	.globl _DFE_CONTROL_11
                            454 	.globl _DFE_CONTROL_10
                            455 	.globl _DFE_CONTROL_9
                            456 	.globl _DFE_CONTROL_8
                            457 	.globl _DFE_CONTROL_7
                            458 	.globl _DFE_TEST_5
                            459 	.globl _DFE_TEST_4
                            460 	.globl _DFE_TEST_1
                            461 	.globl _DFE_TEST_0
                            462 	.globl _DFE_CONTROL_6
                            463 	.globl _TRAIN_PARA_3
                            464 	.globl _TRAIN_PARA_2
                            465 	.globl _TRAIN_PARA_1
                            466 	.globl _TRAIN_PARA_0
                            467 	.globl _DLL_CAL
                            468 	.globl _RPTA_CONFIG_1
                            469 	.globl _RPTA_CONFIG_0
                            470 	.globl _TRAIN_CONTROL_2
                            471 	.globl _TRAIN_CONTROL_1
                            472 	.globl _TRAIN_CONTROL_0
                            473 	.globl _DFE_CONTROL_5
                            474 	.globl _DFE_CONTROL_4
                            475 	.globl _DFE_CONTROL_3
                            476 	.globl _DFE_CONTROL_2
                            477 	.globl _DFE_CONTROL_1
                            478 	.globl _DFE_CONTROL_0
                            479 	.globl _TRX_TRAIN_IF_TIMERS_ENABLE_LANE
                            480 	.globl _TRX_TRAIN_IF_TIMERS2_LANE
                            481 	.globl _TRX_TRAIN_IF_TIMERS1_LANE
                            482 	.globl _PHY_LOCAL_VALUE_LANE
                            483 	.globl _PHY_REMOTE_CTRL_VALUE_LANE
                            484 	.globl _PHY_REMOTE_CTRL_COMMAND_LANE
                            485 	.globl _CAL_SAVE_DATA3_LANE
                            486 	.globl _CAL_SAVE_DATA2_LANE
                            487 	.globl _CAL_SAVE_DATA1_LANE
                            488 	.globl _CAL_CTRL4_LANE
                            489 	.globl _CAL_CTRL3_LANE
                            490 	.globl _CAL_CTRL2_LANE
                            491 	.globl _CAL_CTRL1_LANE
                            492 	.globl _LANE_MARGIN_REG0
                            493 	.globl _EOM_VLD_REG4
                            494 	.globl _EOM_REG0
                            495 	.globl _EOM_ERR_REG3
                            496 	.globl _EOM_ERR_REG2
                            497 	.globl _EOM_ERR_REG1
                            498 	.globl _EOM_ERR_REG0
                            499 	.globl _EOM_VLD_REG3
                            500 	.globl _EOM_VLD_REG2
                            501 	.globl _EOM_VLD_REG1
                            502 	.globl _EOM_VLD_REG0
                            503 	.globl _DFE_STATIC_LANE_REG6
                            504 	.globl _DFE_STATIC_LANE_REG5
                            505 	.globl _DFE_STATIC_LANE_REG4
                            506 	.globl _DFE_STATIC_LANE_REG3
                            507 	.globl _DFE_STATIC_LANE_REG1
                            508 	.globl _DFE_STATIC_LANE_REG0
                            509 	.globl _DFE_DCE_REG0
                            510 	.globl _CAL_OFST_REG2
                            511 	.globl _CAL_OFST_REG1
                            512 	.globl _CAL_OFST_REG0
                            513 	.globl _DFE_READ_ODD_2C_REG8
                            514 	.globl _DFE_READ_EVEN_2C_REG8
                            515 	.globl _DFE_READ_ODD_2C_REG7
                            516 	.globl _DFE_READ_ODD_2C_REG6
                            517 	.globl _DFE_READ_ODD_2C_REG5
                            518 	.globl _DFE_READ_ODD_2C_REG4
                            519 	.globl _DFE_READ_ODD_2C_REG3
                            520 	.globl _DFE_READ_ODD_2C_REG2
                            521 	.globl _DFE_READ_ODD_2C_REG1
                            522 	.globl _DFE_READ_ODD_2C_REG0
                            523 	.globl _DFE_READ_EVEN_2C_REG7
                            524 	.globl _DFE_READ_EVEN_2C_REG6
                            525 	.globl _DFE_READ_EVEN_2C_REG5
                            526 	.globl _DFE_READ_EVEN_2C_REG4
                            527 	.globl _DFE_READ_EVEN_2C_REG3
                            528 	.globl _DFE_READ_EVEN_2C_REG2
                            529 	.globl _DFE_READ_EVEN_2C_REG1
                            530 	.globl _DFE_READ_EVEN_2C_REG0
                            531 	.globl _DFE_READ_ODD_SM_REG8
                            532 	.globl _DFE_READ_EVEN_SM_REG8
                            533 	.globl _DFE_READ_ODD_SM_REG7
                            534 	.globl _DFE_READ_ODD_SM_REG6
                            535 	.globl _DFE_READ_ODD_SM_REG5
                            536 	.globl _DFE_READ_ODD_SM_REG4
                            537 	.globl _DFE_READ_ODD_SM_REG3
                            538 	.globl _DFE_READ_ODD_SM_REG2
                            539 	.globl _DFE_READ_ODD_SM_REG1
                            540 	.globl _DFE_READ_ODD_SM_REG0
                            541 	.globl _DFE_READ_EVEN_SM_REG7
                            542 	.globl _DFE_READ_EVEN_SM_REG6
                            543 	.globl _DFE_READ_EVEN_SM_REG5
                            544 	.globl _DFE_READ_EVEN_SM_REG4
                            545 	.globl _DFE_READ_EVEN_SM_REG3
                            546 	.globl _DFE_READ_EVEN_SM_REG2
                            547 	.globl _DFE_READ_EVEN_SM_REG1
                            548 	.globl _DFE_READ_EVEN_SM_REG0
                            549 	.globl _DFE_FEXT_ODD_REG7
                            550 	.globl _DFE_FEXT_ODD_REG6
                            551 	.globl _DFE_FEXT_ODD_REG5
                            552 	.globl _DFE_FEXT_ODD_REG4
                            553 	.globl _DFE_FEXT_ODD_REG3
                            554 	.globl _DFE_FEXT_ODD_REG2
                            555 	.globl _DFE_FEXT_ODD_REG1
                            556 	.globl _DFE_FEXT_ODD_REG0
                            557 	.globl _DFE_FEXT_EVEN_REG7
                            558 	.globl _DFE_FEXT_EVEN_REG6
                            559 	.globl _DFE_FEXT_EVEN_REG5
                            560 	.globl _DFE_FEXT_EVEN_REG4
                            561 	.globl _DFE_FEXT_EVEN_REG3
                            562 	.globl _DFE_FEXT_EVEN_REG2
                            563 	.globl _DFE_FEXT_EVEN_REG1
                            564 	.globl _DFE_FEXT_EVEN_REG0
                            565 	.globl _DFE_DC_ODD_REG8
                            566 	.globl _DFE_DC_EVEN_REG8
                            567 	.globl _DFE_FEN_ODD_REG
                            568 	.globl _DFE_FEN_EVEN_REG
                            569 	.globl _DFE_STEP_REG1
                            570 	.globl _DFE_STEP_REG0
                            571 	.globl _DFE_ANA_REG1
                            572 	.globl _DFE_ANA_REG0
                            573 	.globl _DFE_CTRL_REG4
                            574 	.globl _RX_EQ_CLK_CTRL
                            575 	.globl _DFE_CTRL_REG3
                            576 	.globl _DFE_CTRL_REG2
                            577 	.globl _DFE_CTRL_REG1
                            578 	.globl _DFE_CTRL_REG0
                            579 	.globl _PT_COUNTER2
                            580 	.globl _PT_COUNTER1
                            581 	.globl _PT_COUNTER0
                            582 	.globl _PT_USER_PATTERN2
                            583 	.globl _PT_USER_PATTERN1
                            584 	.globl _PT_USER_PATTERN0
                            585 	.globl _PT_CONTROL1
                            586 	.globl _PT_CONTROL0
                            587 	.globl _XDATA_MEM_CHECKSUM_LANE1
                            588 	.globl _XDATA_MEM_CHECKSUM_LANE0
                            589 	.globl _MEM_ECC_ERR_ADDRESS0
                            590 	.globl _MCU_COMMAND0
                            591 	.globl _MCU_INT_CONTROL_13
                            592 	.globl _MCU_WDT_LANE
                            593 	.globl _MCU_IRQ_ISR_LANE
                            594 	.globl _ANA_IF_DFEO_REG0
                            595 	.globl _ANA_IF_DFEE_REG0
                            596 	.globl _ANA_IF_TRX_REG0
                            597 	.globl _EXT_INT_CONTROL
                            598 	.globl _MCU_DEBUG_LANE
                            599 	.globl _MCU_DEBUG3_LANE
                            600 	.globl _MCU_DEBUG2_LANE
                            601 	.globl _MCU_DEBUG1_LANE
                            602 	.globl _MCU_DEBUG0_LANE
                            603 	.globl _MCU_TIMER_CTRL_7_LANE
                            604 	.globl _MCU_TIMER_CTRL_6_LANE
                            605 	.globl _MCU_TIMER_CTRL_5_LANE
                            606 	.globl _MCU_TIMER_CTRL_4_LANE
                            607 	.globl _MCU_TIMER_CTRL_3_LANE
                            608 	.globl _MCU_TIMER_CTRL_2_LANE
                            609 	.globl _MCU_TIMER_CTRL_1_LANE
                            610 	.globl _MCU_MEM_REG2_LANE
                            611 	.globl _MCU_MEM_REG1_LANE
                            612 	.globl _MCU_IRQ_MASK_LANE
                            613 	.globl _MCU_IRQ_LANE
                            614 	.globl _MCU_TIMER3_CONTROL
                            615 	.globl _MCU_TIMER2_CONTROL
                            616 	.globl _MCU_TIMER1_CONTROL
                            617 	.globl _MCU_TIMER0_CONTROL
                            618 	.globl _MCU_TIMER_CONTROL
                            619 	.globl _MCU_INT12_CONTROL
                            620 	.globl _MCU_INT11_CONTROL
                            621 	.globl _MCU_INT10_CONTROL
                            622 	.globl _MCU_INT9_CONTROL
                            623 	.globl _MCU_INT8_CONTROL
                            624 	.globl _MCU_INT7_CONTROL
                            625 	.globl _MCU_INT6_CONTROL
                            626 	.globl _MCU_INT5_CONTROL
                            627 	.globl _MCU_INT4_CONTROL
                            628 	.globl _MCU_INT3_CONTROL
                            629 	.globl _MCU_INT2_CONTROL
                            630 	.globl _MCU_INT1_CONTROL
                            631 	.globl _MCU_INT0_CONTROL
                            632 	.globl _MCU_STATUS3_LANE
                            633 	.globl _MCU_STATUS2_LANE
                            634 	.globl _MCU_STATUS1_LANE
                            635 	.globl _MCU_STATUS0_LANE
                            636 	.globl _LANE_SYSTEM0
                            637 	.globl _CACHE_DEBUG1
                            638 	.globl _CACHE_DEBUG0
                            639 	.globl _MCU_GPIO
                            640 	.globl _MCU_CONTROL_LANE
                            641 	.globl _LANE_32G_PRESET_CFG16_LANE
                            642 	.globl _LANE_32G_PRESET_CFG14_LANE
                            643 	.globl _LANE_32G_PRESET_CFG12_LANE
                            644 	.globl _LANE_32G_PRESET_CFG10_LANE
                            645 	.globl _LANE_32G_PRESET_CFG8_LANE
                            646 	.globl _LANE_32G_PRESET_CFG6_LANE
                            647 	.globl _LANE_32G_PRESET_CFG4_LANE
                            648 	.globl _LANE_32G_PRESET_CFG2_LANE
                            649 	.globl _LANE_32G_PRESET_CFG0_LANE
                            650 	.globl _LANE_EQ_32G_CFG0_LANE
                            651 	.globl _LANE_16G_PRESET_CFG16_LANE
                            652 	.globl _LANE_16G_PRESET_CFG14_LANE
                            653 	.globl _LANE_16G_PRESET_CFG12_LANE
                            654 	.globl _LANE_16G_PRESET_CFG10_LANE
                            655 	.globl _LANE_16G_PRESET_CFG8_LANE
                            656 	.globl _LANE_16G_PRESET_CFG6_LANE
                            657 	.globl _LANE_16G_PRESET_CFG4_LANE
                            658 	.globl _LANE_16G_PRESET_CFG2_LANE
                            659 	.globl _LANE_16G_PRESET_CFG0_LANE
                            660 	.globl _LANE_EQ_16G_CFG0_LANE
                            661 	.globl _LANE_REMOTE_SET_LANE
                            662 	.globl _LANE_COEFF_MAX0_LANE
                            663 	.globl _LANE_PRESET_CFG16_LANE
                            664 	.globl _LANE_PRESET_CFG14_LANE
                            665 	.globl _LANE_PRESET_CFG12_LANE
                            666 	.globl _LANE_PRESET_CFG10_LANE
                            667 	.globl _LANE_PRESET_CFG8_LANE
                            668 	.globl _LANE_PRESET_CFG6_LANE
                            669 	.globl _LANE_PRESET_CFG4_LANE
                            670 	.globl _LANE_PRESET_CFG2_LANE
                            671 	.globl _LANE_PRESET_CFG0_LANE
                            672 	.globl _LANE_EQ_CFG1_LANE
                            673 	.globl _LANE_EQ_CFG0_LANE
                            674 	.globl _LANE_USB_DP_CFG2_LANE
                            675 	.globl _LANE_USB_DP_CFG1_LANE
                            676 	.globl _LANE_DP_PIE8_CFG0_LANE
                            677 	.globl _LANE_CFG_STATUS3_LANE
                            678 	.globl _LANE_CFG4
                            679 	.globl _LANE_CFG2_LANE
                            680 	.globl _LANE_CFG_STATUS2_LANE
                            681 	.globl _LANE_STATUS0
                            682 	.globl _LANE_CFG0
                            683 	.globl _SQ_REG0
                            684 	.globl _DTL_REG3
                            685 	.globl _DTL_REG2
                            686 	.globl _DTL_REG1
                            687 	.globl _DTL_REG0
                            688 	.globl _RX_LANE_INTERRUPT_REG1
                            689 	.globl _RX_CALIBRATION_REG
                            690 	.globl _INPUT_RX_PIN_REG3_LANE
                            691 	.globl _RX_DATA_PATH_REG
                            692 	.globl _RX_LANE_INTERRUPT_MASK
                            693 	.globl _RX_LANE_INTERRUPT
                            694 	.globl _CDR_LOCK_REG
                            695 	.globl _FRAME_SYNC_DET_REG6
                            696 	.globl _FRAME_SYNC_DET_REG5
                            697 	.globl _FRAME_SYNC_DET_REG4
                            698 	.globl _FRAME_SYNC_DET_REG3
                            699 	.globl _FRAME_SYNC_DET_REG2
                            700 	.globl _FRAME_SYNC_DET_REG1
                            701 	.globl _FRAME_SYNC_DET_REG0
                            702 	.globl _CLKGEN_RX_LANE_REG1_LANE
                            703 	.globl _DIG_RX_RSVD_REG0
                            704 	.globl _SPD_CTRL_RX_LANE_REG1_LANE
                            705 	.globl _INPUT_RX_PIN_REG2_LANE
                            706 	.globl _INPUT_RX_PIN_REG1_LANE
                            707 	.globl _INPUT_RX_PIN_REG0_LANE
                            708 	.globl _RX_SYSTEM_LANE
                            709 	.globl _PM_CTRL_RX_LANE_REG1_LANE
                            710 	.globl _MON_TOP
                            711 	.globl _ANALOG_TX_REALTIME_REG_1
                            712 	.globl _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE
                            713 	.globl _PM_CTRL_INTERRUPT_ISR_REG1_LANE
                            714 	.globl __FIELDNAME__LANE
                            715 	.globl _INPUT_TX_PIN_REG5_LANE
                            716 	.globl _DIG_TX_RSVD_REG0
                            717 	.globl _TX_CALIBRATION_LANE
                            718 	.globl _INPUT_TX_PIN_REG4_LANE
                            719 	.globl _TX_SYSTEM_LANE
                            720 	.globl _SPD_CTRL_TX_LANE_REG1_LANE
                            721 	.globl _SPD_CTRL_INTERRUPT_REG2
                            722 	.globl _SPD_CTRL_INTERRUPT_REG1_LANE
                            723 	.globl _TX_SPEED_CONVERT_LANE
                            724 	.globl _CLKGEN_TX_LANE_REG1_LANE
                            725 	.globl _PM_CTRL_INTERRUPT_REG2
                            726 	.globl _PM_CTRL_INTERRUPT_REG1_LANE
                            727 	.globl _INPUT_TX_PIN_REG3_LANE
                            728 	.globl _INPUT_TX_PIN_REG2_LANE
                            729 	.globl _INPUT_TX_PIN_REG1_LANE
                            730 	.globl _INPUT_TX_PIN_REG0_LANE
                            731 	.globl _PM_CTRL_TX_LANE_REG2_LANE
                            732 	.globl _PM_CTRL_TX_LANE_REG1_LANE
                            733 	.globl _UPHY14_CMN_ANAREG_TOP_214
                            734 	.globl _UPHY14_CMN_ANAREG_TOP_213
                            735 	.globl _UPHY14_CMN_ANAREG_TOP_212
                            736 	.globl _UPHY14_CMN_ANAREG_TOP_211
                            737 	.globl _UPHY14_CMN_ANAREG_TOP_210
                            738 	.globl _UPHY14_CMN_ANAREG_TOP_209
                            739 	.globl _UPHY14_CMN_ANAREG_TOP_208
                            740 	.globl _UPHY14_CMN_ANAREG_TOP_207
                            741 	.globl _UPHY14_CMN_ANAREG_TOP_206
                            742 	.globl _UPHY14_CMN_ANAREG_TOP_205
                            743 	.globl _UPHY14_CMN_ANAREG_TOP_204
                            744 	.globl _UPHY14_CMN_ANAREG_TOP_203
                            745 	.globl _UPHY14_CMN_ANAREG_TOP_202
                            746 	.globl _UPHY14_CMN_ANAREG_TOP_201
                            747 	.globl _UPHY14_CMN_ANAREG_TOP_200
                            748 	.globl _UPHY14_CMN_ANAREG_TOP_199
                            749 	.globl _UPHY14_CMN_ANAREG_TOP_198
                            750 	.globl _UPHY14_CMN_ANAREG_TOP_197
                            751 	.globl _UPHY14_CMN_ANAREG_TOP_196
                            752 	.globl _UPHY14_CMN_ANAREG_TOP_195
                            753 	.globl _UPHY14_CMN_ANAREG_TOP_194
                            754 	.globl _UPHY14_CMN_ANAREG_TOP_193
                            755 	.globl _UPHY14_CMN_ANAREG_TOP_192
                            756 	.globl _UPHY14_CMN_ANAREG_TOP_191
                            757 	.globl _UPHY14_CMN_ANAREG_TOP_190
                            758 	.globl _UPHY14_CMN_ANAREG_TOP_189
                            759 	.globl _UPHY14_CMN_ANAREG_TOP_188
                            760 	.globl _UPHY14_CMN_ANAREG_TOP_187
                            761 	.globl _UPHY14_CMN_ANAREG_TOP_186
                            762 	.globl _UPHY14_CMN_ANAREG_TOP_185
                            763 	.globl _UPHY14_CMN_ANAREG_TOP_184
                            764 	.globl _UPHY14_CMN_ANAREG_TOP_183
                            765 	.globl _UPHY14_CMN_ANAREG_TOP_182
                            766 	.globl _UPHY14_CMN_ANAREG_TOP_181
                            767 	.globl _UPHY14_CMN_ANAREG_TOP_180
                            768 	.globl _UPHY14_CMN_ANAREG_TOP_179
                            769 	.globl _UPHY14_CMN_ANAREG_TOP_178
                            770 	.globl _UPHY14_CMN_ANAREG_TOP_177
                            771 	.globl _UPHY14_CMN_ANAREG_TOP_176
                            772 	.globl _UPHY14_CMN_ANAREG_TOP_175
                            773 	.globl _UPHY14_CMN_ANAREG_TOP_174
                            774 	.globl _UPHY14_CMN_ANAREG_TOP_173
                            775 	.globl _UPHY14_CMN_ANAREG_TOP_172
                            776 	.globl _UPHY14_CMN_ANAREG_TOP_171
                            777 	.globl _UPHY14_CMN_ANAREG_TOP_170
                            778 	.globl _UPHY14_CMN_ANAREG_TOP_169
                            779 	.globl _UPHY14_CMN_ANAREG_TOP_168
                            780 	.globl _UPHY14_CMN_ANAREG_TOP_167
                            781 	.globl _UPHY14_CMN_ANAREG_TOP_166
                            782 	.globl _UPHY14_CMN_ANAREG_TOP_165
                            783 	.globl _UPHY14_CMN_ANAREG_TOP_164
                            784 	.globl _UPHY14_CMN_ANAREG_TOP_163
                            785 	.globl _UPHY14_CMN_ANAREG_TOP_162
                            786 	.globl _UPHY14_CMN_ANAREG_TOP_161
                            787 	.globl _UPHY14_CMN_ANAREG_TOP_160
                            788 	.globl _UPHY14_CMN_ANAREG_TOP_159
                            789 	.globl _UPHY14_CMN_ANAREG_TOP_158
                            790 	.globl _UPHY14_CMN_ANAREG_TOP_157
                            791 	.globl _UPHY14_CMN_ANAREG_TOP_156
                            792 	.globl _UPHY14_CMN_ANAREG_TOP_155
                            793 	.globl _UPHY14_CMN_ANAREG_TOP_154
                            794 	.globl _UPHY14_CMN_ANAREG_TOP_153
                            795 	.globl _UPHY14_CMN_ANAREG_TOP_152
                            796 	.globl _UPHY14_CMN_ANAREG_TOP_151
                            797 	.globl _UPHY14_CMN_ANAREG_TOP_150
                            798 	.globl _UPHY14_CMN_ANAREG_TOP_149
                            799 	.globl _UPHY14_CMN_ANAREG_TOP_148
                            800 	.globl _UPHY14_CMN_ANAREG_TOP_147
                            801 	.globl _UPHY14_CMN_ANAREG_TOP_146
                            802 	.globl _UPHY14_CMN_ANAREG_TOP_145
                            803 	.globl _UPHY14_CMN_ANAREG_TOP_144
                            804 	.globl _UPHY14_CMN_ANAREG_TOP_143
                            805 	.globl _UPHY14_CMN_ANAREG_TOP_142
                            806 	.globl _UPHY14_CMN_ANAREG_TOP_141
                            807 	.globl _UPHY14_CMN_ANAREG_TOP_140
                            808 	.globl _UPHY14_CMN_ANAREG_TOP_139
                            809 	.globl _UPHY14_CMN_ANAREG_TOP_138
                            810 	.globl _UPHY14_CMN_ANAREG_TOP_137
                            811 	.globl _UPHY14_CMN_ANAREG_TOP_136
                            812 	.globl _UPHY14_CMN_ANAREG_TOP_135
                            813 	.globl _UPHY14_CMN_ANAREG_TOP_134
                            814 	.globl _UPHY14_CMN_ANAREG_TOP_133
                            815 	.globl _UPHY14_CMN_ANAREG_TOP_132
                            816 	.globl _UPHY14_CMN_ANAREG_TOP_131
                            817 	.globl _UPHY14_CMN_ANAREG_TOP_130
                            818 	.globl _UPHY14_CMN_ANAREG_TOP_129
                            819 	.globl _UPHY14_CMN_ANAREG_TOP_128
                            820 	.globl _ANA_DFEO_REG_0B
                            821 	.globl _ANA_DFEO_REG_0A
                            822 	.globl _ANA_DFEO_REG_09
                            823 	.globl _ANA_DFEO_REG_08
                            824 	.globl _ANA_DFEO_REG_07
                            825 	.globl _ANA_DFEO_REG_06
                            826 	.globl _ANA_DFEO_REG_05
                            827 	.globl _ANA_DFEO_REG_04
                            828 	.globl _ANA_DFEO_REG_03
                            829 	.globl _ANA_DFEO_REG_02
                            830 	.globl _ANA_DFEO_REG_01
                            831 	.globl _ANA_DFEO_REG_00
                            832 	.globl _ANA_DFEO_REG_27
                            833 	.globl _ANA_DFEO_REG_26
                            834 	.globl _ANA_DFEO_REG_25
                            835 	.globl _ANA_DFEO_REG_24
                            836 	.globl _ANA_DFEO_REG_23
                            837 	.globl _ANA_DFEO_REG_22
                            838 	.globl _ANA_DFEO_REG_21
                            839 	.globl _ANA_DFEO_REG_20
                            840 	.globl _ANA_DFEO_REG_1F
                            841 	.globl _ANA_DFEO_REG_1E
                            842 	.globl _ANA_DFEO_REG_1D
                            843 	.globl _ANA_DFEO_REG_1C
                            844 	.globl _ANA_DFEO_REG_1B
                            845 	.globl _ANA_DFEO_REG_1A
                            846 	.globl _ANA_DFEO_REG_19
                            847 	.globl _ANA_DFEO_REG_18
                            848 	.globl _ANA_DFEO_REG_17
                            849 	.globl _ANA_DFEO_REG_16
                            850 	.globl _ANA_DFEO_REG_15
                            851 	.globl _ANA_DFEO_REG_14
                            852 	.globl _ANA_DFEO_REG_13
                            853 	.globl _ANA_DFEO_REG_12
                            854 	.globl _ANA_DFEO_REG_11
                            855 	.globl _ANA_DFEO_REG_10
                            856 	.globl _ANA_DFEO_REG_0F
                            857 	.globl _ANA_DFEO_REG_0E
                            858 	.globl _ANA_DFEO_REG_0D
                            859 	.globl _ANA_DFEO_REG_0C
                            860 	.globl _ANA_DFEE_REG_1D
                            861 	.globl _ANA_DFEE_REG_1C
                            862 	.globl _ANA_DFEE_REG_1B
                            863 	.globl _ANA_DFEE_REG_1A
                            864 	.globl _ANA_DFEE_REG_19
                            865 	.globl _ANA_DFEE_REG_18
                            866 	.globl _ANA_DFEE_REG_17
                            867 	.globl _ANA_DFEE_REG_16
                            868 	.globl _ANA_DFEE_REG_15
                            869 	.globl _ANA_DFEE_REG_14
                            870 	.globl _ANA_DFEE_REG_13
                            871 	.globl _ANA_DFEE_REG_12
                            872 	.globl _ANA_DFEE_REG_11
                            873 	.globl _ANA_DFEE_REG_10
                            874 	.globl _ANA_DFEE_REG_0F
                            875 	.globl _ANA_DFEE_REG_0E
                            876 	.globl _ANA_DFEE_REG_0D
                            877 	.globl _ANA_DFEE_REG_0C
                            878 	.globl _ANA_DFEE_REG_0B
                            879 	.globl _ANA_DFEE_REG_0A
                            880 	.globl _ANA_DFEE_REG_09
                            881 	.globl _ANA_DFEE_REG_08
                            882 	.globl _ANA_DFEE_REG_07
                            883 	.globl _ANA_DFEE_REG_06
                            884 	.globl _ANA_DFEE_REG_05
                            885 	.globl _ANA_DFEE_REG_04
                            886 	.globl _ANA_DFEE_REG_03
                            887 	.globl _ANA_DFEE_REG_02
                            888 	.globl _ANA_DFEE_REG_01
                            889 	.globl _ANA_DFEE_REG_00
                            890 	.globl _ANA_DFEE_REG_27
                            891 	.globl _ANA_DFEE_REG_26
                            892 	.globl _ANA_DFEE_REG_25
                            893 	.globl _ANA_DFEE_REG_24
                            894 	.globl _ANA_DFEE_REG_23
                            895 	.globl _ANA_DFEE_REG_22
                            896 	.globl _ANA_DFEE_REG_21
                            897 	.globl _ANA_DFEE_REG_20
                            898 	.globl _ANA_DFEE_REG_1F
                            899 	.globl _ANA_DFEE_REG_1E
                            900 	.globl _UPHY14_TRX_ANAREG_BOT_32
                            901 	.globl _UPHY14_TRX_ANAREG_BOT_31
                            902 	.globl _UPHY14_TRX_ANAREG_BOT_30
                            903 	.globl _UPHY14_TRX_ANAREG_BOT_29
                            904 	.globl _UPHY14_TRX_ANAREG_BOT_28
                            905 	.globl _UPHY14_TRX_ANAREG_BOT_27
                            906 	.globl _UPHY14_TRX_ANAREG_BOT_26
                            907 	.globl _UPHY14_TRX_ANAREG_BOT_25
                            908 	.globl _UPHY14_TRX_ANAREG_BOT_24
                            909 	.globl _UPHY14_TRX_ANAREG_BOT_23
                            910 	.globl _UPHY14_TRX_ANAREG_BOT_22
                            911 	.globl _UPHY14_TRX_ANAREG_BOT_21
                            912 	.globl _UPHY14_TRX_ANAREG_BOT_20
                            913 	.globl _UPHY14_TRX_ANAREG_BOT_19
                            914 	.globl _UPHY14_TRX_ANAREG_BOT_18
                            915 	.globl _UPHY14_TRX_ANAREG_BOT_17
                            916 	.globl _UPHY14_TRX_ANAREG_BOT_16
                            917 	.globl _UPHY14_TRX_ANAREG_BOT_15
                            918 	.globl _UPHY14_TRX_ANAREG_BOT_14
                            919 	.globl _UPHY14_TRX_ANAREG_BOT_13
                            920 	.globl _UPHY14_TRX_ANAREG_BOT_12
                            921 	.globl _UPHY14_TRX_ANAREG_BOT_11
                            922 	.globl _UPHY14_TRX_ANAREG_BOT_10
                            923 	.globl _UPHY14_TRX_ANAREG_BOT_9
                            924 	.globl _UPHY14_TRX_ANAREG_BOT_8
                            925 	.globl _UPHY14_TRX_ANAREG_BOT_7
                            926 	.globl _UPHY14_TRX_ANAREG_BOT_6
                            927 	.globl _UPHY14_TRX_ANAREG_BOT_5
                            928 	.globl _UPHY14_TRX_ANAREG_BOT_4
                            929 	.globl _UPHY14_TRX_ANAREG_BOT_3
                            930 	.globl _UPHY14_TRX_ANAREG_BOT_2
                            931 	.globl _UPHY14_TRX_ANAREG_BOT_1
                            932 	.globl _UPHY14_TRX_ANAREG_BOT_0
                            933 	.globl _UPHY14_TRX_ANAREG_TOP_157
                            934 	.globl _UPHY14_TRX_ANAREG_TOP_156
                            935 	.globl _UPHY14_TRX_ANAREG_TOP_155
                            936 	.globl _UPHY14_TRX_ANAREG_TOP_154
                            937 	.globl _UPHY14_TRX_ANAREG_TOP_153
                            938 	.globl _UPHY14_TRX_ANAREG_TOP_152
                            939 	.globl _UPHY14_TRX_ANAREG_TOP_151
                            940 	.globl _UPHY14_TRX_ANAREG_TOP_150
                            941 	.globl _UPHY14_TRX_ANAREG_TOP_149
                            942 	.globl _UPHY14_TRX_ANAREG_TOP_148
                            943 	.globl _UPHY14_TRX_ANAREG_TOP_147
                            944 	.globl _UPHY14_TRX_ANAREG_TOP_146
                            945 	.globl _UPHY14_TRX_ANAREG_TOP_145
                            946 	.globl _UPHY14_TRX_ANAREG_TOP_144
                            947 	.globl _UPHY14_TRX_ANAREG_TOP_143
                            948 	.globl _UPHY14_TRX_ANAREG_TOP_142
                            949 	.globl _UPHY14_TRX_ANAREG_TOP_141
                            950 	.globl _UPHY14_TRX_ANAREG_TOP_140
                            951 	.globl _UPHY14_TRX_ANAREG_TOP_139
                            952 	.globl _UPHY14_TRX_ANAREG_TOP_138
                            953 	.globl _UPHY14_TRX_ANAREG_TOP_137
                            954 	.globl _UPHY14_TRX_ANAREG_TOP_136
                            955 	.globl _UPHY14_TRX_ANAREG_TOP_135
                            956 	.globl _UPHY14_TRX_ANAREG_TOP_134
                            957 	.globl _UPHY14_TRX_ANAREG_TOP_133
                            958 	.globl _UPHY14_TRX_ANAREG_TOP_132
                            959 	.globl _UPHY14_TRX_ANAREG_TOP_131
                            960 	.globl _UPHY14_TRX_ANAREG_TOP_130
                            961 	.globl _UPHY14_TRX_ANAREG_TOP_129
                            962 	.globl _UPHY14_TRX_ANAREG_TOP_128
                            963 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_143
                            964 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_142
                            965 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_141
                            966 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_140
                            967 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_139
                            968 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_138
                            969 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_137
                            970 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_136
                            971 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_135
                            972 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_134
                            973 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_133
                            974 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_132
                            975 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_131
                            976 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_130
                            977 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_129
                            978 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_128
                            979 	.globl _tx_train
                            980 	.globl _tx_train_initial
                            981 	.globl _tx_train_end
                            982 	.globl _tx_g0_train
                            983 	.globl _tx_gn1_train
                            984 	.globl _tx_g1_train
                            985 	.globl _g1n1_maxf0t
                            986 	.globl _g1n1_midpoint
                            987 	.globl _compare_g0
                            988 	.globl _compare_g1n1
                            989 	.globl _tx_train_dummy
                            990 	.globl _tx_reset
                            991 	.globl _update_g0
                            992 	.globl _update_gn1
                            993 	.globl _update_g1
                            994 ;--------------------------------------------------------
                            995 ; special function registers
                            996 ;--------------------------------------------------------
                            997 	.area RSEG    (ABS,DATA)
   0000                     998 	.org 0x0000
                    0080    999 _P0	=	0x0080
                    0082   1000 _DPL	=	0x0082
                    0083   1001 _DPH	=	0x0083
                    0086   1002 _WDTREL	=	0x0086
                    0087   1003 _PCON	=	0x0087
                    0088   1004 _TCON	=	0x0088
                    0089   1005 _TMOD	=	0x0089
                    008A   1006 _TL0	=	0x008a
                    008B   1007 _TL1	=	0x008b
                    008C   1008 _TH0	=	0x008c
                    008D   1009 _TH1	=	0x008d
                    008E   1010 _CKCON	=	0x008e
                    0090   1011 _P1	=	0x0090
                    0092   1012 _DPS	=	0x0092
                    0094   1013 _PSBANK	=	0x0094
                    0098   1014 _SCON	=	0x0098
                    0099   1015 _SBUF	=	0x0099
                    009A   1016 _IEN2	=	0x009a
                    00A0   1017 _P2	=	0x00a0
                    00A1   1018 _DMAS0	=	0x00a1
                    00A2   1019 _DMAS1	=	0x00a2
                    00A3   1020 _DMAS2	=	0x00a3
                    00A4   1021 _DMAT0	=	0x00a4
                    00A5   1022 _DMAT1	=	0x00a5
                    00A6   1023 _DMAT2	=	0x00a6
                    00A8   1024 _IEN0	=	0x00a8
                    00A9   1025 _IP0	=	0x00a9
                    00AA   1026 _S0RELL	=	0x00aa
                    00B0   1027 _P3	=	0x00b0
                    00B1   1028 _DMAC0	=	0x00b1
                    00B2   1029 _DMAC1	=	0x00b2
                    00B3   1030 _DMAC2	=	0x00b3
                    00B4   1031 _DMASEL	=	0x00b4
                    00B5   1032 _DMAM0	=	0x00b5
                    00B6   1033 _DMAM1	=	0x00b6
                    00B8   1034 _IEN1	=	0x00b8
                    00B9   1035 _IP1	=	0x00b9
                    00BA   1036 _S0RELH	=	0x00ba
                    00C0   1037 _IRCON	=	0x00c0
                    00C1   1038 _CCEN	=	0x00c1
                    00C8   1039 _T2CON	=	0x00c8
                    00CA   1040 _RCAP2L	=	0x00ca
                    00CB   1041 _RCAP2H	=	0x00cb
                    00CC   1042 _TL2	=	0x00cc
                    00CD   1043 _TH2	=	0x00cd
                    00D0   1044 _PSW	=	0x00d0
                    00D8   1045 _ADCON	=	0x00d8
                    00E0   1046 _ACC	=	0x00e0
                    00E8   1047 _EIE	=	0x00e8
                    00F0   1048 _B	=	0x00f0
                    00F7   1049 _SRST	=	0x00f7
                    8C8A   1050 _TMR0	=	0x8c8a
                    8D8B   1051 _TMR1	=	0x8d8b
                    CDCC   1052 _TMR2	=	0xcdcc
                    A2A1   1053 _DMASA	=	0xa2a1
                    A5A4   1054 _DMATA	=	0xa5a4
                    B2B1   1055 _DMAC	=	0xb2b1
                           1056 ;--------------------------------------------------------
                           1057 ; special function bits
                           1058 ;--------------------------------------------------------
                           1059 	.area RSEG    (ABS,DATA)
   0000                    1060 	.org 0x0000
                    0080   1061 _P0_0	=	0x0080
                    0081   1062 _P0_1	=	0x0081
                    0082   1063 _P0_2	=	0x0082
                    0083   1064 _P0_3	=	0x0083
                    0084   1065 _P0_4	=	0x0084
                    0085   1066 _P0_5	=	0x0085
                    0086   1067 _P0_6	=	0x0086
                    0087   1068 _P0_7	=	0x0087
                    0090   1069 _P1_0	=	0x0090
                    0091   1070 _P1_1	=	0x0091
                    0092   1071 _P1_2	=	0x0092
                    0093   1072 _P1_3	=	0x0093
                    0094   1073 _P1_4	=	0x0094
                    0095   1074 _P1_5	=	0x0095
                    0096   1075 _P1_6	=	0x0096
                    0097   1076 _P1_7	=	0x0097
                    00A0   1077 _P2_0	=	0x00a0
                    00A1   1078 _P2_1	=	0x00a1
                    00A2   1079 _P2_2	=	0x00a2
                    00A3   1080 _P2_3	=	0x00a3
                    00A4   1081 _P2_4	=	0x00a4
                    00A5   1082 _P2_5	=	0x00a5
                    00A6   1083 _P2_6	=	0x00a6
                    00A7   1084 _P2_7	=	0x00a7
                    00B0   1085 _P3_0	=	0x00b0
                    00B1   1086 _P3_1	=	0x00b1
                    00B2   1087 _P3_2	=	0x00b2
                    00B3   1088 _P3_3	=	0x00b3
                    00B4   1089 _P3_4	=	0x00b4
                    00B5   1090 _P3_5	=	0x00b5
                    00B6   1091 _P3_6	=	0x00b6
                    00B7   1092 _P3_7	=	0x00b7
                    0088   1093 _IT0	=	0x0088
                    0089   1094 _IE0	=	0x0089
                    008A   1095 _IT1	=	0x008a
                    008B   1096 _IE1	=	0x008b
                    008C   1097 _TR0	=	0x008c
                    008D   1098 _TF0	=	0x008d
                    008E   1099 _TR1	=	0x008e
                    008F   1100 _TF1	=	0x008f
                    00A8   1101 _EX0	=	0x00a8
                    00A9   1102 _ET0	=	0x00a9
                    00AA   1103 _EX1	=	0x00aa
                    00AB   1104 _ET1	=	0x00ab
                    00AC   1105 _ES	=	0x00ac
                    00AD   1106 _ET2	=	0x00ad
                    00AE   1107 _WDT	=	0x00ae
                    00AF   1108 _EA	=	0x00af
                    00B8   1109 _EX7	=	0x00b8
                    00B9   1110 _EX2	=	0x00b9
                    00BA   1111 _EX3	=	0x00ba
                    00BB   1112 _EX4	=	0x00bb
                    00BC   1113 _EX5	=	0x00bc
                    00BD   1114 _EX6	=	0x00bd
                    00BE   1115 _PS1	=	0x00be
                    009A   1116 _ES1	=	0x009a
                    009B   1117 _EX8	=	0x009b
                    009C   1118 _EX9	=	0x009c
                    009D   1119 _EX10	=	0x009d
                    009E   1120 _EX11	=	0x009e
                    009F   1121 _EX12	=	0x009f
                    0098   1122 _RI	=	0x0098
                    0099   1123 _TI	=	0x0099
                    00C6   1124 _TF2	=	0x00c6
                           1125 ;--------------------------------------------------------
                           1126 ; overlayable register banks
                           1127 ;--------------------------------------------------------
                           1128 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1129 	.ds 8
                           1130 ;--------------------------------------------------------
                           1131 ; overlayable bit register bank
                           1132 ;--------------------------------------------------------
                           1133 	.area BIT_BANK	(REL,OVR,DATA)
   0000                    1134 bits:
   0000                    1135 	.ds 1
                    8000   1136 	b0 = bits[0]
                    8100   1137 	b1 = bits[1]
                    8200   1138 	b2 = bits[2]
                    8300   1139 	b3 = bits[3]
                    8400   1140 	b4 = bits[4]
                    8500   1141 	b5 = bits[5]
                    8600   1142 	b6 = bits[6]
                    8700   1143 	b7 = bits[7]
                           1144 ;--------------------------------------------------------
                           1145 ; internal ram data
                           1146 ;--------------------------------------------------------
                           1147 	.area DSEG    (DATA)
                           1148 ;--------------------------------------------------------
                           1149 ; overlayable items in internal ram 
                           1150 ;--------------------------------------------------------
                           1151 	.area OSEG    (OVR,DATA)
                           1152 ;--------------------------------------------------------
                           1153 ; indirectly addressable internal ram data
                           1154 ;--------------------------------------------------------
                           1155 	.area ISEG    (DATA)
                           1156 ;--------------------------------------------------------
                           1157 ; absolute internal ram data
                           1158 ;--------------------------------------------------------
                           1159 	.area IABS    (ABS,DATA)
                           1160 	.area IABS    (ABS,DATA)
                           1161 ;--------------------------------------------------------
                           1162 ; bit data
                           1163 ;--------------------------------------------------------
                           1164 	.area BSEG    (BIT)
                           1165 ;--------------------------------------------------------
                           1166 ; paged external ram data
                           1167 ;--------------------------------------------------------
                           1168 	.area PSEG    (PAG,XDATA)
                           1169 ;--------------------------------------------------------
                           1170 ; external ram data
                           1171 ;--------------------------------------------------------
                           1172 	.area XSEG    (XDATA)
                    1000   1173 _UPHY14_TRX_LANEPLL_ANAREG_TOP_128	=	0x1000
                    1004   1174 _UPHY14_TRX_LANEPLL_ANAREG_TOP_129	=	0x1004
                    1008   1175 _UPHY14_TRX_LANEPLL_ANAREG_TOP_130	=	0x1008
                    100C   1176 _UPHY14_TRX_LANEPLL_ANAREG_TOP_131	=	0x100c
                    1010   1177 _UPHY14_TRX_LANEPLL_ANAREG_TOP_132	=	0x1010
                    1014   1178 _UPHY14_TRX_LANEPLL_ANAREG_TOP_133	=	0x1014
                    1018   1179 _UPHY14_TRX_LANEPLL_ANAREG_TOP_134	=	0x1018
                    101C   1180 _UPHY14_TRX_LANEPLL_ANAREG_TOP_135	=	0x101c
                    1020   1181 _UPHY14_TRX_LANEPLL_ANAREG_TOP_136	=	0x1020
                    1024   1182 _UPHY14_TRX_LANEPLL_ANAREG_TOP_137	=	0x1024
                    1028   1183 _UPHY14_TRX_LANEPLL_ANAREG_TOP_138	=	0x1028
                    102C   1184 _UPHY14_TRX_LANEPLL_ANAREG_TOP_139	=	0x102c
                    1030   1185 _UPHY14_TRX_LANEPLL_ANAREG_TOP_140	=	0x1030
                    1034   1186 _UPHY14_TRX_LANEPLL_ANAREG_TOP_141	=	0x1034
                    1038   1187 _UPHY14_TRX_LANEPLL_ANAREG_TOP_142	=	0x1038
                    103C   1188 _UPHY14_TRX_LANEPLL_ANAREG_TOP_143	=	0x103c
                    0200   1189 _UPHY14_TRX_ANAREG_TOP_128	=	0x0200
                    0204   1190 _UPHY14_TRX_ANAREG_TOP_129	=	0x0204
                    0208   1191 _UPHY14_TRX_ANAREG_TOP_130	=	0x0208
                    020C   1192 _UPHY14_TRX_ANAREG_TOP_131	=	0x020c
                    0210   1193 _UPHY14_TRX_ANAREG_TOP_132	=	0x0210
                    0214   1194 _UPHY14_TRX_ANAREG_TOP_133	=	0x0214
                    0218   1195 _UPHY14_TRX_ANAREG_TOP_134	=	0x0218
                    021C   1196 _UPHY14_TRX_ANAREG_TOP_135	=	0x021c
                    0220   1197 _UPHY14_TRX_ANAREG_TOP_136	=	0x0220
                    0224   1198 _UPHY14_TRX_ANAREG_TOP_137	=	0x0224
                    0228   1199 _UPHY14_TRX_ANAREG_TOP_138	=	0x0228
                    022C   1200 _UPHY14_TRX_ANAREG_TOP_139	=	0x022c
                    0230   1201 _UPHY14_TRX_ANAREG_TOP_140	=	0x0230
                    0234   1202 _UPHY14_TRX_ANAREG_TOP_141	=	0x0234
                    0238   1203 _UPHY14_TRX_ANAREG_TOP_142	=	0x0238
                    023C   1204 _UPHY14_TRX_ANAREG_TOP_143	=	0x023c
                    0240   1205 _UPHY14_TRX_ANAREG_TOP_144	=	0x0240
                    0244   1206 _UPHY14_TRX_ANAREG_TOP_145	=	0x0244
                    0248   1207 _UPHY14_TRX_ANAREG_TOP_146	=	0x0248
                    024C   1208 _UPHY14_TRX_ANAREG_TOP_147	=	0x024c
                    0250   1209 _UPHY14_TRX_ANAREG_TOP_148	=	0x0250
                    0254   1210 _UPHY14_TRX_ANAREG_TOP_149	=	0x0254
                    0258   1211 _UPHY14_TRX_ANAREG_TOP_150	=	0x0258
                    025C   1212 _UPHY14_TRX_ANAREG_TOP_151	=	0x025c
                    0260   1213 _UPHY14_TRX_ANAREG_TOP_152	=	0x0260
                    0264   1214 _UPHY14_TRX_ANAREG_TOP_153	=	0x0264
                    0268   1215 _UPHY14_TRX_ANAREG_TOP_154	=	0x0268
                    026C   1216 _UPHY14_TRX_ANAREG_TOP_155	=	0x026c
                    0270   1217 _UPHY14_TRX_ANAREG_TOP_156	=	0x0270
                    0274   1218 _UPHY14_TRX_ANAREG_TOP_157	=	0x0274
                    0000   1219 _UPHY14_TRX_ANAREG_BOT_0	=	0x0000
                    0004   1220 _UPHY14_TRX_ANAREG_BOT_1	=	0x0004
                    0008   1221 _UPHY14_TRX_ANAREG_BOT_2	=	0x0008
                    000C   1222 _UPHY14_TRX_ANAREG_BOT_3	=	0x000c
                    0010   1223 _UPHY14_TRX_ANAREG_BOT_4	=	0x0010
                    0014   1224 _UPHY14_TRX_ANAREG_BOT_5	=	0x0014
                    0018   1225 _UPHY14_TRX_ANAREG_BOT_6	=	0x0018
                    001C   1226 _UPHY14_TRX_ANAREG_BOT_7	=	0x001c
                    0020   1227 _UPHY14_TRX_ANAREG_BOT_8	=	0x0020
                    0024   1228 _UPHY14_TRX_ANAREG_BOT_9	=	0x0024
                    0028   1229 _UPHY14_TRX_ANAREG_BOT_10	=	0x0028
                    002C   1230 _UPHY14_TRX_ANAREG_BOT_11	=	0x002c
                    0030   1231 _UPHY14_TRX_ANAREG_BOT_12	=	0x0030
                    0034   1232 _UPHY14_TRX_ANAREG_BOT_13	=	0x0034
                    0038   1233 _UPHY14_TRX_ANAREG_BOT_14	=	0x0038
                    003C   1234 _UPHY14_TRX_ANAREG_BOT_15	=	0x003c
                    0040   1235 _UPHY14_TRX_ANAREG_BOT_16	=	0x0040
                    0044   1236 _UPHY14_TRX_ANAREG_BOT_17	=	0x0044
                    0048   1237 _UPHY14_TRX_ANAREG_BOT_18	=	0x0048
                    004C   1238 _UPHY14_TRX_ANAREG_BOT_19	=	0x004c
                    0050   1239 _UPHY14_TRX_ANAREG_BOT_20	=	0x0050
                    0054   1240 _UPHY14_TRX_ANAREG_BOT_21	=	0x0054
                    0058   1241 _UPHY14_TRX_ANAREG_BOT_22	=	0x0058
                    005C   1242 _UPHY14_TRX_ANAREG_BOT_23	=	0x005c
                    0060   1243 _UPHY14_TRX_ANAREG_BOT_24	=	0x0060
                    0064   1244 _UPHY14_TRX_ANAREG_BOT_25	=	0x0064
                    0068   1245 _UPHY14_TRX_ANAREG_BOT_26	=	0x0068
                    006C   1246 _UPHY14_TRX_ANAREG_BOT_27	=	0x006c
                    0070   1247 _UPHY14_TRX_ANAREG_BOT_28	=	0x0070
                    0074   1248 _UPHY14_TRX_ANAREG_BOT_29	=	0x0074
                    0078   1249 _UPHY14_TRX_ANAREG_BOT_30	=	0x0078
                    007C   1250 _UPHY14_TRX_ANAREG_BOT_31	=	0x007c
                    0080   1251 _UPHY14_TRX_ANAREG_BOT_32	=	0x0080
                    0478   1252 _ANA_DFEE_REG_1E	=	0x0478
                    047C   1253 _ANA_DFEE_REG_1F	=	0x047c
                    0480   1254 _ANA_DFEE_REG_20	=	0x0480
                    0484   1255 _ANA_DFEE_REG_21	=	0x0484
                    0488   1256 _ANA_DFEE_REG_22	=	0x0488
                    048C   1257 _ANA_DFEE_REG_23	=	0x048c
                    0490   1258 _ANA_DFEE_REG_24	=	0x0490
                    0494   1259 _ANA_DFEE_REG_25	=	0x0494
                    0498   1260 _ANA_DFEE_REG_26	=	0x0498
                    049C   1261 _ANA_DFEE_REG_27	=	0x049c
                    0400   1262 _ANA_DFEE_REG_00	=	0x0400
                    0404   1263 _ANA_DFEE_REG_01	=	0x0404
                    0408   1264 _ANA_DFEE_REG_02	=	0x0408
                    040C   1265 _ANA_DFEE_REG_03	=	0x040c
                    0410   1266 _ANA_DFEE_REG_04	=	0x0410
                    0414   1267 _ANA_DFEE_REG_05	=	0x0414
                    0418   1268 _ANA_DFEE_REG_06	=	0x0418
                    041C   1269 _ANA_DFEE_REG_07	=	0x041c
                    0420   1270 _ANA_DFEE_REG_08	=	0x0420
                    0424   1271 _ANA_DFEE_REG_09	=	0x0424
                    0428   1272 _ANA_DFEE_REG_0A	=	0x0428
                    042C   1273 _ANA_DFEE_REG_0B	=	0x042c
                    0430   1274 _ANA_DFEE_REG_0C	=	0x0430
                    0434   1275 _ANA_DFEE_REG_0D	=	0x0434
                    0438   1276 _ANA_DFEE_REG_0E	=	0x0438
                    043C   1277 _ANA_DFEE_REG_0F	=	0x043c
                    0440   1278 _ANA_DFEE_REG_10	=	0x0440
                    0444   1279 _ANA_DFEE_REG_11	=	0x0444
                    0448   1280 _ANA_DFEE_REG_12	=	0x0448
                    044C   1281 _ANA_DFEE_REG_13	=	0x044c
                    0450   1282 _ANA_DFEE_REG_14	=	0x0450
                    0454   1283 _ANA_DFEE_REG_15	=	0x0454
                    0458   1284 _ANA_DFEE_REG_16	=	0x0458
                    045C   1285 _ANA_DFEE_REG_17	=	0x045c
                    0460   1286 _ANA_DFEE_REG_18	=	0x0460
                    0464   1287 _ANA_DFEE_REG_19	=	0x0464
                    0468   1288 _ANA_DFEE_REG_1A	=	0x0468
                    046C   1289 _ANA_DFEE_REG_1B	=	0x046c
                    0470   1290 _ANA_DFEE_REG_1C	=	0x0470
                    0474   1291 _ANA_DFEE_REG_1D	=	0x0474
                    0830   1292 _ANA_DFEO_REG_0C	=	0x0830
                    0834   1293 _ANA_DFEO_REG_0D	=	0x0834
                    0838   1294 _ANA_DFEO_REG_0E	=	0x0838
                    083C   1295 _ANA_DFEO_REG_0F	=	0x083c
                    0840   1296 _ANA_DFEO_REG_10	=	0x0840
                    0844   1297 _ANA_DFEO_REG_11	=	0x0844
                    0848   1298 _ANA_DFEO_REG_12	=	0x0848
                    084C   1299 _ANA_DFEO_REG_13	=	0x084c
                    0850   1300 _ANA_DFEO_REG_14	=	0x0850
                    0854   1301 _ANA_DFEO_REG_15	=	0x0854
                    0858   1302 _ANA_DFEO_REG_16	=	0x0858
                    085C   1303 _ANA_DFEO_REG_17	=	0x085c
                    0860   1304 _ANA_DFEO_REG_18	=	0x0860
                    0864   1305 _ANA_DFEO_REG_19	=	0x0864
                    0868   1306 _ANA_DFEO_REG_1A	=	0x0868
                    086C   1307 _ANA_DFEO_REG_1B	=	0x086c
                    0870   1308 _ANA_DFEO_REG_1C	=	0x0870
                    0874   1309 _ANA_DFEO_REG_1D	=	0x0874
                    0878   1310 _ANA_DFEO_REG_1E	=	0x0878
                    087C   1311 _ANA_DFEO_REG_1F	=	0x087c
                    0880   1312 _ANA_DFEO_REG_20	=	0x0880
                    0884   1313 _ANA_DFEO_REG_21	=	0x0884
                    0888   1314 _ANA_DFEO_REG_22	=	0x0888
                    088C   1315 _ANA_DFEO_REG_23	=	0x088c
                    0890   1316 _ANA_DFEO_REG_24	=	0x0890
                    0894   1317 _ANA_DFEO_REG_25	=	0x0894
                    0898   1318 _ANA_DFEO_REG_26	=	0x0898
                    089C   1319 _ANA_DFEO_REG_27	=	0x089c
                    0800   1320 _ANA_DFEO_REG_00	=	0x0800
                    0804   1321 _ANA_DFEO_REG_01	=	0x0804
                    0808   1322 _ANA_DFEO_REG_02	=	0x0808
                    080C   1323 _ANA_DFEO_REG_03	=	0x080c
                    0810   1324 _ANA_DFEO_REG_04	=	0x0810
                    0814   1325 _ANA_DFEO_REG_05	=	0x0814
                    0818   1326 _ANA_DFEO_REG_06	=	0x0818
                    081C   1327 _ANA_DFEO_REG_07	=	0x081c
                    0820   1328 _ANA_DFEO_REG_08	=	0x0820
                    0824   1329 _ANA_DFEO_REG_09	=	0x0824
                    0828   1330 _ANA_DFEO_REG_0A	=	0x0828
                    082C   1331 _ANA_DFEO_REG_0B	=	0x082c
                    8200   1332 _UPHY14_CMN_ANAREG_TOP_128	=	0x8200
                    8204   1333 _UPHY14_CMN_ANAREG_TOP_129	=	0x8204
                    8208   1334 _UPHY14_CMN_ANAREG_TOP_130	=	0x8208
                    820C   1335 _UPHY14_CMN_ANAREG_TOP_131	=	0x820c
                    8210   1336 _UPHY14_CMN_ANAREG_TOP_132	=	0x8210
                    8214   1337 _UPHY14_CMN_ANAREG_TOP_133	=	0x8214
                    8218   1338 _UPHY14_CMN_ANAREG_TOP_134	=	0x8218
                    821C   1339 _UPHY14_CMN_ANAREG_TOP_135	=	0x821c
                    8220   1340 _UPHY14_CMN_ANAREG_TOP_136	=	0x8220
                    8224   1341 _UPHY14_CMN_ANAREG_TOP_137	=	0x8224
                    8228   1342 _UPHY14_CMN_ANAREG_TOP_138	=	0x8228
                    822C   1343 _UPHY14_CMN_ANAREG_TOP_139	=	0x822c
                    8230   1344 _UPHY14_CMN_ANAREG_TOP_140	=	0x8230
                    8234   1345 _UPHY14_CMN_ANAREG_TOP_141	=	0x8234
                    8238   1346 _UPHY14_CMN_ANAREG_TOP_142	=	0x8238
                    823C   1347 _UPHY14_CMN_ANAREG_TOP_143	=	0x823c
                    8240   1348 _UPHY14_CMN_ANAREG_TOP_144	=	0x8240
                    8244   1349 _UPHY14_CMN_ANAREG_TOP_145	=	0x8244
                    8248   1350 _UPHY14_CMN_ANAREG_TOP_146	=	0x8248
                    824C   1351 _UPHY14_CMN_ANAREG_TOP_147	=	0x824c
                    8250   1352 _UPHY14_CMN_ANAREG_TOP_148	=	0x8250
                    8254   1353 _UPHY14_CMN_ANAREG_TOP_149	=	0x8254
                    8258   1354 _UPHY14_CMN_ANAREG_TOP_150	=	0x8258
                    825C   1355 _UPHY14_CMN_ANAREG_TOP_151	=	0x825c
                    8260   1356 _UPHY14_CMN_ANAREG_TOP_152	=	0x8260
                    8264   1357 _UPHY14_CMN_ANAREG_TOP_153	=	0x8264
                    8268   1358 _UPHY14_CMN_ANAREG_TOP_154	=	0x8268
                    826C   1359 _UPHY14_CMN_ANAREG_TOP_155	=	0x826c
                    8270   1360 _UPHY14_CMN_ANAREG_TOP_156	=	0x8270
                    8274   1361 _UPHY14_CMN_ANAREG_TOP_157	=	0x8274
                    8278   1362 _UPHY14_CMN_ANAREG_TOP_158	=	0x8278
                    827C   1363 _UPHY14_CMN_ANAREG_TOP_159	=	0x827c
                    8280   1364 _UPHY14_CMN_ANAREG_TOP_160	=	0x8280
                    8284   1365 _UPHY14_CMN_ANAREG_TOP_161	=	0x8284
                    8288   1366 _UPHY14_CMN_ANAREG_TOP_162	=	0x8288
                    828C   1367 _UPHY14_CMN_ANAREG_TOP_163	=	0x828c
                    8290   1368 _UPHY14_CMN_ANAREG_TOP_164	=	0x8290
                    8294   1369 _UPHY14_CMN_ANAREG_TOP_165	=	0x8294
                    8298   1370 _UPHY14_CMN_ANAREG_TOP_166	=	0x8298
                    829C   1371 _UPHY14_CMN_ANAREG_TOP_167	=	0x829c
                    82A0   1372 _UPHY14_CMN_ANAREG_TOP_168	=	0x82a0
                    82A4   1373 _UPHY14_CMN_ANAREG_TOP_169	=	0x82a4
                    82A8   1374 _UPHY14_CMN_ANAREG_TOP_170	=	0x82a8
                    82AC   1375 _UPHY14_CMN_ANAREG_TOP_171	=	0x82ac
                    82B0   1376 _UPHY14_CMN_ANAREG_TOP_172	=	0x82b0
                    82B4   1377 _UPHY14_CMN_ANAREG_TOP_173	=	0x82b4
                    82B8   1378 _UPHY14_CMN_ANAREG_TOP_174	=	0x82b8
                    82BC   1379 _UPHY14_CMN_ANAREG_TOP_175	=	0x82bc
                    82C0   1380 _UPHY14_CMN_ANAREG_TOP_176	=	0x82c0
                    82C4   1381 _UPHY14_CMN_ANAREG_TOP_177	=	0x82c4
                    82C8   1382 _UPHY14_CMN_ANAREG_TOP_178	=	0x82c8
                    82CC   1383 _UPHY14_CMN_ANAREG_TOP_179	=	0x82cc
                    82D0   1384 _UPHY14_CMN_ANAREG_TOP_180	=	0x82d0
                    82D4   1385 _UPHY14_CMN_ANAREG_TOP_181	=	0x82d4
                    82D8   1386 _UPHY14_CMN_ANAREG_TOP_182	=	0x82d8
                    82DC   1387 _UPHY14_CMN_ANAREG_TOP_183	=	0x82dc
                    82E0   1388 _UPHY14_CMN_ANAREG_TOP_184	=	0x82e0
                    82E4   1389 _UPHY14_CMN_ANAREG_TOP_185	=	0x82e4
                    82E8   1390 _UPHY14_CMN_ANAREG_TOP_186	=	0x82e8
                    82EC   1391 _UPHY14_CMN_ANAREG_TOP_187	=	0x82ec
                    82F0   1392 _UPHY14_CMN_ANAREG_TOP_188	=	0x82f0
                    82F4   1393 _UPHY14_CMN_ANAREG_TOP_189	=	0x82f4
                    82F8   1394 _UPHY14_CMN_ANAREG_TOP_190	=	0x82f8
                    82FC   1395 _UPHY14_CMN_ANAREG_TOP_191	=	0x82fc
                    8300   1396 _UPHY14_CMN_ANAREG_TOP_192	=	0x8300
                    8304   1397 _UPHY14_CMN_ANAREG_TOP_193	=	0x8304
                    8308   1398 _UPHY14_CMN_ANAREG_TOP_194	=	0x8308
                    830C   1399 _UPHY14_CMN_ANAREG_TOP_195	=	0x830c
                    8310   1400 _UPHY14_CMN_ANAREG_TOP_196	=	0x8310
                    8314   1401 _UPHY14_CMN_ANAREG_TOP_197	=	0x8314
                    8318   1402 _UPHY14_CMN_ANAREG_TOP_198	=	0x8318
                    831C   1403 _UPHY14_CMN_ANAREG_TOP_199	=	0x831c
                    8320   1404 _UPHY14_CMN_ANAREG_TOP_200	=	0x8320
                    8324   1405 _UPHY14_CMN_ANAREG_TOP_201	=	0x8324
                    8328   1406 _UPHY14_CMN_ANAREG_TOP_202	=	0x8328
                    832C   1407 _UPHY14_CMN_ANAREG_TOP_203	=	0x832c
                    8330   1408 _UPHY14_CMN_ANAREG_TOP_204	=	0x8330
                    8334   1409 _UPHY14_CMN_ANAREG_TOP_205	=	0x8334
                    8338   1410 _UPHY14_CMN_ANAREG_TOP_206	=	0x8338
                    833C   1411 _UPHY14_CMN_ANAREG_TOP_207	=	0x833c
                    8340   1412 _UPHY14_CMN_ANAREG_TOP_208	=	0x8340
                    8344   1413 _UPHY14_CMN_ANAREG_TOP_209	=	0x8344
                    8348   1414 _UPHY14_CMN_ANAREG_TOP_210	=	0x8348
                    834C   1415 _UPHY14_CMN_ANAREG_TOP_211	=	0x834c
                    8350   1416 _UPHY14_CMN_ANAREG_TOP_212	=	0x8350
                    8354   1417 _UPHY14_CMN_ANAREG_TOP_213	=	0x8354
                    8358   1418 _UPHY14_CMN_ANAREG_TOP_214	=	0x8358
                    2000   1419 _PM_CTRL_TX_LANE_REG1_LANE	=	0x2000
                    2004   1420 _PM_CTRL_TX_LANE_REG2_LANE	=	0x2004
                    2008   1421 _INPUT_TX_PIN_REG0_LANE	=	0x2008
                    200C   1422 _INPUT_TX_PIN_REG1_LANE	=	0x200c
                    2010   1423 _INPUT_TX_PIN_REG2_LANE	=	0x2010
                    2014   1424 _INPUT_TX_PIN_REG3_LANE	=	0x2014
                    2018   1425 _PM_CTRL_INTERRUPT_REG1_LANE	=	0x2018
                    201C   1426 _PM_CTRL_INTERRUPT_REG2	=	0x201c
                    2020   1427 _CLKGEN_TX_LANE_REG1_LANE	=	0x2020
                    2024   1428 _TX_SPEED_CONVERT_LANE	=	0x2024
                    2028   1429 _SPD_CTRL_INTERRUPT_REG1_LANE	=	0x2028
                    202C   1430 _SPD_CTRL_INTERRUPT_REG2	=	0x202c
                    2030   1431 _SPD_CTRL_TX_LANE_REG1_LANE	=	0x2030
                    2034   1432 _TX_SYSTEM_LANE	=	0x2034
                    203C   1433 _INPUT_TX_PIN_REG4_LANE	=	0x203c
                    2040   1434 _TX_CALIBRATION_LANE	=	0x2040
                    2044   1435 _DIG_TX_RSVD_REG0	=	0x2044
                    2048   1436 _INPUT_TX_PIN_REG5_LANE	=	0x2048
                    204C   1437 __FIELDNAME__LANE	=	0x204c
                    2050   1438 _PM_CTRL_INTERRUPT_ISR_REG1_LANE	=	0x2050
                    2054   1439 _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE	=	0x2054
                    2058   1440 _ANALOG_TX_REALTIME_REG_1	=	0x2058
                    205C   1441 _MON_TOP	=	0x205c
                    2100   1442 _PM_CTRL_RX_LANE_REG1_LANE	=	0x2100
                    2104   1443 _RX_SYSTEM_LANE	=	0x2104
                    2108   1444 _INPUT_RX_PIN_REG0_LANE	=	0x2108
                    210C   1445 _INPUT_RX_PIN_REG1_LANE	=	0x210c
                    2110   1446 _INPUT_RX_PIN_REG2_LANE	=	0x2110
                    2114   1447 _SPD_CTRL_RX_LANE_REG1_LANE	=	0x2114
                    2118   1448 _DIG_RX_RSVD_REG0	=	0x2118
                    211C   1449 _CLKGEN_RX_LANE_REG1_LANE	=	0x211c
                    2120   1450 _FRAME_SYNC_DET_REG0	=	0x2120
                    2124   1451 _FRAME_SYNC_DET_REG1	=	0x2124
                    2128   1452 _FRAME_SYNC_DET_REG2	=	0x2128
                    212C   1453 _FRAME_SYNC_DET_REG3	=	0x212c
                    2130   1454 _FRAME_SYNC_DET_REG4	=	0x2130
                    2134   1455 _FRAME_SYNC_DET_REG5	=	0x2134
                    2138   1456 _FRAME_SYNC_DET_REG6	=	0x2138
                    213C   1457 _CDR_LOCK_REG	=	0x213c
                    2140   1458 _RX_LANE_INTERRUPT	=	0x2140
                    2144   1459 _RX_LANE_INTERRUPT_MASK	=	0x2144
                    2148   1460 _RX_DATA_PATH_REG	=	0x2148
                    214C   1461 _INPUT_RX_PIN_REG3_LANE	=	0x214c
                    2150   1462 _RX_CALIBRATION_REG	=	0x2150
                    2158   1463 _RX_LANE_INTERRUPT_REG1	=	0x2158
                    2160   1464 _DTL_REG0	=	0x2160
                    2164   1465 _DTL_REG1	=	0x2164
                    2168   1466 _DTL_REG2	=	0x2168
                    216C   1467 _DTL_REG3	=	0x216c
                    2170   1468 _SQ_REG0	=	0x2170
                    4000   1469 _LANE_CFG0	=	0x4000
                    4004   1470 _LANE_STATUS0	=	0x4004
                    4008   1471 _LANE_CFG_STATUS2_LANE	=	0x4008
                    400C   1472 _LANE_CFG2_LANE	=	0x400c
                    4010   1473 _LANE_CFG4	=	0x4010
                    4014   1474 _LANE_CFG_STATUS3_LANE	=	0x4014
                    4018   1475 _LANE_DP_PIE8_CFG0_LANE	=	0x4018
                    401C   1476 _LANE_USB_DP_CFG1_LANE	=	0x401c
                    4020   1477 _LANE_USB_DP_CFG2_LANE	=	0x4020
                    4024   1478 _LANE_EQ_CFG0_LANE	=	0x4024
                    4028   1479 _LANE_EQ_CFG1_LANE	=	0x4028
                    402C   1480 _LANE_PRESET_CFG0_LANE	=	0x402c
                    4030   1481 _LANE_PRESET_CFG2_LANE	=	0x4030
                    4034   1482 _LANE_PRESET_CFG4_LANE	=	0x4034
                    4038   1483 _LANE_PRESET_CFG6_LANE	=	0x4038
                    403C   1484 _LANE_PRESET_CFG8_LANE	=	0x403c
                    4040   1485 _LANE_PRESET_CFG10_LANE	=	0x4040
                    4044   1486 _LANE_PRESET_CFG12_LANE	=	0x4044
                    4048   1487 _LANE_PRESET_CFG14_LANE	=	0x4048
                    404C   1488 _LANE_PRESET_CFG16_LANE	=	0x404c
                    4050   1489 _LANE_COEFF_MAX0_LANE	=	0x4050
                    4054   1490 _LANE_REMOTE_SET_LANE	=	0x4054
                    4058   1491 _LANE_EQ_16G_CFG0_LANE	=	0x4058
                    405C   1492 _LANE_16G_PRESET_CFG0_LANE	=	0x405c
                    4060   1493 _LANE_16G_PRESET_CFG2_LANE	=	0x4060
                    4064   1494 _LANE_16G_PRESET_CFG4_LANE	=	0x4064
                    4068   1495 _LANE_16G_PRESET_CFG6_LANE	=	0x4068
                    406C   1496 _LANE_16G_PRESET_CFG8_LANE	=	0x406c
                    4070   1497 _LANE_16G_PRESET_CFG10_LANE	=	0x4070
                    4074   1498 _LANE_16G_PRESET_CFG12_LANE	=	0x4074
                    4078   1499 _LANE_16G_PRESET_CFG14_LANE	=	0x4078
                    407C   1500 _LANE_16G_PRESET_CFG16_LANE	=	0x407c
                    4080   1501 _LANE_EQ_32G_CFG0_LANE	=	0x4080
                    4084   1502 _LANE_32G_PRESET_CFG0_LANE	=	0x4084
                    4088   1503 _LANE_32G_PRESET_CFG2_LANE	=	0x4088
                    408C   1504 _LANE_32G_PRESET_CFG4_LANE	=	0x408c
                    4090   1505 _LANE_32G_PRESET_CFG6_LANE	=	0x4090
                    4094   1506 _LANE_32G_PRESET_CFG8_LANE	=	0x4094
                    4098   1507 _LANE_32G_PRESET_CFG10_LANE	=	0x4098
                    409C   1508 _LANE_32G_PRESET_CFG12_LANE	=	0x409c
                    40A0   1509 _LANE_32G_PRESET_CFG14_LANE	=	0x40a0
                    40A4   1510 _LANE_32G_PRESET_CFG16_LANE	=	0x40a4
                    2200   1511 _MCU_CONTROL_LANE	=	0x2200
                    2204   1512 _MCU_GPIO	=	0x2204
                    2208   1513 _CACHE_DEBUG0	=	0x2208
                    220C   1514 _CACHE_DEBUG1	=	0x220c
                    2210   1515 _LANE_SYSTEM0	=	0x2210
                    2230   1516 _MCU_STATUS0_LANE	=	0x2230
                    2234   1517 _MCU_STATUS1_LANE	=	0x2234
                    2238   1518 _MCU_STATUS2_LANE	=	0x2238
                    223C   1519 _MCU_STATUS3_LANE	=	0x223c
                    2240   1520 _MCU_INT0_CONTROL	=	0x2240
                    2244   1521 _MCU_INT1_CONTROL	=	0x2244
                    2248   1522 _MCU_INT2_CONTROL	=	0x2248
                    224C   1523 _MCU_INT3_CONTROL	=	0x224c
                    2250   1524 _MCU_INT4_CONTROL	=	0x2250
                    2254   1525 _MCU_INT5_CONTROL	=	0x2254
                    2258   1526 _MCU_INT6_CONTROL	=	0x2258
                    225C   1527 _MCU_INT7_CONTROL	=	0x225c
                    2260   1528 _MCU_INT8_CONTROL	=	0x2260
                    2264   1529 _MCU_INT9_CONTROL	=	0x2264
                    2268   1530 _MCU_INT10_CONTROL	=	0x2268
                    226C   1531 _MCU_INT11_CONTROL	=	0x226c
                    2270   1532 _MCU_INT12_CONTROL	=	0x2270
                    2274   1533 _MCU_TIMER_CONTROL	=	0x2274
                    2278   1534 _MCU_TIMER0_CONTROL	=	0x2278
                    227C   1535 _MCU_TIMER1_CONTROL	=	0x227c
                    2280   1536 _MCU_TIMER2_CONTROL	=	0x2280
                    2284   1537 _MCU_TIMER3_CONTROL	=	0x2284
                    2288   1538 _MCU_IRQ_LANE	=	0x2288
                    228C   1539 _MCU_IRQ_MASK_LANE	=	0x228c
                    2290   1540 _MCU_MEM_REG1_LANE	=	0x2290
                    2294   1541 _MCU_MEM_REG2_LANE	=	0x2294
                    2298   1542 _MCU_TIMER_CTRL_1_LANE	=	0x2298
                    229C   1543 _MCU_TIMER_CTRL_2_LANE	=	0x229c
                    22A0   1544 _MCU_TIMER_CTRL_3_LANE	=	0x22a0
                    22A4   1545 _MCU_TIMER_CTRL_4_LANE	=	0x22a4
                    22A8   1546 _MCU_TIMER_CTRL_5_LANE	=	0x22a8
                    22AC   1547 _MCU_TIMER_CTRL_6_LANE	=	0x22ac
                    22B0   1548 _MCU_TIMER_CTRL_7_LANE	=	0x22b0
                    22B4   1549 _MCU_DEBUG0_LANE	=	0x22b4
                    22B8   1550 _MCU_DEBUG1_LANE	=	0x22b8
                    22BC   1551 _MCU_DEBUG2_LANE	=	0x22bc
                    22C0   1552 _MCU_DEBUG3_LANE	=	0x22c0
                    22C4   1553 _MCU_DEBUG_LANE	=	0x22c4
                    22C8   1554 _EXT_INT_CONTROL	=	0x22c8
                    22CC   1555 _ANA_IF_TRX_REG0	=	0x22cc
                    22D0   1556 _ANA_IF_DFEE_REG0	=	0x22d0
                    22D4   1557 _ANA_IF_DFEO_REG0	=	0x22d4
                    22D8   1558 _MCU_IRQ_ISR_LANE	=	0x22d8
                    22DC   1559 _MCU_WDT_LANE	=	0x22dc
                    22E0   1560 _MCU_INT_CONTROL_13	=	0x22e0
                    22E4   1561 _MCU_COMMAND0	=	0x22e4
                    22F4   1562 _MEM_ECC_ERR_ADDRESS0	=	0x22f4
                    22F8   1563 _XDATA_MEM_CHECKSUM_LANE0	=	0x22f8
                    22FC   1564 _XDATA_MEM_CHECKSUM_LANE1	=	0x22fc
                    2300   1565 _PT_CONTROL0	=	0x2300
                    2304   1566 _PT_CONTROL1	=	0x2304
                    2308   1567 _PT_USER_PATTERN0	=	0x2308
                    230C   1568 _PT_USER_PATTERN1	=	0x230c
                    2310   1569 _PT_USER_PATTERN2	=	0x2310
                    2314   1570 _PT_COUNTER0	=	0x2314
                    2318   1571 _PT_COUNTER1	=	0x2318
                    231C   1572 _PT_COUNTER2	=	0x231c
                    2400   1573 _DFE_CTRL_REG0	=	0x2400
                    2404   1574 _DFE_CTRL_REG1	=	0x2404
                    2408   1575 _DFE_CTRL_REG2	=	0x2408
                    240C   1576 _DFE_CTRL_REG3	=	0x240c
                    2410   1577 _RX_EQ_CLK_CTRL	=	0x2410
                    2414   1578 _DFE_CTRL_REG4	=	0x2414
                    2418   1579 _DFE_ANA_REG0	=	0x2418
                    241C   1580 _DFE_ANA_REG1	=	0x241c
                    2420   1581 _DFE_STEP_REG0	=	0x2420
                    2424   1582 _DFE_STEP_REG1	=	0x2424
                    2430   1583 _DFE_FEN_EVEN_REG	=	0x2430
                    2434   1584 _DFE_FEN_ODD_REG	=	0x2434
                    2438   1585 _DFE_DC_EVEN_REG8	=	0x2438
                    243C   1586 _DFE_DC_ODD_REG8	=	0x243c
                    2440   1587 _DFE_FEXT_EVEN_REG0	=	0x2440
                    2444   1588 _DFE_FEXT_EVEN_REG1	=	0x2444
                    2448   1589 _DFE_FEXT_EVEN_REG2	=	0x2448
                    244C   1590 _DFE_FEXT_EVEN_REG3	=	0x244c
                    2450   1591 _DFE_FEXT_EVEN_REG4	=	0x2450
                    2454   1592 _DFE_FEXT_EVEN_REG5	=	0x2454
                    2458   1593 _DFE_FEXT_EVEN_REG6	=	0x2458
                    245C   1594 _DFE_FEXT_EVEN_REG7	=	0x245c
                    2460   1595 _DFE_FEXT_ODD_REG0	=	0x2460
                    2464   1596 _DFE_FEXT_ODD_REG1	=	0x2464
                    2468   1597 _DFE_FEXT_ODD_REG2	=	0x2468
                    246C   1598 _DFE_FEXT_ODD_REG3	=	0x246c
                    2470   1599 _DFE_FEXT_ODD_REG4	=	0x2470
                    2474   1600 _DFE_FEXT_ODD_REG5	=	0x2474
                    2478   1601 _DFE_FEXT_ODD_REG6	=	0x2478
                    247C   1602 _DFE_FEXT_ODD_REG7	=	0x247c
                    2480   1603 _DFE_READ_EVEN_SM_REG0	=	0x2480
                    2484   1604 _DFE_READ_EVEN_SM_REG1	=	0x2484
                    2488   1605 _DFE_READ_EVEN_SM_REG2	=	0x2488
                    248C   1606 _DFE_READ_EVEN_SM_REG3	=	0x248c
                    2490   1607 _DFE_READ_EVEN_SM_REG4	=	0x2490
                    2494   1608 _DFE_READ_EVEN_SM_REG5	=	0x2494
                    2498   1609 _DFE_READ_EVEN_SM_REG6	=	0x2498
                    249C   1610 _DFE_READ_EVEN_SM_REG7	=	0x249c
                    24A0   1611 _DFE_READ_ODD_SM_REG0	=	0x24a0
                    24A4   1612 _DFE_READ_ODD_SM_REG1	=	0x24a4
                    24A8   1613 _DFE_READ_ODD_SM_REG2	=	0x24a8
                    24AC   1614 _DFE_READ_ODD_SM_REG3	=	0x24ac
                    24B0   1615 _DFE_READ_ODD_SM_REG4	=	0x24b0
                    24B4   1616 _DFE_READ_ODD_SM_REG5	=	0x24b4
                    24B8   1617 _DFE_READ_ODD_SM_REG6	=	0x24b8
                    24BC   1618 _DFE_READ_ODD_SM_REG7	=	0x24bc
                    24C0   1619 _DFE_READ_EVEN_SM_REG8	=	0x24c0
                    24C4   1620 _DFE_READ_ODD_SM_REG8	=	0x24c4
                    24D0   1621 _DFE_READ_EVEN_2C_REG0	=	0x24d0
                    24D4   1622 _DFE_READ_EVEN_2C_REG1	=	0x24d4
                    24D8   1623 _DFE_READ_EVEN_2C_REG2	=	0x24d8
                    24DC   1624 _DFE_READ_EVEN_2C_REG3	=	0x24dc
                    24E0   1625 _DFE_READ_EVEN_2C_REG4	=	0x24e0
                    24E4   1626 _DFE_READ_EVEN_2C_REG5	=	0x24e4
                    24E8   1627 _DFE_READ_EVEN_2C_REG6	=	0x24e8
                    24EC   1628 _DFE_READ_EVEN_2C_REG7	=	0x24ec
                    24F0   1629 _DFE_READ_ODD_2C_REG0	=	0x24f0
                    24F4   1630 _DFE_READ_ODD_2C_REG1	=	0x24f4
                    24F8   1631 _DFE_READ_ODD_2C_REG2	=	0x24f8
                    24FC   1632 _DFE_READ_ODD_2C_REG3	=	0x24fc
                    2500   1633 _DFE_READ_ODD_2C_REG4	=	0x2500
                    2504   1634 _DFE_READ_ODD_2C_REG5	=	0x2504
                    2508   1635 _DFE_READ_ODD_2C_REG6	=	0x2508
                    250C   1636 _DFE_READ_ODD_2C_REG7	=	0x250c
                    2510   1637 _DFE_READ_EVEN_2C_REG8	=	0x2510
                    2514   1638 _DFE_READ_ODD_2C_REG8	=	0x2514
                    2518   1639 _CAL_OFST_REG0	=	0x2518
                    251C   1640 _CAL_OFST_REG1	=	0x251c
                    2520   1641 _CAL_OFST_REG2	=	0x2520
                    2530   1642 _DFE_DCE_REG0	=	0x2530
                    2540   1643 _DFE_STATIC_LANE_REG0	=	0x2540
                    2544   1644 _DFE_STATIC_LANE_REG1	=	0x2544
                    2548   1645 _DFE_STATIC_LANE_REG3	=	0x2548
                    254C   1646 _DFE_STATIC_LANE_REG4	=	0x254c
                    2550   1647 _DFE_STATIC_LANE_REG5	=	0x2550
                    2554   1648 _DFE_STATIC_LANE_REG6	=	0x2554
                    2560   1649 _EOM_VLD_REG0	=	0x2560
                    2564   1650 _EOM_VLD_REG1	=	0x2564
                    2568   1651 _EOM_VLD_REG2	=	0x2568
                    256C   1652 _EOM_VLD_REG3	=	0x256c
                    2570   1653 _EOM_ERR_REG0	=	0x2570
                    2574   1654 _EOM_ERR_REG1	=	0x2574
                    2578   1655 _EOM_ERR_REG2	=	0x2578
                    257C   1656 _EOM_ERR_REG3	=	0x257c
                    2580   1657 _EOM_REG0	=	0x2580
                    25F0   1658 _EOM_VLD_REG4	=	0x25f0
                    25F4   1659 _LANE_MARGIN_REG0	=	0x25f4
                    6000   1660 _CAL_CTRL1_LANE	=	0x6000
                    6004   1661 _CAL_CTRL2_LANE	=	0x6004
                    6008   1662 _CAL_CTRL3_LANE	=	0x6008
                    600C   1663 _CAL_CTRL4_LANE	=	0x600c
                    6010   1664 _CAL_SAVE_DATA1_LANE	=	0x6010
                    6014   1665 _CAL_SAVE_DATA2_LANE	=	0x6014
                    6018   1666 _CAL_SAVE_DATA3_LANE	=	0x6018
                    601C   1667 _PHY_REMOTE_CTRL_COMMAND_LANE	=	0x601c
                    6020   1668 _PHY_REMOTE_CTRL_VALUE_LANE	=	0x6020
                    6024   1669 _PHY_LOCAL_VALUE_LANE	=	0x6024
                    6028   1670 _TRX_TRAIN_IF_TIMERS1_LANE	=	0x6028
                    602C   1671 _TRX_TRAIN_IF_TIMERS2_LANE	=	0x602c
                    6030   1672 _TRX_TRAIN_IF_TIMERS_ENABLE_LANE	=	0x6030
                    6034   1673 _DFE_CONTROL_0	=	0x6034
                    6038   1674 _DFE_CONTROL_1	=	0x6038
                    6040   1675 _DFE_CONTROL_2	=	0x6040
                    6044   1676 _DFE_CONTROL_3	=	0x6044
                    6048   1677 _DFE_CONTROL_4	=	0x6048
                    604C   1678 _DFE_CONTROL_5	=	0x604c
                    6050   1679 _TRAIN_CONTROL_0	=	0x6050
                    6054   1680 _TRAIN_CONTROL_1	=	0x6054
                    6058   1681 _TRAIN_CONTROL_2	=	0x6058
                    605C   1682 _RPTA_CONFIG_0	=	0x605c
                    6060   1683 _RPTA_CONFIG_1	=	0x6060
                    6064   1684 _DLL_CAL	=	0x6064
                    6068   1685 _TRAIN_PARA_0	=	0x6068
                    606C   1686 _TRAIN_PARA_1	=	0x606c
                    6070   1687 _TRAIN_PARA_2	=	0x6070
                    6074   1688 _TRAIN_PARA_3	=	0x6074
                    6078   1689 _DFE_CONTROL_6	=	0x6078
                    607C   1690 _DFE_TEST_0	=	0x607c
                    6080   1691 _DFE_TEST_1	=	0x6080
                    6084   1692 _DFE_TEST_4	=	0x6084
                    6088   1693 _DFE_TEST_5	=	0x6088
                    608C   1694 _DFE_CONTROL_7	=	0x608c
                    6090   1695 _DFE_CONTROL_8	=	0x6090
                    6094   1696 _DFE_CONTROL_9	=	0x6094
                    6098   1697 _DFE_CONTROL_10	=	0x6098
                    609C   1698 _DFE_CONTROL_11	=	0x609c
                    60A0   1699 _CDS_CTRL_REG0	=	0x60a0
                    60A4   1700 _CDS_CTRL_REG1	=	0x60a4
                    60A8   1701 _ESM_POP_P_CNT_LOW_LANE	=	0x60a8
                    60AC   1702 _ESM_ERR_P_CNT_LOW_LANE	=	0x60ac
                    60B0   1703 _ESM_ERR_POP_CNT_HIGH_LANE	=	0x60b0
                    60B4   1704 _TRAIN_CONTROL_3	=	0x60b4
                    60B8   1705 _TRAIN_CONTROL_4	=	0x60b8
                    60BC   1706 _TRAIN_CONTROL_5	=	0x60bc
                    60C0   1707 _TRAIN_CONTROL_6	=	0x60c0
                    60C4   1708 _TRAIN_CONTROL_7	=	0x60c4
                    60C8   1709 _TRAIN_CONTROL_8	=	0x60c8
                    60CC   1710 _TRAIN_CONTROL_9	=	0x60cc
                    60D0   1711 _TRAIN_CONTROL_10	=	0x60d0
                    60D4   1712 _TRAIN_CONTROL_11	=	0x60d4
                    60D8   1713 _TRAIN_CONTROL_12	=	0x60d8
                    60DC   1714 _ESM_POP_N_CNT_LOW_LANE	=	0x60dc
                    60E0   1715 _ESM_ERR_N_CNT_LOW_LANE	=	0x60e0
                    60E4   1716 _TRAIN_CONTROL_13	=	0x60e4
                    60E8   1717 _TRAIN_CONTROL_14	=	0x60e8
                    60EC   1718 _TRAIN_CONTROL_15	=	0x60ec
                    60F0   1719 _TRAIN_CONTROL_16	=	0x60f0
                    60F4   1720 _TRAIN_CONTROL_17	=	0x60f4
                    60F8   1721 _END_XDAT_LANE	=	0x60f8
                    A000   1722 _TX_CMN_REG	=	0xa000
                    A008   1723 _DTX_REG0	=	0xa008
                    A00C   1724 _DTX_REG1	=	0xa00c
                    A010   1725 _DTX_REG2	=	0xa010
                    A014   1726 _DTX_REG3	=	0xa014
                    A018   1727 _DTX_REG4	=	0xa018
                    A01C   1728 _DTX_PHY_ALIGN_REG0	=	0xa01c
                    A024   1729 _DTX_PHY_ALIGN_REG1	=	0xa024
                    A028   1730 _DTX_PHY_ALIGN_REG2	=	0xa028
                    A02C   1731 _SRIS_REG0	=	0xa02c
                    A030   1732 _SRIS_REG1	=	0xa030
                    A100   1733 _RX_CMN_0	=	0xa100
                    A110   1734 _DFE_STATIC_REG0	=	0xa110
                    A114   1735 _DFE_STATIC_REG1	=	0xa114
                    A118   1736 _DFE_STATIC_REG3	=	0xa118
                    A11C   1737 _DFE_STATIC_REG4	=	0xa11c
                    A120   1738 _DFE_STATIC_REG5	=	0xa120
                    A124   1739 _DFE_STATIC_REG6	=	0xa124
                    4200   1740 _GLOB_RST_CLK_CTRL	=	0x4200
                    4204   1741 _GLOB_CLK_SRC_LO	=	0x4204
                    4208   1742 _GLOB_CLK_SRC_HI	=	0x4208
                    420C   1743 _GLOB_MISC_CTRL	=	0x420c
                    4210   1744 _GLOB_DP_SAL_CFG	=	0x4210
                    4214   1745 _GLOB_DP_SAL_CFG1	=	0x4214
                    4218   1746 _GLOB_DP_SAL_CFG3	=	0x4218
                    421C   1747 _GLOB_DP_SAL_CFG5	=	0x421c
                    4220   1748 _GLOB_PM_CFG0	=	0x4220
                    4224   1749 _GLOB_COUNTER_CTRL	=	0x4224
                    4228   1750 _GLOB_COUNTER_HI	=	0x4228
                    422C   1751 _GLOB_PM_DP_CTRL	=	0x422c
                    4230   1752 _GLOB_DP_BAL_CFG0	=	0x4230
                    4234   1753 _GLOB_DP_BAL_CFG2	=	0x4234
                    4238   1754 _GLOB_DP_BAL_CFG4	=	0x4238
                    423C   1755 _GLOB_BIST_CTRL	=	0x423c
                    4240   1756 _GLOB_BIST_LANE_TYPE	=	0x4240
                    4244   1757 _GLOB_BIST_START	=	0x4244
                    4248   1758 _GLOB_BIST_MASK	=	0x4248
                    424C   1759 _GLOB_BIST_RESULT	=	0x424c
                    4250   1760 _GLOB_BIST_SEQR_CFG	=	0x4250
                    4254   1761 _GLOB_BIST_DATA_HI	=	0x4254
                    4258   1762 _GLOB_PIPE_REVISION	=	0x4258
                    425C   1763 _GLOB_L1_SUBSTATES_CFG	=	0x425c
                    A200   1764 _MCU_CONTROL_0	=	0xa200
                    A204   1765 _MCU_CONTROL_1	=	0xa204
                    A208   1766 _MCU_CONTROL_2	=	0xa208
                    A20C   1767 _MCU_CONTROL_3	=	0xa20c
                    A210   1768 _MCU_CONTROL_4	=	0xa210
                    A214   1769 _MCU_DEBUG0	=	0xa214
                    A218   1770 _MCU_DEBUG1	=	0xa218
                    A21C   1771 _MEMORY_CONTROL_0	=	0xa21c
                    A220   1772 _MEMORY_CONTROL_1	=	0xa220
                    A224   1773 _MEMORY_CONTROL_2	=	0xa224
                    A228   1774 _MEMORY_CONTROL_3	=	0xa228
                    A22C   1775 _MEMORY_CONTROL_4	=	0xa22c
                    A234   1776 _MCU_INFO_0	=	0xa234
                    A238   1777 _MCU_INFO_1	=	0xa238
                    A23C   1778 _MCU_INFO_2	=	0xa23c
                    A240   1779 _MCU_INFO_3	=	0xa240
                    A244   1780 _MEM_CMN_ECC_ERR_ADDRESS0	=	0xa244
                    A2E0   1781 _ANA_IF_CMN_REG1	=	0xa2e0
                    A2E4   1782 _MEM_IRQ	=	0xa2e4
                    A2E8   1783 _MEM_IRQ_MASK	=	0xa2e8
                    A2EC   1784 _ANA_IF_CMN_REG0	=	0xa2ec
                    A2F0   1785 _APB_CONTROL_REG	=	0xa2f0
                    A2F4   1786 _MEM_IRQ_CLEAR	=	0xa2f4
                    A2F8   1787 _MCU_SYNC1	=	0xa2f8
                    A2FC   1788 _MCU_SYNC2	=	0xa2fc
                    A300   1789 _TEST0	=	0xa300
                    A304   1790 _TEST1	=	0xa304
                    A308   1791 _TEST2	=	0xa308
                    A30C   1792 _TEST3	=	0xa30c
                    A310   1793 _TEST4	=	0xa310
                    A314   1794 _SYSTEM	=	0xa314
                    A318   1795 _PM_CMN_REG1	=	0xa318
                    A31C   1796 _INPUT_CMN_PIN_REG0	=	0xa31c
                    A320   1797 _INPUT_CMN_PIN_REG1	=	0xa320
                    A324   1798 _INPUT_CMN_PIN_REG2	=	0xa324
                    A328   1799 _ANA_TSEN_CONTROL	=	0xa328
                    A32C   1800 _PLLCAL_REG0	=	0xa32c
                    A330   1801 _PLLCAL_REG1	=	0xa330
                    A334   1802 _CLKGEN_CMN_REG1	=	0xa334
                    A338   1803 _SPD_CMN_REG1	=	0xa338
                    A33C   1804 _OUTPUT_CMN_PIN_REG0	=	0xa33c
                    A340   1805 _CMN_CALIBRATION	=	0xa340
                    A344   1806 __FIELDNAME_	=	0xa344
                    A348   1807 _INPUT_CMN_PIN_REG3	=	0xa348
                    A34C   1808 _PM_CMN_REG2	=	0xa34c
                    A354   1809 _TEST5	=	0xa354
                    A358   1810 _XDATA_MEM_CHECKSUM_CMN_0	=	0xa358
                    A35C   1811 _XDATA_MEM_CHECKSUM_CMN_1	=	0xa35c
                    A360   1812 _XDATA_MEM_CHECKSUM_CMN_2	=	0xa360
                    A364   1813 _MCU_SDT_CMN	=	0xa364
                    A368   1814 _CMN_CACHE_DEBUG0	=	0xa368
                    A36C   1815 _MCU_INT_ADDR	=	0xa36c
                    A370   1816 _CMN_ISR_2	=	0xa370
                    A374   1817 _CMN_ISR_MASK_2	=	0xa374
                    A378   1818 _CMN_ISR_CLEAR_2	=	0xa378
                    A37C   1819 _CMN_MCU_GPIO	=	0xa37c
                    A380   1820 _CMN_CACHE_DEBUG1	=	0xa380
                    A384   1821 _CMN_MCU_TIMER_CONTROL	=	0xa384
                    A388   1822 _CMN_MCU_TIMER_CTRL_2_LANE	=	0xa388
                    A38C   1823 _CMN_MCU_TIMER_CTRL_3_LANE	=	0xa38c
                    A390   1824 _CMN_MCU_TIMER_CTRL_4_LANE	=	0xa390
                    A394   1825 _CMN_MCU_TIMER_CTRL_5_LANE	=	0xa394
                    A398   1826 _CMN_MCU_TIMER0_CONTROL	=	0xa398
                    A39C   1827 _CMN_MCU_TIMER1_CONTROL	=	0xa39c
                    A3A0   1828 _CMN_MCU_TIMER2_CONTROL	=	0xa3a0
                    A3A4   1829 _CMN_MCU_TIMER3_CONTROL	=	0xa3a4
                    A3A8   1830 _CMN_ISR_1	=	0xa3a8
                    A3AC   1831 _CMN_ISR_MASK_1	=	0xa3ac
                    A3B0   1832 _SET_LANE_ISR	=	0xa3b0
                    A3F4   1833 _CMN_MCU_REG	=	0xa3f4
                    A3F8   1834 _CID_REG0	=	0xa3f8
                    A3FC   1835 _CID_REG1	=	0xa3fc
                    E600   1836 _FW_REV	=	0xe600
                    E604   1837 _CONTROL_CONFIG0	=	0xe604
                    E608   1838 _CONTROL_CONFIG1	=	0xe608
                    E60C   1839 _CONTROL_CONFIG2	=	0xe60c
                    E610   1840 _CONTROL_CONFIG3	=	0xe610
                    E614   1841 _CONTROL_CONFIG4	=	0xe614
                    E618   1842 _CONTROL_CONFIG5	=	0xe618
                    E61C   1843 _CONTROL_CONFIG6	=	0xe61c
                    E620   1844 _CONTROL_CONFIG7	=	0xe620
                    E624   1845 _CAL_DATA0	=	0xe624
                    E628   1846 _TRAIN_IF_CONFIG	=	0xe628
                    E62C   1847 _CONTROL_CONFIG8	=	0xe62c
                    E630   1848 _CONTROL_CONFIG9	=	0xe630
                    E634   1849 _CON_CAL_STEP_SIZE1	=	0xe634
                    E638   1850 _CON_CAL_STEP_SIZE2	=	0xe638
                    E63C   1851 _CON_CAL_STEP_SIZE3	=	0xe63c
                    E640   1852 _CON_CAL_STEP_SIZE4	=	0xe640
                    E644   1853 _CON_CAL_STEP_SIZE5	=	0xe644
                    E648   1854 _CAL_TIME_OUT_AND_DIS	=	0xe648
                    E64C   1855 _CAL_STATUS_READ	=	0xe64c
                    E650   1856 _MCU_CONFIG	=	0xe650
                    E654   1857 _CAL_DATA1	=	0xe654
                    E658   1858 _LOOP_CNTS	=	0xe658
                    E65C   1859 _MCU_CONFIG1	=	0xe65c
                    E660   1860 _TIMER_SEL1	=	0xe660
                    E664   1861 _TIMER_SEL2	=	0xe664
                    E668   1862 _TIMER_SEL3	=	0xe668
                    E66C   1863 _G_SELLV_TXCLK	=	0xe66c
                    E670   1864 _G_SELLV_TXDATA	=	0xe670
                    E674   1865 _G_SELLV_TXPRE	=	0xe674
                    E678   1866 _G_SELLV_RXEOMCLK	=	0xe678
                    E67C   1867 _G_SELLV_RXDATACLK	=	0xe67c
                    E680   1868 _G_SELLV_RXSAMPLER	=	0xe680
                    E684   1869 _SAS_PRESET0_TB	=	0xe684
                    E688   1870 _SAS_PRESET1_TB	=	0xe688
                    E68C   1871 _SAS_PRESET2_TB	=	0xe68c
                    E690   1872 _ETH_PRESET0_TB	=	0xe690
                    E694   1873 _ETH_PRESET1_TB	=	0xe694
                    E698   1874 _TX_SAVE_0	=	0xe698
                    E69C   1875 _TX_SAVE_1	=	0xe69c
                    E6A0   1876 _TX_SAVE_2	=	0xe6a0
                    E6A4   1877 _TX_SAVE_3	=	0xe6a4
                    E6A8   1878 _TX_SAVE_4	=	0xe6a8
                    E6AC   1879 _CDS_EYE_CLK_THR	=	0xe6ac
                    E6B0   1880 _SYNC_INFO	=	0xe6b0
                    E6B4   1881 _MCU_INFO_4	=	0xe6b4
                    E6B8   1882 _MCU_INFO_5	=	0xe6b8
                    E6BC   1883 _MCU_INFO_12	=	0xe6bc
                    E6C0   1884 _MCU_INFO_13	=	0xe6c0
                    E6C4   1885 _END_XDAT_CMN	=	0xe6c4
                    2600   1886 _DME_ENC_REG0	=	0x2600
                    2604   1887 _DME_ENC_REG1	=	0x2604
                    2608   1888 _DME_ENC_REG2	=	0x2608
                    260C   1889 _DME_DEC_REG0	=	0x260c
                    2610   1890 _DME_DEC_REG1	=	0x2610
                    2614   1891 _TX_TRAIN_IF_REG0	=	0x2614
                    2618   1892 _TX_TRAIN_IF_REG1	=	0x2618
                    261C   1893 _TX_TRAIN_IF_REG2	=	0x261c
                    2620   1894 _TX_TRAIN_IF_REG3	=	0x2620
                    2624   1895 _TX_TRAIN_PATTTERN_REG0	=	0x2624
                    2628   1896 _TX_TRAIN_DRIVER_REG0	=	0x2628
                    262C   1897 _TX_TRAIN_DRIVER_REG1	=	0x262c
                    2630   1898 _TX_TRAIN_DRIVER_REG2	=	0x2630
                    2634   1899 _TX_TRAIN_DEFAULT_REG0	=	0x2634
                    2638   1900 _TX_TRAIN_DEFAULT_REG1	=	0x2638
                    263C   1901 _TX_TRAIN_DEFAULT_REG2	=	0x263c
                    2640   1902 _TX_TRAIN_DEFAULT_REG3	=	0x2640
                    2644   1903 _TX_TRAIN_DEFAULT_REG4	=	0x2644
                    2648   1904 _TX_TRAIN_DEFAULT_REG5	=	0x2648
                    264C   1905 _TX_EMPH_CTRL_REG0	=	0x264c
                    2650   1906 _LINK_TRAIN_MODE0	=	0x2650
                    2654   1907 _TX_DRV_RD_OUT_REG0	=	0x2654
                    2658   1908 _TX_AMP_CTRL_REG0	=	0x2658
                    265C   1909 _TRX_TRAIN_IF_INTERRUPT_LANE	=	0x265c
                    2660   1910 _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE	=	0x2660
                    2664   1911 _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE	=	0x2664
                    2668   1912 _TX_TRAIN_IF_REG4	=	0x2668
                    266C   1913 _TX_TRAIN_IF_REG5	=	0x266c
                    2670   1914 _TX_TRAIN_IF_REG6	=	0x2670
                    2674   1915 _TX_TRAIN_IF_REG7	=	0x2674
                    2678   1916 _TX_TRAIN_CTRL_LANE	=	0x2678
                    267C   1917 _TX_TRAIN_IF_REG8	=	0x267c
                    6100   1918 _DFE_READ_EVEN_REG0	=	0x6100
                    6104   1919 _DFE_READ_EVEN_REG1	=	0x6104
                    6108   1920 _DFE_READ_EVEN_REG2	=	0x6108
                    610C   1921 _DFE_READ_EVEN_REG3	=	0x610c
                    6110   1922 _DFE_READ_EVEN_REG4	=	0x6110
                    6114   1923 _DFE_READ_EVEN_REG5	=	0x6114
                    6118   1924 _DFE_READ_EVEN_REG6	=	0x6118
                    611C   1925 _DFE_READ_EVEN_REG7	=	0x611c
                    6120   1926 _DFE_READ_ODD_REG0	=	0x6120
                    6124   1927 _DFE_READ_ODD_REG1	=	0x6124
                    6128   1928 _DFE_READ_ODD_REG2	=	0x6128
                    612C   1929 _DFE_READ_ODD_REG3	=	0x612c
                    6130   1930 _DFE_READ_ODD_REG4	=	0x6130
                    6134   1931 _DFE_READ_ODD_REG5	=	0x6134
                    6138   1932 _DFE_READ_ODD_REG6	=	0x6138
                    613C   1933 _DFE_READ_ODD_REG7	=	0x613c
                    6140   1934 _DFE_READ_EVEN_REG8	=	0x6140
                    6144   1935 _DFE_READ_ODD_REG8	=	0x6144
                    6148   1936 _DFE_READ_F0A_EVEN	=	0x6148
                    614C   1937 _DFE_READ_F0A_ODD	=	0x614c
                    6150   1938 _DFE_READ_F0B_EVEN	=	0x6150
                    6154   1939 _DFE_READ_F0B_ODD	=	0x6154
                    6158   1940 _DFE_READ_F0D_EVEN	=	0x6158
                    615C   1941 _DFE_READ_F0D_ODD	=	0x615c
                    6160   1942 _DFE_READ_F0D_LEFT_EVEN	=	0x6160
                    6164   1943 _DFE_READ_F0D_LEFT_ODD	=	0x6164
                    6168   1944 _DFE_READ_F0D_RIGHT_EVEN	=	0x6168
                    616C   1945 _DFE_READ_F0D_RIGHT_ODD	=	0x616c
                    6170   1946 _CDS_READ_MISC0	=	0x6170
                    6174   1947 _CDS_READ_MISC1	=	0x6174
                    6214   1948 _TXTRAIN_IF_REG0	=	0x6214
                    E000   1949 _lc_speedtable	=	0xe000
                    E1C0   1950 _ring_speedtable	=	0xe1c0
                    E5C0   1951 _phy_mode_cmn_table	=	0xe5c0
                    6300   1952 _max_gen	=	0x6300
                    6301   1953 _min_gen	=	0x6301
                    6304   1954 _speedtable	=	0x6304
                    65D4   1955 _phy_mode_lane_table	=	0x65d4
                    60B4   1956 _rc_save	=	0x60b4
                    60D0   1957 _txffe_save	=	0x60d0
                    60E4   1958 _phase_save	=	0x60e4
                    6030   1959 _train_gn1_index	=	0x6030
                    6031   1960 _train_g1_index	=	0x6031
                    6032   1961 _train_g0_index	=	0x6032
                    E6B0   1962 _local_tx_preset_tb	=	0xe6b0
                    E5C1   1963 _cmx_cal_lcvco_dac	=	0xe5c1
                    E5C1   1964 _cmx_cal_lcvco_dac_lsb	=	0xe5c1
                    E5C4   1965 _cmx_cal_lcvco_dac_msb	=	0xe5c4
                    E5CA   1966 _cmx_cal_lccap_msb	=	0xe5ca
                    E5C8   1967 _cmx_cal_lccap_lsb	=	0xe5c8
                    E5CC   1968 _cmx_cal_plldcc	=	0xe5cc
                    E5D0   1969 _cmx_cal_pll_speed_ring	=	0xe5d0
                    E5D4   1970 _cmx_cal_pll_sllp_dac_coarse_ring	=	0xe5d4
                    E5D8   1971 _cmx_cal_sllp_dac_fine_ring	=	0xe5d8
                    65D4   1972 _lnx_cal_txdcc_pdiv	=	0x65d4
                    65D8   1973 _lnx_cal_txdcc_pdiv_hg	=	0x65d8
                    65DA   1974 _lnx_cal_txdcc	=	0x65da
                    65DE   1975 _lnx_cal_txdcc_hg	=	0x65de
                    65E0   1976 _lnx_cal_rxdcc_dll	=	0x65e0
                    65E4   1977 _lnx_cal_rxdcc_dll_hg	=	0x65e4
                    65E6   1978 _lnx_cal_rxdcc_data	=	0x65e6
                    65F0   1979 _lnx_cal_rxdcc_data_hg	=	0x65f0
                    65F5   1980 _lnx_cal_rxdcc_eom	=	0x65f5
                    65FF   1981 _lnx_cal_rxdcc_eom_hg	=	0x65ff
                    6604   1982 _lnx_cal_dll_gmsel	=	0x6604
                    6606   1983 _lnx_cal_vdda_dll_sel	=	0x6606
                    660A   1984 _lnx_cal_dll_eom_gmsel	=	0x660a
                    660C   1985 _lnx_cal_vdda_dll_eom_sel	=	0x660c
                    6610   1986 _lnx_cal_eom_dpher	=	0x6610
                    6612   1987 _lnx_cal_align90_dummy_clk	=	0x6612
                    661A   1988 _lnx_cal_align90_dac	=	0x661a
                    6622   1989 _lnx_cal_align90_gm	=	0x6622
                    662A   1990 _lnx_cal_sellv_txdata	=	0x662a
                    6634   1991 _lnx_cal_sellv_txclk	=	0x6634
                    663E   1992 _lnx_cal_sellv_rxdataclk	=	0x663e
                    6648   1993 _lnx_cal_sellv_txpre	=	0x6648
                    6652   1994 _lnx_cal_sellv_rxsampler	=	0x6652
                    665C   1995 _lnx_cal_sellv_rxeomclk	=	0x665c
                    6666   1996 _lnx_spdoft_tx_preset_index_lane	=	0x6666
                    6490   1997 _lnx_calx_txdcc_pdiv	=	0x6490
                    6496   1998 _lnx_calx_txdcc_pdiv_hg	=	0x6496
                    6499   1999 _lnx_calx_txdcc	=	0x6499
                    649F   2000 _lnx_calx_txdcc_hg	=	0x649f
                    64A2   2001 _lnx_calx_rxdcc_dll	=	0x64a2
                    64A8   2002 _lnx_calx_rxdcc_dll_hg	=	0x64a8
                    64AB   2003 _lnx_calx_dll_gmsel	=	0x64ab
                    64AE   2004 _lnx_calx_vdda_dll_sel	=	0x64ae
                    64B4   2005 _lnx_calx_dll_eom_gmsel	=	0x64b4
                    64B7   2006 _lnx_calx_vdda_dll_eom_sel	=	0x64b7
                    64BD   2007 _lnx_calx_eom_dpher	=	0x64bd
                    64C0   2008 _lnx_calx_align90_dummy_clk	=	0x64c0
                    64CC   2009 _lnx_calx_align90_dac	=	0x64cc
                    64D8   2010 _lnx_calx_align90_gm	=	0x64d8
                    6100   2011 _cds28	=	0x6100
                    6178   2012 _dfe_sm	=	0x6178
                    61B8   2013 _dfe_sm_dc	=	0x61b8
                    61C0   2014 _dfe_sm_save	=	0x61c0
                    03FC   2015 _UPHY_ANAREG_REV_0	=	0x03fc
                    E684   2016 _tx_tb	=	0xe684
                    E698   2017 _train_save_tb	=	0xe698
                    607C   2018 _sq_thrs_ratio_tb	=	0x607c
                           2019 ;--------------------------------------------------------
                           2020 ; absolute external ram data
                           2021 ;--------------------------------------------------------
                           2022 	.area XABS    (ABS,XDATA)
                           2023 ;--------------------------------------------------------
                           2024 ; external initialized ram data
                           2025 ;--------------------------------------------------------
                           2026 	.area HOME    (CODE)
                           2027 	.area GSINIT0 (CODE)
                           2028 	.area GSINIT1 (CODE)
                           2029 	.area GSINIT2 (CODE)
                           2030 	.area GSINIT3 (CODE)
                           2031 	.area GSINIT4 (CODE)
                           2032 	.area GSINIT5 (CODE)
                           2033 	.area GSINIT  (CODE)
                           2034 	.area GSFINAL (CODE)
                           2035 	.area CSEG    (CODE)
                           2036 ;--------------------------------------------------------
                           2037 ; global & static initialisations
                           2038 ;--------------------------------------------------------
                           2039 	.area HOME    (CODE)
                           2040 	.area GSINIT  (CODE)
                           2041 	.area GSFINAL (CODE)
                           2042 	.area GSINIT  (CODE)
                           2043 ;--------------------------------------------------------
                           2044 ; Home
                           2045 ;--------------------------------------------------------
                           2046 	.area HOME    (CODE)
                           2047 	.area HOME    (CODE)
                           2048 ;--------------------------------------------------------
                           2049 ; code
                           2050 ;--------------------------------------------------------
                           2051 	.area CSEG    (CODE)
                           2052 ;------------------------------------------------------------
                           2053 ;Allocation info for local variables in function 'tx_train'
                           2054 ;------------------------------------------------------------
                           2055 ;------------------------------------------------------------
                           2056 ;	../../shared/src/tx_train.c:23: void tx_train(void)
                           2057 ;	-----------------------------------------
                           2058 ;	 function tx_train
                           2059 ;	-----------------------------------------
   0000                    2060 _tx_train:
                    0002   2061 	ar2 = 0x02
                    0003   2062 	ar3 = 0x03
                    0004   2063 	ar4 = 0x04
                    0005   2064 	ar5 = 0x05
                    0006   2065 	ar6 = 0x06
                    0007   2066 	ar7 = 0x07
                    0000   2067 	ar0 = 0x00
                    0001   2068 	ar1 = 0x01
                           2069 ;	../../shared/src/tx_train.c:28: PHY_STATUS = ST_TXTRAIN;
   0000 90 22 30           2070 	mov	dptr,#_MCU_STATUS0_LANE
   0003 74 29              2071 	mov	a,#0x29
   0005 F0                 2072 	movx	@dptr,a
                           2073 ;	../../shared/src/tx_train.c:30: tx_train_initial();
   0006 12s00r21           2074 	lcall	_tx_train_initial
                           2075 ;	../../shared/src/tx_train.c:32: while (1)
   0009                    2076 00107$:
                           2077 ;	../../shared/src/tx_train.c:34: if( tx_status_pcie_mode ) 
   0009 20*00 FD           2078 	jb	_tx_status_pcie_mode,00107$
                           2079 ;	../../shared/src/tx_train.c:76: tx_train_control();
   000C 12s00r00           2080 	lcall	_tx_train_control
                           2081 ;	../../shared/src/tx_train.c:77: if (ctrl_tx_train_done)	break;		
   000F 20*00 05           2082 	jb	_ctrl_tx_train_done,00108$
                           2083 ;	../../shared/src/tx_train.c:78: tx_ffe_train();	
   0012 12s00r00           2084 	lcall	_tx_ffe_train
   0015 80 F2              2085 	sjmp	00107$
   0017                    2086 00108$:
                           2087 ;	../../shared/src/tx_train.c:83: tx_train_end();
   0017 12s00r2D           2088 	lcall	_tx_train_end
                           2089 ;	../../shared/src/tx_train.c:84: reg_MCU_DEBUG0_LANE_7_0 = 0x59;
   001A 90 22 B4           2090 	mov	dptr,#_MCU_DEBUG0_LANE
   001D 74 59              2091 	mov	a,#0x59
   001F F0                 2092 	movx	@dptr,a
   0020 22                 2093 	ret
                           2094 ;------------------------------------------------------------
                           2095 ;Allocation info for local variables in function 'tx_train_initial'
                           2096 ;------------------------------------------------------------
                           2097 ;------------------------------------------------------------
                           2098 ;	../../shared/src/tx_train.c:95: void tx_train_initial(void)
                           2099 ;	-----------------------------------------
                           2100 ;	 function tx_train_initial
                           2101 ;	-----------------------------------------
   0021                    2102 _tx_train_initial:
                           2103 ;	../../shared/src/tx_train.c:100: ctrl_trx_ffe_updated = 1;
   0021 D2*00              2104 	setb	_ctrl_trx_ffe_updated
                           2105 ;	../../shared/src/tx_train.c:101: ctrl_cdr_phase_on = 0;
   0023 C2*00              2106 	clr	_ctrl_cdr_phase_on
                           2107 ;	../../shared/src/tx_train.c:102: tx.num_tx_loop = 0;
   0025 90s00r02           2108 	mov	dptr,#(_tx + 0x0002)
   0028 E4                 2109 	clr	a
   0029 F0                 2110 	movx	@dptr,a
                           2111 ;	../../shared/src/tx_train.c:104: opt2train();// load the optimal eo for train
   002A 02s00r00           2112 	ljmp	_opt2train
                           2113 ;------------------------------------------------------------
                           2114 ;Allocation info for local variables in function 'tx_train_end'
                           2115 ;------------------------------------------------------------
                           2116 ;------------------------------------------------------------
                           2117 ;	../../shared/src/tx_train.c:116: void tx_train_end(void)
                           2118 ;	-----------------------------------------
                           2119 ;	 function tx_train_end
                           2120 ;	-----------------------------------------
   002D                    2121 _tx_train_end:
                           2122 ;	../../shared/src/tx_train.c:121: update_opt_trx_ffe();
   002D 12s00r00           2123 	lcall	_update_opt_trx_ffe
                           2124 ;	../../shared/src/tx_train.c:123: opt2train();
   0030 02s00r00           2125 	ljmp	_opt2train
                           2126 ;------------------------------------------------------------
                           2127 ;Allocation info for local variables in function 'tx_g0_train'
                           2128 ;------------------------------------------------------------
                           2129 ;idx_ini                   Allocated to registers r2 
                           2130 ;cnt                       Allocated to registers r3 
                           2131 ;------------------------------------------------------------
                           2132 ;	../../shared/src/tx_train.c:142: void tx_g0_train(void)
                           2133 ;	-----------------------------------------
                           2134 ;	 function tx_g0_train
                           2135 ;	-----------------------------------------
   0033                    2136 _tx_g0_train:
                           2137 ;	../../shared/src/tx_train.c:149: tx.num_count = 0;
   0033 90s00r0A           2138 	mov	dptr,#(_tx + 0x000a)
   0036 E4                 2139 	clr	a
   0037 F0                 2140 	movx	@dptr,a
                           2141 ;	../../shared/src/tx_train.c:150: idx_ini = train_g0_index;
   0038 90 60 32           2142 	mov	dptr,#_train_g0_index
   003B E0                 2143 	movx	a,@dptr
   003C FA                 2144 	mov	r2,a
                           2145 ;	../../shared/src/tx_train.c:151: tx.direction = 0;
   003D 90s00r0B           2146 	mov	dptr,#(_tx + 0x000b)
                           2147 ;	../../shared/src/tx_train.c:152: tx.become_worse = 0;
   0040 E4                 2148 	clr	a
   0041 F0                 2149 	movx	@dptr,a
   0042 90s00r09           2150 	mov	dptr,#(_tx + 0x0009)
   0045 F0                 2151 	movx	@dptr,a
                           2152 ;	../../shared/src/tx_train.c:153: while (cnt-->0)
   0046 7B 14              2153 	mov	r3,#0x14
   0048                    2154 00114$:
   0048 8B 04              2155 	mov	ar4,r3
   004A 1B                 2156 	dec	r3
   004B C3                 2157 	clr	c
   004C 74 80              2158 	mov	a,#(0x00 ^ 0x80)
   004E 8C F0              2159 	mov	b,r4
   0050 63 F0 80           2160 	xrl	b,#0x80
   0053 95 F0              2161 	subb	a,b
   0055 40 03              2162 	jc	00131$
   0057 02s01r1D           2163 	ljmp	00116$
   005A                    2164 00131$:
                           2165 ;	../../shared/src/tx_train.c:155: if ((tx.num_count >= tag_TX_G0_STEP_NUM || tx.g0_is_min || tx.become_worse) &&
   005A 90s00r0A           2166 	mov	dptr,#(_tx + 0x000a)
   005D E0                 2167 	movx	a,@dptr
   005E FC                 2168 	mov	r4,a
   005F 90 60 A6           2169 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   0062 E0                 2170 	movx	a,@dptr
   0063 54 0F              2171 	anl	a,#0x0f
   0065 FD                 2172 	mov	r5,a
   0066 C3                 2173 	clr	c
   0067 EC                 2174 	mov	a,r4
   0068 64 80              2175 	xrl	a,#0x80
   006A 8D F0              2176 	mov	b,r5
   006C 63 F0 80           2177 	xrl	b,#0x80
   006F 95 F0              2178 	subb	a,b
   0071 50 0C              2179 	jnc	00107$
   0073 90s00r04           2180 	mov	dptr,#(_tx + 0x0004)
   0076 E0                 2181 	movx	a,@dptr
   0077 70 06              2182 	jnz	00107$
   0079 90s00r09           2183 	mov	dptr,#(_tx + 0x0009)
   007C E0                 2184 	movx	a,@dptr
   007D 60 32              2185 	jz	00104$
   007F                    2186 00107$:
                           2187 ;	../../shared/src/tx_train.c:156: tx.direction == 0) // switch direction
   007F 90s00r0B           2188 	mov	dptr,#(_tx + 0x000b)
   0082 E0                 2189 	movx	a,@dptr
   0083 70 2C              2190 	jnz	00104$
                           2191 ;	../../shared/src/tx_train.c:161: tx.direction = 1;
   0085 90s00r0B           2192 	mov	dptr,#(_tx + 0x000b)
   0088 74 01              2193 	mov	a,#0x01
   008A F0                 2194 	movx	@dptr,a
                           2195 ;	../../shared/src/tx_train.c:162: tx.num_count = 0;
   008B 90s00r0A           2196 	mov	dptr,#(_tx + 0x000a)
                           2197 ;	../../shared/src/tx_train.c:163: tx.become_worse = 0;
   008E E4                 2198 	clr	a
   008F F0                 2199 	movx	@dptr,a
   0090 90s00r09           2200 	mov	dptr,#(_tx + 0x0009)
   0093 F0                 2201 	movx	@dptr,a
                           2202 ;	../../shared/src/tx_train.c:165: if (tag_TX_G0_STEP_NUM > 0)
   0094 90 60 A6           2203 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   0097 E0                 2204 	movx	a,@dptr
   0098 54 0F              2205 	anl	a,#0x0f
   009A 60 15              2206 	jz	00104$
                           2207 ;	../../shared/src/tx_train.c:172: update_g0(idx_ini - train_g0_index);
   009C 90 60 32           2208 	mov	dptr,#_train_g0_index
   009F E0                 2209 	movx	a,@dptr
   00A0 FC                 2210 	mov	r4,a
   00A1 EA                 2211 	mov	a,r2
   00A2 C3                 2212 	clr	c
   00A3 9C                 2213 	subb	a,r4
   00A4 F5 82              2214 	mov	dpl,a
   00A6 C0 02              2215 	push	ar2
   00A8 C0 03              2216 	push	ar3
   00AA 12s10rF6           2217 	lcall	_update_g0
   00AD D0 03              2218 	pop	ar3
   00AF D0 02              2219 	pop	ar2
   00B1                    2220 00104$:
                           2221 ;	../../shared/src/tx_train.c:176: if (((tx.num_count >= tag_TX_G0_STEP_NUM) || tx.g0_is_max || tx.become_worse) &&
   00B1 90s00r0A           2222 	mov	dptr,#(_tx + 0x000a)
   00B4 E0                 2223 	movx	a,@dptr
   00B5 FC                 2224 	mov	r4,a
   00B6 90 60 A6           2225 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   00B9 E0                 2226 	movx	a,@dptr
   00BA 54 0F              2227 	anl	a,#0x0f
   00BC FD                 2228 	mov	r5,a
   00BD C3                 2229 	clr	c
   00BE EC                 2230 	mov	a,r4
   00BF 64 80              2231 	xrl	a,#0x80
   00C1 8D F0              2232 	mov	b,r5
   00C3 63 F0 80           2233 	xrl	b,#0x80
   00C6 95 F0              2234 	subb	a,b
   00C8 50 0C              2235 	jnc	00113$
   00CA 90s00r03           2236 	mov	dptr,#(_tx + 0x0003)
   00CD E0                 2237 	movx	a,@dptr
   00CE 70 06              2238 	jnz	00113$
   00D0 90s00r09           2239 	mov	dptr,#(_tx + 0x0009)
   00D3 E0                 2240 	movx	a,@dptr
   00D4 60 0A              2241 	jz	00109$
   00D6                    2242 00113$:
                           2243 ;	../../shared/src/tx_train.c:177: tx.direction ==1)
   00D6 90s00r0B           2244 	mov	dptr,#(_tx + 0x000b)
   00D9 E0                 2245 	movx	a,@dptr
   00DA FC                 2246 	mov	r4,a
   00DB BC 01 02           2247 	cjne	r4,#0x01,00140$
   00DE 80 3D              2248 	sjmp	00116$
   00E0                    2249 00140$:
                           2250 ;	../../shared/src/tx_train.c:182: break;
   00E0                    2251 00109$:
                           2252 ;	../../shared/src/tx_train.c:187: tx.num_count ++; //update number of rounds
   00E0 90s00r0A           2253 	mov	dptr,#(_tx + 0x000a)
   00E3 E0                 2254 	movx	a,@dptr
   00E4 FC                 2255 	mov	r4,a
   00E5 0C                 2256 	inc	r4
   00E6 90s00r0A           2257 	mov	dptr,#(_tx + 0x000a)
   00E9 EC                 2258 	mov	a,r4
   00EA F0                 2259 	movx	@dptr,a
                           2260 ;	../../shared/src/tx_train.c:191: update_g0(tx.direction ? tag_TX_G0_STEP_SIZE : -tag_TX_G0_STEP_SIZE);
   00EB 90s00r0B           2261 	mov	dptr,#(_tx + 0x000b)
   00EE E0                 2262 	movx	a,@dptr
   00EF 60 0B              2263 	jz	00119$
   00F1 90 60 A6           2264 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   00F4 E0                 2265 	movx	a,@dptr
   00F5 23                 2266 	rl	a
   00F6 23                 2267 	rl	a
   00F7 54 03              2268 	anl	a,#0x03
   00F9 FC                 2269 	mov	r4,a
   00FA 80 0E              2270 	sjmp	00120$
   00FC                    2271 00119$:
   00FC 90 60 A6           2272 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   00FF E0                 2273 	movx	a,@dptr
   0100 23                 2274 	rl	a
   0101 23                 2275 	rl	a
   0102 54 03              2276 	anl	a,#0x03
   0104 FD                 2277 	mov	r5,a
   0105 C3                 2278 	clr	c
   0106 E4                 2279 	clr	a
   0107 9D                 2280 	subb	a,r5
   0108 FD                 2281 	mov	r5,a
   0109 FC                 2282 	mov	r4,a
   010A                    2283 00120$:
   010A 8C 82              2284 	mov	dpl,r4
   010C C0 02              2285 	push	ar2
   010E C0 03              2286 	push	ar3
   0110 12s10rF6           2287 	lcall	_update_g0
                           2288 ;	../../shared/src/tx_train.c:192: compare_g0();            
   0113 12s0ArFC           2289 	lcall	_compare_g0
   0116 D0 03              2290 	pop	ar3
   0118 D0 02              2291 	pop	ar2
   011A 02s00r48           2292 	ljmp	00114$
   011D                    2293 00116$:
                           2294 ;	../../shared/src/tx_train.c:201: update_g0(opt_g0_index - train_g0_index);
   011D 90 60 32           2295 	mov	dptr,#_train_g0_index
   0120 E0                 2296 	movx	a,@dptr
   0121 FA                 2297 	mov	r2,a
   0122 90s00r00           2298 	mov	dptr,#_opt_g0_index
   0125 E0                 2299 	movx	a,@dptr
   0126 C3                 2300 	clr	c
   0127 9A                 2301 	subb	a,r2
   0128 F5 82              2302 	mov	dpl,a
   012A 12s10rF6           2303 	lcall	_update_g0
                           2304 ;	../../shared/src/tx_train.c:203: update_opt_trx_ffe();
   012D 02s00r00           2305 	ljmp	_update_opt_trx_ffe
                           2306 ;------------------------------------------------------------
                           2307 ;Allocation info for local variables in function 'tx_gn1_train'
                           2308 ;------------------------------------------------------------
                           2309 ;------------------------------------------------------------
                           2310 ;	../../shared/src/tx_train.c:206: void tx_gn1_train(void)
                           2311 ;	-----------------------------------------
                           2312 ;	 function tx_gn1_train
                           2313 ;	-----------------------------------------
   0130                    2314 _tx_gn1_train:
                           2315 ;	../../shared/src/tx_train.c:214: if (tag_TX_GN1_MAXF0T_EN) // max f0t mode
   0130 90 60 A4           2316 	mov	dptr,#_CDS_CTRL_REG1
   0133 E0                 2317 	movx	a,@dptr
   0134 30 E6 3C           2318 	jnb	acc.6,00102$
                           2319 ;	../../shared/src/tx_train.c:219: &tx.gn1_is_min, &tx.gn1_is_max, //IS_MAX IS_MIN
                           2320 ;	../../shared/src/tx_train.c:218: &train_gn1_index,//ptr, //IDX
                           2321 ;	../../shared/src/tx_train.c:216: tag_TX_TRAIN_P2P_HOLD, //HOLD
   0137 90s00r00           2322 	mov	dptr,#_tx_train_p2p_hold
   013A E0                 2323 	movx	a,@dptr
   013B FA                 2324 	mov	r2,a
   013C 74rA6              2325 	mov	a,#_update_gn1
   013E C0 E0              2326 	push	acc
   0140 74s11              2327 	mov	a,#(_update_gn1 >> 8)
   0142 C0 E0              2328 	push	acc
   0144 74r07              2329 	mov	a,#(_tx + 0x0007)
   0146 C0 E0              2330 	push	acc
   0148 74s00              2331 	mov	a,#((_tx + 0x0007) >> 8)
   014A C0 E0              2332 	push	acc
   014C E4                 2333 	clr	a
   014D C0 E0              2334 	push	acc
   014F 74r08              2335 	mov	a,#(_tx + 0x0008)
   0151 C0 E0              2336 	push	acc
   0153 74s00              2337 	mov	a,#((_tx + 0x0008) >> 8)
   0155 C0 E0              2338 	push	acc
   0157 E4                 2339 	clr	a
   0158 C0 E0              2340 	push	acc
   015A 74 30              2341 	mov	a,#_train_gn1_index
   015C C0 E0              2342 	push	acc
   015E 74 60              2343 	mov	a,#(_train_gn1_index >> 8)
   0160 C0 E0              2344 	push	acc
   0162 E4                 2345 	clr	a
   0163 C0 E0              2346 	push	acc
   0165 E4                 2347 	clr	a
   0166 C0 E0              2348 	push	acc
   0168 8A 82              2349 	mov	dpl,r2
   016A 12s02r40           2350 	lcall	_g1n1_maxf0t
   016D E5 81              2351 	mov	a,sp
   016F 24 F4              2352 	add	a,#0xf4
   0171 F5 81              2353 	mov	sp,a
   0173                    2354 00102$:
                           2355 ;	../../shared/src/tx_train.c:222: if (tag_TX_GN1_MIDPOINT_EN){
   0173 90 60 38           2356 	mov	dptr,#_DFE_CONTROL_1
   0176 E0                 2357 	movx	a,@dptr
   0177 30 E5 3C           2358 	jnb	acc.5,00105$
                           2359 ;	../../shared/src/tx_train.c:227: &tx.gn1_is_min, &tx.gn1_is_max,//IS_MAX IS_MIN
                           2360 ;	../../shared/src/tx_train.c:226: &train_gn1_index, //ptr, //IDX
                           2361 ;	../../shared/src/tx_train.c:224: tag_TX_TRAIN_P2P_HOLD,
   017A 90s00r00           2362 	mov	dptr,#_tx_train_p2p_hold
   017D E0                 2363 	movx	a,@dptr
   017E FA                 2364 	mov	r2,a
   017F 74rA6              2365 	mov	a,#_update_gn1
   0181 C0 E0              2366 	push	acc
   0183 74s11              2367 	mov	a,#(_update_gn1 >> 8)
   0185 C0 E0              2368 	push	acc
   0187 74r07              2369 	mov	a,#(_tx + 0x0007)
   0189 C0 E0              2370 	push	acc
   018B 74s00              2371 	mov	a,#((_tx + 0x0007) >> 8)
   018D C0 E0              2372 	push	acc
   018F E4                 2373 	clr	a
   0190 C0 E0              2374 	push	acc
   0192 74r08              2375 	mov	a,#(_tx + 0x0008)
   0194 C0 E0              2376 	push	acc
   0196 74s00              2377 	mov	a,#((_tx + 0x0008) >> 8)
   0198 C0 E0              2378 	push	acc
   019A E4                 2379 	clr	a
   019B C0 E0              2380 	push	acc
   019D 74 30              2381 	mov	a,#_train_gn1_index
   019F C0 E0              2382 	push	acc
   01A1 74 60              2383 	mov	a,#(_train_gn1_index >> 8)
   01A3 C0 E0              2384 	push	acc
   01A5 E4                 2385 	clr	a
   01A6 C0 E0              2386 	push	acc
   01A8 E4                 2387 	clr	a
   01A9 C0 E0              2388 	push	acc
   01AB 8A 82              2389 	mov	dpl,r2
   01AD 12s05r65           2390 	lcall	_g1n1_midpoint
   01B0 E5 81              2391 	mov	a,sp
   01B2 24 F4              2392 	add	a,#0xf4
   01B4 F5 81              2393 	mov	sp,a
   01B6                    2394 00105$:
   01B6 22                 2395 	ret
                           2396 ;------------------------------------------------------------
                           2397 ;Allocation info for local variables in function 'tx_g1_train'
                           2398 ;------------------------------------------------------------
                           2399 ;------------------------------------------------------------
                           2400 ;	../../shared/src/tx_train.c:234: void tx_g1_train(void)
                           2401 ;	-----------------------------------------
                           2402 ;	 function tx_g1_train
                           2403 ;	-----------------------------------------
   01B7                    2404 _tx_g1_train:
                           2405 ;	../../shared/src/tx_train.c:242: if (tag_TX_G1_MAXF0T_EN) // max f0t mode
   01B7 90 60 A4           2406 	mov	dptr,#_CDS_CTRL_REG1
   01BA E0                 2407 	movx	a,@dptr
   01BB 30 E7 3D           2408 	jnb	acc.7,00102$
                           2409 ;	../../shared/src/tx_train.c:247: &tx.g1_is_min, &tx.g1_is_max, //IS_MAX IS_MIN
                           2410 ;	../../shared/src/tx_train.c:246: &train_g1_index, //ptr, //IDX
                           2411 ;	../../shared/src/tx_train.c:244: tag_TX_TRAIN_P2P_HOLD, //HOLD
   01BE 90s00r00           2412 	mov	dptr,#_tx_train_p2p_hold
   01C1 E0                 2413 	movx	a,@dptr
   01C2 FA                 2414 	mov	r2,a
   01C3 74rAA              2415 	mov	a,#_update_g1
   01C5 C0 E0              2416 	push	acc
   01C7 74s12              2417 	mov	a,#(_update_g1 >> 8)
   01C9 C0 E0              2418 	push	acc
   01CB 74r05              2419 	mov	a,#(_tx + 0x0005)
   01CD C0 E0              2420 	push	acc
   01CF 74s00              2421 	mov	a,#((_tx + 0x0005) >> 8)
   01D1 C0 E0              2422 	push	acc
   01D3 E4                 2423 	clr	a
   01D4 C0 E0              2424 	push	acc
   01D6 74r06              2425 	mov	a,#(_tx + 0x0006)
   01D8 C0 E0              2426 	push	acc
   01DA 74s00              2427 	mov	a,#((_tx + 0x0006) >> 8)
   01DC C0 E0              2428 	push	acc
   01DE E4                 2429 	clr	a
   01DF C0 E0              2430 	push	acc
   01E1 74 31              2431 	mov	a,#_train_g1_index
   01E3 C0 E0              2432 	push	acc
   01E5 74 60              2433 	mov	a,#(_train_g1_index >> 8)
   01E7 C0 E0              2434 	push	acc
   01E9 E4                 2435 	clr	a
   01EA C0 E0              2436 	push	acc
   01EC 74 01              2437 	mov	a,#0x01
   01EE C0 E0              2438 	push	acc
   01F0 8A 82              2439 	mov	dpl,r2
   01F2 12s02r40           2440 	lcall	_g1n1_maxf0t
   01F5 E5 81              2441 	mov	a,sp
   01F7 24 F4              2442 	add	a,#0xf4
   01F9 F5 81              2443 	mov	sp,a
   01FB                    2444 00102$:
                           2445 ;	../../shared/src/tx_train.c:251: if (tag_TX_G1_MIDPOINT_EN){ // midpoint mode
   01FB 90 60 33           2446 	mov	dptr,#(_TRX_TRAIN_IF_TIMERS_ENABLE_LANE + 0x0003)
   01FE E0                 2447 	movx	a,@dptr
   01FF 30 E1 3D           2448 	jnb	acc.1,00105$
                           2449 ;	../../shared/src/tx_train.c:256: &tx.g1_is_min, &tx.g1_is_max,//IS_MIN, IS_MAX
                           2450 ;	../../shared/src/tx_train.c:255: &train_g1_index, //ptr, //IDX
                           2451 ;	../../shared/src/tx_train.c:253: tag_TX_TRAIN_P2P_HOLD,  //HOLD
   0202 90s00r00           2452 	mov	dptr,#_tx_train_p2p_hold
   0205 E0                 2453 	movx	a,@dptr
   0206 FA                 2454 	mov	r2,a
   0207 74rAA              2455 	mov	a,#_update_g1
   0209 C0 E0              2456 	push	acc
   020B 74s12              2457 	mov	a,#(_update_g1 >> 8)
   020D C0 E0              2458 	push	acc
   020F 74r05              2459 	mov	a,#(_tx + 0x0005)
   0211 C0 E0              2460 	push	acc
   0213 74s00              2461 	mov	a,#((_tx + 0x0005) >> 8)
   0215 C0 E0              2462 	push	acc
   0217 E4                 2463 	clr	a
   0218 C0 E0              2464 	push	acc
   021A 74r06              2465 	mov	a,#(_tx + 0x0006)
   021C C0 E0              2466 	push	acc
   021E 74s00              2467 	mov	a,#((_tx + 0x0006) >> 8)
   0220 C0 E0              2468 	push	acc
   0222 E4                 2469 	clr	a
   0223 C0 E0              2470 	push	acc
   0225 74 31              2471 	mov	a,#_train_g1_index
   0227 C0 E0              2472 	push	acc
   0229 74 60              2473 	mov	a,#(_train_g1_index >> 8)
   022B C0 E0              2474 	push	acc
   022D E4                 2475 	clr	a
   022E C0 E0              2476 	push	acc
   0230 74 01              2477 	mov	a,#0x01
   0232 C0 E0              2478 	push	acc
   0234 8A 82              2479 	mov	dpl,r2
   0236 12s05r65           2480 	lcall	_g1n1_midpoint
   0239 E5 81              2481 	mov	a,sp
   023B 24 F4              2482 	add	a,#0xf4
   023D F5 81              2483 	mov	sp,a
   023F                    2484 00105$:
   023F 22                 2485 	ret
                           2486 ;------------------------------------------------------------
                           2487 ;Allocation info for local variables in function 'g1n1_maxf0t'
                           2488 ;------------------------------------------------------------
                           2489 ;X                         Allocated to stack - offset -3
                           2490 ;IDX                       Allocated to stack - offset -6
                           2491 ;IS_MIN                    Allocated to stack - offset -9
                           2492 ;IS_MAX                    Allocated to stack - offset -12
                           2493 ;update_g                  Allocated to stack - offset -14
                           2494 ;HOLD                      Allocated to stack - offset 1
                           2495 ;num_count                 Allocated to registers r2 
                           2496 ;dir                       Allocated to registers b0 
                           2497 ;idx_ini                   Allocated to stack - offset 2
                           2498 ;update                    Allocated to stack - offset 3
                           2499 ;NUM                       Allocated to registers r3 
                           2500 ;STEP                      Allocated to stack - offset 4
                           2501 ;cnt                       Allocated to registers r4 
                           2502 ;sloc0                     Allocated to stack - offset 5
                           2503 ;sloc1                     Allocated to stack - offset 8
                           2504 ;sloc2                     Allocated to stack - offset 11
                           2505 ;sloc3                     Allocated to stack - offset 12
                           2506 ;sloc4                     Allocated to stack - offset 13
                           2507 ;------------------------------------------------------------
                           2508 ;	../../shared/src/tx_train.c:279: void g1n1_maxf0t(bool HOLD,  uint8_t X, uint8_t* IDX, 
                           2509 ;	-----------------------------------------
                           2510 ;	 function g1n1_maxf0t
                           2511 ;	-----------------------------------------
   0240                    2512 _g1n1_maxf0t:
   0240 C0*00              2513 	push	_bp
   0242 85 81*00           2514 	mov	_bp,sp
   0245 C0 82              2515 	push	dpl
   0247 E5 81              2516 	mov	a,sp
   0249 24 0D              2517 	add	a,#0x0d
   024B F5 81              2518 	mov	sp,a
                           2519 ;	../../shared/src/tx_train.c:295: if(X){
   024D E5*00              2520 	mov	a,_bp
   024F 24 FD              2521 	add	a,#0xfd
   0251 F8                 2522 	mov	r0,a
   0252 E6                 2523 	mov	a,@r0
   0253 60 19              2524 	jz	00102$
                           2525 ;	../../shared/src/tx_train.c:296: NUM = tag_TX_G1_STEP_NUM;
   0255 90 60 8C           2526 	mov	dptr,#_DFE_CONTROL_7
   0258 E0                 2527 	movx	a,@dptr
   0259 C4                 2528 	swap	a
   025A 23                 2529 	rl	a
   025B 54 1F              2530 	anl	a,#0x1f
   025D FB                 2531 	mov	r3,a
                           2532 ;	../../shared/src/tx_train.c:297: STEP= tag_TX_G1_STEP_SIZE;
   025E 90 60 A7           2533 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0003)
   0261 E0                 2534 	movx	a,@dptr
   0262 54 03              2535 	anl	a,#0x03
   0264 FC                 2536 	mov	r4,a
   0265 E5*00              2537 	mov	a,_bp
   0267 24 04              2538 	add	a,#0x04
   0269 F8                 2539 	mov	r0,a
   026A A6 04              2540 	mov	@r0,ar4
   026C 80 18              2541 	sjmp	00103$
   026E                    2542 00102$:
                           2543 ;	../../shared/src/tx_train.c:299: NUM = tag_TX_GN1_STEP_NUM;
   026E 90 60 A7           2544 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0003)
   0271 E0                 2545 	movx	a,@dptr
   0272 03                 2546 	rr	a
   0273 03                 2547 	rr	a
   0274 54 1F              2548 	anl	a,#0x1f
   0276 FB                 2549 	mov	r3,a
                           2550 ;	../../shared/src/tx_train.c:300: STEP= tag_TX_GN1_STEP_SIZE;
   0277 90 60 A6           2551 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   027A E0                 2552 	movx	a,@dptr
   027B C4                 2553 	swap	a
   027C 54 03              2554 	anl	a,#0x03
   027E FD                 2555 	mov	r5,a
   027F E5*00              2556 	mov	a,_bp
   0281 24 04              2557 	add	a,#0x04
   0283 F8                 2558 	mov	r0,a
   0284 A6 05              2559 	mov	@r0,ar5
   0286                    2560 00103$:
                           2561 ;	../../shared/src/tx_train.c:302: idx_ini = *IDX;
   0286 E5*00              2562 	mov	a,_bp
   0288 24 FA              2563 	add	a,#0xfa
   028A F8                 2564 	mov	r0,a
   028B 86 05              2565 	mov	ar5,@r0
   028D 08                 2566 	inc	r0
   028E 86 06              2567 	mov	ar6,@r0
   0290 08                 2568 	inc	r0
   0291 86 07              2569 	mov	ar7,@r0
   0293 8D 82              2570 	mov	dpl,r5
   0295 8E 83              2571 	mov	dph,r6
   0297 8F F0              2572 	mov	b,r7
   0299 12s00r00           2573 	lcall	__gptrget
   029C FA                 2574 	mov	r2,a
   029D A8*00              2575 	mov	r0,_bp
   029F 08                 2576 	inc	r0
   02A0 08                 2577 	inc	r0
   02A1 A6 02              2578 	mov	@r0,ar2
                           2579 ;	../../shared/src/tx_train.c:303: dir = HOLD ? 0 : 1;    
   02A3 A8*00              2580 	mov	r0,_bp
   02A5 08                 2581 	inc	r0
   02A6 E6                 2582 	mov	a,@r0
   02A7 B4 01 00           2583 	cjne	a,#0x01,00161$
   02AA                    2584 00161$:
   02AA 92*00              2585 	mov	b0,c
                           2586 ;	../../shared/src/tx_train.c:304: tx.become_worse = 0; 
   02AC 90s00r09           2587 	mov	dptr,#(_tx + 0x0009)
   02AF E4                 2588 	clr	a
   02B0 F0                 2589 	movx	@dptr,a
                           2590 ;	../../shared/src/tx_train.c:305: num_count = 0;
   02B1 7A 00              2591 	mov	r2,#0x00
                           2592 ;	../../shared/src/tx_train.c:307: while (cnt-->0)
   02B3 E5*00              2593 	mov	a,_bp
   02B5 24 F7              2594 	add	a,#0xf7
   02B7 F8                 2595 	mov	r0,a
   02B8 E5*00              2596 	mov	a,_bp
   02BA 24 05              2597 	add	a,#0x05
   02BC F9                 2598 	mov	r1,a
   02BD E6                 2599 	mov	a,@r0
   02BE F7                 2600 	mov	@r1,a
   02BF 08                 2601 	inc	r0
   02C0 09                 2602 	inc	r1
   02C1 E6                 2603 	mov	a,@r0
   02C2 F7                 2604 	mov	@r1,a
   02C3 08                 2605 	inc	r0
   02C4 09                 2606 	inc	r1
   02C5 E6                 2607 	mov	a,@r0
   02C6 F7                 2608 	mov	@r1,a
   02C7 E5*00              2609 	mov	a,_bp
   02C9 24 F4              2610 	add	a,#0xf4
   02CB F8                 2611 	mov	r0,a
   02CC E5*00              2612 	mov	a,_bp
   02CE 24 08              2613 	add	a,#0x08
   02D0 F9                 2614 	mov	r1,a
   02D1 E6                 2615 	mov	a,@r0
   02D2 F7                 2616 	mov	@r1,a
   02D3 08                 2617 	inc	r0
   02D4 09                 2618 	inc	r1
   02D5 E6                 2619 	mov	a,@r0
   02D6 F7                 2620 	mov	@r1,a
   02D7 08                 2621 	inc	r0
   02D8 09                 2622 	inc	r1
   02D9 E6                 2623 	mov	a,@r0
   02DA F7                 2624 	mov	@r1,a
   02DB E5*00              2625 	mov	a,_bp
   02DD 24 0B              2626 	add	a,#0x0b
   02DF F8                 2627 	mov	r0,a
   02E0 E4                 2628 	clr	a
   02E1 B5 03 00           2629 	cjne	a,ar3,00162$
   02E4                    2630 00162$:
   02E4 E4                 2631 	clr	a
   02E5 33                 2632 	rlc	a
   02E6 F6                 2633 	mov	@r0,a
   02E7 E5*00              2634 	mov	a,_bp
   02E9 24 04              2635 	add	a,#0x04
   02EB F8                 2636 	mov	r0,a
   02EC E5*00              2637 	mov	a,_bp
   02EE 24 0C              2638 	add	a,#0x0c
   02F0 F9                 2639 	mov	r1,a
   02F1 C3                 2640 	clr	c
   02F2 E4                 2641 	clr	a
   02F3 96                 2642 	subb	a,@r0
   02F4 F7                 2643 	mov	@r1,a
   02F5 7C 14              2644 	mov	r4,#0x14
   02F7                    2645 00131$:
   02F7 C0 05              2646 	push	ar5
   02F9 C0 06              2647 	push	ar6
   02FB C0 07              2648 	push	ar7
   02FD 8C 05              2649 	mov	ar5,r4
   02FF 1C                 2650 	dec	r4
   0300 C3                 2651 	clr	c
   0301 74 80              2652 	mov	a,#(0x00 ^ 0x80)
   0303 8D F0              2653 	mov	b,r5
   0305 63 F0 80           2654 	xrl	b,#0x80
   0308 95 F0              2655 	subb	a,b
   030A D0 07              2656 	pop	ar7
   030C D0 06              2657 	pop	ar6
   030E D0 05              2658 	pop	ar5
   0310 40 03              2659 	jc	00163$
   0312 02s05r04           2660 	ljmp	00133$
   0315                    2661 00163$:
                           2662 ;	../../shared/src/tx_train.c:309: if(HOLD) {
   0315 A8*00              2663 	mov	r0,_bp
   0317 08                 2664 	inc	r0
   0318 E6                 2665 	mov	a,@r0
   0319 70 03              2666 	jnz	00164$
   031B 02s03rD7           2667 	ljmp	00129$
   031E                    2668 00164$:
                           2669 ;	../../shared/src/tx_train.c:310: if( (num_count >= NUM || *IS_MIN || tx.become_worse) && dir==0 ) {
   031E EA                 2670 	mov	a,r2
   031F B5 03 00           2671 	cjne	a,ar3,00165$
   0322                    2672 00165$:
   0322 50 18              2673 	jnc	00110$
   0324 E5*00              2674 	mov	a,_bp
   0326 24 05              2675 	add	a,#0x05
   0328 F8                 2676 	mov	r0,a
   0329 86 82              2677 	mov	dpl,@r0
   032B 08                 2678 	inc	r0
   032C 86 83              2679 	mov	dph,@r0
   032E 08                 2680 	inc	r0
   032F 86 F0              2681 	mov	b,@r0
   0331 12s00r00           2682 	lcall	__gptrget
   0334 70 06              2683 	jnz	00110$
   0336 90s00r09           2684 	mov	dptr,#(_tx + 0x0009)
   0339 E0                 2685 	movx	a,@dptr
   033A 60 64              2686 	jz	00107$
   033C                    2687 00110$:
   033C 20*00 61           2688 	jb	b0,00107$
                           2689 ;	../../shared/src/tx_train.c:311: dir = 1;
   033F D2*00              2690 	setb	b0
                           2691 ;	../../shared/src/tx_train.c:312: num_count = 0;
   0341 7A 00              2692 	mov	r2,#0x00
                           2693 ;	../../shared/src/tx_train.c:313: tx.become_worse = 0;		  
   0343 90s00r09           2694 	mov	dptr,#(_tx + 0x0009)
   0346 E4                 2695 	clr	a
   0347 F0                 2696 	movx	@dptr,a
                           2697 ;	../../shared/src/tx_train.c:314: if(NUM > 0)  {
   0348 EB                 2698 	mov	a,r3
   0349 60 55              2699 	jz	00107$
                           2700 ;	../../shared/src/tx_train.c:316: update = idx_ini - *IDX;					
   034B C0 04              2701 	push	ar4
   034D 8D 82              2702 	mov	dpl,r5
   034F 8E 83              2703 	mov	dph,r6
   0351 8F F0              2704 	mov	b,r7
   0353 12s00r00           2705 	lcall	__gptrget
   0356 FC                 2706 	mov	r4,a
   0357 A8*00              2707 	mov	r0,_bp
   0359 08                 2708 	inc	r0
   035A 08                 2709 	inc	r0
   035B E6                 2710 	mov	a,@r0
   035C C3                 2711 	clr	c
   035D 9C                 2712 	subb	a,r4
   035E FC                 2713 	mov	r4,a
   035F E5*00              2714 	mov	a,_bp
   0361 24 03              2715 	add	a,#0x03
   0363 F8                 2716 	mov	r0,a
   0364 A6 04              2717 	mov	@r0,ar4
                           2718 ;	../../shared/src/tx_train.c:317: update_g(update);		  
   0366 C0 02              2719 	push	ar2
   0368 C0 03              2720 	push	ar3
   036A C0 04              2721 	push	ar4
   036C C0 05              2722 	push	ar5
   036E C0 06              2723 	push	ar6
   0370 C0 07              2724 	push	ar7
   0372 C0*00              2725 	push	bits
   0374 74r90              2726 	mov	a,#00171$
   0376 C0 E0              2727 	push	acc
   0378 74s03              2728 	mov	a,#(00171$ >> 8)
   037A C0 E0              2729 	push	acc
   037C E5*00              2730 	mov	a,_bp
   037E 24 F2              2731 	add	a,#0xf2
   0380 F8                 2732 	mov	r0,a
   0381 E6                 2733 	mov	a,@r0
   0382 C0 E0              2734 	push	acc
   0384 08                 2735 	inc	r0
   0385 E6                 2736 	mov	a,@r0
   0386 C0 E0              2737 	push	acc
   0388 E5*00              2738 	mov	a,_bp
   038A 24 03              2739 	add	a,#0x03
   038C F8                 2740 	mov	r0,a
   038D 86 82              2741 	mov	dpl,@r0
   038F 22                 2742 	ret
   0390                    2743 00171$:
   0390 D0*00              2744 	pop	bits
   0392 D0 07              2745 	pop	ar7
   0394 D0 06              2746 	pop	ar6
   0396 D0 05              2747 	pop	ar5
   0398 D0 04              2748 	pop	ar4
   039A D0 03              2749 	pop	ar3
   039C D0 02              2750 	pop	ar2
                           2751 ;	../../shared/src/tx_train.c:355: update_opt_trx_ffe();
   039E D0 04              2752 	pop	ar4
                           2753 ;	../../shared/src/tx_train.c:317: update_g(update);		  
   03A0                    2754 00107$:
                           2755 ;	../../shared/src/tx_train.c:320: if((num_count >= NUM || *IS_MAX || tx.become_worse) && dir==1 ) break;
   03A0 EA                 2756 	mov	a,r2
   03A1 B5 03 00           2757 	cjne	a,ar3,00172$
   03A4                    2758 00172$:
   03A4 50 1B              2759 	jnc	00115$
   03A6 E5*00              2760 	mov	a,_bp
   03A8 24 08              2761 	add	a,#0x08
   03AA F8                 2762 	mov	r0,a
   03AB 86 82              2763 	mov	dpl,@r0
   03AD 08                 2764 	inc	r0
   03AE 86 83              2765 	mov	dph,@r0
   03B0 08                 2766 	inc	r0
   03B1 86 F0              2767 	mov	b,@r0
   03B3 12s00r00           2768 	lcall	__gptrget
   03B6 70 09              2769 	jnz	00115$
   03B8 90s00r09           2770 	mov	dptr,#(_tx + 0x0009)
   03BB E0                 2771 	movx	a,@dptr
   03BC 70 03              2772 	jnz	00175$
   03BE 02s04r8B           2773 	ljmp	00130$
   03C1                    2774 00175$:
   03C1                    2775 00115$:
   03C1 C0 04              2776 	push	ar4
   03C3 A2*00              2777 	mov	c,b0
   03C5 E4                 2778 	clr	a
   03C6 33                 2779 	rlc	a
   03C7 FC                 2780 	mov	r4,a
   03C8 BC 01 02           2781 	cjne	r4,#0x01,00176$
   03CB 80 05              2782 	sjmp	00177$
   03CD                    2783 00176$:
   03CD D0 04              2784 	pop	ar4
   03CF 02s04r8B           2785 	ljmp	00130$
   03D2                    2786 00177$:
   03D2 D0 04              2787 	pop	ar4
   03D4 02s05r04           2788 	ljmp	00133$
   03D7                    2789 00129$:
                           2790 ;	../../shared/src/tx_train.c:323: if( (num_count >= NUM || *IS_MAX || tx.become_worse) && dir==1 )
   03D7 EA                 2791 	mov	a,r2
   03D8 B5 03 00           2792 	cjne	a,ar3,00178$
   03DB                    2793 00178$:
   03DB 50 18              2794 	jnc	00120$
   03DD E5*00              2795 	mov	a,_bp
   03DF 24 08              2796 	add	a,#0x08
   03E1 F8                 2797 	mov	r0,a
   03E2 86 82              2798 	mov	dpl,@r0
   03E4 08                 2799 	inc	r0
   03E5 86 83              2800 	mov	dph,@r0
   03E7 08                 2801 	inc	r0
   03E8 86 F0              2802 	mov	b,@r0
   03EA 12s00r00           2803 	lcall	__gptrget
   03ED 70 06              2804 	jnz	00120$
   03EF 90s00r09           2805 	mov	dptr,#(_tx + 0x0009)
   03F2 E0                 2806 	movx	a,@dptr
   03F3 60 14              2807 	jz	00117$
   03F5                    2808 00120$:
   03F5 C0 04              2809 	push	ar4
   03F7 A2*00              2810 	mov	c,b0
   03F9 E4                 2811 	clr	a
   03FA 33                 2812 	rlc	a
   03FB FC                 2813 	mov	r4,a
   03FC BC 01 02           2814 	cjne	r4,#0x01,00182$
   03FF 80 04              2815 	sjmp	00183$
   0401                    2816 00182$:
   0401 D0 04              2817 	pop	ar4
   0403 80 04              2818 	sjmp	00117$
   0405                    2819 00183$:
   0405 D0 04              2820 	pop	ar4
                           2821 ;	../../shared/src/tx_train.c:324: dir = 0;
   0407 C2*00              2822 	clr	b0
   0409                    2823 00117$:
                           2824 ;	../../shared/src/tx_train.c:325: num_count = 0;
   0409 7A 00              2825 	mov	r2,#0x00
                           2826 ;	../../shared/src/tx_train.c:326: tx.become_worse = 0;
   040B 90s00r09           2827 	mov	dptr,#(_tx + 0x0009)
   040E E4                 2828 	clr	a
   040F F0                 2829 	movx	@dptr,a
                           2830 ;	../../shared/src/tx_train.c:328: if(NUM > 0)
   0410 EB                 2831 	mov	a,r3
   0411 60 55              2832 	jz	00122$
                           2833 ;	../../shared/src/tx_train.c:330: update = idx_ini - *IDX;					
   0413 C0 04              2834 	push	ar4
   0415 8D 82              2835 	mov	dpl,r5
   0417 8E 83              2836 	mov	dph,r6
   0419 8F F0              2837 	mov	b,r7
   041B 12s00r00           2838 	lcall	__gptrget
   041E FC                 2839 	mov	r4,a
   041F A8*00              2840 	mov	r0,_bp
   0421 08                 2841 	inc	r0
   0422 08                 2842 	inc	r0
   0423 E6                 2843 	mov	a,@r0
   0424 C3                 2844 	clr	c
   0425 9C                 2845 	subb	a,r4
   0426 FC                 2846 	mov	r4,a
   0427 E5*00              2847 	mov	a,_bp
   0429 24 03              2848 	add	a,#0x03
   042B F8                 2849 	mov	r0,a
   042C A6 04              2850 	mov	@r0,ar4
                           2851 ;	../../shared/src/tx_train.c:331: update_g(update);		  
   042E C0 02              2852 	push	ar2
   0430 C0 03              2853 	push	ar3
   0432 C0 04              2854 	push	ar4
   0434 C0 05              2855 	push	ar5
   0436 C0 06              2856 	push	ar6
   0438 C0 07              2857 	push	ar7
   043A C0*00              2858 	push	bits
   043C 74r58              2859 	mov	a,#00185$
   043E C0 E0              2860 	push	acc
   0440 74s04              2861 	mov	a,#(00185$ >> 8)
   0442 C0 E0              2862 	push	acc
   0444 E5*00              2863 	mov	a,_bp
   0446 24 F2              2864 	add	a,#0xf2
   0448 F8                 2865 	mov	r0,a
   0449 E6                 2866 	mov	a,@r0
   044A C0 E0              2867 	push	acc
   044C 08                 2868 	inc	r0
   044D E6                 2869 	mov	a,@r0
   044E C0 E0              2870 	push	acc
   0450 E5*00              2871 	mov	a,_bp
   0452 24 03              2872 	add	a,#0x03
   0454 F8                 2873 	mov	r0,a
   0455 86 82              2874 	mov	dpl,@r0
   0457 22                 2875 	ret
   0458                    2876 00185$:
   0458 D0*00              2877 	pop	bits
   045A D0 07              2878 	pop	ar7
   045C D0 06              2879 	pop	ar6
   045E D0 05              2880 	pop	ar5
   0460 D0 04              2881 	pop	ar4
   0462 D0 03              2882 	pop	ar3
   0464 D0 02              2883 	pop	ar2
                           2884 ;	../../shared/src/tx_train.c:355: update_opt_trx_ffe();
   0466 D0 04              2885 	pop	ar4
                           2886 ;	../../shared/src/tx_train.c:331: update_g(update);		  
   0468                    2887 00122$:
                           2888 ;	../../shared/src/tx_train.c:333: if((num_count >= NUM || *IS_MIN || tx.become_worse) && dir==0 ) break;
   0468 E5*00              2889 	mov	a,_bp
   046A 24 0B              2890 	add	a,#0x0b
   046C F8                 2891 	mov	r0,a
   046D E6                 2892 	mov	a,@r0
   046E 60 18              2893 	jz	00127$
   0470 E5*00              2894 	mov	a,_bp
   0472 24 05              2895 	add	a,#0x05
   0474 F8                 2896 	mov	r0,a
   0475 86 82              2897 	mov	dpl,@r0
   0477 08                 2898 	inc	r0
   0478 86 83              2899 	mov	dph,@r0
   047A 08                 2900 	inc	r0
   047B 86 F0              2901 	mov	b,@r0
   047D 12s00r00           2902 	lcall	__gptrget
   0480 70 06              2903 	jnz	00127$
   0482 90s00r09           2904 	mov	dptr,#(_tx + 0x0009)
   0485 E0                 2905 	movx	a,@dptr
   0486 60 03              2906 	jz	00130$
   0488                    2907 00127$:
   0488 30*00 79           2908 	jnb	b0,00133$
   048B                    2909 00130$:
                           2910 ;	../../shared/src/tx_train.c:336: update = dir ? STEP : -STEP;
   048B 30*00 0E           2911 	jnb	b0,00139$
   048E E5*00              2912 	mov	a,_bp
   0490 24 04              2913 	add	a,#0x04
   0492 F8                 2914 	mov	r0,a
   0493 E5*00              2915 	mov	a,_bp
   0495 24 0D              2916 	add	a,#0x0d
   0497 F9                 2917 	mov	r1,a
   0498 E6                 2918 	mov	a,@r0
   0499 F7                 2919 	mov	@r1,a
   049A 80 0C              2920 	sjmp	00140$
   049C                    2921 00139$:
   049C E5*00              2922 	mov	a,_bp
   049E 24 0C              2923 	add	a,#0x0c
   04A0 F8                 2924 	mov	r0,a
   04A1 E5*00              2925 	mov	a,_bp
   04A3 24 0D              2926 	add	a,#0x0d
   04A5 F9                 2927 	mov	r1,a
   04A6 E6                 2928 	mov	a,@r0
   04A7 F7                 2929 	mov	@r1,a
   04A8                    2930 00140$:
   04A8 C0 04              2931 	push	ar4
   04AA E5*00              2932 	mov	a,_bp
   04AC 24 0D              2933 	add	a,#0x0d
   04AE F8                 2934 	mov	r0,a
   04AF 86 04              2935 	mov	ar4,@r0
   04B1 E5*00              2936 	mov	a,_bp
   04B3 24 03              2937 	add	a,#0x03
   04B5 F8                 2938 	mov	r0,a
   04B6 A6 04              2939 	mov	@r0,ar4
                           2940 ;	../../shared/src/tx_train.c:337: num_count ++; //update number of rounds
   04B8 0A                 2941 	inc	r2
                           2942 ;	../../shared/src/tx_train.c:338: update_g(update);
   04B9 C0 02              2943 	push	ar2
   04BB C0 03              2944 	push	ar3
   04BD C0 04              2945 	push	ar4
   04BF C0 05              2946 	push	ar5
   04C1 C0 06              2947 	push	ar6
   04C3 C0 07              2948 	push	ar7
   04C5 C0*00              2949 	push	bits
   04C7 74rE3              2950 	mov	a,#00191$
   04C9 C0 E0              2951 	push	acc
   04CB 74s04              2952 	mov	a,#(00191$ >> 8)
   04CD C0 E0              2953 	push	acc
   04CF E5*00              2954 	mov	a,_bp
   04D1 24 F2              2955 	add	a,#0xf2
   04D3 F8                 2956 	mov	r0,a
   04D4 E6                 2957 	mov	a,@r0
   04D5 C0 E0              2958 	push	acc
   04D7 08                 2959 	inc	r0
   04D8 E6                 2960 	mov	a,@r0
   04D9 C0 E0              2961 	push	acc
   04DB E5*00              2962 	mov	a,_bp
   04DD 24 03              2963 	add	a,#0x03
   04DF F8                 2964 	mov	r0,a
   04E0 86 82              2965 	mov	dpl,@r0
   04E2 22                 2966 	ret
   04E3                    2967 00191$:
   04E3 D0*00              2968 	pop	bits
                           2969 ;	../../shared/src/tx_train.c:339: compare_g1n1(X); // compare train data with saved optimal data
   04E5 E5*00              2970 	mov	a,_bp
   04E7 24 FD              2971 	add	a,#0xfd
   04E9 F8                 2972 	mov	r0,a
   04EA 86 82              2973 	mov	dpl,@r0
   04EC C0*00              2974 	push	bits
   04EE 12s0CrFB           2975 	lcall	_compare_g1n1
   04F1 D0*00              2976 	pop	bits
   04F3 D0 07              2977 	pop	ar7
   04F5 D0 06              2978 	pop	ar6
   04F7 D0 05              2979 	pop	ar5
   04F9 D0 04              2980 	pop	ar4
   04FB D0 03              2981 	pop	ar3
   04FD D0 02              2982 	pop	ar2
   04FF D0 04              2983 	pop	ar4
   0501 02s02rF7           2984 	ljmp	00131$
   0504                    2985 00133$:
                           2986 ;	../../shared/src/tx_train.c:350: if(X)
   0504 E5*00              2987 	mov	a,_bp
   0506 24 FD              2988 	add	a,#0xfd
   0508 F8                 2989 	mov	r0,a
   0509 E6                 2990 	mov	a,@r0
   050A 60 29              2991 	jz	00135$
                           2992 ;	../../shared/src/tx_train.c:351: update_g(opt_g1_index - *IDX);
   050C 8D 82              2993 	mov	dpl,r5
   050E 8E 83              2994 	mov	dph,r6
   0510 8F F0              2995 	mov	b,r7
   0512 12s00r00           2996 	lcall	__gptrget
   0515 FA                 2997 	mov	r2,a
   0516 90s00r00           2998 	mov	dptr,#_opt_g1_index
   0519 E0                 2999 	movx	a,@dptr
   051A C3                 3000 	clr	c
   051B 9A                 3001 	subb	a,r2
   051C F5 82              3002 	mov	dpl,a
   051E 74r33              3003 	mov	a,#00193$
   0520 C0 E0              3004 	push	acc
   0522 74s05              3005 	mov	a,#(00193$ >> 8)
   0524 C0 E0              3006 	push	acc
   0526 E5*00              3007 	mov	a,_bp
   0528 24 F2              3008 	add	a,#0xf2
   052A F8                 3009 	mov	r0,a
   052B E6                 3010 	mov	a,@r0
   052C C0 E0              3011 	push	acc
   052E 08                 3012 	inc	r0
   052F E6                 3013 	mov	a,@r0
   0530 C0 E0              3014 	push	acc
   0532 22                 3015 	ret
   0533                    3016 00193$:
   0533 80 27              3017 	sjmp	00136$
   0535                    3018 00135$:
                           3019 ;	../../shared/src/tx_train.c:353: update_g(opt_gn1_index - *IDX);
   0535 8D 82              3020 	mov	dpl,r5
   0537 8E 83              3021 	mov	dph,r6
   0539 8F F0              3022 	mov	b,r7
   053B 12s00r00           3023 	lcall	__gptrget
   053E FD                 3024 	mov	r5,a
   053F 90s00r00           3025 	mov	dptr,#_opt_gn1_index
   0542 E0                 3026 	movx	a,@dptr
   0543 C3                 3027 	clr	c
   0544 9D                 3028 	subb	a,r5
   0545 F5 82              3029 	mov	dpl,a
   0547 74r5C              3030 	mov	a,#00194$
   0549 C0 E0              3031 	push	acc
   054B 74s05              3032 	mov	a,#(00194$ >> 8)
   054D C0 E0              3033 	push	acc
   054F E5*00              3034 	mov	a,_bp
   0551 24 F2              3035 	add	a,#0xf2
   0553 F8                 3036 	mov	r0,a
   0554 E6                 3037 	mov	a,@r0
   0555 C0 E0              3038 	push	acc
   0557 08                 3039 	inc	r0
   0558 E6                 3040 	mov	a,@r0
   0559 C0 E0              3041 	push	acc
   055B 22                 3042 	ret
   055C                    3043 00194$:
   055C                    3044 00136$:
                           3045 ;	../../shared/src/tx_train.c:355: update_opt_trx_ffe();
   055C 12s00r00           3046 	lcall	_update_opt_trx_ffe
   055F 85*00 81           3047 	mov	sp,_bp
   0562 D0*00              3048 	pop	_bp
   0564 22                 3049 	ret
                           3050 ;------------------------------------------------------------
                           3051 ;Allocation info for local variables in function 'g1n1_midpoint'
                           3052 ;------------------------------------------------------------
                           3053 ;X                         Allocated to stack - offset -3
                           3054 ;IDX                       Allocated to stack - offset -6
                           3055 ;IS_MIN                    Allocated to stack - offset -9
                           3056 ;IS_MAX                    Allocated to stack - offset -12
                           3057 ;update_g                  Allocated to stack - offset -14
                           3058 ;HOLD                      Allocated to stack - offset 1
                           3059 ;num_count                 Allocated to stack - offset 2
                           3060 ;dir                       Allocated to registers b0 
                           3061 ;idx_ini                   Allocated to stack - offset 3
                           3062 ;idx_lo                    Allocated to registers r7 
                           3063 ;idx_hi                    Allocated to stack - offset 10
                           3064 ;update                    Allocated to registers r2 
                           3065 ;OBTH                      Allocated to registers 
                           3066 ;TH                        Allocated to stack - offset 4
                           3067 ;OS                        Allocated to stack - offset 6
                           3068 ;STEP                      Allocated to stack - offset 7
                           3069 ;OB                        Allocated to stack - offset 8
                           3070 ;cnt                       Allocated to stack - offset 9
                           3071 ;sloc0                     Allocated to stack - offset 10
                           3072 ;sloc1                     Allocated to stack - offset 11
                           3073 ;sloc2                     Allocated to stack - offset 13
                           3074 ;sloc3                     Allocated to stack - offset 15
                           3075 ;sloc4                     Allocated to stack - offset 18
                           3076 ;------------------------------------------------------------
                           3077 ;	../../shared/src/tx_train.c:379: void g1n1_midpoint(bool HOLD, uint8_t X, 
                           3078 ;	-----------------------------------------
                           3079 ;	 function g1n1_midpoint
                           3080 ;	-----------------------------------------
   0565                    3081 _g1n1_midpoint:
   0565 C0*00              3082 	push	_bp
   0567 85 81*00           3083 	mov	_bp,sp
   056A C0 82              3084 	push	dpl
   056C E5 81              3085 	mov	a,sp
   056E 24 14              3086 	add	a,#0x14
   0570 F5 81              3087 	mov	sp,a
                           3088 ;	../../shared/src/tx_train.c:399: dir = HOLD ? 0 : 1;
   0572 A8*00              3089 	mov	r0,_bp
   0574 08                 3090 	inc	r0
   0575 E6                 3091 	mov	a,@r0
   0576 B4 01 00           3092 	cjne	a,#0x01,00200$
   0579                    3093 00200$:
   0579 92*00              3094 	mov	b0,c
                           3095 ;	../../shared/src/tx_train.c:400: idx_ini = *IDX;
   057B E5*00              3096 	mov	a,_bp
   057D 24 FA              3097 	add	a,#0xfa
   057F F8                 3098 	mov	r0,a
   0580 86 03              3099 	mov	ar3,@r0
   0582 08                 3100 	inc	r0
   0583 86 04              3101 	mov	ar4,@r0
   0585 08                 3102 	inc	r0
   0586 86 05              3103 	mov	ar5,@r0
   0588 8B 82              3104 	mov	dpl,r3
   058A 8C 83              3105 	mov	dph,r4
   058C 8D F0              3106 	mov	b,r5
   058E 12s00r00           3107 	lcall	__gptrget
   0591 FE                 3108 	mov	r6,a
   0592 E5*00              3109 	mov	a,_bp
   0594 24 03              3110 	add	a,#0x03
   0596 F8                 3111 	mov	r0,a
   0597 A6 06              3112 	mov	@r0,ar6
                           3113 ;	../../shared/src/tx_train.c:401: idx_lo  = idx_ini;
   0599 E5*00              3114 	mov	a,_bp
   059B 24 03              3115 	add	a,#0x03
   059D F8                 3116 	mov	r0,a
   059E 86 07              3117 	mov	ar7,@r0
                           3118 ;	../../shared/src/tx_train.c:402: idx_hi  = idx_ini;
   05A0 E5*00              3119 	mov	a,_bp
   05A2 24 03              3120 	add	a,#0x03
   05A4 F8                 3121 	mov	r0,a
   05A5 E5*00              3122 	mov	a,_bp
   05A7 24 0A              3123 	add	a,#0x0a
   05A9 F9                 3124 	mov	r1,a
   05AA E6                 3125 	mov	a,@r0
   05AB F7                 3126 	mov	@r1,a
                           3127 ;	../../shared/src/tx_train.c:403: tx.become_worse = 0;
   05AC 90s00r09           3128 	mov	dptr,#(_tx + 0x0009)
   05AF E4                 3129 	clr	a
   05B0 F0                 3130 	movx	@dptr,a
                           3131 ;	../../shared/src/tx_train.c:405: num_count = 0;
   05B1 A8*00              3132 	mov	r0,_bp
   05B3 08                 3133 	inc	r0
   05B4 08                 3134 	inc	r0
   05B5 76 00              3135 	mov	@r0,#0x00
                           3136 ;	../../shared/src/tx_train.c:407: if(X){          
   05B7 E5*00              3137 	mov	a,_bp
   05B9 24 FD              3138 	add	a,#0xfd
   05BB F8                 3139 	mov	r0,a
   05BC E6                 3140 	mov	a,@r0
   05BD 70 03              3141 	jnz	00201$
   05BF 02s06rB3           3142 	ljmp	00102$
   05C2                    3143 00201$:
                           3144 ;	../../shared/src/tx_train.c:408: TH   = ((opt.f0t*tag_TX_G1_MIDPOINT_THRES_K)>>tag_THRES_K_SHFT) + tag_TX_G1_MIDPOINT_THRES_C;
   05C2 C0 07              3145 	push	ar7
   05C4 90s00r1E           3146 	mov	dptr,#(_opt + 0x001e)
   05C7 E0                 3147 	movx	a,@dptr
   05C8 FF                 3148 	mov	r7,a
   05C9 90 60 85           3149 	mov	dptr,#(_DFE_TEST_4 + 0x0001)
   05CC E0                 3150 	movx	a,@dptr
   05CD FE                 3151 	mov	r6,a
   05CE E5*00              3152 	mov	a,_bp
   05D0 24 0B              3153 	add	a,#0x0b
   05D2 F8                 3154 	mov	r0,a
   05D3 A6 07              3155 	mov	@r0,ar7
   05D5 08                 3156 	inc	r0
   05D6 76 00              3157 	mov	@r0,#0x00
   05D8 7A 00              3158 	mov	r2,#0x00
   05DA C0 03              3159 	push	ar3
   05DC C0 04              3160 	push	ar4
   05DE C0 05              3161 	push	ar5
   05E0 C0 07              3162 	push	ar7
   05E2 C0*00              3163 	push	bits
   05E4 C0 06              3164 	push	ar6
   05E6 C0 02              3165 	push	ar2
   05E8 E5*00              3166 	mov	a,_bp
   05EA 24 0B              3167 	add	a,#0x0b
   05EC F8                 3168 	mov	r0,a
   05ED 86 82              3169 	mov	dpl,@r0
   05EF 08                 3170 	inc	r0
   05F0 86 83              3171 	mov	dph,@r0
   05F2 12s00r00           3172 	lcall	__mulint
   05F5 AA 82              3173 	mov	r2,dpl
   05F7 AE 83              3174 	mov	r6,dph
   05F9 15 81              3175 	dec	sp
   05FB 15 81              3176 	dec	sp
   05FD D0*00              3177 	pop	bits
   05FF D0 07              3178 	pop	ar7
   0601 D0 05              3179 	pop	ar5
   0603 D0 04              3180 	pop	ar4
   0605 D0 03              3181 	pop	ar3
   0607 E5*00              3182 	mov	a,_bp
   0609 24 0B              3183 	add	a,#0x0b
   060B F8                 3184 	mov	r0,a
   060C A6 02              3185 	mov	@r0,ar2
   060E EE                 3186 	mov	a,r6
   060F C4                 3187 	swap	a
   0610 C6                 3188 	xch	a,@r0
   0611 C4                 3189 	swap	a
   0612 54 0F              3190 	anl	a,#0x0f
   0614 66                 3191 	xrl	a,@r0
   0615 C6                 3192 	xch	a,@r0
   0616 54 0F              3193 	anl	a,#0x0f
   0618 C6                 3194 	xch	a,@r0
   0619 66                 3195 	xrl	a,@r0
   061A C6                 3196 	xch	a,@r0
   061B 30 E3 02           3197 	jnb	acc.3,00202$
   061E 44 F0              3198 	orl	a,#0xf0
   0620                    3199 00202$:
   0620 08                 3200 	inc	r0
   0621 F6                 3201 	mov	@r0,a
   0622 90 60 84           3202 	mov	dptr,#_DFE_TEST_4
   0625 E0                 3203 	movx	a,@dptr
   0626 FF                 3204 	mov	r7,a
   0627 33                 3205 	rlc	a
   0628 95 E0              3206 	subb	a,acc
   062A FA                 3207 	mov	r2,a
   062B E5*00              3208 	mov	a,_bp
   062D 24 0B              3209 	add	a,#0x0b
   062F F8                 3210 	mov	r0,a
   0630 EF                 3211 	mov	a,r7
   0631 26                 3212 	add	a,@r0
   0632 FF                 3213 	mov	r7,a
   0633 EA                 3214 	mov	a,r2
   0634 08                 3215 	inc	r0
   0635 36                 3216 	addc	a,@r0
   0636 FA                 3217 	mov	r2,a
   0637 E5*00              3218 	mov	a,_bp
   0639 24 04              3219 	add	a,#0x04
   063B F8                 3220 	mov	r0,a
   063C A6 07              3221 	mov	@r0,ar7
   063E 08                 3222 	inc	r0
   063F A6 02              3223 	mov	@r0,ar2
                           3224 ;	../../shared/src/tx_train.c:409: OS   = tag_TX_G1_MIDPOINT_INDEX_OS;
   0641 E5*00              3225 	mov	a,_bp
   0643 24 06              3226 	add	a,#0x06
   0645 F8                 3227 	mov	r0,a
   0646 76 00              3228 	mov	@r0,#0x00
                           3229 ;	../../shared/src/tx_train.c:411: STEP = tag_TX_G1_STEP_SIZE;
   0648 90 60 A7           3230 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0003)
   064B E0                 3231 	movx	a,@dptr
   064C 54 03              3232 	anl	a,#0x03
   064E FA                 3233 	mov	r2,a
   064F E5*00              3234 	mov	a,_bp
   0651 24 07              3235 	add	a,#0x07
   0653 F8                 3236 	mov	r0,a
   0654 A6 02              3237 	mov	@r0,ar2
                           3238 ;	../../shared/src/tx_train.c:412: OB   = (train.f1 < 0 || (train.f2 < 0 && ((train.f1 + train.f2) < tag_TX_G1_OVERBOOST_THRES)))? 1:0;
   0656 90s00r06           3239 	mov	dptr,#(_train + 0x0006)
   0659 E0                 3240 	movx	a,@dptr
   065A FE                 3241 	mov	r6,a
   065B D0 07              3242 	pop	ar7
   065D 20 E7 41           3243 	jb	acc.7,00136$
   0660 90s00r1B           3244 	mov	dptr,#(_train + 0x001b)
   0663 E0                 3245 	movx	a,@dptr
   0664 FA                 3246 	mov	r2,a
   0665 30 E7 2D           3247 	jnb	acc.7,00138$
   0668 C0 07              3248 	push	ar7
   066A E5*00              3249 	mov	a,_bp
   066C 24 0B              3250 	add	a,#0x0b
   066E F8                 3251 	mov	r0,a
   066F A6 06              3252 	mov	@r0,ar6
   0671 EE                 3253 	mov	a,r6
   0672 33                 3254 	rlc	a
   0673 95 E0              3255 	subb	a,acc
   0675 08                 3256 	inc	r0
   0676 F6                 3257 	mov	@r0,a
   0677 EA                 3258 	mov	a,r2
   0678 33                 3259 	rlc	a
   0679 95 E0              3260 	subb	a,acc
   067B FE                 3261 	mov	r6,a
   067C E5*00              3262 	mov	a,_bp
   067E 24 0B              3263 	add	a,#0x0b
   0680 F8                 3264 	mov	r0,a
   0681 EA                 3265 	mov	a,r2
   0682 26                 3266 	add	a,@r0
   0683 FA                 3267 	mov	r2,a
   0684 EE                 3268 	mov	a,r6
   0685 08                 3269 	inc	r0
   0686 36                 3270 	addc	a,@r0
   0687 FE                 3271 	mov	r6,a
   0688 C3                 3272 	clr	c
   0689 EA                 3273 	mov	a,r2
   068A 94 03              3274 	subb	a,#0x03
   068C EE                 3275 	mov	a,r6
   068D 64 80              3276 	xrl	a,#0x80
   068F 94 80              3277 	subb	a,#0x80
   0691 D0 07              3278 	pop	ar7
   0693 40 04              3279 	jc	00139$
   0695                    3280 00138$:
   0695 7A 00              3281 	mov	r2,#0x00
   0697 80 02              3282 	sjmp	00140$
   0699                    3283 00139$:
   0699 7A 01              3284 	mov	r2,#0x01
   069B                    3285 00140$:
   069B EA                 3286 	mov	a,r2
   069C 70 03              3287 	jnz	00136$
   069E FA                 3288 	mov	r2,a
   069F 80 02              3289 	sjmp	00137$
   06A1                    3290 00136$:
   06A1 7A 01              3291 	mov	r2,#0x01
   06A3                    3292 00137$:
   06A3 EA                 3293 	mov	a,r2
   06A4 60 02              3294 	jz	00133$
   06A6 74 01              3295 	mov	a,#0x01
   06A8                    3296 00133$:
   06A8 FA                 3297 	mov	r2,a
   06A9 E5*00              3298 	mov	a,_bp
   06AB 24 08              3299 	add	a,#0x08
   06AD F8                 3300 	mov	r0,a
   06AE A6 02              3301 	mov	@r0,ar2
   06B0 02s07r9D           3302 	ljmp	00197$
   06B3                    3303 00102$:
                           3304 ;	../../shared/src/tx_train.c:414: TH   = ((opt.f0t*tag_TX_GN1_MIDPOINT_THRES_K)>>tag_THRES_K_SHFT) + tag_TX_GN1_MIDPOINT_THRES_C;
   06B3 C0 07              3305 	push	ar7
   06B5 90s00r1E           3306 	mov	dptr,#(_opt + 0x001e)
   06B8 E0                 3307 	movx	a,@dptr
   06B9 FE                 3308 	mov	r6,a
   06BA 90 60 51           3309 	mov	dptr,#(_TRAIN_CONTROL_0 + 0x0001)
   06BD E0                 3310 	movx	a,@dptr
   06BE FA                 3311 	mov	r2,a
   06BF E5*00              3312 	mov	a,_bp
   06C1 24 0D              3313 	add	a,#0x0d
   06C3 F8                 3314 	mov	r0,a
   06C4 A6 06              3315 	mov	@r0,ar6
   06C6 08                 3316 	inc	r0
   06C7 76 00              3317 	mov	@r0,#0x00
   06C9 8A 06              3318 	mov	ar6,r2
   06CB 7F 00              3319 	mov	r7,#0x00
   06CD C0 03              3320 	push	ar3
   06CF C0 04              3321 	push	ar4
   06D1 C0 05              3322 	push	ar5
   06D3 C0*00              3323 	push	bits
   06D5 C0 06              3324 	push	ar6
   06D7 C0 07              3325 	push	ar7
   06D9 E5*00              3326 	mov	a,_bp
   06DB 24 0D              3327 	add	a,#0x0d
   06DD F8                 3328 	mov	r0,a
   06DE 86 82              3329 	mov	dpl,@r0
   06E0 08                 3330 	inc	r0
   06E1 86 83              3331 	mov	dph,@r0
   06E3 12s00r00           3332 	lcall	__mulint
   06E6 AE 82              3333 	mov	r6,dpl
   06E8 AF 83              3334 	mov	r7,dph
   06EA 15 81              3335 	dec	sp
   06EC 15 81              3336 	dec	sp
   06EE D0*00              3337 	pop	bits
   06F0 D0 05              3338 	pop	ar5
   06F2 D0 04              3339 	pop	ar4
   06F4 D0 03              3340 	pop	ar3
   06F6 E5*00              3341 	mov	a,_bp
   06F8 24 0D              3342 	add	a,#0x0d
   06FA F8                 3343 	mov	r0,a
   06FB A6 06              3344 	mov	@r0,ar6
   06FD EF                 3345 	mov	a,r7
   06FE C4                 3346 	swap	a
   06FF C6                 3347 	xch	a,@r0
   0700 C4                 3348 	swap	a
   0701 54 0F              3349 	anl	a,#0x0f
   0703 66                 3350 	xrl	a,@r0
   0704 C6                 3351 	xch	a,@r0
   0705 54 0F              3352 	anl	a,#0x0f
   0707 C6                 3353 	xch	a,@r0
   0708 66                 3354 	xrl	a,@r0
   0709 C6                 3355 	xch	a,@r0
   070A 30 E3 02           3356 	jnb	acc.3,00208$
   070D 44 F0              3357 	orl	a,#0xf0
   070F                    3358 00208$:
   070F 08                 3359 	inc	r0
   0710 F6                 3360 	mov	@r0,a
   0711 90 60 50           3361 	mov	dptr,#_TRAIN_CONTROL_0
   0714 E0                 3362 	movx	a,@dptr
   0715 FE                 3363 	mov	r6,a
   0716 33                 3364 	rlc	a
   0717 95 E0              3365 	subb	a,acc
   0719 FF                 3366 	mov	r7,a
   071A E5*00              3367 	mov	a,_bp
   071C 24 0D              3368 	add	a,#0x0d
   071E F8                 3369 	mov	r0,a
   071F EE                 3370 	mov	a,r6
   0720 26                 3371 	add	a,@r0
   0721 FE                 3372 	mov	r6,a
   0722 EF                 3373 	mov	a,r7
   0723 08                 3374 	inc	r0
   0724 36                 3375 	addc	a,@r0
   0725 FF                 3376 	mov	r7,a
   0726 E5*00              3377 	mov	a,_bp
   0728 24 04              3378 	add	a,#0x04
   072A F8                 3379 	mov	r0,a
   072B A6 06              3380 	mov	@r0,ar6
   072D 08                 3381 	inc	r0
   072E A6 07              3382 	mov	@r0,ar7
                           3383 ;	../../shared/src/tx_train.c:415: OS   = tag_TX_GN1_MIDPOINT_INDEX_OS;
   0730 E5*00              3384 	mov	a,_bp
   0732 24 06              3385 	add	a,#0x06
   0734 F8                 3386 	mov	r0,a
   0735 76 FC              3387 	mov	@r0,#0xFC
                           3388 ;	../../shared/src/tx_train.c:417: STEP = tag_TX_GN1_STEP_SIZE;
   0737 90 60 A6           3389 	mov	dptr,#(_CDS_CTRL_REG1 + 0x0002)
   073A E0                 3390 	movx	a,@dptr
   073B C4                 3391 	swap	a
   073C 54 03              3392 	anl	a,#0x03
   073E FE                 3393 	mov	r6,a
   073F E5*00              3394 	mov	a,_bp
   0741 24 07              3395 	add	a,#0x07
   0743 F8                 3396 	mov	r0,a
   0744 A6 06              3397 	mov	@r0,ar6
                           3398 ;	../../shared/src/tx_train.c:418: OB   =  ((train.f0 < 63 && train.fn1 < tag_TX_GN1_OVERBOOST_THRES) || (train.f0 >= 63 && train.f0a >= 63))? 1:0;
   0746 90s00r1A           3399 	mov	dptr,#(_train + 0x001a)
   0749 E0                 3400 	movx	a,@dptr
   074A FE                 3401 	mov	r6,a
   074B BE 3F 00           3402 	cjne	r6,#0x3F,00209$
   074E                    3403 00209$:
   074E E4                 3404 	clr	a
   074F 33                 3405 	rlc	a
   0750 FA                 3406 	mov	r2,a
   0751 D0 07              3407 	pop	ar7
   0753 EA                 3408 	mov	a,r2
   0754 60 0C              3409 	jz	00146$
   0756 90s00r1D           3410 	mov	dptr,#(_train + 0x001d)
   0759 E0                 3411 	movx	a,@dptr
   075A FE                 3412 	mov	r6,a
   075B C3                 3413 	clr	c
   075C 64 80              3414 	xrl	a,#0x80
   075E 94 83              3415 	subb	a,#0x83
   0760 40 04              3416 	jc	00147$
   0762                    3417 00146$:
   0762 7E 00              3418 	mov	r6,#0x00
   0764 80 02              3419 	sjmp	00148$
   0766                    3420 00147$:
   0766 7E 01              3421 	mov	r6,#0x01
   0768                    3422 00148$:
   0768 EE                 3423 	mov	a,r6
   0769 70 23              3424 	jnz	00144$
   076B EA                 3425 	mov	a,r2
   076C B4 01 00           3426 	cjne	a,#0x01,00213$
   076F                    3427 00213$:
   076F E4                 3428 	clr	a
   0770 33                 3429 	rlc	a
   0771 FE                 3430 	mov	r6,a
   0772 60 0E              3431 	jz	00149$
   0774 90s00r19           3432 	mov	dptr,#(_train + 0x0019)
   0777 E0                 3433 	movx	a,@dptr
   0778 FE                 3434 	mov	r6,a
   0779 BE 3F 00           3435 	cjne	r6,#0x3F,00215$
   077C                    3436 00215$:
   077C B3                 3437 	cpl	c
   077D E4                 3438 	clr	a
   077E 33                 3439 	rlc	a
   077F FE                 3440 	mov	r6,a
   0780 70 04              3441 	jnz	00150$
   0782                    3442 00149$:
   0782 7E 00              3443 	mov	r6,#0x00
   0784 80 02              3444 	sjmp	00151$
   0786                    3445 00150$:
   0786 7E 01              3446 	mov	r6,#0x01
   0788                    3447 00151$:
   0788 EE                 3448 	mov	a,r6
   0789 70 03              3449 	jnz	00144$
   078B FE                 3450 	mov	r6,a
   078C 80 02              3451 	sjmp	00145$
   078E                    3452 00144$:
   078E 7E 01              3453 	mov	r6,#0x01
   0790                    3454 00145$:
   0790 EE                 3455 	mov	a,r6
   0791 60 02              3456 	jz	00141$
   0793 74 01              3457 	mov	a,#0x01
   0795                    3458 00141$:
   0795 FE                 3459 	mov	r6,a
   0796 E5*00              3460 	mov	a,_bp
   0798 24 08              3461 	add	a,#0x08
   079A F8                 3462 	mov	r0,a
   079B A6 06              3463 	mov	@r0,ar6
                           3464 ;	../../shared/src/tx_train.c:426: while(cnt-->0)
   079D                    3465 00197$:
   079D E5*00              3466 	mov	a,_bp
   079F 24 F7              3467 	add	a,#0xf7
   07A1 F8                 3468 	mov	r0,a
   07A2 E5*00              3469 	mov	a,_bp
   07A4 24 0F              3470 	add	a,#0x0f
   07A6 F9                 3471 	mov	r1,a
   07A7 E6                 3472 	mov	a,@r0
   07A8 F7                 3473 	mov	@r1,a
   07A9 08                 3474 	inc	r0
   07AA 09                 3475 	inc	r1
   07AB E6                 3476 	mov	a,@r0
   07AC F7                 3477 	mov	@r1,a
   07AD 08                 3478 	inc	r0
   07AE 09                 3479 	inc	r1
   07AF E6                 3480 	mov	a,@r0
   07B0 F7                 3481 	mov	@r1,a
   07B1 E5*00              3482 	mov	a,_bp
   07B3 24 F4              3483 	add	a,#0xf4
   07B5 F8                 3484 	mov	r0,a
   07B6 E5*00              3485 	mov	a,_bp
   07B8 24 12              3486 	add	a,#0x12
   07BA F9                 3487 	mov	r1,a
   07BB E6                 3488 	mov	a,@r0
   07BC F7                 3489 	mov	@r1,a
   07BD 08                 3490 	inc	r0
   07BE 09                 3491 	inc	r1
   07BF E6                 3492 	mov	a,@r0
   07C0 F7                 3493 	mov	@r1,a
   07C1 08                 3494 	inc	r0
   07C2 09                 3495 	inc	r1
   07C3 E6                 3496 	mov	a,@r0
   07C4 F7                 3497 	mov	@r1,a
   07C5 E5*00              3498 	mov	a,_bp
   07C7 24 07              3499 	add	a,#0x07
   07C9 F8                 3500 	mov	r0,a
   07CA C3                 3501 	clr	c
   07CB E4                 3502 	clr	a
   07CC 96                 3503 	subb	a,@r0
   07CD FE                 3504 	mov	r6,a
   07CE E5*00              3505 	mov	a,_bp
   07D0 24 09              3506 	add	a,#0x09
   07D2 F8                 3507 	mov	r0,a
   07D3 76 14              3508 	mov	@r0,#0x14
   07D5                    3509 00128$:
   07D5 C0 07              3510 	push	ar7
   07D7 E5*00              3511 	mov	a,_bp
   07D9 24 09              3512 	add	a,#0x09
   07DB F8                 3513 	mov	r0,a
   07DC 86 07              3514 	mov	ar7,@r0
   07DE E5*00              3515 	mov	a,_bp
   07E0 24 09              3516 	add	a,#0x09
   07E2 F8                 3517 	mov	r0,a
   07E3 16                 3518 	dec	@r0
   07E4 C3                 3519 	clr	c
   07E5 74 80              3520 	mov	a,#(0x00 ^ 0x80)
   07E7 8F F0              3521 	mov	b,r7
   07E9 63 F0 80           3522 	xrl	b,#0x80
   07EC 95 F0              3523 	subb	a,b
   07EE D0 07              3524 	pop	ar7
   07F0 40 03              3525 	jc	00220$
   07F2 02s0ArA2           3526 	ljmp	00130$
   07F5                    3527 00220$:
                           3528 ;	../../shared/src/tx_train.c:433: if(HOLD)
   07F5 A8*00              3529 	mov	r0,_bp
   07F7 08                 3530 	inc	r0
   07F8 E6                 3531 	mov	a,@r0
   07F9 70 03              3532 	jnz	00221$
   07FB 02s08rC7           3533 	ljmp	00121$
   07FE                    3534 00221$:
                           3535 ;	../../shared/src/tx_train.c:435: if( (*IS_MIN || tx.become_worse) && dir==0) {
   07FE E5*00              3536 	mov	a,_bp
   0800 24 0F              3537 	add	a,#0x0f
   0802 F8                 3538 	mov	r0,a
   0803 86 82              3539 	mov	dpl,@r0
   0805 08                 3540 	inc	r0
   0806 86 83              3541 	mov	dph,@r0
   0808 08                 3542 	inc	r0
   0809 86 F0              3543 	mov	b,@r0
   080B 12s00r00           3544 	lcall	__gptrget
   080E 70 09              3545 	jnz	00107$
   0810 90s00r09           3546 	mov	dptr,#(_tx + 0x0009)
   0813 E0                 3547 	movx	a,@dptr
   0814 70 03              3548 	jnz	00223$
   0816 02s08r96           3549 	ljmp	00105$
   0819                    3550 00223$:
   0819                    3551 00107$:
   0819 20*00 7A           3552 	jb	b0,00105$
                           3553 ;	../../shared/src/tx_train.c:436: dir = 1;
   081C C0 07              3554 	push	ar7
   081E D2*00              3555 	setb	b0
                           3556 ;	../../shared/src/tx_train.c:437: tx.become_worse = 0;
   0820 90s00r09           3557 	mov	dptr,#(_tx + 0x0009)
   0823 E4                 3558 	clr	a
   0824 F0                 3559 	movx	@dptr,a
                           3560 ;	../../shared/src/tx_train.c:438: update = idx_ini - *IDX;
   0825 8B 82              3561 	mov	dpl,r3
   0827 8C 83              3562 	mov	dph,r4
   0829 8D F0              3563 	mov	b,r5
   082B 12s00r00           3564 	lcall	__gptrget
   082E FF                 3565 	mov	r7,a
   082F E5*00              3566 	mov	a,_bp
   0831 24 03              3567 	add	a,#0x03
   0833 F8                 3568 	mov	r0,a
   0834 E6                 3569 	mov	a,@r0
   0835 C3                 3570 	clr	c
   0836 9F                 3571 	subb	a,r7
   0837 FF                 3572 	mov	r7,a
   0838 FA                 3573 	mov	r2,a
                           3574 ;	../../shared/src/tx_train.c:439: update_g(update);				
   0839 C0 02              3575 	push	ar2
   083B C0 03              3576 	push	ar3
   083D C0 04              3577 	push	ar4
   083F C0 05              3578 	push	ar5
   0841 C0 06              3579 	push	ar6
   0843 C0 07              3580 	push	ar7
   0845 C0*00              3581 	push	bits
   0847 74r5E              3582 	mov	a,#00225$
   0849 C0 E0              3583 	push	acc
   084B 74s08              3584 	mov	a,#(00225$ >> 8)
   084D C0 E0              3585 	push	acc
   084F E5*00              3586 	mov	a,_bp
   0851 24 F2              3587 	add	a,#0xf2
   0853 F8                 3588 	mov	r0,a
   0854 E6                 3589 	mov	a,@r0
   0855 C0 E0              3590 	push	acc
   0857 08                 3591 	inc	r0
   0858 E6                 3592 	mov	a,@r0
   0859 C0 E0              3593 	push	acc
   085B 8A 82              3594 	mov	dpl,r2
   085D 22                 3595 	ret
   085E                    3596 00225$:
   085E D0*00              3597 	pop	bits
   0860 D0 07              3598 	pop	ar7
   0862 D0 06              3599 	pop	ar6
   0864 D0 05              3600 	pop	ar5
   0866 D0 04              3601 	pop	ar4
   0868 D0 03              3602 	pop	ar3
   086A D0 02              3603 	pop	ar2
                           3604 ;	../../shared/src/tx_train.c:440: num_count += abs(update);
   086C 8A 82              3605 	mov	dpl,r2
   086E C0 03              3606 	push	ar3
   0870 C0 04              3607 	push	ar4
   0872 C0 05              3608 	push	ar5
   0874 C0 06              3609 	push	ar6
   0876 C0*00              3610 	push	bits
   0878 78r00              3611 	mov	r0,#_abs
   087A 79s00              3612 	mov	r1,#(_abs >> 8)
   087C 7As00              3613 	mov	r2,#(_abs >> 16)
   087E 12s00r00           3614 	lcall	__sdcc_banked_call
   0881 AF 82              3615 	mov	r7,dpl
   0883 D0*00              3616 	pop	bits
   0885 D0 06              3617 	pop	ar6
   0887 D0 05              3618 	pop	ar5
   0889 D0 04              3619 	pop	ar4
   088B D0 03              3620 	pop	ar3
   088D A8*00              3621 	mov	r0,_bp
   088F 08                 3622 	inc	r0
   0890 08                 3623 	inc	r0
   0891 EF                 3624 	mov	a,r7
   0892 26                 3625 	add	a,@r0
   0893 F6                 3626 	mov	@r0,a
                           3627 ;	../../shared/src/tx_train.c:500: update_opt_trx_ffe();
   0894 D0 07              3628 	pop	ar7
                           3629 ;	../../shared/src/tx_train.c:440: num_count += abs(update);
   0896                    3630 00105$:
                           3631 ;	../../shared/src/tx_train.c:447: if( (*IS_MAX || tx.become_worse) && dir==1 ) break;
   0896 E5*00              3632 	mov	a,_bp
   0898 24 12              3633 	add	a,#0x12
   089A F8                 3634 	mov	r0,a
   089B 86 82              3635 	mov	dpl,@r0
   089D 08                 3636 	inc	r0
   089E 86 83              3637 	mov	dph,@r0
   08A0 08                 3638 	inc	r0
   08A1 86 F0              3639 	mov	b,@r0
   08A3 12s00r00           3640 	lcall	__gptrget
   08A6 70 09              3641 	jnz	00111$
   08A8 90s00r09           3642 	mov	dptr,#(_tx + 0x0009)
   08AB E0                 3643 	movx	a,@dptr
   08AC 70 03              3644 	jnz	00227$
   08AE 02s09r88           3645 	ljmp	00122$
   08B1                    3646 00227$:
   08B1                    3647 00111$:
   08B1 C0 07              3648 	push	ar7
   08B3 A2*00              3649 	mov	c,b0
   08B5 E4                 3650 	clr	a
   08B6 33                 3651 	rlc	a
   08B7 FF                 3652 	mov	r7,a
   08B8 BF 01 02           3653 	cjne	r7,#0x01,00228$
   08BB 80 05              3654 	sjmp	00229$
   08BD                    3655 00228$:
   08BD D0 07              3656 	pop	ar7
   08BF 02s09r88           3657 	ljmp	00122$
   08C2                    3658 00229$:
   08C2 D0 07              3659 	pop	ar7
   08C4 02s0ArA2           3660 	ljmp	00130$
   08C7                    3661 00121$:
                           3662 ;	../../shared/src/tx_train.c:451: if( (*IS_MAX || tx.become_worse) && dir==1) {
   08C7 E5*00              3663 	mov	a,_bp
   08C9 24 12              3664 	add	a,#0x12
   08CB F8                 3665 	mov	r0,a
   08CC 86 82              3666 	mov	dpl,@r0
   08CE 08                 3667 	inc	r0
   08CF 86 83              3668 	mov	dph,@r0
   08D1 08                 3669 	inc	r0
   08D2 86 F0              3670 	mov	b,@r0
   08D4 12s00r00           3671 	lcall	__gptrget
   08D7 70 09              3672 	jnz	00115$
   08D9 90s00r09           3673 	mov	dptr,#(_tx + 0x0009)
   08DC E0                 3674 	movx	a,@dptr
   08DD 70 03              3675 	jnz	00231$
   08DF 02s09r6A           3676 	ljmp	00113$
   08E2                    3677 00231$:
   08E2                    3678 00115$:
   08E2 C0 07              3679 	push	ar7
   08E4 A2*00              3680 	mov	c,b0
   08E6 E4                 3681 	clr	a
   08E7 33                 3682 	rlc	a
   08E8 FF                 3683 	mov	r7,a
   08E9 BF 01 02           3684 	cjne	r7,#0x01,00232$
   08EC 80 04              3685 	sjmp	00233$
   08EE                    3686 00232$:
   08EE D0 07              3687 	pop	ar7
   08F0 80 78              3688 	sjmp	00113$
   08F2                    3689 00233$:
                           3690 ;	../../shared/src/tx_train.c:452: dir = 0;
   08F2 C2*00              3691 	clr	b0
                           3692 ;	../../shared/src/tx_train.c:453: tx.become_worse = 0;
   08F4 90s00r09           3693 	mov	dptr,#(_tx + 0x0009)
   08F7 E4                 3694 	clr	a
   08F8 F0                 3695 	movx	@dptr,a
                           3696 ;	../../shared/src/tx_train.c:454: update = idx_ini - *IDX;
   08F9 8B 82              3697 	mov	dpl,r3
   08FB 8C 83              3698 	mov	dph,r4
   08FD 8D F0              3699 	mov	b,r5
   08FF 12s00r00           3700 	lcall	__gptrget
   0902 FF                 3701 	mov	r7,a
   0903 E5*00              3702 	mov	a,_bp
   0905 24 03              3703 	add	a,#0x03
   0907 F8                 3704 	mov	r0,a
   0908 E6                 3705 	mov	a,@r0
   0909 C3                 3706 	clr	c
   090A 9F                 3707 	subb	a,r7
   090B FF                 3708 	mov	r7,a
   090C FA                 3709 	mov	r2,a
                           3710 ;	../../shared/src/tx_train.c:455: update_g(update);				
   090D C0 02              3711 	push	ar2
   090F C0 03              3712 	push	ar3
   0911 C0 04              3713 	push	ar4
   0913 C0 05              3714 	push	ar5
   0915 C0 06              3715 	push	ar6
   0917 C0 07              3716 	push	ar7
   0919 C0*00              3717 	push	bits
   091B 74r32              3718 	mov	a,#00234$
   091D C0 E0              3719 	push	acc
   091F 74s09              3720 	mov	a,#(00234$ >> 8)
   0921 C0 E0              3721 	push	acc
   0923 E5*00              3722 	mov	a,_bp
   0925 24 F2              3723 	add	a,#0xf2
   0927 F8                 3724 	mov	r0,a
   0928 E6                 3725 	mov	a,@r0
   0929 C0 E0              3726 	push	acc
   092B 08                 3727 	inc	r0
   092C E6                 3728 	mov	a,@r0
   092D C0 E0              3729 	push	acc
   092F 8A 82              3730 	mov	dpl,r2
   0931 22                 3731 	ret
   0932                    3732 00234$:
   0932 D0*00              3733 	pop	bits
   0934 D0 07              3734 	pop	ar7
   0936 D0 06              3735 	pop	ar6
   0938 D0 05              3736 	pop	ar5
   093A D0 04              3737 	pop	ar4
   093C D0 03              3738 	pop	ar3
   093E D0 02              3739 	pop	ar2
                           3740 ;	../../shared/src/tx_train.c:456: num_count += abs(update);
   0940 8A 82              3741 	mov	dpl,r2
   0942 C0 03              3742 	push	ar3
   0944 C0 04              3743 	push	ar4
   0946 C0 05              3744 	push	ar5
   0948 C0 06              3745 	push	ar6
   094A C0*00              3746 	push	bits
   094C 78r00              3747 	mov	r0,#_abs
   094E 79s00              3748 	mov	r1,#(_abs >> 8)
   0950 7As00              3749 	mov	r2,#(_abs >> 16)
   0952 12s00r00           3750 	lcall	__sdcc_banked_call
   0955 AF 82              3751 	mov	r7,dpl
   0957 D0*00              3752 	pop	bits
   0959 D0 06              3753 	pop	ar6
   095B D0 05              3754 	pop	ar5
   095D D0 04              3755 	pop	ar4
   095F D0 03              3756 	pop	ar3
   0961 A8*00              3757 	mov	r0,_bp
   0963 08                 3758 	inc	r0
   0964 08                 3759 	inc	r0
   0965 EF                 3760 	mov	a,r7
   0966 26                 3761 	add	a,@r0
   0967 F6                 3762 	mov	@r0,a
                           3763 ;	../../shared/src/tx_train.c:500: update_opt_trx_ffe();
   0968 D0 07              3764 	pop	ar7
                           3765 ;	../../shared/src/tx_train.c:456: num_count += abs(update);
   096A                    3766 00113$:
                           3767 ;	../../shared/src/tx_train.c:461: if( (*IS_MIN || tx.become_worse) && dir==0 ) break;
   096A E5*00              3768 	mov	a,_bp
   096C 24 0F              3769 	add	a,#0x0f
   096E F8                 3770 	mov	r0,a
   096F 86 82              3771 	mov	dpl,@r0
   0971 08                 3772 	inc	r0
   0972 86 83              3773 	mov	dph,@r0
   0974 08                 3774 	inc	r0
   0975 86 F0              3775 	mov	b,@r0
   0977 12s00r00           3776 	lcall	__gptrget
   097A 70 06              3777 	jnz	00119$
   097C 90s00r09           3778 	mov	dptr,#(_tx + 0x0009)
   097F E0                 3779 	movx	a,@dptr
   0980 60 06              3780 	jz	00122$
   0982                    3781 00119$:
   0982 20*00 03           3782 	jb	b0,00237$
   0985 02s0ArA2           3783 	ljmp	00130$
   0988                    3784 00237$:
   0988                    3785 00122$:
                           3786 ;	../../shared/src/tx_train.c:464: update = dir ? STEP : -STEP;
   0988 30*00 09           3787 	jnb	b0,00152$
   098B E5*00              3788 	mov	a,_bp
   098D 24 07              3789 	add	a,#0x07
   098F F8                 3790 	mov	r0,a
   0990 86 02              3791 	mov	ar2,@r0
   0992 80 02              3792 	sjmp	00153$
   0994                    3793 00152$:
   0994 8E 02              3794 	mov	ar2,r6
   0996                    3795 00153$:
   0996 C0 07              3796 	push	ar7
   0998 8A 07              3797 	mov	ar7,r2
   099A 8F 02              3798 	mov	ar2,r7
                           3799 ;	../../shared/src/tx_train.c:465: num_count += abs(update);
   099C 8A 82              3800 	mov	dpl,r2
   099E C0 02              3801 	push	ar2
   09A0 C0 03              3802 	push	ar3
   09A2 C0 04              3803 	push	ar4
   09A4 C0 05              3804 	push	ar5
   09A6 C0 06              3805 	push	ar6
   09A8 C0*00              3806 	push	bits
   09AA 78r00              3807 	mov	r0,#_abs
   09AC 79s00              3808 	mov	r1,#(_abs >> 8)
   09AE 7As00              3809 	mov	r2,#(_abs >> 16)
   09B0 12s00r00           3810 	lcall	__sdcc_banked_call
   09B3 AF 82              3811 	mov	r7,dpl
   09B5 D0*00              3812 	pop	bits
   09B7 D0 06              3813 	pop	ar6
   09B9 D0 05              3814 	pop	ar5
   09BB D0 04              3815 	pop	ar4
   09BD D0 03              3816 	pop	ar3
   09BF D0 02              3817 	pop	ar2
   09C1 A8*00              3818 	mov	r0,_bp
   09C3 08                 3819 	inc	r0
   09C4 08                 3820 	inc	r0
   09C5 EF                 3821 	mov	a,r7
   09C6 26                 3822 	add	a,@r0
   09C7 F6                 3823 	mov	@r0,a
                           3824 ;	../../shared/src/tx_train.c:466: update_g(update);
   09C8 C0 03              3825 	push	ar3
   09CA C0 04              3826 	push	ar4
   09CC C0 05              3827 	push	ar5
   09CE C0 06              3828 	push	ar6
   09D0 C0 07              3829 	push	ar7
   09D2 C0*00              3830 	push	bits
   09D4 74rEB              3831 	mov	a,#00239$
   09D6 C0 E0              3832 	push	acc
   09D8 74s09              3833 	mov	a,#(00239$ >> 8)
   09DA C0 E0              3834 	push	acc
   09DC E5*00              3835 	mov	a,_bp
   09DE 24 F2              3836 	add	a,#0xf2
   09E0 F8                 3837 	mov	r0,a
   09E1 E6                 3838 	mov	a,@r0
   09E2 C0 E0              3839 	push	acc
   09E4 08                 3840 	inc	r0
   09E5 E6                 3841 	mov	a,@r0
   09E6 C0 E0              3842 	push	acc
   09E8 8A 82              3843 	mov	dpl,r2
   09EA 22                 3844 	ret
   09EB                    3845 00239$:
   09EB D0*00              3846 	pop	bits
   09ED D0 07              3847 	pop	ar7
   09EF D0 06              3848 	pop	ar6
   09F1 D0 05              3849 	pop	ar5
   09F3 D0 04              3850 	pop	ar4
   09F5 D0 03              3851 	pop	ar3
                           3852 ;	../../shared/src/tx_train.c:468: tx.train_overboost = tag_TX_GN1_OVERBOOST_EN && OB;
                           3853 ;	../../shared/src/tx_train.c:500: update_opt_trx_ffe();
   09F7 D0 07              3854 	pop	ar7
                           3855 ;	../../shared/src/tx_train.c:468: tx.train_overboost = tag_TX_GN1_OVERBOOST_EN && OB;
   09F9 E5*00              3856 	mov	a,_bp
   09FB 24 08              3857 	add	a,#0x08
   09FD F8                 3858 	mov	r0,a
   09FE E6                 3859 	mov	a,@r0
   09FF 70 03              3860 	jnz	00155$
   0A01 FA                 3861 	mov	r2,a
   0A02 80 02              3862 	sjmp	00156$
   0A04                    3863 00155$:
   0A04 7A 01              3864 	mov	r2,#0x01
   0A06                    3865 00156$:
   0A06 C0 07              3866 	push	ar7
   0A08 90s00r0C           3867 	mov	dptr,#(_tx + 0x000c)
   0A0B EA                 3868 	mov	a,r2
   0A0C F0                 3869 	movx	@dptr,a
                           3870 ;	../../shared/src/tx_train.c:470: tx.become_worse = ((train.f0t < TH) || (num_count >= tag_TX_MAX_MIDPOINT_CTRL_CNT)
   0A0D 90s00r1E           3871 	mov	dptr,#(_train + 0x001e)
   0A10 E5*00              3872 	mov	a,_bp
   0A12 24 0D              3873 	add	a,#0x0d
   0A14 F8                 3874 	mov	r0,a
   0A15 E0                 3875 	movx	a,@dptr
   0A16 F6                 3876 	mov	@r0,a
   0A17 E5*00              3877 	mov	a,_bp
   0A19 24 0D              3878 	add	a,#0x0d
   0A1B F8                 3879 	mov	r0,a
   0A1C 86 07              3880 	mov	ar7,@r0
   0A1E 7A 00              3881 	mov	r2,#0x00
   0A20 E5*00              3882 	mov	a,_bp
   0A22 24 04              3883 	add	a,#0x04
   0A24 F8                 3884 	mov	r0,a
   0A25 C3                 3885 	clr	c
   0A26 EF                 3886 	mov	a,r7
   0A27 96                 3887 	subb	a,@r0
   0A28 EA                 3888 	mov	a,r2
   0A29 08                 3889 	inc	r0
   0A2A 96                 3890 	subb	a,@r0
   0A2B D0 07              3891 	pop	ar7
   0A2D 40 10              3892 	jc	00164$
   0A2F A8*00              3893 	mov	r0,_bp
   0A31 08                 3894 	inc	r0
   0A32 08                 3895 	inc	r0
   0A33 B6 80 00           3896 	cjne	@r0,#0x80,00242$
   0A36                    3897 00242$:
   0A36 B3                 3898 	cpl	c
   0A37 E4                 3899 	clr	a
   0A38 33                 3900 	rlc	a
   0A39 FA                 3901 	mov	r2,a
   0A3A 70 03              3902 	jnz	00164$
   0A3C FA                 3903 	mov	r2,a
   0A3D 80 02              3904 	sjmp	00165$
   0A3F                    3905 00164$:
   0A3F 7A 01              3906 	mov	r2,#0x01
   0A41                    3907 00165$:
   0A41 EA                 3908 	mov	a,r2
   0A42 70 19              3909 	jnz	00161$
                           3910 ;	../../shared/src/tx_train.c:471: || (tx.train_overboost && dir==0)
   0A44 90s00r0C           3911 	mov	dptr,#(_tx + 0x000c)
   0A47 E0                 3912 	movx	a,@dptr
   0A48 60 07              3913 	jz	00166$
   0A4A A2*00              3914 	mov	c,b0
   0A4C E4                 3915 	clr	a
   0A4D 33                 3916 	rlc	a
   0A4E FA                 3917 	mov	r2,a
   0A4F 60 04              3918 	jz	00167$
   0A51                    3919 00166$:
   0A51 7A 00              3920 	mov	r2,#0x00
   0A53 80 02              3921 	sjmp	00168$
   0A55                    3922 00167$:
   0A55 7A 01              3923 	mov	r2,#0x01
   0A57                    3924 00168$:
   0A57 EA                 3925 	mov	a,r2
   0A58 70 03              3926 	jnz	00161$
   0A5A FA                 3927 	mov	r2,a
   0A5B 80 02              3928 	sjmp	00162$
   0A5D                    3929 00161$:
   0A5D 7A 01              3930 	mov	r2,#0x01
   0A5F                    3931 00162$:
   0A5F EA                 3932 	mov	a,r2
   0A60 70 0E              3933 	jnz	00158$
                           3934 ;	../../shared/src/tx_train.c:472: || train.f0t == 0);
   0A62 E5*00              3935 	mov	a,_bp
   0A64 24 0D              3936 	add	a,#0x0d
   0A66 F8                 3937 	mov	r0,a
   0A67 B6 00 02           3938 	cjne	@r0,#0x00,00250$
   0A6A 80 04              3939 	sjmp	00158$
   0A6C                    3940 00250$:
   0A6C 7A 00              3941 	mov	r2,#0x00
   0A6E 80 02              3942 	sjmp	00159$
   0A70                    3943 00158$:
   0A70 7A 01              3944 	mov	r2,#0x01
   0A72                    3945 00159$:
                           3946 ;	../../shared/src/tx_train.c:474: if(tx.become_worse==0){ // keep record hi/lo until worsen, will be max/min if not worsen
   0A72 90s00r09           3947 	mov	dptr,#(_tx + 0x0009)
   0A75 EA                 3948 	mov	a,r2
   0A76 F0                 3949 	movx	@dptr,a
   0A77 E0                 3950 	movx	a,@dptr
   0A78 60 03              3951 	jz	00251$
   0A7A 02s07rD5           3952 	ljmp	00128$
   0A7D                    3953 00251$:
                           3954 ;	../../shared/src/tx_train.c:475: if(dir==0) idx_lo = *IDX;
   0A7D 20*00 0E           3955 	jb	b0,00124$
   0A80 8B 82              3956 	mov	dpl,r3
   0A82 8C 83              3957 	mov	dph,r4
   0A84 8D F0              3958 	mov	b,r5
   0A86 12s00r00           3959 	lcall	__gptrget
   0A89 FA                 3960 	mov	r2,a
   0A8A FF                 3961 	mov	r7,a
   0A8B 02s07rD5           3962 	ljmp	00128$
   0A8E                    3963 00124$:
                           3964 ;	../../shared/src/tx_train.c:476: else       idx_hi = *IDX;
   0A8E 8B 82              3965 	mov	dpl,r3
   0A90 8C 83              3966 	mov	dph,r4
   0A92 8D F0              3967 	mov	b,r5
   0A94 12s00r00           3968 	lcall	__gptrget
   0A97 FA                 3969 	mov	r2,a
   0A98 E5*00              3970 	mov	a,_bp
   0A9A 24 0A              3971 	add	a,#0x0a
   0A9C F8                 3972 	mov	r0,a
   0A9D A6 02              3973 	mov	@r0,ar2
   0A9F 02s07rD5           3974 	ljmp	00128$
   0AA2                    3975 00130$:
                           3976 ;	../../shared/src/tx_train.c:487: update = ((idx_lo + idx_hi)>>1) + OS - *IDX;
   0AA2 E5*00              3977 	mov	a,_bp
   0AA4 24 12              3978 	add	a,#0x12
   0AA6 F8                 3979 	mov	r0,a
   0AA7 A6 07              3980 	mov	@r0,ar7
   0AA9 08                 3981 	inc	r0
   0AAA 76 00              3982 	mov	@r0,#0x00
   0AAC E5*00              3983 	mov	a,_bp
   0AAE 24 0A              3984 	add	a,#0x0a
   0AB0 F8                 3985 	mov	r0,a
   0AB1 86 06              3986 	mov	ar6,@r0
   0AB3 7A 00              3987 	mov	r2,#0x00
   0AB5 E5*00              3988 	mov	a,_bp
   0AB7 24 12              3989 	add	a,#0x12
   0AB9 F8                 3990 	mov	r0,a
   0ABA EE                 3991 	mov	a,r6
   0ABB 26                 3992 	add	a,@r0
   0ABC FE                 3993 	mov	r6,a
   0ABD EA                 3994 	mov	a,r2
   0ABE 08                 3995 	inc	r0
   0ABF 36                 3996 	addc	a,@r0
   0AC0 A2 E7              3997 	mov	c,acc.7
   0AC2 13                 3998 	rrc	a
   0AC3 CE                 3999 	xch	a,r6
   0AC4 13                 4000 	rrc	a
   0AC5 CE                 4001 	xch	a,r6
   0AC6 E5*00              4002 	mov	a,_bp
   0AC8 24 06              4003 	add	a,#0x06
   0ACA F8                 4004 	mov	r0,a
   0ACB E6                 4005 	mov	a,@r0
   0ACC 2E                 4006 	add	a,r6
   0ACD FE                 4007 	mov	r6,a
   0ACE 8B 82              4008 	mov	dpl,r3
   0AD0 8C 83              4009 	mov	dph,r4
   0AD2 8D F0              4010 	mov	b,r5
   0AD4 12s00r00           4011 	lcall	__gptrget
   0AD7 FB                 4012 	mov	r3,a
   0AD8 EE                 4013 	mov	a,r6
   0AD9 C3                 4014 	clr	c
   0ADA 9B                 4015 	subb	a,r3
   0ADB FA                 4016 	mov	r2,a
                           4017 ;	../../shared/src/tx_train.c:488: update_g(update);
   0ADC 74rF3              4018 	mov	a,#00253$
   0ADE C0 E0              4019 	push	acc
   0AE0 74s0A              4020 	mov	a,#(00253$ >> 8)
   0AE2 C0 E0              4021 	push	acc
   0AE4 E5*00              4022 	mov	a,_bp
   0AE6 24 F2              4023 	add	a,#0xf2
   0AE8 F8                 4024 	mov	r0,a
   0AE9 E6                 4025 	mov	a,@r0
   0AEA C0 E0              4026 	push	acc
   0AEC 08                 4027 	inc	r0
   0AED E6                 4028 	mov	a,@r0
   0AEE C0 E0              4029 	push	acc
   0AF0 8A 82              4030 	mov	dpl,r2
   0AF2 22                 4031 	ret
   0AF3                    4032 00253$:
                           4033 ;	../../shared/src/tx_train.c:500: update_opt_trx_ffe();
   0AF3 12s00r00           4034 	lcall	_update_opt_trx_ffe
   0AF6 85*00 81           4035 	mov	sp,_bp
   0AF9 D0*00              4036 	pop	_bp
   0AFB 22                 4037 	ret
                           4038 ;------------------------------------------------------------
                           4039 ;Allocation info for local variables in function 'compare_g0'
                           4040 ;------------------------------------------------------------
                           4041 ;ARG                       Allocated to registers r2 
                           4042 ;sloc0                     Allocated to stack - offset 2
                           4043 ;------------------------------------------------------------
                           4044 ;	../../shared/src/tx_train.c:523: void compare_g0(void)
                           4045 ;	-----------------------------------------
                           4046 ;	 function compare_g0
                           4047 ;	-----------------------------------------
   0AFC                    4048 _compare_g0:
                           4049 ;	../../shared/src/tx_train.c:525: bool ARG = (train_g0_index < opt_g0_index);
   0AFC 90 60 32           4050 	mov	dptr,#_train_g0_index
   0AFF E0                 4051 	movx	a,@dptr
   0B00 FA                 4052 	mov	r2,a
   0B01 90s00r00           4053 	mov	dptr,#_opt_g0_index
   0B04 E0                 4054 	movx	a,@dptr
   0B05 FB                 4055 	mov	r3,a
   0B06 EA                 4056 	mov	a,r2
   0B07 B5 03 00           4057 	cjne	a,ar3,00194$
   0B0A                    4058 00194$:
   0B0A E4                 4059 	clr	a
   0B0B 33                 4060 	rlc	a
   0B0C FA                 4061 	mov	r2,a
                           4062 ;	../../shared/src/tx_train.c:527: if (opt.level < train.level)
   0B0D 90s00r23           4063 	mov	dptr,#(_opt + 0x0023)
   0B10 E0                 4064 	movx	a,@dptr
   0B11 FC                 4065 	mov	r4,a
   0B12 90s00r23           4066 	mov	dptr,#(_train + 0x0023)
   0B15 E0                 4067 	movx	a,@dptr
   0B16 FD                 4068 	mov	r5,a
   0B17 EC                 4069 	mov	a,r4
   0B18 B5 05 00           4070 	cjne	a,ar5,00195$
   0B1B                    4071 00195$:
   0B1B 50 0E              4072 	jnc	00123$
                           4073 ;	../../shared/src/tx_train.c:529: tx.ffe_updated = 1;
   0B1D 90s00r01           4074 	mov	dptr,#(_tx + 0x0001)
   0B20 74 01              4075 	mov	a,#0x01
   0B22 F0                 4076 	movx	@dptr,a
                           4077 ;	../../shared/src/tx_train.c:530: tx.become_worse = 0;
   0B23 90s00r09           4078 	mov	dptr,#(_tx + 0x0009)
   0B26 E4                 4079 	clr	a
   0B27 F0                 4080 	movx	@dptr,a
   0B28 02s0CrF1           4081 	ljmp	00124$
   0B2B                    4082 00123$:
                           4083 ;	../../shared/src/tx_train.c:532: else if (opt.level == train.level) // intra-level compare
   0B2B EC                 4084 	mov	a,r4
   0B2C B5 05 02           4085 	cjne	a,ar5,00197$
   0B2F 80 03              4086 	sjmp	00198$
   0B31                    4087 00197$:
   0B31 02s0CrD7           4088 	ljmp	00120$
   0B34                    4089 00198$:
                           4090 ;	../../shared/src/tx_train.c:534: if (opt.f0a >= tag_TX_F0A_HIGH_THRES)
   0B34 90s00r19           4091 	mov	dptr,#(_opt + 0x0019)
   0B37 E0                 4092 	movx	a,@dptr
   0B38 FC                 4093 	mov	r4,a
   0B39 BC 32 00           4094 	cjne	r4,#0x32,00199$
   0B3C                    4095 00199$:
   0B3C E4                 4096 	clr	a
   0B3D 33                 4097 	rlc	a
   0B3E FC                 4098 	mov	r4,a
   0B3F 70 0D              4099 	jnz	00117$
                           4100 ;	../../shared/src/tx_train.c:536: tx.ffe_updated = ARG;
   0B41 90s00r01           4101 	mov	dptr,#(_tx + 0x0001)
   0B44 EA                 4102 	mov	a,r2
   0B45 F0                 4103 	movx	@dptr,a
                           4104 ;	../../shared/src/tx_train.c:537: tx.become_worse = 0;
   0B46 90s00r09           4105 	mov	dptr,#(_tx + 0x0009)
   0B49 E4                 4106 	clr	a
   0B4A F0                 4107 	movx	@dptr,a
   0B4B 02s0CrF1           4108 	ljmp	00124$
   0B4E                    4109 00117$:
                           4110 ;	../../shared/src/tx_train.c:539: else if (opt.f0a < tag_TX_F0A_HIGH_THRES && train.f0a >= tag_TX_F0A_HIGH_THRES)
   0B4E EC                 4111 	mov	a,r4
   0B4F 60 16              4112 	jz	00113$
   0B51 90s00r19           4113 	mov	dptr,#(_train + 0x0019)
   0B54 E0                 4114 	movx	a,@dptr
   0B55 FC                 4115 	mov	r4,a
   0B56 BC 32 00           4116 	cjne	r4,#0x32,00202$
   0B59                    4117 00202$:
   0B59 40 0C              4118 	jc	00113$
                           4119 ;	../../shared/src/tx_train.c:541: tx.ffe_updated = 0;
   0B5B 90s00r01           4120 	mov	dptr,#(_tx + 0x0001)
                           4121 ;	../../shared/src/tx_train.c:542: tx.become_worse = 0;
   0B5E E4                 4122 	clr	a
   0B5F F0                 4123 	movx	@dptr,a
   0B60 90s00r09           4124 	mov	dptr,#(_tx + 0x0009)
   0B63 F0                 4125 	movx	@dptr,a
   0B64 02s0CrF1           4126 	ljmp	00124$
   0B67                    4127 00113$:
                           4128 ;	../../shared/src/tx_train.c:545: else if (train.level == 1 || train.level == 2 || train.level == 4) // level 1/2/4
   0B67 BD 01 02           4129 	cjne	r5,#0x01,00204$
   0B6A 80 0D              4130 	sjmp	00107$
   0B6C                    4131 00204$:
   0B6C BD 02 02           4132 	cjne	r5,#0x02,00205$
   0B6F 80 08              4133 	sjmp	00107$
   0B71                    4134 00205$:
   0B71 BD 04 02           4135 	cjne	r5,#0x04,00206$
   0B74 80 03              4136 	sjmp	00207$
   0B76                    4137 00206$:
   0B76 02s0Cr17           4138 	ljmp	00108$
   0B79                    4139 00207$:
   0B79                    4140 00107$:
                           4141 ;	../../shared/src/tx_train.c:547: tx.ffe_updated = ((ARG && train.f0t > (opt.f0t + tag_TX_F0T_G0UPDATE_THRES))
   0B79 EA                 4142 	mov	a,r2
   0B7A 60 28              4143 	jz	00132$
   0B7C C0 02              4144 	push	ar2
   0B7E 90s00r1E           4145 	mov	dptr,#(_train + 0x001e)
   0B81 E0                 4146 	movx	a,@dptr
   0B82 FC                 4147 	mov	r4,a
   0B83 90s00r1E           4148 	mov	dptr,#(_opt + 0x001e)
   0B86 E0                 4149 	movx	a,@dptr
   0B87 FE                 4150 	mov	r6,a
   0B88 7F 00              4151 	mov	r7,#0x00
   0B8A 74 0A              4152 	mov	a,#0x0A
   0B8C 2E                 4153 	add	a,r6
   0B8D FE                 4154 	mov	r6,a
   0B8E E4                 4155 	clr	a
   0B8F 3F                 4156 	addc	a,r7
   0B90 FF                 4157 	mov	r7,a
   0B91 7A 00              4158 	mov	r2,#0x00
   0B93 C3                 4159 	clr	c
   0B94 EE                 4160 	mov	a,r6
   0B95 9C                 4161 	subb	a,r4
   0B96 EF                 4162 	mov	a,r7
   0B97 64 80              4163 	xrl	a,#0x80
   0B99 8A F0              4164 	mov	b,r2
   0B9B 63 F0 80           4165 	xrl	b,#0x80
   0B9E 95 F0              4166 	subb	a,b
   0BA0 D0 02              4167 	pop	ar2
   0BA2 40 04              4168 	jc	00133$
   0BA4                    4169 00132$:
   0BA4 7C 00              4170 	mov	r4,#0x00
   0BA6 80 02              4171 	sjmp	00134$
   0BA8                    4172 00133$:
   0BA8 7C 01              4173 	mov	r4,#0x01
   0BAA                    4174 00134$:
   0BAA EC                 4175 	mov	a,r4
   0BAB 70 32              4176 	jnz	00130$
                           4177 ;	../../shared/src/tx_train.c:548: || (ARG==0 && train.f0t > (opt.f0t - tag_TX_F0T_G0UPDATE_THRES)) );
   0BAD BA 00 23           4178 	cjne	r2,#0x00,00135$
   0BB0 90s00r1E           4179 	mov	dptr,#(_train + 0x001e)
   0BB3 E0                 4180 	movx	a,@dptr
   0BB4 FC                 4181 	mov	r4,a
   0BB5 90s00r1E           4182 	mov	dptr,#(_opt + 0x001e)
   0BB8 E0                 4183 	movx	a,@dptr
   0BB9 7F 00              4184 	mov	r7,#0x00
   0BBB 24 F6              4185 	add	a,#0xf6
   0BBD FA                 4186 	mov	r2,a
   0BBE EF                 4187 	mov	a,r7
   0BBF 34 FF              4188 	addc	a,#0xff
   0BC1 FB                 4189 	mov	r3,a
   0BC2 7E 00              4190 	mov	r6,#0x00
   0BC4 C3                 4191 	clr	c
   0BC5 EA                 4192 	mov	a,r2
   0BC6 9C                 4193 	subb	a,r4
   0BC7 EB                 4194 	mov	a,r3
   0BC8 64 80              4195 	xrl	a,#0x80
   0BCA 8E F0              4196 	mov	b,r6
   0BCC 63 F0 80           4197 	xrl	b,#0x80
   0BCF 95 F0              4198 	subb	a,b
   0BD1 40 04              4199 	jc	00136$
   0BD3                    4200 00135$:
   0BD3 7C 00              4201 	mov	r4,#0x00
   0BD5 80 02              4202 	sjmp	00137$
   0BD7                    4203 00136$:
   0BD7 7C 01              4204 	mov	r4,#0x01
   0BD9                    4205 00137$:
   0BD9 EC                 4206 	mov	a,r4
   0BDA 70 03              4207 	jnz	00130$
   0BDC FC                 4208 	mov	r4,a
   0BDD 80 02              4209 	sjmp	00131$
   0BDF                    4210 00130$:
   0BDF 7C 01              4211 	mov	r4,#0x01
   0BE1                    4212 00131$:
   0BE1 90s00r01           4213 	mov	dptr,#(_tx + 0x0001)
   0BE4 EC                 4214 	mov	a,r4
   0BE5 F0                 4215 	movx	@dptr,a
                           4216 ;	../../shared/src/tx_train.c:549: tx.become_worse = (tag_TX_STOP_IF_WORSE && train.f0t < (opt.f0t - tag_TX_STOP_THRES));
   0BE6 90s00r1E           4217 	mov	dptr,#(_train + 0x001e)
   0BE9 E0                 4218 	movx	a,@dptr
   0BEA FC                 4219 	mov	r4,a
   0BEB 90s00r1E           4220 	mov	dptr,#(_opt + 0x001e)
   0BEE E0                 4221 	movx	a,@dptr
   0BEF 7F 00              4222 	mov	r7,#0x00
   0BF1 24 F6              4223 	add	a,#0xf6
   0BF3 FA                 4224 	mov	r2,a
   0BF4 EF                 4225 	mov	a,r7
   0BF5 34 FF              4226 	addc	a,#0xff
   0BF7 FB                 4227 	mov	r3,a
   0BF8 7E 00              4228 	mov	r6,#0x00
   0BFA C3                 4229 	clr	c
   0BFB EC                 4230 	mov	a,r4
   0BFC 9A                 4231 	subb	a,r2
   0BFD EE                 4232 	mov	a,r6
   0BFE 64 80              4233 	xrl	a,#0x80
   0C00 8B F0              4234 	mov	b,r3
   0C02 63 F0 80           4235 	xrl	b,#0x80
   0C05 95 F0              4236 	subb	a,b
   0C07 40 04              4237 	jc	00139$
   0C09 7C 00              4238 	mov	r4,#0x00
   0C0B 80 02              4239 	sjmp	00140$
   0C0D                    4240 00139$:
   0C0D 7C 01              4241 	mov	r4,#0x01
   0C0F                    4242 00140$:
   0C0F 90s00r09           4243 	mov	dptr,#(_tx + 0x0009)
   0C12 EC                 4244 	mov	a,r4
   0C13 F0                 4245 	movx	@dptr,a
   0C14 02s0CrF1           4246 	ljmp	00124$
   0C17                    4247 00108$:
                           4248 ;	../../shared/src/tx_train.c:551: else if (train.level == 3) // level 3
   0C17 BD 03 02           4249 	cjne	r5,#0x03,00216$
   0C1A 80 03              4250 	sjmp	00217$
   0C1C                    4251 00216$:
   0C1C 02s0CrAD           4252 	ljmp	00105$
   0C1F                    4253 00217$:
                           4254 ;	../../shared/src/tx_train.c:553: tx.ffe_updated = (
                           4255 ;	../../shared/src/tx_train.c:554: (train.f0a_saturate==0 && opt.f0a_saturate && train.dfe_saturate == opt.dfe_saturate) 
   0C1F 90s00r26           4256 	mov	dptr,#(_train + 0x0026)
   0C22 E0                 4257 	movx	a,@dptr
   0C23 FC                 4258 	mov	r4,a
   0C24 70 06              4259 	jnz	00150$
   0C26 90s00r26           4260 	mov	dptr,#(_opt + 0x0026)
   0C29 E0                 4261 	movx	a,@dptr
   0C2A 70 04              4262 	jnz	00151$
   0C2C                    4263 00150$:
   0C2C 7E 00              4264 	mov	r6,#0x00
   0C2E 80 02              4265 	sjmp	00152$
   0C30                    4266 00151$:
   0C30 7E 01              4267 	mov	r6,#0x01
   0C32                    4268 00152$:
   0C32 EE                 4269 	mov	a,r6
   0C33 60 10              4270 	jz	00147$
   0C35 90s00r27           4271 	mov	dptr,#(_train + 0x0027)
   0C38 E0                 4272 	movx	a,@dptr
   0C39 FE                 4273 	mov	r6,a
   0C3A 90s00r27           4274 	mov	dptr,#(_opt + 0x0027)
   0C3D E0                 4275 	movx	a,@dptr
   0C3E FF                 4276 	mov	r7,a
   0C3F EE                 4277 	mov	a,r6
   0C40 B5 07 02           4278 	cjne	a,ar7,00222$
   0C43 80 04              4279 	sjmp	00148$
   0C45                    4280 00222$:
   0C45                    4281 00147$:
   0C45 7E 00              4282 	mov	r6,#0x00
   0C47 80 02              4283 	sjmp	00149$
   0C49                    4284 00148$:
   0C49 7E 01              4285 	mov	r6,#0x01
   0C4B                    4286 00149$:
   0C4B EE                 4287 	mov	a,r6
   0C4C 70 2B              4288 	jnz	00145$
                           4289 ;	../../shared/src/tx_train.c:555: || (train.f0a_saturate == opt.f0a_saturate && train.dfe_saturate==0 && opt.dfe_saturate)
   0C4E 90s00r26           4290 	mov	dptr,#(_opt + 0x0026)
   0C51 E0                 4291 	movx	a,@dptr
   0C52 FE                 4292 	mov	r6,a
   0C53 EC                 4293 	mov	a,r4
   0C54 B5 06 07           4294 	cjne	a,ar6,00156$
   0C57 90s00r27           4295 	mov	dptr,#(_train + 0x0027)
   0C5A E0                 4296 	movx	a,@dptr
   0C5B FE                 4297 	mov	r6,a
   0C5C 60 04              4298 	jz	00157$
   0C5E                    4299 00156$:
   0C5E 7E 00              4300 	mov	r6,#0x00
   0C60 80 02              4301 	sjmp	00158$
   0C62                    4302 00157$:
   0C62 7E 01              4303 	mov	r6,#0x01
   0C64                    4304 00158$:
   0C64 EE                 4305 	mov	a,r6
   0C65 60 06              4306 	jz	00153$
   0C67 90s00r27           4307 	mov	dptr,#(_opt + 0x0027)
   0C6A E0                 4308 	movx	a,@dptr
   0C6B 70 04              4309 	jnz	00154$
   0C6D                    4310 00153$:
   0C6D 7E 00              4311 	mov	r6,#0x00
   0C6F 80 02              4312 	sjmp	00155$
   0C71                    4313 00154$:
   0C71 7E 01              4314 	mov	r6,#0x01
   0C73                    4315 00155$:
   0C73 EE                 4316 	mov	a,r6
   0C74 70 03              4317 	jnz	00145$
   0C76 FE                 4318 	mov	r6,a
   0C77 80 02              4319 	sjmp	00146$
   0C79                    4320 00145$:
   0C79 7E 01              4321 	mov	r6,#0x01
   0C7B                    4322 00146$:
   0C7B EE                 4323 	mov	a,r6
   0C7C 70 21              4324 	jnz	00142$
                           4325 ;	../../shared/src/tx_train.c:556: || (train.f0a_saturate && opt.f0a_saturate && ARG));
   0C7E EC                 4326 	mov	a,r4
   0C7F 60 06              4327 	jz	00162$
   0C81 90s00r26           4328 	mov	dptr,#(_opt + 0x0026)
   0C84 E0                 4329 	movx	a,@dptr
   0C85 70 04              4330 	jnz	00163$
   0C87                    4331 00162$:
   0C87 7C 00              4332 	mov	r4,#0x00
   0C89 80 02              4333 	sjmp	00164$
   0C8B                    4334 00163$:
   0C8B 7C 01              4335 	mov	r4,#0x01
   0C8D                    4336 00164$:
   0C8D EC                 4337 	mov	a,r4
   0C8E 60 03              4338 	jz	00159$
   0C90 EA                 4339 	mov	a,r2
   0C91 70 04              4340 	jnz	00160$
   0C93                    4341 00159$:
   0C93 7A 00              4342 	mov	r2,#0x00
   0C95 80 02              4343 	sjmp	00161$
   0C97                    4344 00160$:
   0C97 7A 01              4345 	mov	r2,#0x01
   0C99                    4346 00161$:
   0C99 EA                 4347 	mov	a,r2
   0C9A 70 03              4348 	jnz	00142$
   0C9C FA                 4349 	mov	r2,a
   0C9D 80 02              4350 	sjmp	00143$
   0C9F                    4351 00142$:
   0C9F 7A 01              4352 	mov	r2,#0x01
   0CA1                    4353 00143$:
   0CA1 90s00r01           4354 	mov	dptr,#(_tx + 0x0001)
   0CA4 EA                 4355 	mov	a,r2
   0CA5 F0                 4356 	movx	@dptr,a
                           4357 ;	../../shared/src/tx_train.c:557: tx.become_worse = 0;
   0CA6 90s00r09           4358 	mov	dptr,#(_tx + 0x0009)
   0CA9 E4                 4359 	clr	a
   0CAA F0                 4360 	movx	@dptr,a
   0CAB 80 44              4361 	sjmp	00124$
   0CAD                    4362 00105$:
                           4363 ;	../../shared/src/tx_train.c:559: else if (train.level == 0) // for level 0
   0CAD ED                 4364 	mov	a,r5
   0CAE 70 1C              4365 	jnz	00102$
                           4366 ;	../../shared/src/tx_train.c:561: tx.ffe_updated = (train_g0_index < opt_g0_index)==0; //g0 only
   0CB0 90 60 32           4367 	mov	dptr,#_train_g0_index
   0CB3 E0                 4368 	movx	a,@dptr
   0CB4 FA                 4369 	mov	r2,a
   0CB5 B5 03 00           4370 	cjne	a,ar3,00237$
   0CB8                    4371 00237$:
   0CB8 E4                 4372 	clr	a
   0CB9 33                 4373 	rlc	a
   0CBA FB                 4374 	mov	r3,a
   0CBB E4                 4375 	clr	a
   0CBC BB 00 01           4376 	cjne	r3,#0x00,00238$
   0CBF 04                 4377 	inc	a
   0CC0                    4378 00238$:
   0CC0 FB                 4379 	mov	r3,a
   0CC1 90s00r01           4380 	mov	dptr,#(_tx + 0x0001)
   0CC4 F0                 4381 	movx	@dptr,a
                           4382 ;	../../shared/src/tx_train.c:562: tx.become_worse = 0;
   0CC5 90s00r09           4383 	mov	dptr,#(_tx + 0x0009)
   0CC8 E4                 4384 	clr	a
   0CC9 F0                 4385 	movx	@dptr,a
   0CCA 80 25              4386 	sjmp	00124$
   0CCC                    4387 00102$:
                           4388 ;	../../shared/src/tx_train.c:566: tx.ffe_updated = 0;
   0CCC 90s00r01           4389 	mov	dptr,#(_tx + 0x0001)
                           4390 ;	../../shared/src/tx_train.c:567: tx.become_worse = 0; // g1/n1: tag_TX_STOP_IF_WORSE
   0CCF E4                 4391 	clr	a
   0CD0 F0                 4392 	movx	@dptr,a
   0CD1 90s00r09           4393 	mov	dptr,#(_tx + 0x0009)
   0CD4 F0                 4394 	movx	@dptr,a
   0CD5 80 1A              4395 	sjmp	00124$
   0CD7                    4396 00120$:
                           4397 ;	../../shared/src/tx_train.c:572: tx.ffe_updated = 0;
   0CD7 90s00r01           4398 	mov	dptr,#(_tx + 0x0001)
   0CDA E4                 4399 	clr	a
   0CDB F0                 4400 	movx	@dptr,a
                           4401 ;	../../shared/src/tx_train.c:573: tx.become_worse = (tag_TX_STOP_IF_WORSE && opt.f0a < tag_TX_F0A_HIGH_THRES);
   0CDC 90s00r19           4402 	mov	dptr,#(_opt + 0x0019)
   0CDF E0                 4403 	movx	a,@dptr
   0CE0 FA                 4404 	mov	r2,a
   0CE1 BA 32 00           4405 	cjne	r2,#0x32,00240$
   0CE4                    4406 00240$:
   0CE4 40 04              4407 	jc	00166$
   0CE6 7A 00              4408 	mov	r2,#0x00
   0CE8 80 02              4409 	sjmp	00167$
   0CEA                    4410 00166$:
   0CEA 7A 01              4411 	mov	r2,#0x01
   0CEC                    4412 00167$:
   0CEC 90s00r09           4413 	mov	dptr,#(_tx + 0x0009)
   0CEF EA                 4414 	mov	a,r2
   0CF0 F0                 4415 	movx	@dptr,a
   0CF1                    4416 00124$:
                           4417 ;	../../shared/src/tx_train.c:576: if (tx.ffe_updated)
   0CF1 90s00r01           4418 	mov	dptr,#(_tx + 0x0001)
   0CF4 E0                 4419 	movx	a,@dptr
   0CF5 60 03              4420 	jz	00127$
                           4421 ;	../../shared/src/tx_train.c:578: update_opt_trx_ffe(); // update the memory of Opt
   0CF7 02s00r00           4422 	ljmp	_update_opt_trx_ffe
   0CFA                    4423 00127$:
   0CFA 22                 4424 	ret
                           4425 ;------------------------------------------------------------
                           4426 ;Allocation info for local variables in function 'compare_g1n1'
                           4427 ;------------------------------------------------------------
                           4428 ;X                         Allocated to registers r2 
                           4429 ;UTH                       Allocated to stack - offset 1
                           4430 ;OBEN                      Allocated to stack - offset 2
                           4431 ;OBTH                      Allocated to stack - offset 3
                           4432 ;OBUTH                     Allocated to registers r5 
                           4433 ;Train_Index_is_big        Allocated to stack - offset 4
                           4434 ;sloc0                     Allocated to stack - offset 5
                           4435 ;------------------------------------------------------------
                           4436 ;	../../shared/src/tx_train.c:604: void compare_g1n1(uint8_t X)
                           4437 ;	-----------------------------------------
                           4438 ;	 function compare_g1n1
                           4439 ;	-----------------------------------------
   0CFB                    4440 _compare_g1n1:
   0CFB C0*00              4441 	push	_bp
   0CFD E5 81              4442 	mov	a,sp
   0CFF F5*00              4443 	mov	_bp,a
   0D01 24 06              4444 	add	a,#0x06
   0D03 F5 81              4445 	mov	sp,a
                           4446 ;	../../shared/src/tx_train.c:611: if(X){ // G1
   0D05 E5 82              4447 	mov	a,dpl
   0D07 FA                 4448 	mov	r2,a
   0D08 60 32              4449 	jz	00102$
                           4450 ;	../../shared/src/tx_train.c:612: UTH = tag_TX_F0T_G1UPDATE_THRES;
   0D0A A8*00              4451 	mov	r0,_bp
   0D0C 08                 4452 	inc	r0
   0D0D 76 00              4453 	mov	@r0,#0x00
                           4454 ;	../../shared/src/tx_train.c:613: OBEN = tag_TX_G1_OVERBOOST_EN;
   0D0F A8*00              4455 	mov	r0,_bp
   0D11 08                 4456 	inc	r0
   0D12 08                 4457 	inc	r0
   0D13 76 01              4458 	mov	@r0,#0x01
                           4459 ;	../../shared/src/tx_train.c:614: OBTH = tag_TX_G1_OVERBOOST_THRES;
   0D15 E5*00              4460 	mov	a,_bp
   0D17 24 03              4461 	add	a,#0x03
   0D19 F8                 4462 	mov	r0,a
   0D1A 76 03              4463 	mov	@r0,#0x03
                           4464 ;	../../shared/src/tx_train.c:615: OBUTH = tag_TX_G1_OVERBOOST_UPDATE_THRES;
   0D1C 7D 04              4465 	mov	r5,#0x04
                           4466 ;	../../shared/src/tx_train.c:616: Train_Index_is_big = (train_g1_index > opt_g1_index) ? 1:0;
   0D1E 90 60 31           4467 	mov	dptr,#_train_g1_index
   0D21 E0                 4468 	movx	a,@dptr
   0D22 FE                 4469 	mov	r6,a
   0D23 90s00r00           4470 	mov	dptr,#_opt_g1_index
   0D26 E0                 4471 	movx	a,@dptr
   0D27 FF                 4472 	mov	r7,a
   0D28 B5 06 00           4473 	cjne	a,ar6,00251$
   0D2B                    4474 00251$:
   0D2B 50 04              4475 	jnc	00122$
   0D2D 7E 01              4476 	mov	r6,#0x01
   0D2F 80 02              4477 	sjmp	00123$
   0D31                    4478 00122$:
   0D31 7E 00              4479 	mov	r6,#0x00
   0D33                    4480 00123$:
   0D33 E5*00              4481 	mov	a,_bp
   0D35 24 04              4482 	add	a,#0x04
   0D37 F8                 4483 	mov	r0,a
   0D38 A6 06              4484 	mov	@r0,ar6
   0D3A 80 30              4485 	sjmp	00103$
   0D3C                    4486 00102$:
                           4487 ;	../../shared/src/tx_train.c:618: UTH = tag_TX_F0T_GN1UPDATE_THRES;
   0D3C A8*00              4488 	mov	r0,_bp
   0D3E 08                 4489 	inc	r0
   0D3F 76 00              4490 	mov	@r0,#0x00
                           4491 ;	../../shared/src/tx_train.c:619: OBEN = tag_TX_GN1_OVERBOOST_EN;
   0D41 A8*00              4492 	mov	r0,_bp
   0D43 08                 4493 	inc	r0
   0D44 08                 4494 	inc	r0
   0D45 76 01              4495 	mov	@r0,#0x01
                           4496 ;	../../shared/src/tx_train.c:620: OBTH = tag_TX_GN1_OVERBOOST_THRES;
   0D47 E5*00              4497 	mov	a,_bp
   0D49 24 03              4498 	add	a,#0x03
   0D4B F8                 4499 	mov	r0,a
   0D4C 76 03              4500 	mov	@r0,#0x03
                           4501 ;	../../shared/src/tx_train.c:621: OBUTH = tag_TX_GN1_OVERBOOST_UPDATE_THRES;
   0D4E 7D 04              4502 	mov	r5,#0x04
                           4503 ;	../../shared/src/tx_train.c:622: Train_Index_is_big = (train_gn1_index > opt_gn1_index) ? 1:0;
   0D50 90 60 30           4504 	mov	dptr,#_train_gn1_index
   0D53 E0                 4505 	movx	a,@dptr
   0D54 FF                 4506 	mov	r7,a
   0D55 90s00r00           4507 	mov	dptr,#_opt_gn1_index
   0D58 E0                 4508 	movx	a,@dptr
   0D59 FA                 4509 	mov	r2,a
   0D5A B5 07 00           4510 	cjne	a,ar7,00253$
   0D5D                    4511 00253$:
   0D5D 50 04              4512 	jnc	00124$
   0D5F 7A 01              4513 	mov	r2,#0x01
   0D61 80 02              4514 	sjmp	00125$
   0D63                    4515 00124$:
   0D63 7A 00              4516 	mov	r2,#0x00
   0D65                    4517 00125$:
   0D65 E5*00              4518 	mov	a,_bp
   0D67 24 04              4519 	add	a,#0x04
   0D69 F8                 4520 	mov	r0,a
   0D6A A6 02              4521 	mov	@r0,ar2
   0D6C                    4522 00103$:
                           4523 ;	../../shared/src/tx_train.c:625: if (opt.level < train.level)
   0D6C 90s00r23           4524 	mov	dptr,#(_opt + 0x0023)
   0D6F E0                 4525 	movx	a,@dptr
   0D70 FA                 4526 	mov	r2,a
   0D71 90s00r23           4527 	mov	dptr,#(_train + 0x0023)
   0D74 E0                 4528 	movx	a,@dptr
   0D75 FF                 4529 	mov	r7,a
   0D76 EA                 4530 	mov	a,r2
   0D77 B5 07 00           4531 	cjne	a,ar7,00255$
   0D7A                    4532 00255$:
   0D7A 50 0E              4533 	jnc	00116$
                           4534 ;	../../shared/src/tx_train.c:627: tx.ffe_updated = 1;
   0D7C 90s00r01           4535 	mov	dptr,#(_tx + 0x0001)
   0D7F 74 01              4536 	mov	a,#0x01
   0D81 F0                 4537 	movx	@dptr,a
                           4538 ;	../../shared/src/tx_train.c:628: tx.become_worse = 0;
   0D82 90s00r09           4539 	mov	dptr,#(_tx + 0x0009)
   0D85 E4                 4540 	clr	a
   0D86 F0                 4541 	movx	@dptr,a
   0D87 02s10r95           4542 	ljmp	00117$
   0D8A                    4543 00116$:
                           4544 ;	../../shared/src/tx_train.c:630: else if (opt.level == train.level) // intra-level compare
   0D8A EA                 4545 	mov	a,r2
   0D8B B5 07 02           4546 	cjne	a,ar7,00257$
   0D8E 80 03              4547 	sjmp	00258$
   0D90                    4548 00257$:
   0D90 02s10r8A           4549 	ljmp	00113$
   0D93                    4550 00258$:
                           4551 ;	../../shared/src/tx_train.c:632: tx.train_overboost = OBEN && ((train.f0 < 63 && train.fn1 < OBTH) || (train.f0 >= 63 && train.f0a >= 63));
   0D93 A8*00              4552 	mov	r0,_bp
   0D95 08                 4553 	inc	r0
   0D96 08                 4554 	inc	r0
   0D97 E6                 4555 	mov	a,@r0
   0D98 60 63              4556 	jz	00126$
   0D9A 90s00r1A           4557 	mov	dptr,#(_train + 0x001a)
   0D9D E0                 4558 	movx	a,@dptr
   0D9E FA                 4559 	mov	r2,a
   0D9F BA 3F 00           4560 	cjne	r2,#0x3F,00260$
   0DA2                    4561 00260$:
   0DA2 E4                 4562 	clr	a
   0DA3 33                 4563 	rlc	a
   0DA4 FA                 4564 	mov	r2,a
   0DA5 60 25              4565 	jz	00132$
   0DA7 C0 02              4566 	push	ar2
   0DA9 90s00r1D           4567 	mov	dptr,#(_train + 0x001d)
   0DAC E0                 4568 	movx	a,@dptr
   0DAD FA                 4569 	mov	r2,a
   0DAE 33                 4570 	rlc	a
   0DAF 95 E0              4571 	subb	a,acc
   0DB1 FE                 4572 	mov	r6,a
   0DB2 E5*00              4573 	mov	a,_bp
   0DB4 24 03              4574 	add	a,#0x03
   0DB6 F8                 4575 	mov	r0,a
   0DB7 86 04              4576 	mov	ar4,@r0
   0DB9 7B 00              4577 	mov	r3,#0x00
   0DBB C3                 4578 	clr	c
   0DBC EA                 4579 	mov	a,r2
   0DBD 9C                 4580 	subb	a,r4
   0DBE EE                 4581 	mov	a,r6
   0DBF 64 80              4582 	xrl	a,#0x80
   0DC1 8B F0              4583 	mov	b,r3
   0DC3 63 F0 80           4584 	xrl	b,#0x80
   0DC6 95 F0              4585 	subb	a,b
   0DC8 D0 02              4586 	pop	ar2
   0DCA 40 04              4587 	jc	00133$
   0DCC                    4588 00132$:
   0DCC 7B 00              4589 	mov	r3,#0x00
   0DCE 80 02              4590 	sjmp	00134$
   0DD0                    4591 00133$:
   0DD0 7B 01              4592 	mov	r3,#0x01
   0DD2                    4593 00134$:
   0DD2 EB                 4594 	mov	a,r3
   0DD3 70 23              4595 	jnz	00130$
   0DD5 EA                 4596 	mov	a,r2
   0DD6 B4 01 00           4597 	cjne	a,#0x01,00264$
   0DD9                    4598 00264$:
   0DD9 E4                 4599 	clr	a
   0DDA 33                 4600 	rlc	a
   0DDB FA                 4601 	mov	r2,a
   0DDC 60 0E              4602 	jz	00135$
   0DDE 90s00r19           4603 	mov	dptr,#(_train + 0x0019)
   0DE1 E0                 4604 	movx	a,@dptr
   0DE2 FA                 4605 	mov	r2,a
   0DE3 BA 3F 00           4606 	cjne	r2,#0x3F,00266$
   0DE6                    4607 00266$:
   0DE6 B3                 4608 	cpl	c
   0DE7 E4                 4609 	clr	a
   0DE8 33                 4610 	rlc	a
   0DE9 FA                 4611 	mov	r2,a
   0DEA 70 04              4612 	jnz	00136$
   0DEC                    4613 00135$:
   0DEC 7A 00              4614 	mov	r2,#0x00
   0DEE 80 02              4615 	sjmp	00137$
   0DF0                    4616 00136$:
   0DF0 7A 01              4617 	mov	r2,#0x01
   0DF2                    4618 00137$:
   0DF2 EA                 4619 	mov	a,r2
   0DF3 70 03              4620 	jnz	00130$
   0DF5 FA                 4621 	mov	r2,a
   0DF6 80 02              4622 	sjmp	00131$
   0DF8                    4623 00130$:
   0DF8 7A 01              4624 	mov	r2,#0x01
   0DFA                    4625 00131$:
   0DFA EA                 4626 	mov	a,r2
   0DFB 70 04              4627 	jnz	00127$
   0DFD                    4628 00126$:
   0DFD 7A 00              4629 	mov	r2,#0x00
   0DFF 80 02              4630 	sjmp	00128$
   0E01                    4631 00127$:
   0E01 7A 01              4632 	mov	r2,#0x01
   0E03                    4633 00128$:
   0E03 90s00r0C           4634 	mov	dptr,#(_tx + 0x000c)
   0E06 EA                 4635 	mov	a,r2
   0E07 F0                 4636 	movx	@dptr,a
                           4637 ;	../../shared/src/tx_train.c:633: tx.opt_overboost = OBEN && ((opt.f0 < 63 && opt.fn1 < OBTH) || (opt.f0 >= 63 && opt.f0a >= 63));
   0E08 A8*00              4638 	mov	r0,_bp
   0E0A 08                 4639 	inc	r0
   0E0B 08                 4640 	inc	r0
   0E0C E6                 4641 	mov	a,@r0
   0E0D 60 63              4642 	jz	00138$
   0E0F 90s00r1A           4643 	mov	dptr,#(_opt + 0x001a)
   0E12 E0                 4644 	movx	a,@dptr
   0E13 FA                 4645 	mov	r2,a
   0E14 BA 3F 00           4646 	cjne	r2,#0x3F,00272$
   0E17                    4647 00272$:
   0E17 E4                 4648 	clr	a
   0E18 33                 4649 	rlc	a
   0E19 FA                 4650 	mov	r2,a
   0E1A 60 25              4651 	jz	00144$
   0E1C C0 02              4652 	push	ar2
   0E1E 90s00r1D           4653 	mov	dptr,#(_opt + 0x001d)
   0E21 E0                 4654 	movx	a,@dptr
   0E22 FB                 4655 	mov	r3,a
   0E23 33                 4656 	rlc	a
   0E24 95 E0              4657 	subb	a,acc
   0E26 FC                 4658 	mov	r4,a
   0E27 E5*00              4659 	mov	a,_bp
   0E29 24 03              4660 	add	a,#0x03
   0E2B F8                 4661 	mov	r0,a
   0E2C 86 06              4662 	mov	ar6,@r0
   0E2E 7A 00              4663 	mov	r2,#0x00
   0E30 C3                 4664 	clr	c
   0E31 EB                 4665 	mov	a,r3
   0E32 9E                 4666 	subb	a,r6
   0E33 EC                 4667 	mov	a,r4
   0E34 64 80              4668 	xrl	a,#0x80
   0E36 8A F0              4669 	mov	b,r2
   0E38 63 F0 80           4670 	xrl	b,#0x80
   0E3B 95 F0              4671 	subb	a,b
   0E3D D0 02              4672 	pop	ar2
   0E3F 40 04              4673 	jc	00145$
   0E41                    4674 00144$:
   0E41 7B 00              4675 	mov	r3,#0x00
   0E43 80 02              4676 	sjmp	00146$
   0E45                    4677 00145$:
   0E45 7B 01              4678 	mov	r3,#0x01
   0E47                    4679 00146$:
   0E47 EB                 4680 	mov	a,r3
   0E48 70 23              4681 	jnz	00142$
   0E4A EA                 4682 	mov	a,r2
   0E4B B4 01 00           4683 	cjne	a,#0x01,00276$
   0E4E                    4684 00276$:
   0E4E E4                 4685 	clr	a
   0E4F 33                 4686 	rlc	a
   0E50 FA                 4687 	mov	r2,a
   0E51 60 0E              4688 	jz	00147$
   0E53 90s00r19           4689 	mov	dptr,#(_opt + 0x0019)
   0E56 E0                 4690 	movx	a,@dptr
   0E57 FA                 4691 	mov	r2,a
   0E58 BA 3F 00           4692 	cjne	r2,#0x3F,00278$
   0E5B                    4693 00278$:
   0E5B B3                 4694 	cpl	c
   0E5C E4                 4695 	clr	a
   0E5D 33                 4696 	rlc	a
   0E5E FA                 4697 	mov	r2,a
   0E5F 70 04              4698 	jnz	00148$
   0E61                    4699 00147$:
   0E61 7A 00              4700 	mov	r2,#0x00
   0E63 80 02              4701 	sjmp	00149$
   0E65                    4702 00148$:
   0E65 7A 01              4703 	mov	r2,#0x01
   0E67                    4704 00149$:
   0E67 EA                 4705 	mov	a,r2
   0E68 70 03              4706 	jnz	00142$
   0E6A FA                 4707 	mov	r2,a
   0E6B 80 02              4708 	sjmp	00143$
   0E6D                    4709 00142$:
   0E6D 7A 01              4710 	mov	r2,#0x01
   0E6F                    4711 00143$:
   0E6F EA                 4712 	mov	a,r2
   0E70 70 04              4713 	jnz	00139$
   0E72                    4714 00138$:
   0E72 7A 00              4715 	mov	r2,#0x00
   0E74 80 02              4716 	sjmp	00140$
   0E76                    4717 00139$:
   0E76 7A 01              4718 	mov	r2,#0x01
   0E78                    4719 00140$:
   0E78 90s00r0D           4720 	mov	dptr,#(_tx + 0x000d)
   0E7B EA                 4721 	mov	a,r2
   0E7C F0                 4722 	movx	@dptr,a
                           4723 ;	../../shared/src/tx_train.c:635: if (train.level == 1 || train.level == 2 || train.level == 4) // level 1/2/4
   0E7D BF 01 02           4724 	cjne	r7,#0x01,00283$
   0E80 80 0D              4725 	sjmp	00107$
   0E82                    4726 00283$:
   0E82 BF 02 02           4727 	cjne	r7,#0x02,00284$
   0E85 80 08              4728 	sjmp	00107$
   0E87                    4729 00284$:
   0E87 BF 04 02           4730 	cjne	r7,#0x04,00285$
   0E8A 80 03              4731 	sjmp	00286$
   0E8C                    4732 00285$:
   0E8C 02s0FrB3           4733 	ljmp	00108$
   0E8F                    4734 00286$:
   0E8F                    4735 00107$:
                           4736 ;	../../shared/src/tx_train.c:637: tx.ffe_updated = (train.f0t > (opt.f0t + UTH))
   0E8F C0 05              4737 	push	ar5
   0E91 90s00r1E           4738 	mov	dptr,#(_train + 0x001e)
   0E94 E0                 4739 	movx	a,@dptr
   0E95 FA                 4740 	mov	r2,a
   0E96 90s00r1E           4741 	mov	dptr,#(_opt + 0x001e)
   0E99 E0                 4742 	movx	a,@dptr
   0E9A FB                 4743 	mov	r3,a
   0E9B 7C 00              4744 	mov	r4,#0x00
   0E9D A8*00              4745 	mov	r0,_bp
   0E9F 08                 4746 	inc	r0
   0EA0 86 06              4747 	mov	ar6,@r0
   0EA2 7D 00              4748 	mov	r5,#0x00
   0EA4 EE                 4749 	mov	a,r6
   0EA5 2B                 4750 	add	a,r3
   0EA6 FE                 4751 	mov	r6,a
   0EA7 ED                 4752 	mov	a,r5
   0EA8 3C                 4753 	addc	a,r4
   0EA9 FD                 4754 	mov	r5,a
   0EAA E5*00              4755 	mov	a,_bp
   0EAC 24 05              4756 	add	a,#0x05
   0EAE F8                 4757 	mov	r0,a
   0EAF A6 02              4758 	mov	@r0,ar2
   0EB1 08                 4759 	inc	r0
   0EB2 76 00              4760 	mov	@r0,#0x00
   0EB4 E5*00              4761 	mov	a,_bp
   0EB6 24 05              4762 	add	a,#0x05
   0EB8 F8                 4763 	mov	r0,a
   0EB9 C3                 4764 	clr	c
   0EBA EE                 4765 	mov	a,r6
   0EBB 96                 4766 	subb	a,@r0
   0EBC ED                 4767 	mov	a,r5
   0EBD 64 80              4768 	xrl	a,#0x80
   0EBF 08                 4769 	inc	r0
   0EC0 86 F0              4770 	mov	b,@r0
   0EC2 63 F0 80           4771 	xrl	b,#0x80
   0EC5 95 F0              4772 	subb	a,b
   0EC7 D0 05              4773 	pop	ar5
   0EC9 40 42              4774 	jc	00154$
                           4775 ;	../../shared/src/tx_train.c:638: || (tx.train_overboost==0 && tx.opt_overboost && train.f0t > (opt.f0t - OBUTH))
   0ECB 90s00r0C           4776 	mov	dptr,#(_tx + 0x000c)
   0ECE E0                 4777 	movx	a,@dptr
   0ECF FA                 4778 	mov	r2,a
   0ED0 70 06              4779 	jnz	00159$
   0ED2 90s00r0D           4780 	mov	dptr,#(_tx + 0x000d)
   0ED5 E0                 4781 	movx	a,@dptr
   0ED6 70 04              4782 	jnz	00160$
   0ED8                    4783 00159$:
   0ED8 7A 00              4784 	mov	r2,#0x00
   0EDA 80 02              4785 	sjmp	00161$
   0EDC                    4786 00160$:
   0EDC 7A 01              4787 	mov	r2,#0x01
   0EDE                    4788 00161$:
   0EDE EA                 4789 	mov	a,r2
   0EDF 60 20              4790 	jz	00156$
   0EE1 8D 02              4791 	mov	ar2,r5
   0EE3 7E 00              4792 	mov	r6,#0x00
   0EE5 EB                 4793 	mov	a,r3
   0EE6 C3                 4794 	clr	c
   0EE7 9A                 4795 	subb	a,r2
   0EE8 FA                 4796 	mov	r2,a
   0EE9 EC                 4797 	mov	a,r4
   0EEA 9E                 4798 	subb	a,r6
   0EEB FE                 4799 	mov	r6,a
   0EEC E5*00              4800 	mov	a,_bp
   0EEE 24 05              4801 	add	a,#0x05
   0EF0 F8                 4802 	mov	r0,a
   0EF1 C3                 4803 	clr	c
   0EF2 EA                 4804 	mov	a,r2
   0EF3 96                 4805 	subb	a,@r0
   0EF4 EE                 4806 	mov	a,r6
   0EF5 64 80              4807 	xrl	a,#0x80
   0EF7 08                 4808 	inc	r0
   0EF8 86 F0              4809 	mov	b,@r0
   0EFA 63 F0 80           4810 	xrl	b,#0x80
   0EFD 95 F0              4811 	subb	a,b
   0EFF 40 04              4812 	jc	00157$
   0F01                    4813 00156$:
   0F01 7A 00              4814 	mov	r2,#0x00
   0F03 80 02              4815 	sjmp	00158$
   0F05                    4816 00157$:
   0F05 7A 01              4817 	mov	r2,#0x01
   0F07                    4818 00158$:
   0F07 EA                 4819 	mov	a,r2
   0F08 70 03              4820 	jnz	00154$
   0F0A FA                 4821 	mov	r2,a
   0F0B 80 02              4822 	sjmp	00155$
   0F0D                    4823 00154$:
   0F0D 7A 01              4824 	mov	r2,#0x01
   0F0F                    4825 00155$:
   0F0F EA                 4826 	mov	a,r2
   0F10 70 52              4827 	jnz	00151$
                           4828 ;	../../shared/src/tx_train.c:639: || (tx.train_overboost && tx.opt_overboost && Train_Index_is_big && train.f0t > (opt.f0t - OBUTH));
   0F12 90s00r0C           4829 	mov	dptr,#(_tx + 0x000c)
   0F15 E0                 4830 	movx	a,@dptr
   0F16 60 06              4831 	jz	00168$
   0F18 90s00r0D           4832 	mov	dptr,#(_tx + 0x000d)
   0F1B E0                 4833 	movx	a,@dptr
   0F1C 70 04              4834 	jnz	00169$
   0F1E                    4835 00168$:
   0F1E 7A 00              4836 	mov	r2,#0x00
   0F20 80 02              4837 	sjmp	00170$
   0F22                    4838 00169$:
   0F22 7A 01              4839 	mov	r2,#0x01
   0F24                    4840 00170$:
   0F24 EA                 4841 	mov	a,r2
   0F25 60 08              4842 	jz	00165$
   0F27 E5*00              4843 	mov	a,_bp
   0F29 24 04              4844 	add	a,#0x04
   0F2B F8                 4845 	mov	r0,a
   0F2C E6                 4846 	mov	a,@r0
   0F2D 70 04              4847 	jnz	00166$
   0F2F                    4848 00165$:
   0F2F 7A 00              4849 	mov	r2,#0x00
   0F31 80 02              4850 	sjmp	00167$
   0F33                    4851 00166$:
   0F33 7A 01              4852 	mov	r2,#0x01
   0F35                    4853 00167$:
   0F35 EA                 4854 	mov	a,r2
   0F36 60 20              4855 	jz	00162$
   0F38 8D 02              4856 	mov	ar2,r5
   0F3A 7E 00              4857 	mov	r6,#0x00
   0F3C EB                 4858 	mov	a,r3
   0F3D C3                 4859 	clr	c
   0F3E 9A                 4860 	subb	a,r2
   0F3F FA                 4861 	mov	r2,a
   0F40 EC                 4862 	mov	a,r4
   0F41 9E                 4863 	subb	a,r6
   0F42 FE                 4864 	mov	r6,a
   0F43 E5*00              4865 	mov	a,_bp
   0F45 24 05              4866 	add	a,#0x05
   0F47 F8                 4867 	mov	r0,a
   0F48 C3                 4868 	clr	c
   0F49 EA                 4869 	mov	a,r2
   0F4A 96                 4870 	subb	a,@r0
   0F4B EE                 4871 	mov	a,r6
   0F4C 64 80              4872 	xrl	a,#0x80
   0F4E 08                 4873 	inc	r0
   0F4F 86 F0              4874 	mov	b,@r0
   0F51 63 F0 80           4875 	xrl	b,#0x80
   0F54 95 F0              4876 	subb	a,b
   0F56 40 04              4877 	jc	00163$
   0F58                    4878 00162$:
   0F58 7A 00              4879 	mov	r2,#0x00
   0F5A 80 02              4880 	sjmp	00164$
   0F5C                    4881 00163$:
   0F5C 7A 01              4882 	mov	r2,#0x01
   0F5E                    4883 00164$:
   0F5E EA                 4884 	mov	a,r2
   0F5F 70 03              4885 	jnz	00151$
   0F61 FA                 4886 	mov	r2,a
   0F62 80 02              4887 	sjmp	00152$
   0F64                    4888 00151$:
   0F64 7A 01              4889 	mov	r2,#0x01
   0F66                    4890 00152$:
   0F66 90s00r01           4891 	mov	dptr,#(_tx + 0x0001)
   0F69 EA                 4892 	mov	a,r2
   0F6A F0                 4893 	movx	@dptr,a
                           4894 ;	../../shared/src/tx_train.c:640: tx.become_worse = tag_TX_STOP_IF_WORSE && (train.f0t < (opt.f0t - tag_TX_STOP_THRES)
   0F6B EB                 4895 	mov	a,r3
   0F6C 24 F6              4896 	add	a,#0xf6
   0F6E FB                 4897 	mov	r3,a
   0F6F EC                 4898 	mov	a,r4
   0F70 34 FF              4899 	addc	a,#0xff
   0F72 FC                 4900 	mov	r4,a
   0F73 E5*00              4901 	mov	a,_bp
   0F75 24 05              4902 	add	a,#0x05
   0F77 F8                 4903 	mov	r0,a
   0F78 C3                 4904 	clr	c
   0F79 E6                 4905 	mov	a,@r0
   0F7A 9B                 4906 	subb	a,r3
   0F7B 08                 4907 	inc	r0
   0F7C E6                 4908 	mov	a,@r0
   0F7D 64 80              4909 	xrl	a,#0x80
   0F7F 8C F0              4910 	mov	b,r4
   0F81 63 F0 80           4911 	xrl	b,#0x80
   0F84 95 F0              4912 	subb	a,b
   0F86 40 19              4913 	jc	00175$
                           4914 ;	../../shared/src/tx_train.c:641: || (tx.train_overboost && tx.opt_overboost==0));
   0F88 90s00r0C           4915 	mov	dptr,#(_tx + 0x000c)
   0F8B E0                 4916 	movx	a,@dptr
   0F8C 60 07              4917 	jz	00177$
   0F8E 90s00r0D           4918 	mov	dptr,#(_tx + 0x000d)
   0F91 E0                 4919 	movx	a,@dptr
   0F92 FA                 4920 	mov	r2,a
   0F93 60 04              4921 	jz	00178$
   0F95                    4922 00177$:
   0F95 7A 00              4923 	mov	r2,#0x00
   0F97 80 02              4924 	sjmp	00179$
   0F99                    4925 00178$:
   0F99 7A 01              4926 	mov	r2,#0x01
   0F9B                    4927 00179$:
   0F9B EA                 4928 	mov	a,r2
   0F9C 70 03              4929 	jnz	00175$
   0F9E FA                 4930 	mov	r2,a
   0F9F 80 02              4931 	sjmp	00176$
   0FA1                    4932 00175$:
   0FA1 7A 01              4933 	mov	r2,#0x01
   0FA3                    4934 00176$:
   0FA3 EA                 4935 	mov	a,r2
   0FA4 70 03              4936 	jnz	00172$
   0FA6 FA                 4937 	mov	r2,a
   0FA7 80 02              4938 	sjmp	00173$
   0FA9                    4939 00172$:
   0FA9 7A 01              4940 	mov	r2,#0x01
   0FAB                    4941 00173$:
   0FAB 90s00r09           4942 	mov	dptr,#(_tx + 0x0009)
   0FAE EA                 4943 	mov	a,r2
   0FAF F0                 4944 	movx	@dptr,a
   0FB0 02s10r95           4945 	ljmp	00117$
   0FB3                    4946 00108$:
                           4947 ;	../../shared/src/tx_train.c:643: else if (train.level == 3) // level 3
   0FB3 BF 03 02           4948 	cjne	r7,#0x03,00307$
   0FB6 80 03              4949 	sjmp	00308$
   0FB8                    4950 00307$:
   0FB8 02s10r7F           4951 	ljmp	00105$
   0FBB                    4952 00308$:
                           4953 ;	../../shared/src/tx_train.c:645: tx.ffe_updated = (train.f0a_saturate==0 && opt.f0a_saturate && train.dfe_saturate == opt.dfe_saturate) 
   0FBB 90s00r26           4954 	mov	dptr,#(_train + 0x0026)
   0FBE E0                 4955 	movx	a,@dptr
   0FBF FA                 4956 	mov	r2,a
   0FC0 70 06              4957 	jnz	00189$
   0FC2 90s00r26           4958 	mov	dptr,#(_opt + 0x0026)
   0FC5 E0                 4959 	movx	a,@dptr
   0FC6 70 04              4960 	jnz	00190$
   0FC8                    4961 00189$:
   0FC8 7B 00              4962 	mov	r3,#0x00
   0FCA 80 02              4963 	sjmp	00191$
   0FCC                    4964 00190$:
   0FCC 7B 01              4965 	mov	r3,#0x01
   0FCE                    4966 00191$:
   0FCE EB                 4967 	mov	a,r3
   0FCF 60 10              4968 	jz	00186$
   0FD1 90s00r27           4969 	mov	dptr,#(_train + 0x0027)
   0FD4 E0                 4970 	movx	a,@dptr
   0FD5 FB                 4971 	mov	r3,a
   0FD6 90s00r27           4972 	mov	dptr,#(_opt + 0x0027)
   0FD9 E0                 4973 	movx	a,@dptr
   0FDA FC                 4974 	mov	r4,a
   0FDB EB                 4975 	mov	a,r3
   0FDC B5 04 02           4976 	cjne	a,ar4,00313$
   0FDF 80 04              4977 	sjmp	00187$
   0FE1                    4978 00313$:
   0FE1                    4979 00186$:
   0FE1 7B 00              4980 	mov	r3,#0x00
   0FE3 80 02              4981 	sjmp	00188$
   0FE5                    4982 00187$:
   0FE5 7B 01              4983 	mov	r3,#0x01
   0FE7                    4984 00188$:
   0FE7 EB                 4985 	mov	a,r3
   0FE8 70 2B              4986 	jnz	00184$
                           4987 ;	../../shared/src/tx_train.c:646: || (train.f0a_saturate == opt.f0a_saturate && train.dfe_saturate==0 && opt.dfe_saturate)
   0FEA 90s00r26           4988 	mov	dptr,#(_opt + 0x0026)
   0FED E0                 4989 	movx	a,@dptr
   0FEE FB                 4990 	mov	r3,a
   0FEF EA                 4991 	mov	a,r2
   0FF0 B5 03 07           4992 	cjne	a,ar3,00195$
   0FF3 90s00r27           4993 	mov	dptr,#(_train + 0x0027)
   0FF6 E0                 4994 	movx	a,@dptr
   0FF7 FA                 4995 	mov	r2,a
   0FF8 60 04              4996 	jz	00196$
   0FFA                    4997 00195$:
   0FFA 7A 00              4998 	mov	r2,#0x00
   0FFC 80 02              4999 	sjmp	00197$
   0FFE                    5000 00196$:
   0FFE 7A 01              5001 	mov	r2,#0x01
   1000                    5002 00197$:
   1000 EA                 5003 	mov	a,r2
   1001 60 06              5004 	jz	00192$
   1003 90s00r27           5005 	mov	dptr,#(_opt + 0x0027)
   1006 E0                 5006 	movx	a,@dptr
   1007 70 04              5007 	jnz	00193$
   1009                    5008 00192$:
   1009 7A 00              5009 	mov	r2,#0x00
   100B 80 02              5010 	sjmp	00194$
   100D                    5011 00193$:
   100D 7A 01              5012 	mov	r2,#0x01
   100F                    5013 00194$:
   100F EA                 5014 	mov	a,r2
   1010 70 03              5015 	jnz	00184$
   1012 FA                 5016 	mov	r2,a
   1013 80 02              5017 	sjmp	00185$
   1015                    5018 00184$:
   1015 7A 01              5019 	mov	r2,#0x01
   1017                    5020 00185$:
   1017 EA                 5021 	mov	a,r2
   1018 70 57              5022 	jnz	00181$
                           5023 ;	../../shared/src/tx_train.c:647: || (tx.train_overboost && tx.opt_overboost && Train_Index_is_big && train.f0t > (opt.f0t - OBUTH));
   101A 90s00r0C           5024 	mov	dptr,#(_tx + 0x000c)
   101D E0                 5025 	movx	a,@dptr
   101E 60 06              5026 	jz	00204$
   1020 90s00r0D           5027 	mov	dptr,#(_tx + 0x000d)
   1023 E0                 5028 	movx	a,@dptr
   1024 70 04              5029 	jnz	00205$
   1026                    5030 00204$:
   1026 7A 00              5031 	mov	r2,#0x00
   1028 80 02              5032 	sjmp	00206$
   102A                    5033 00205$:
   102A 7A 01              5034 	mov	r2,#0x01
   102C                    5035 00206$:
   102C EA                 5036 	mov	a,r2
   102D 60 08              5037 	jz	00201$
   102F E5*00              5038 	mov	a,_bp
   1031 24 04              5039 	add	a,#0x04
   1033 F8                 5040 	mov	r0,a
   1034 E6                 5041 	mov	a,@r0
   1035 70 04              5042 	jnz	00202$
   1037                    5043 00201$:
   1037 7A 00              5044 	mov	r2,#0x00
   1039 80 02              5045 	sjmp	00203$
   103B                    5046 00202$:
   103B 7A 01              5047 	mov	r2,#0x01
   103D                    5048 00203$:
   103D EA                 5049 	mov	a,r2
   103E 60 25              5050 	jz	00198$
   1040 90s00r1E           5051 	mov	dptr,#(_train + 0x001e)
   1043 E0                 5052 	movx	a,@dptr
   1044 FA                 5053 	mov	r2,a
   1045 90s00r1E           5054 	mov	dptr,#(_opt + 0x001e)
   1048 E0                 5055 	movx	a,@dptr
   1049 FB                 5056 	mov	r3,a
   104A E4                 5057 	clr	a
   104B FC                 5058 	mov	r4,a
   104C FE                 5059 	mov	r6,a
   104D EB                 5060 	mov	a,r3
   104E C3                 5061 	clr	c
   104F 9D                 5062 	subb	a,r5
   1050 FB                 5063 	mov	r3,a
   1051 EC                 5064 	mov	a,r4
   1052 9E                 5065 	subb	a,r6
   1053 FC                 5066 	mov	r4,a
   1054 7D 00              5067 	mov	r5,#0x00
   1056 C3                 5068 	clr	c
   1057 EB                 5069 	mov	a,r3
   1058 9A                 5070 	subb	a,r2
   1059 EC                 5071 	mov	a,r4
   105A 64 80              5072 	xrl	a,#0x80
   105C 8D F0              5073 	mov	b,r5
   105E 63 F0 80           5074 	xrl	b,#0x80
   1061 95 F0              5075 	subb	a,b
   1063 40 04              5076 	jc	00199$
   1065                    5077 00198$:
   1065 7A 00              5078 	mov	r2,#0x00
   1067 80 02              5079 	sjmp	00200$
   1069                    5080 00199$:
   1069 7A 01              5081 	mov	r2,#0x01
   106B                    5082 00200$:
   106B EA                 5083 	mov	a,r2
   106C 70 03              5084 	jnz	00181$
   106E FA                 5085 	mov	r2,a
   106F 80 02              5086 	sjmp	00182$
   1071                    5087 00181$:
   1071 7A 01              5088 	mov	r2,#0x01
   1073                    5089 00182$:
   1073 90s00r01           5090 	mov	dptr,#(_tx + 0x0001)
   1076 EA                 5091 	mov	a,r2
   1077 F0                 5092 	movx	@dptr,a
                           5093 ;	../../shared/src/tx_train.c:648: tx.become_worse = 0;
   1078 90s00r09           5094 	mov	dptr,#(_tx + 0x0009)
   107B E4                 5095 	clr	a
   107C F0                 5096 	movx	@dptr,a
   107D 80 16              5097 	sjmp	00117$
   107F                    5098 00105$:
                           5099 ;	../../shared/src/tx_train.c:652: tx.ffe_updated = 0;
   107F 90s00r01           5100 	mov	dptr,#(_tx + 0x0001)
                           5101 ;	../../shared/src/tx_train.c:653: tx.become_worse = 0;
   1082 E4                 5102 	clr	a
   1083 F0                 5103 	movx	@dptr,a
   1084 90s00r09           5104 	mov	dptr,#(_tx + 0x0009)
   1087 F0                 5105 	movx	@dptr,a
   1088 80 0B              5106 	sjmp	00117$
   108A                    5107 00113$:
                           5108 ;	../../shared/src/tx_train.c:658: tx.ffe_updated = 0;
   108A 90s00r01           5109 	mov	dptr,#(_tx + 0x0001)
   108D E4                 5110 	clr	a
   108E F0                 5111 	movx	@dptr,a
                           5112 ;	../../shared/src/tx_train.c:659: tx.become_worse = tag_TX_STOP_IF_WORSE;
   108F 90s00r09           5113 	mov	dptr,#(_tx + 0x0009)
   1092 74 01              5114 	mov	a,#0x01
   1094 F0                 5115 	movx	@dptr,a
   1095                    5116 00117$:
                           5117 ;	../../shared/src/tx_train.c:662: if (tx.ffe_updated)
   1095 90s00r01           5118 	mov	dptr,#(_tx + 0x0001)
   1098 E0                 5119 	movx	a,@dptr
   1099 60 03              5120 	jz	00120$
                           5121 ;	../../shared/src/tx_train.c:664: update_opt_trx_ffe(); // update the memory of Opt
   109B 12s00r00           5122 	lcall	_update_opt_trx_ffe
   109E                    5123 00120$:
   109E 85*00 81           5124 	mov	sp,_bp
   10A1 D0*00              5125 	pop	_bp
   10A3 22                 5126 	ret
                           5127 ;------------------------------------------------------------
                           5128 ;Allocation info for local variables in function 'tx_train_dummy'
                           5129 ;------------------------------------------------------------
                           5130 ;------------------------------------------------------------
                           5131 ;	../../shared/src/tx_train.c:776: void tx_train_dummy(void) {
                           5132 ;	-----------------------------------------
                           5133 ;	 function tx_train_dummy
                           5134 ;	-----------------------------------------
   10A4                    5135 _tx_train_dummy:
                           5136 ;	../../shared/src/tx_train.c:778: PHY_STATUS = ST_TXTRAIN;
   10A4 90 22 30           5137 	mov	dptr,#_MCU_STATUS0_LANE
   10A7 74 29              5138 	mov	a,#0x29
   10A9 F0                 5139 	movx	@dptr,a
                           5140 ;	../../shared/src/tx_train.c:779: reg_MCU_DEBUG0_LANE_7_0 = 0x80;
   10AA 90 22 B4           5141 	mov	dptr,#_MCU_DEBUG0_LANE
   10AD 74 80              5142 	mov	a,#0x80
   10AF F0                 5143 	movx	@dptr,a
                           5144 ;	../../shared/src/tx_train.c:790: update_g1(-1); //shorten by customer's request
   10B0 75 82 FF           5145 	mov	dpl,#0xFF
   10B3 12s12rAA           5146 	lcall	_update_g1
                           5147 ;	../../shared/src/tx_train.c:793: opt.eye_check_pass = 1;
   10B6 90s00r15           5148 	mov	dptr,#(_opt + 0x0015)
   10B9 74 01              5149 	mov	a,#0x01
   10BB F0                 5150 	movx	@dptr,a
                           5151 ;	../../shared/src/tx_train.c:794: ctrl_trx_ffe_updated =1; 
   10BC D2*00              5152 	setb	_ctrl_trx_ffe_updated
                           5153 ;	../../shared/src/tx_train.c:795: ctrl_tx_train_done = 1;	
   10BE D2*00              5154 	setb	_ctrl_tx_train_done
   10C0 22                 5155 	ret
                           5156 ;------------------------------------------------------------
                           5157 ;Allocation info for local variables in function 'tx_reset'
                           5158 ;------------------------------------------------------------
                           5159 ;index                     Allocated to registers r2 
                           5160 ;------------------------------------------------------------
                           5161 ;	../../shared/src/tx_train.c:812: void tx_reset(uint8_t index) {
                           5162 ;	-----------------------------------------
                           5163 ;	 function tx_reset
                           5164 ;	-----------------------------------------
   10C1                    5165 _tx_reset:
   10C1 AA 82              5166 	mov	r2,dpl
                           5167 ;	../../shared/src/tx_train.c:818: if(phy_mode == 4) //ethernet
   10C3 90 A3 16           5168 	mov	dptr,#(_SYSTEM + 0x0002)
   10C6 E0                 5169 	movx	a,@dptr
   10C7 54 07              5170 	anl	a,#0x07
   10C9 FB                 5171 	mov	r3,a
   10CA BB 04 14           5172 	cjne	r3,#0x04,00102$
                           5173 ;	../../shared/src/tx_train.c:819: Send_ctrl_to_tx((index&0x03)<<12);	
   10CD 74 03              5174 	mov	a,#0x03
   10CF 5A                 5175 	anl	a,r2
   10D0 C4                 5176 	swap	a
   10D1 54 F0              5177 	anl	a,#0xf0
   10D3 F5 83              5178 	mov	dph,a
   10D5 75 82 00           5179 	mov	dpl,#0x00
   10D8 78r00              5180 	mov	r0,#_Send_ctrl_to_tx
   10DA 79s00              5181 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   10DC 7As00              5182 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   10DE 02s00r00           5183 	ljmp	__sdcc_banked_call
   10E1                    5184 00102$:
                           5185 ;	../../shared/src/tx_train.c:821: Send_ctrl_to_tx((index&0x0f)<<10);
   10E1 53 02 0F           5186 	anl	ar2,#0x0F
   10E4 EA                 5187 	mov	a,r2
   10E5 2A                 5188 	add	a,r2
   10E6 25 E0              5189 	add	a,acc
   10E8 F5 83              5190 	mov	dph,a
   10EA 75 82 00           5191 	mov	dpl,#0x00
   10ED 78r00              5192 	mov	r0,#_Send_ctrl_to_tx
   10EF 79s00              5193 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   10F1 7As00              5194 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   10F3 02s00r00           5195 	ljmp	__sdcc_banked_call
                           5196 ;------------------------------------------------------------
                           5197 ;Allocation info for local variables in function 'update_g0'
                           5198 ;------------------------------------------------------------
                           5199 ;update                    Allocated to registers r2 
                           5200 ;------------------------------------------------------------
                           5201 ;	../../shared/src/tx_train.c:839: void update_g0(int8_t update) 
                           5202 ;	-----------------------------------------
                           5203 ;	 function update_g0
                           5204 ;	-----------------------------------------
   10F6                    5205 _update_g0:
   10F6 AA 82              5206 	mov	r2,dpl
                           5207 ;	../../shared/src/tx_train.c:842: cnt = 16;
   10F8 90 22 C1           5208 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   10FB 74 10              5209 	mov	a,#0x10
   10FD F0                 5210 	movx	@dptr,a
                           5211 ;	../../shared/src/tx_train.c:847: if (update > 0 && tx.g0_is_max==0)
   10FE C3                 5212 	clr	c
   10FF 74 80              5213 	mov	a,#(0x00 ^ 0x80)
   1101 8A F0              5214 	mov	b,r2
   1103 63 F0 80           5215 	xrl	b,#0x80
   1106 95 F0              5216 	subb	a,b
   1108 50 50              5217 	jnc	00125$
   110A 90s00r03           5218 	mov	dptr,#(_tx + 0x0003)
   110D E0                 5219 	movx	a,@dptr
   110E 70 4A              5220 	jnz	00125$
                           5221 ;	../../shared/src/tx_train.c:849: while(cnt-->0){			
   1110 8A 03              5222 	mov	ar3,r2
   1112                    5223 00108$:
   1112 90 22 C1           5224 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   1115 E0                 5225 	movx	a,@dptr
   1116 FC                 5226 	mov	r4,a
   1117 14                 5227 	dec	a
   1118 FD                 5228 	mov	r5,a
   1119 90 22 C1           5229 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   111C ED                 5230 	mov	a,r5
   111D F0                 5231 	movx	@dptr,a
   111E EC                 5232 	mov	a,r4
   111F 70 01              5233 	jnz	00144$
   1121 22                 5234 	ret
   1122                    5235 00144$:
                           5236 ;	../../shared/src/tx_train.c:850: if(update > 0 &&  tx.g0_is_max==0){
   1122 C3                 5237 	clr	c
   1123 74 80              5238 	mov	a,#(0x00 ^ 0x80)
   1125 8B F0              5239 	mov	b,r3
   1127 63 F0 80           5240 	xrl	b,#0x80
   112A 95 F0              5241 	subb	a,b
   112C 50 29              5242 	jnc	00105$
   112E 90s00r03           5243 	mov	dptr,#(_tx + 0x0003)
   1131 E0                 5244 	movx	a,@dptr
   1132 70 23              5245 	jnz	00105$
                           5246 ;	../../shared/src/tx_train.c:852: req_local_ctrl(CE_NORMAL, 0, 1, 0);
   1134 90 00 04           5247 	mov	dptr,#0x0004
   1137 C0 03              5248 	push	ar3
   1139 78r00              5249 	mov	r0,#_Send_ctrl_to_tx
   113B 79s00              5250 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   113D 7As00              5251 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   113F 12s00r00           5252 	lcall	__sdcc_banked_call
   1142 D0 03              5253 	pop	ar3
                           5254 ;	../../shared/src/tx_train.c:854: if(tx_pipe4_en==0 || tx.g0_is_max==0) {
   1144 30*00 06           5255 	jnb	_tx_pipe4_en,00101$
   1147 90s00r03           5256 	mov	dptr,#(_tx + 0x0003)
   114A E0                 5257 	movx	a,@dptr
   114B 70 C5              5258 	jnz	00108$
   114D                    5259 00101$:
                           5260 ;	../../shared/src/tx_train.c:856: train_g0_index ++;
   114D 90 60 32           5261 	mov	dptr,#_train_g0_index
   1150 E0                 5262 	movx	a,@dptr
   1151 24 01              5263 	add	a,#0x01
   1153 F0                 5264 	movx	@dptr,a
                           5265 ;	../../shared/src/tx_train.c:857: update--;		               
   1154 1B                 5266 	dec	r3
   1155 80 BB              5267 	sjmp	00108$
   1157                    5268 00105$:
                           5269 ;	../../shared/src/tx_train.c:861: dfe_cdr_phase_opt();
                           5270 ;	../../shared/src/tx_train.c:862: break;			
   1157 02s00r00           5271 	ljmp	_dfe_cdr_phase_opt
   115A                    5272 00125$:
                           5273 ;	../../shared/src/tx_train.c:866: else if(update < 0 && tx.g0_is_min==0){ 
   115A EA                 5274 	mov	a,r2
   115B 30 E7 47           5275 	jnb	acc.7,00128$
   115E 90s00r04           5276 	mov	dptr,#(_tx + 0x0004)
   1161 E0                 5277 	movx	a,@dptr
   1162 70 41              5278 	jnz	00128$
                           5279 ;	../../shared/src/tx_train.c:868: while(cnt-->0) 
   1164                    5280 00118$:
   1164 90 22 C1           5281 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   1167 E0                 5282 	movx	a,@dptr
   1168 FB                 5283 	mov	r3,a
   1169 14                 5284 	dec	a
   116A FC                 5285 	mov	r4,a
   116B 90 22 C1           5286 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   116E EC                 5287 	mov	a,r4
   116F F0                 5288 	movx	@dptr,a
   1170 EB                 5289 	mov	a,r3
   1171 60 32              5290 	jz	00128$
                           5291 ;	../../shared/src/tx_train.c:870: if(update < 0 && tx.g0_is_min==0){ 
   1173 EA                 5292 	mov	a,r2
   1174 30 E7 2B           5293 	jnb	acc.7,00115$
   1177 90s00r04           5294 	mov	dptr,#(_tx + 0x0004)
   117A E0                 5295 	movx	a,@dptr
   117B 70 25              5296 	jnz	00115$
                           5297 ;	../../shared/src/tx_train.c:872: req_local_ctrl(CE_NORMAL, 0, 2, 0);										
   117D 90 00 08           5298 	mov	dptr,#0x0008
   1180 C0 02              5299 	push	ar2
   1182 78r00              5300 	mov	r0,#_Send_ctrl_to_tx
   1184 79s00              5301 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   1186 7As00              5302 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   1188 12s00r00           5303 	lcall	__sdcc_banked_call
   118B D0 02              5304 	pop	ar2
                           5305 ;	../../shared/src/tx_train.c:873: if(tx.g0_is_min==0 || tx_pipe4_en==0) {		   
   118D 90s00r04           5306 	mov	dptr,#(_tx + 0x0004)
   1190 E0                 5307 	movx	a,@dptr
   1191 60 03              5308 	jz	00111$
   1193 20*00 CE           5309 	jb	_tx_pipe4_en,00118$
   1196                    5310 00111$:
                           5311 ;	../../shared/src/tx_train.c:874: update ++; ////DBG_Pritnf("-");
   1196 0A                 5312 	inc	r2
                           5313 ;	../../shared/src/tx_train.c:875: train_g0_index --;
   1197 90 60 32           5314 	mov	dptr,#_train_g0_index
   119A E0                 5315 	movx	a,@dptr
   119B 14                 5316 	dec	a
   119C 90 60 32           5317 	mov	dptr,#_train_g0_index
   119F F0                 5318 	movx	@dptr,a
   11A0 80 C2              5319 	sjmp	00118$
   11A2                    5320 00115$:
                           5321 ;	../../shared/src/tx_train.c:881: dfe_cdr_phase_opt();				
                           5322 ;	../../shared/src/tx_train.c:882: break;
   11A2 02s00r00           5323 	ljmp	_dfe_cdr_phase_opt
   11A5                    5324 00128$:
   11A5 22                 5325 	ret
                           5326 ;------------------------------------------------------------
                           5327 ;Allocation info for local variables in function 'update_gn1'
                           5328 ;------------------------------------------------------------
                           5329 ;update                    Allocated to registers r2 
                           5330 ;------------------------------------------------------------
                           5331 ;	../../shared/src/tx_train.c:888: void update_gn1(int8_t update)
                           5332 ;	-----------------------------------------
                           5333 ;	 function update_gn1
                           5334 ;	-----------------------------------------
   11A6                    5335 _update_gn1:
   11A6 AA 82              5336 	mov	r2,dpl
                           5337 ;	../../shared/src/tx_train.c:891: cnt = 16;
   11A8 90 22 C1           5338 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   11AB 74 10              5339 	mov	a,#0x10
   11AD F0                 5340 	movx	@dptr,a
                           5341 ;	../../shared/src/tx_train.c:896: if (update > 0 && tx.gn1_is_max==0)
   11AE C3                 5342 	clr	c
   11AF 74 80              5343 	mov	a,#(0x00 ^ 0x80)
   11B1 8A F0              5344 	mov	b,r2
   11B3 63 F0 80           5345 	xrl	b,#0x80
   11B6 95 F0              5346 	subb	a,b
   11B8 50 74              5347 	jnc	00125$
   11BA 90s00r07           5348 	mov	dptr,#(_tx + 0x0007)
   11BD E0                 5349 	movx	a,@dptr
   11BE 70 6E              5350 	jnz	00125$
                           5351 ;	../../shared/src/tx_train.c:898: while(cnt-->0){		
   11C0 8A 03              5352 	mov	ar3,r2
   11C2                    5353 00108$:
   11C2 90 22 C1           5354 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   11C5 E0                 5355 	movx	a,@dptr
   11C6 FC                 5356 	mov	r4,a
   11C7 14                 5357 	dec	a
   11C8 FD                 5358 	mov	r5,a
   11C9 90 22 C1           5359 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   11CC F0                 5360 	movx	@dptr,a
   11CD EC                 5361 	mov	a,r4
   11CE 70 01              5362 	jnz	00150$
   11D0 22                 5363 	ret
   11D1                    5364 00150$:
                           5365 ;	../../shared/src/tx_train.c:902: if(update >0 && tx.gn1_is_max==0){
   11D1 C3                 5366 	clr	c
   11D2 74 80              5367 	mov	a,#(0x00 ^ 0x80)
   11D4 8B F0              5368 	mov	b,r3
   11D6 63 F0 80           5369 	xrl	b,#0x80
   11D9 95 F0              5370 	subb	a,b
   11DB 50 4E              5371 	jnc	00105$
   11DD 90s00r07           5372 	mov	dptr,#(_tx + 0x0007)
   11E0 E0                 5373 	movx	a,@dptr
   11E1 70 48              5374 	jnz	00105$
                           5375 ;	../../shared/src/tx_train.c:905: req_local_ctrl(CE_NORMAL, 0, tag_TX_TRAIN_P2P_HOLD, 1);		
   11E3 90s00r00           5376 	mov	dptr,#_tx_train_p2p_hold
   11E6 E0                 5377 	movx	a,@dptr
   11E7 FC                 5378 	mov	r4,a
   11E8 E4                 5379 	clr	a
   11E9 CC                 5380 	xch	a,r4
   11EA 25 E0              5381 	add	a,acc
   11EC CC                 5382 	xch	a,r4
   11ED 33                 5383 	rlc	a
   11EE CC                 5384 	xch	a,r4
   11EF 25 E0              5385 	add	a,acc
   11F1 CC                 5386 	xch	a,r4
   11F2 33                 5387 	rlc	a
   11F3 FD                 5388 	mov	r5,a
   11F4 74 01              5389 	mov	a,#0x01
   11F6 4C                 5390 	orl	a,r4
   11F7 F5 82              5391 	mov	dpl,a
   11F9 8D 83              5392 	mov	dph,r5
   11FB C0 03              5393 	push	ar3
   11FD 78r00              5394 	mov	r0,#_Send_ctrl_to_tx
   11FF 79s00              5395 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   1201 7As00              5396 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   1203 12s00r00           5397 	lcall	__sdcc_banked_call
   1206 D0 03              5398 	pop	ar3
                           5399 ;	../../shared/src/tx_train.c:907: if(tx.gn1_is_max==0 || tx_pipe4_en==0) {
   1208 90s00r07           5400 	mov	dptr,#(_tx + 0x0007)
   120B E0                 5401 	movx	a,@dptr
   120C 60 03              5402 	jz	00101$
   120E 20*00 B1           5403 	jb	_tx_pipe4_en,00108$
   1211                    5404 00101$:
                           5405 ;	../../shared/src/tx_train.c:908: update --; //DBG_Pritnf("+");
   1211 1B                 5406 	dec	r3
                           5407 ;	../../shared/src/tx_train.c:909: train_gn1_index ++;
   1212 90 60 30           5408 	mov	dptr,#_train_gn1_index
   1215 E0                 5409 	movx	a,@dptr
   1216 24 01              5410 	add	a,#0x01
   1218 F0                 5411 	movx	@dptr,a
                           5412 ;	../../shared/src/tx_train.c:910: train_g0_index += tag_TX_TRAIN_P2P_HOLD;
   1219 90s00r00           5413 	mov	dptr,#_tx_train_p2p_hold
   121C E0                 5414 	movx	a,@dptr
   121D FC                 5415 	mov	r4,a
   121E 90 60 32           5416 	mov	dptr,#_train_g0_index
   1221 E0                 5417 	movx	a,@dptr
   1222 FD                 5418 	mov	r5,a
   1223 90 60 32           5419 	mov	dptr,#_train_g0_index
   1226 EC                 5420 	mov	a,r4
   1227 2D                 5421 	add	a,r5
   1228 F0                 5422 	movx	@dptr,a
   1229 80 97              5423 	sjmp	00108$
   122B                    5424 00105$:
                           5425 ;	../../shared/src/tx_train.c:915: dfe_cdr_phase_opt();
                           5426 ;	../../shared/src/tx_train.c:916: break;
   122B 02s00r00           5427 	ljmp	_dfe_cdr_phase_opt
   122E                    5428 00125$:
                           5429 ;	../../shared/src/tx_train.c:920: }else if (update < 0 && tx.gn1_is_min==0){ 
   122E EA                 5430 	mov	a,r2
   122F 20 E7 01           5431 	jb	acc.7,00155$
   1232 22                 5432 	ret
   1233                    5433 00155$:
   1233 90s00r08           5434 	mov	dptr,#(_tx + 0x0008)
   1236 E0                 5435 	movx	a,@dptr
   1237 60 01              5436 	jz	00156$
   1239 22                 5437 	ret
   123A                    5438 00156$:
                           5439 ;	../../shared/src/tx_train.c:921: while(cnt-->0) 
   123A                    5440 00118$:
   123A 90 22 C1           5441 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   123D E0                 5442 	movx	a,@dptr
   123E FB                 5443 	mov	r3,a
   123F 14                 5444 	dec	a
   1240 FC                 5445 	mov	r4,a
   1241 90 22 C1           5446 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   1244 F0                 5447 	movx	@dptr,a
   1245 EB                 5448 	mov	a,r3
   1246 60 61              5449 	jz	00128$
                           5450 ;	../../shared/src/tx_train.c:926: if(update <0 && tx.gn1_is_min==0)
   1248 EA                 5451 	mov	a,r2
   1249 30 E7 5A           5452 	jnb	acc.7,00115$
   124C 90s00r08           5453 	mov	dptr,#(_tx + 0x0008)
   124F E0                 5454 	movx	a,@dptr
   1250 70 54              5455 	jnz	00115$
                           5456 ;	../../shared/src/tx_train.c:930: req_local_ctrl(CE_NORMAL, 0, (tag_TX_TRAIN_P2P_HOLD ? 2 : 0), 2);		
   1252 90s00r00           5457 	mov	dptr,#_tx_train_p2p_hold
   1255 E0                 5458 	movx	a,@dptr
   1256 FB                 5459 	mov	r3,a
   1257 60 02              5460 	jz	00130$
   1259 74 02              5461 	mov	a,#0x02
   125B                    5462 00130$:
   125B FB                 5463 	mov	r3,a
   125C E4                 5464 	clr	a
   125D CB                 5465 	xch	a,r3
   125E 25 E0              5466 	add	a,acc
   1260 CB                 5467 	xch	a,r3
   1261 33                 5468 	rlc	a
   1262 CB                 5469 	xch	a,r3
   1263 25 E0              5470 	add	a,acc
   1265 CB                 5471 	xch	a,r3
   1266 33                 5472 	rlc	a
   1267 FC                 5473 	mov	r4,a
   1268 74 02              5474 	mov	a,#0x02
   126A 4B                 5475 	orl	a,r3
   126B F5 82              5476 	mov	dpl,a
   126D 8C 83              5477 	mov	dph,r4
   126F C0 02              5478 	push	ar2
   1271 78r00              5479 	mov	r0,#_Send_ctrl_to_tx
   1273 79s00              5480 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   1275 7As00              5481 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   1277 12s00r00           5482 	lcall	__sdcc_banked_call
   127A D0 02              5483 	pop	ar2
                           5484 ;	../../shared/src/tx_train.c:932: if(tx.gn1_is_min==0 || tx_pipe4_en==0) {
   127C 90s00r08           5485 	mov	dptr,#(_tx + 0x0008)
   127F E0                 5486 	movx	a,@dptr
   1280 60 03              5487 	jz	00111$
   1282 20*00 B5           5488 	jb	_tx_pipe4_en,00118$
   1285                    5489 00111$:
                           5490 ;	../../shared/src/tx_train.c:933: update ++; //DBG_Pritnf("-");
   1285 0A                 5491 	inc	r2
                           5492 ;	../../shared/src/tx_train.c:934: train_gn1_index --;
   1286 90 60 30           5493 	mov	dptr,#_train_gn1_index
   1289 E0                 5494 	movx	a,@dptr
   128A 14                 5495 	dec	a
   128B 90 60 30           5496 	mov	dptr,#_train_gn1_index
   128E F0                 5497 	movx	@dptr,a
                           5498 ;	../../shared/src/tx_train.c:935: train_g0_index -= tag_TX_TRAIN_P2P_HOLD ? 1 : 0;
   128F 90s00r00           5499 	mov	dptr,#_tx_train_p2p_hold
   1292 E0                 5500 	movx	a,@dptr
   1293 FB                 5501 	mov	r3,a
   1294 60 02              5502 	jz	00132$
   1296 74 01              5503 	mov	a,#0x01
   1298                    5504 00132$:
   1298 FB                 5505 	mov	r3,a
   1299 90 60 32           5506 	mov	dptr,#_train_g0_index
   129C E0                 5507 	movx	a,@dptr
   129D FC                 5508 	mov	r4,a
   129E 90 60 32           5509 	mov	dptr,#_train_g0_index
   12A1 C3                 5510 	clr	c
   12A2 9B                 5511 	subb	a,r3
   12A3 F0                 5512 	movx	@dptr,a
   12A4 80 94              5513 	sjmp	00118$
   12A6                    5514 00115$:
                           5515 ;	../../shared/src/tx_train.c:941: dfe_cdr_phase_opt();
                           5516 ;	../../shared/src/tx_train.c:942: break;
   12A6 02s00r00           5517 	ljmp	_dfe_cdr_phase_opt
   12A9                    5518 00128$:
   12A9 22                 5519 	ret
                           5520 ;------------------------------------------------------------
                           5521 ;Allocation info for local variables in function 'update_g1'
                           5522 ;------------------------------------------------------------
                           5523 ;update                    Allocated to registers r2 
                           5524 ;------------------------------------------------------------
                           5525 ;	../../shared/src/tx_train.c:949: void update_g1(int8_t update)
                           5526 ;	-----------------------------------------
                           5527 ;	 function update_g1
                           5528 ;	-----------------------------------------
   12AA                    5529 _update_g1:
   12AA AA 82              5530 	mov	r2,dpl
                           5531 ;	../../shared/src/tx_train.c:952: cnt = 16;
   12AC 90 22 C1           5532 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   12AF 74 10              5533 	mov	a,#0x10
   12B1 F0                 5534 	movx	@dptr,a
                           5535 ;	../../shared/src/tx_train.c:957: if (update > 0 && tx.g1_is_max==0)
   12B2 C3                 5536 	clr	c
   12B3 74 80              5537 	mov	a,#(0x00 ^ 0x80)
   12B5 8A F0              5538 	mov	b,r2
   12B7 63 F0 80           5539 	xrl	b,#0x80
   12BA 95 F0              5540 	subb	a,b
   12BC 50 74              5541 	jnc	00125$
   12BE 90s00r05           5542 	mov	dptr,#(_tx + 0x0005)
   12C1 E0                 5543 	movx	a,@dptr
   12C2 70 6E              5544 	jnz	00125$
                           5545 ;	../../shared/src/tx_train.c:959: while(cnt-->0){
   12C4 8A 03              5546 	mov	ar3,r2
   12C6                    5547 00108$:
   12C6 90 22 C1           5548 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   12C9 E0                 5549 	movx	a,@dptr
   12CA FC                 5550 	mov	r4,a
   12CB 14                 5551 	dec	a
   12CC FD                 5552 	mov	r5,a
   12CD 90 22 C1           5553 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   12D0 F0                 5554 	movx	@dptr,a
   12D1 EC                 5555 	mov	a,r4
   12D2 70 01              5556 	jnz	00150$
   12D4 22                 5557 	ret
   12D5                    5558 00150$:
                           5559 ;	../../shared/src/tx_train.c:963: if(update >0 && tx.g1_is_max==0){
   12D5 C3                 5560 	clr	c
   12D6 74 80              5561 	mov	a,#(0x00 ^ 0x80)
   12D8 8B F0              5562 	mov	b,r3
   12DA 63 F0 80           5563 	xrl	b,#0x80
   12DD 95 F0              5564 	subb	a,b
   12DF 50 4E              5565 	jnc	00105$
   12E1 90s00r05           5566 	mov	dptr,#(_tx + 0x0005)
   12E4 E0                 5567 	movx	a,@dptr
   12E5 70 48              5568 	jnz	00105$
                           5569 ;	../../shared/src/tx_train.c:966: req_local_ctrl(CE_NORMAL, 1, tag_TX_TRAIN_P2P_HOLD, 0);		
   12E7 90s00r00           5570 	mov	dptr,#_tx_train_p2p_hold
   12EA E0                 5571 	movx	a,@dptr
   12EB FC                 5572 	mov	r4,a
   12EC E4                 5573 	clr	a
   12ED CC                 5574 	xch	a,r4
   12EE 25 E0              5575 	add	a,acc
   12F0 CC                 5576 	xch	a,r4
   12F1 33                 5577 	rlc	a
   12F2 CC                 5578 	xch	a,r4
   12F3 25 E0              5579 	add	a,acc
   12F5 CC                 5580 	xch	a,r4
   12F6 33                 5581 	rlc	a
   12F7 FD                 5582 	mov	r5,a
   12F8 74 10              5583 	mov	a,#0x10
   12FA 4C                 5584 	orl	a,r4
   12FB F5 82              5585 	mov	dpl,a
   12FD 8D 83              5586 	mov	dph,r5
   12FF C0 03              5587 	push	ar3
   1301 78r00              5588 	mov	r0,#_Send_ctrl_to_tx
   1303 79s00              5589 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   1305 7As00              5590 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   1307 12s00r00           5591 	lcall	__sdcc_banked_call
   130A D0 03              5592 	pop	ar3
                           5593 ;	../../shared/src/tx_train.c:968: if(tx.g1_is_max==0 || tx_pipe4_en==0) {
   130C 90s00r05           5594 	mov	dptr,#(_tx + 0x0005)
   130F E0                 5595 	movx	a,@dptr
   1310 60 03              5596 	jz	00101$
   1312 20*00 B1           5597 	jb	_tx_pipe4_en,00108$
   1315                    5598 00101$:
                           5599 ;	../../shared/src/tx_train.c:969: update --; //DBG_Pritnf("+");
   1315 1B                 5600 	dec	r3
                           5601 ;	../../shared/src/tx_train.c:970: train_g1_index ++;
   1316 90 60 31           5602 	mov	dptr,#_train_g1_index
   1319 E0                 5603 	movx	a,@dptr
   131A 24 01              5604 	add	a,#0x01
   131C F0                 5605 	movx	@dptr,a
                           5606 ;	../../shared/src/tx_train.c:971: train_g0_index += tag_TX_TRAIN_P2P_HOLD;
   131D 90s00r00           5607 	mov	dptr,#_tx_train_p2p_hold
   1320 E0                 5608 	movx	a,@dptr
   1321 FC                 5609 	mov	r4,a
   1322 90 60 32           5610 	mov	dptr,#_train_g0_index
   1325 E0                 5611 	movx	a,@dptr
   1326 FD                 5612 	mov	r5,a
   1327 90 60 32           5613 	mov	dptr,#_train_g0_index
   132A EC                 5614 	mov	a,r4
   132B 2D                 5615 	add	a,r5
   132C F0                 5616 	movx	@dptr,a
   132D 80 97              5617 	sjmp	00108$
   132F                    5618 00105$:
                           5619 ;	../../shared/src/tx_train.c:976: dfe_cdr_phase_opt();
                           5620 ;	../../shared/src/tx_train.c:977: break;
   132F 02s00r00           5621 	ljmp	_dfe_cdr_phase_opt
   1332                    5622 00125$:
                           5623 ;	../../shared/src/tx_train.c:980: }else if (update < 0 && tx.g1_is_min==0){ 
   1332 EA                 5624 	mov	a,r2
   1333 20 E7 01           5625 	jb	acc.7,00155$
   1336 22                 5626 	ret
   1337                    5627 00155$:
   1337 90s00r06           5628 	mov	dptr,#(_tx + 0x0006)
   133A E0                 5629 	movx	a,@dptr
   133B 60 01              5630 	jz	00156$
   133D 22                 5631 	ret
   133E                    5632 00156$:
                           5633 ;	../../shared/src/tx_train.c:981: while(cnt-->0) {
   133E                    5634 00118$:
   133E 90 22 C1           5635 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   1341 E0                 5636 	movx	a,@dptr
   1342 FB                 5637 	mov	r3,a
   1343 14                 5638 	dec	a
   1344 FC                 5639 	mov	r4,a
   1345 90 22 C1           5640 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0001)
   1348 F0                 5641 	movx	@dptr,a
   1349 EB                 5642 	mov	a,r3
   134A 60 61              5643 	jz	00128$
                           5644 ;	../../shared/src/tx_train.c:985: if(update < 0 && tx.g1_is_min==0){ 
   134C EA                 5645 	mov	a,r2
   134D 30 E7 5A           5646 	jnb	acc.7,00115$
   1350 90s00r06           5647 	mov	dptr,#(_tx + 0x0006)
   1353 E0                 5648 	movx	a,@dptr
   1354 70 54              5649 	jnz	00115$
                           5650 ;	../../shared/src/tx_train.c:989: req_local_ctrl(CE_NORMAL, 2, (tag_TX_TRAIN_P2P_HOLD ? 2 : 0), 0);		
   1356 90s00r00           5651 	mov	dptr,#_tx_train_p2p_hold
   1359 E0                 5652 	movx	a,@dptr
   135A FB                 5653 	mov	r3,a
   135B 60 02              5654 	jz	00130$
   135D 74 02              5655 	mov	a,#0x02
   135F                    5656 00130$:
   135F FB                 5657 	mov	r3,a
   1360 E4                 5658 	clr	a
   1361 CB                 5659 	xch	a,r3
   1362 25 E0              5660 	add	a,acc
   1364 CB                 5661 	xch	a,r3
   1365 33                 5662 	rlc	a
   1366 CB                 5663 	xch	a,r3
   1367 25 E0              5664 	add	a,acc
   1369 CB                 5665 	xch	a,r3
   136A 33                 5666 	rlc	a
   136B FC                 5667 	mov	r4,a
   136C 74 20              5668 	mov	a,#0x20
   136E 4B                 5669 	orl	a,r3
   136F F5 82              5670 	mov	dpl,a
   1371 8C 83              5671 	mov	dph,r4
   1373 C0 02              5672 	push	ar2
   1375 78r00              5673 	mov	r0,#_Send_ctrl_to_tx
   1377 79s00              5674 	mov	r1,#(_Send_ctrl_to_tx >> 8)
   1379 7As00              5675 	mov	r2,#(_Send_ctrl_to_tx >> 16)
   137B 12s00r00           5676 	lcall	__sdcc_banked_call
   137E D0 02              5677 	pop	ar2
                           5678 ;	../../shared/src/tx_train.c:991: if(tx.g1_is_min==0 || tx_pipe4_en==0) {
   1380 90s00r06           5679 	mov	dptr,#(_tx + 0x0006)
   1383 E0                 5680 	movx	a,@dptr
   1384 60 03              5681 	jz	00111$
   1386 20*00 B5           5682 	jb	_tx_pipe4_en,00118$
   1389                    5683 00111$:
                           5684 ;	../../shared/src/tx_train.c:992: update ++; //DBG_Pritnf("-");
   1389 0A                 5685 	inc	r2
                           5686 ;	../../shared/src/tx_train.c:993: train_g1_index --;
   138A 90 60 31           5687 	mov	dptr,#_train_g1_index
   138D E0                 5688 	movx	a,@dptr
   138E 14                 5689 	dec	a
   138F 90 60 31           5690 	mov	dptr,#_train_g1_index
   1392 F0                 5691 	movx	@dptr,a
                           5692 ;	../../shared/src/tx_train.c:994: train_g0_index -= tag_TX_TRAIN_P2P_HOLD ? 1 : 0;
   1393 90s00r00           5693 	mov	dptr,#_tx_train_p2p_hold
   1396 E0                 5694 	movx	a,@dptr
   1397 FB                 5695 	mov	r3,a
   1398 60 02              5696 	jz	00132$
   139A 74 01              5697 	mov	a,#0x01
   139C                    5698 00132$:
   139C FB                 5699 	mov	r3,a
   139D 90 60 32           5700 	mov	dptr,#_train_g0_index
   13A0 E0                 5701 	movx	a,@dptr
   13A1 FC                 5702 	mov	r4,a
   13A2 90 60 32           5703 	mov	dptr,#_train_g0_index
   13A5 C3                 5704 	clr	c
   13A6 9B                 5705 	subb	a,r3
   13A7 F0                 5706 	movx	@dptr,a
   13A8 80 94              5707 	sjmp	00118$
   13AA                    5708 00115$:
                           5709 ;	../../shared/src/tx_train.c:999: dfe_cdr_phase_opt();
                           5710 ;	../../shared/src/tx_train.c:1000: break;
   13AA 02s00r00           5711 	ljmp	_dfe_cdr_phase_opt
   13AD                    5712 00128$:
   13AD 22                 5713 	ret
                           5714 	.area CSEG    (CODE)
                           5715 	.area CONST   (CODE)
                           5716 	.area CABS    (ABS,CODE)
