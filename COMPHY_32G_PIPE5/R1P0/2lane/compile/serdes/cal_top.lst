                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (May 26 2011) (Linux)
                              4 ; This file was generated Thu Oct 18 21:21:53 2018
                              5 ;--------------------------------------------------------
                              6 	.module cal_top
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _TI
                             14 	.globl _RI
                             15 	.globl _EX12
                             16 	.globl _EX11
                             17 	.globl _EX10
                             18 	.globl _EX9
                             19 	.globl _EX8
                             20 	.globl _ES1
                             21 	.globl _PS1
                             22 	.globl _EX6
                             23 	.globl _EX5
                             24 	.globl _EX4
                             25 	.globl _EX3
                             26 	.globl _EX2
                             27 	.globl _EX7
                             28 	.globl _EA
                             29 	.globl _WDT
                             30 	.globl _ET2
                             31 	.globl _ES
                             32 	.globl _ET1
                             33 	.globl _EX1
                             34 	.globl _ET0
                             35 	.globl _EX0
                             36 	.globl _TF1
                             37 	.globl _TR1
                             38 	.globl _TF0
                             39 	.globl _TR0
                             40 	.globl _IE1
                             41 	.globl _IT1
                             42 	.globl _IE0
                             43 	.globl _IT0
                             44 	.globl _P3_7
                             45 	.globl _P3_6
                             46 	.globl _P3_5
                             47 	.globl _P3_4
                             48 	.globl _P3_3
                             49 	.globl _P3_2
                             50 	.globl _P3_1
                             51 	.globl _P3_0
                             52 	.globl _P2_7
                             53 	.globl _P2_6
                             54 	.globl _P2_5
                             55 	.globl _P2_4
                             56 	.globl _P2_3
                             57 	.globl _P2_2
                             58 	.globl _P2_1
                             59 	.globl _P2_0
                             60 	.globl _P1_7
                             61 	.globl _P1_6
                             62 	.globl _P1_5
                             63 	.globl _P1_4
                             64 	.globl _P1_3
                             65 	.globl _P1_2
                             66 	.globl _P1_1
                             67 	.globl _P1_0
                             68 	.globl _P0_7
                             69 	.globl _P0_6
                             70 	.globl _P0_5
                             71 	.globl _P0_4
                             72 	.globl _P0_3
                             73 	.globl _P0_2
                             74 	.globl _P0_1
                             75 	.globl _P0_0
                             76 	.globl _DMAC
                             77 	.globl _DMATA
                             78 	.globl _DMASA
                             79 	.globl _TMR2
                             80 	.globl _TMR1
                             81 	.globl _TMR0
                             82 	.globl _SRST
                             83 	.globl _B
                             84 	.globl _EIE
                             85 	.globl _ACC
                             86 	.globl _ADCON
                             87 	.globl _PSW
                             88 	.globl _TH2
                             89 	.globl _TL2
                             90 	.globl _RCAP2H
                             91 	.globl _RCAP2L
                             92 	.globl _T2CON
                             93 	.globl _CCEN
                             94 	.globl _IRCON
                             95 	.globl _S0RELH
                             96 	.globl _IP1
                             97 	.globl _IEN1
                             98 	.globl _DMAM1
                             99 	.globl _DMAM0
                            100 	.globl _DMASEL
                            101 	.globl _DMAC2
                            102 	.globl _DMAC1
                            103 	.globl _DMAC0
                            104 	.globl _P3
                            105 	.globl _S0RELL
                            106 	.globl _IP0
                            107 	.globl _IEN0
                            108 	.globl _DMAT2
                            109 	.globl _DMAT1
                            110 	.globl _DMAT0
                            111 	.globl _DMAS2
                            112 	.globl _DMAS1
                            113 	.globl _DMAS0
                            114 	.globl _P2
                            115 	.globl _IEN2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _PSBANK
                            119 	.globl _DPS
                            120 	.globl _P1
                            121 	.globl _CKCON
                            122 	.globl _TH1
                            123 	.globl _TH0
                            124 	.globl _TL1
                            125 	.globl _TL0
                            126 	.globl _TMOD
                            127 	.globl _TCON
                            128 	.globl _PCON
                            129 	.globl _WDTREL
                            130 	.globl _DPH
                            131 	.globl _DPL
                            132 	.globl _P0
                            133 	.globl _sq_thrs_ratio_tb
                            134 	.globl _train_save_tb
                            135 	.globl _tx_tb
                            136 	.globl _UPHY_ANAREG_REV_0
                            137 	.globl _dfe_sm_save
                            138 	.globl _dfe_sm_dc
                            139 	.globl _dfe_sm
                            140 	.globl _cds28
                            141 	.globl _lnx_calx_align90_gm
                            142 	.globl _lnx_calx_align90_dac
                            143 	.globl _lnx_calx_align90_dummy_clk
                            144 	.globl _lnx_calx_eom_dpher
                            145 	.globl _lnx_calx_vdda_dll_eom_sel
                            146 	.globl _lnx_calx_dll_eom_gmsel
                            147 	.globl _lnx_calx_vdda_dll_sel
                            148 	.globl _lnx_calx_dll_gmsel
                            149 	.globl _lnx_calx_rxdcc_dll_hg
                            150 	.globl _lnx_calx_rxdcc_dll
                            151 	.globl _lnx_calx_txdcc_hg
                            152 	.globl _lnx_calx_txdcc
                            153 	.globl _lnx_calx_txdcc_pdiv_hg
                            154 	.globl _lnx_calx_txdcc_pdiv
                            155 	.globl _lnx_spdoft_tx_preset_index_lane
                            156 	.globl _lnx_cal_sellv_rxeomclk
                            157 	.globl _lnx_cal_sellv_rxsampler
                            158 	.globl _lnx_cal_sellv_txpre
                            159 	.globl _lnx_cal_sellv_rxdataclk
                            160 	.globl _lnx_cal_sellv_txclk
                            161 	.globl _lnx_cal_sellv_txdata
                            162 	.globl _lnx_cal_align90_gm
                            163 	.globl _lnx_cal_align90_dac
                            164 	.globl _lnx_cal_align90_dummy_clk
                            165 	.globl _lnx_cal_eom_dpher
                            166 	.globl _lnx_cal_vdda_dll_eom_sel
                            167 	.globl _lnx_cal_dll_eom_gmsel
                            168 	.globl _lnx_cal_vdda_dll_sel
                            169 	.globl _lnx_cal_dll_gmsel
                            170 	.globl _lnx_cal_rxdcc_eom_hg
                            171 	.globl _lnx_cal_rxdcc_eom
                            172 	.globl _lnx_cal_rxdcc_data_hg
                            173 	.globl _lnx_cal_rxdcc_data
                            174 	.globl _lnx_cal_rxdcc_dll_hg
                            175 	.globl _lnx_cal_rxdcc_dll
                            176 	.globl _lnx_cal_txdcc_hg
                            177 	.globl _lnx_cal_txdcc
                            178 	.globl _lnx_cal_txdcc_pdiv_hg
                            179 	.globl _lnx_cal_txdcc_pdiv
                            180 	.globl _cmx_cal_sllp_dac_fine_ring
                            181 	.globl _cmx_cal_pll_sllp_dac_coarse_ring
                            182 	.globl _cmx_cal_pll_speed_ring
                            183 	.globl _cmx_cal_plldcc
                            184 	.globl _cmx_cal_lccap_lsb
                            185 	.globl _cmx_cal_lccap_msb
                            186 	.globl _cmx_cal_lcvco_dac_msb
                            187 	.globl _cmx_cal_lcvco_dac_lsb
                            188 	.globl _cmx_cal_lcvco_dac
                            189 	.globl _local_tx_preset_tb
                            190 	.globl _train_g0_index
                            191 	.globl _train_g1_index
                            192 	.globl _train_gn1_index
                            193 	.globl _phase_save
                            194 	.globl _txffe_save
                            195 	.globl _rc_save
                            196 	.globl _phy_mode_lane_table
                            197 	.globl _speedtable
                            198 	.globl _min_gen
                            199 	.globl _max_gen
                            200 	.globl _phy_mode_cmn_table
                            201 	.globl _ring_speedtable
                            202 	.globl _lc_speedtable
                            203 	.globl _TXTRAIN_IF_REG0
                            204 	.globl _CDS_READ_MISC1
                            205 	.globl _CDS_READ_MISC0
                            206 	.globl _DFE_READ_F0D_RIGHT_ODD
                            207 	.globl _DFE_READ_F0D_RIGHT_EVEN
                            208 	.globl _DFE_READ_F0D_LEFT_ODD
                            209 	.globl _DFE_READ_F0D_LEFT_EVEN
                            210 	.globl _DFE_READ_F0D_ODD
                            211 	.globl _DFE_READ_F0D_EVEN
                            212 	.globl _DFE_READ_F0B_ODD
                            213 	.globl _DFE_READ_F0B_EVEN
                            214 	.globl _DFE_READ_F0A_ODD
                            215 	.globl _DFE_READ_F0A_EVEN
                            216 	.globl _DFE_READ_ODD_REG8
                            217 	.globl _DFE_READ_EVEN_REG8
                            218 	.globl _DFE_READ_ODD_REG7
                            219 	.globl _DFE_READ_ODD_REG6
                            220 	.globl _DFE_READ_ODD_REG5
                            221 	.globl _DFE_READ_ODD_REG4
                            222 	.globl _DFE_READ_ODD_REG3
                            223 	.globl _DFE_READ_ODD_REG2
                            224 	.globl _DFE_READ_ODD_REG1
                            225 	.globl _DFE_READ_ODD_REG0
                            226 	.globl _DFE_READ_EVEN_REG7
                            227 	.globl _DFE_READ_EVEN_REG6
                            228 	.globl _DFE_READ_EVEN_REG5
                            229 	.globl _DFE_READ_EVEN_REG4
                            230 	.globl _DFE_READ_EVEN_REG3
                            231 	.globl _DFE_READ_EVEN_REG2
                            232 	.globl _DFE_READ_EVEN_REG1
                            233 	.globl _DFE_READ_EVEN_REG0
                            234 	.globl _TX_TRAIN_IF_REG8
                            235 	.globl _TX_TRAIN_CTRL_LANE
                            236 	.globl _TX_TRAIN_IF_REG7
                            237 	.globl _TX_TRAIN_IF_REG6
                            238 	.globl _TX_TRAIN_IF_REG5
                            239 	.globl _TX_TRAIN_IF_REG4
                            240 	.globl _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
                            241 	.globl _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE
                            242 	.globl _TRX_TRAIN_IF_INTERRUPT_LANE
                            243 	.globl _TX_AMP_CTRL_REG0
                            244 	.globl _TX_DRV_RD_OUT_REG0
                            245 	.globl _LINK_TRAIN_MODE0
                            246 	.globl _TX_EMPH_CTRL_REG0
                            247 	.globl _TX_TRAIN_DEFAULT_REG5
                            248 	.globl _TX_TRAIN_DEFAULT_REG4
                            249 	.globl _TX_TRAIN_DEFAULT_REG3
                            250 	.globl _TX_TRAIN_DEFAULT_REG2
                            251 	.globl _TX_TRAIN_DEFAULT_REG1
                            252 	.globl _TX_TRAIN_DEFAULT_REG0
                            253 	.globl _TX_TRAIN_DRIVER_REG2
                            254 	.globl _TX_TRAIN_DRIVER_REG1
                            255 	.globl _TX_TRAIN_DRIVER_REG0
                            256 	.globl _TX_TRAIN_PATTTERN_REG0
                            257 	.globl _TX_TRAIN_IF_REG3
                            258 	.globl _TX_TRAIN_IF_REG2
                            259 	.globl _TX_TRAIN_IF_REG1
                            260 	.globl _TX_TRAIN_IF_REG0
                            261 	.globl _DME_DEC_REG1
                            262 	.globl _DME_DEC_REG0
                            263 	.globl _DME_ENC_REG2
                            264 	.globl _DME_ENC_REG1
                            265 	.globl _DME_ENC_REG0
                            266 	.globl _END_XDAT_CMN
                            267 	.globl _MCU_INFO_13
                            268 	.globl _MCU_INFO_12
                            269 	.globl _MCU_INFO_5
                            270 	.globl _MCU_INFO_4
                            271 	.globl _SYNC_INFO
                            272 	.globl _CDS_EYE_CLK_THR
                            273 	.globl _TX_SAVE_4
                            274 	.globl _TX_SAVE_3
                            275 	.globl _TX_SAVE_2
                            276 	.globl _TX_SAVE_1
                            277 	.globl _TX_SAVE_0
                            278 	.globl _ETH_PRESET1_TB
                            279 	.globl _ETH_PRESET0_TB
                            280 	.globl _SAS_PRESET2_TB
                            281 	.globl _SAS_PRESET1_TB
                            282 	.globl _SAS_PRESET0_TB
                            283 	.globl _G_SELLV_RXSAMPLER
                            284 	.globl _G_SELLV_RXDATACLK
                            285 	.globl _G_SELLV_RXEOMCLK
                            286 	.globl _G_SELLV_TXPRE
                            287 	.globl _G_SELLV_TXDATA
                            288 	.globl _G_SELLV_TXCLK
                            289 	.globl _TIMER_SEL3
                            290 	.globl _TIMER_SEL2
                            291 	.globl _TIMER_SEL1
                            292 	.globl _MCU_CONFIG1
                            293 	.globl _LOOP_CNTS
                            294 	.globl _CAL_DATA1
                            295 	.globl _MCU_CONFIG
                            296 	.globl _CAL_STATUS_READ
                            297 	.globl _CAL_TIME_OUT_AND_DIS
                            298 	.globl _CON_CAL_STEP_SIZE5
                            299 	.globl _CON_CAL_STEP_SIZE4
                            300 	.globl _CON_CAL_STEP_SIZE3
                            301 	.globl _CON_CAL_STEP_SIZE2
                            302 	.globl _CON_CAL_STEP_SIZE1
                            303 	.globl _CONTROL_CONFIG9
                            304 	.globl _CONTROL_CONFIG8
                            305 	.globl _TRAIN_IF_CONFIG
                            306 	.globl _CAL_DATA0
                            307 	.globl _CONTROL_CONFIG7
                            308 	.globl _CONTROL_CONFIG6
                            309 	.globl _CONTROL_CONFIG5
                            310 	.globl _CONTROL_CONFIG4
                            311 	.globl _CONTROL_CONFIG3
                            312 	.globl _CONTROL_CONFIG2
                            313 	.globl _CONTROL_CONFIG1
                            314 	.globl _CONTROL_CONFIG0
                            315 	.globl _FW_REV
                            316 	.globl _CID_REG1
                            317 	.globl _CID_REG0
                            318 	.globl _CMN_MCU_REG
                            319 	.globl _SET_LANE_ISR
                            320 	.globl _CMN_ISR_MASK_1
                            321 	.globl _CMN_ISR_1
                            322 	.globl _CMN_MCU_TIMER3_CONTROL
                            323 	.globl _CMN_MCU_TIMER2_CONTROL
                            324 	.globl _CMN_MCU_TIMER1_CONTROL
                            325 	.globl _CMN_MCU_TIMER0_CONTROL
                            326 	.globl _CMN_MCU_TIMER_CTRL_5_LANE
                            327 	.globl _CMN_MCU_TIMER_CTRL_4_LANE
                            328 	.globl _CMN_MCU_TIMER_CTRL_3_LANE
                            329 	.globl _CMN_MCU_TIMER_CTRL_2_LANE
                            330 	.globl _CMN_MCU_TIMER_CONTROL
                            331 	.globl _CMN_CACHE_DEBUG1
                            332 	.globl _CMN_MCU_GPIO
                            333 	.globl _CMN_ISR_CLEAR_2
                            334 	.globl _CMN_ISR_MASK_2
                            335 	.globl _CMN_ISR_2
                            336 	.globl _MCU_INT_ADDR
                            337 	.globl _CMN_CACHE_DEBUG0
                            338 	.globl _MCU_SDT_CMN
                            339 	.globl _XDATA_MEM_CHECKSUM_CMN_2
                            340 	.globl _XDATA_MEM_CHECKSUM_CMN_1
                            341 	.globl _XDATA_MEM_CHECKSUM_CMN_0
                            342 	.globl _TEST5
                            343 	.globl _PM_CMN_REG2
                            344 	.globl _INPUT_CMN_PIN_REG3
                            345 	.globl __FIELDNAME_
                            346 	.globl _CMN_CALIBRATION
                            347 	.globl _OUTPUT_CMN_PIN_REG0
                            348 	.globl _SPD_CMN_REG1
                            349 	.globl _CLKGEN_CMN_REG1
                            350 	.globl _PLLCAL_REG1
                            351 	.globl _PLLCAL_REG0
                            352 	.globl _ANA_TSEN_CONTROL
                            353 	.globl _INPUT_CMN_PIN_REG2
                            354 	.globl _INPUT_CMN_PIN_REG1
                            355 	.globl _INPUT_CMN_PIN_REG0
                            356 	.globl _PM_CMN_REG1
                            357 	.globl _SYSTEM
                            358 	.globl _TEST4
                            359 	.globl _TEST3
                            360 	.globl _TEST2
                            361 	.globl _TEST1
                            362 	.globl _TEST0
                            363 	.globl _MCU_SYNC2
                            364 	.globl _MCU_SYNC1
                            365 	.globl _MEM_IRQ_CLEAR
                            366 	.globl _APB_CONTROL_REG
                            367 	.globl _ANA_IF_CMN_REG0
                            368 	.globl _MEM_IRQ_MASK
                            369 	.globl _MEM_IRQ
                            370 	.globl _ANA_IF_CMN_REG1
                            371 	.globl _MEM_CMN_ECC_ERR_ADDRESS0
                            372 	.globl _MCU_INFO_3
                            373 	.globl _MCU_INFO_2
                            374 	.globl _MCU_INFO_1
                            375 	.globl _MCU_INFO_0
                            376 	.globl _MEMORY_CONTROL_4
                            377 	.globl _MEMORY_CONTROL_3
                            378 	.globl _MEMORY_CONTROL_2
                            379 	.globl _MEMORY_CONTROL_1
                            380 	.globl _MEMORY_CONTROL_0
                            381 	.globl _MCU_DEBUG1
                            382 	.globl _MCU_DEBUG0
                            383 	.globl _MCU_CONTROL_4
                            384 	.globl _MCU_CONTROL_3
                            385 	.globl _MCU_CONTROL_2
                            386 	.globl _MCU_CONTROL_1
                            387 	.globl _MCU_CONTROL_0
                            388 	.globl _GLOB_L1_SUBSTATES_CFG
                            389 	.globl _GLOB_PIPE_REVISION
                            390 	.globl _GLOB_BIST_DATA_HI
                            391 	.globl _GLOB_BIST_SEQR_CFG
                            392 	.globl _GLOB_BIST_RESULT
                            393 	.globl _GLOB_BIST_MASK
                            394 	.globl _GLOB_BIST_START
                            395 	.globl _GLOB_BIST_LANE_TYPE
                            396 	.globl _GLOB_BIST_CTRL
                            397 	.globl _GLOB_DP_BAL_CFG4
                            398 	.globl _GLOB_DP_BAL_CFG2
                            399 	.globl _GLOB_DP_BAL_CFG0
                            400 	.globl _GLOB_PM_DP_CTRL
                            401 	.globl _GLOB_COUNTER_HI
                            402 	.globl _GLOB_COUNTER_CTRL
                            403 	.globl _GLOB_PM_CFG0
                            404 	.globl _GLOB_DP_SAL_CFG5
                            405 	.globl _GLOB_DP_SAL_CFG3
                            406 	.globl _GLOB_DP_SAL_CFG1
                            407 	.globl _GLOB_DP_SAL_CFG
                            408 	.globl _GLOB_MISC_CTRL
                            409 	.globl _GLOB_CLK_SRC_HI
                            410 	.globl _GLOB_CLK_SRC_LO
                            411 	.globl _GLOB_RST_CLK_CTRL
                            412 	.globl _DFE_STATIC_REG6
                            413 	.globl _DFE_STATIC_REG5
                            414 	.globl _DFE_STATIC_REG4
                            415 	.globl _DFE_STATIC_REG3
                            416 	.globl _DFE_STATIC_REG1
                            417 	.globl _DFE_STATIC_REG0
                            418 	.globl _RX_CMN_0
                            419 	.globl _SRIS_REG1
                            420 	.globl _SRIS_REG0
                            421 	.globl _DTX_PHY_ALIGN_REG2
                            422 	.globl _DTX_PHY_ALIGN_REG1
                            423 	.globl _DTX_PHY_ALIGN_REG0
                            424 	.globl _DTX_REG4
                            425 	.globl _DTX_REG3
                            426 	.globl _DTX_REG2
                            427 	.globl _DTX_REG1
                            428 	.globl _DTX_REG0
                            429 	.globl _TX_CMN_REG
                            430 	.globl _END_XDAT_LANE
                            431 	.globl _TRAIN_CONTROL_17
                            432 	.globl _TRAIN_CONTROL_16
                            433 	.globl _TRAIN_CONTROL_15
                            434 	.globl _TRAIN_CONTROL_14
                            435 	.globl _TRAIN_CONTROL_13
                            436 	.globl _ESM_ERR_N_CNT_LOW_LANE
                            437 	.globl _ESM_POP_N_CNT_LOW_LANE
                            438 	.globl _TRAIN_CONTROL_12
                            439 	.globl _TRAIN_CONTROL_11
                            440 	.globl _TRAIN_CONTROL_10
                            441 	.globl _TRAIN_CONTROL_9
                            442 	.globl _TRAIN_CONTROL_8
                            443 	.globl _TRAIN_CONTROL_7
                            444 	.globl _TRAIN_CONTROL_6
                            445 	.globl _TRAIN_CONTROL_5
                            446 	.globl _TRAIN_CONTROL_4
                            447 	.globl _TRAIN_CONTROL_3
                            448 	.globl _ESM_ERR_POP_CNT_HIGH_LANE
                            449 	.globl _ESM_ERR_P_CNT_LOW_LANE
                            450 	.globl _ESM_POP_P_CNT_LOW_LANE
                            451 	.globl _CDS_CTRL_REG1
                            452 	.globl _CDS_CTRL_REG0
                            453 	.globl _DFE_CONTROL_11
                            454 	.globl _DFE_CONTROL_10
                            455 	.globl _DFE_CONTROL_9
                            456 	.globl _DFE_CONTROL_8
                            457 	.globl _DFE_CONTROL_7
                            458 	.globl _DFE_TEST_5
                            459 	.globl _DFE_TEST_4
                            460 	.globl _DFE_TEST_1
                            461 	.globl _DFE_TEST_0
                            462 	.globl _DFE_CONTROL_6
                            463 	.globl _TRAIN_PARA_3
                            464 	.globl _TRAIN_PARA_2
                            465 	.globl _TRAIN_PARA_1
                            466 	.globl _TRAIN_PARA_0
                            467 	.globl _DLL_CAL
                            468 	.globl _RPTA_CONFIG_1
                            469 	.globl _RPTA_CONFIG_0
                            470 	.globl _TRAIN_CONTROL_2
                            471 	.globl _TRAIN_CONTROL_1
                            472 	.globl _TRAIN_CONTROL_0
                            473 	.globl _DFE_CONTROL_5
                            474 	.globl _DFE_CONTROL_4
                            475 	.globl _DFE_CONTROL_3
                            476 	.globl _DFE_CONTROL_2
                            477 	.globl _DFE_CONTROL_1
                            478 	.globl _DFE_CONTROL_0
                            479 	.globl _TRX_TRAIN_IF_TIMERS_ENABLE_LANE
                            480 	.globl _TRX_TRAIN_IF_TIMERS2_LANE
                            481 	.globl _TRX_TRAIN_IF_TIMERS1_LANE
                            482 	.globl _PHY_LOCAL_VALUE_LANE
                            483 	.globl _PHY_REMOTE_CTRL_VALUE_LANE
                            484 	.globl _PHY_REMOTE_CTRL_COMMAND_LANE
                            485 	.globl _CAL_SAVE_DATA3_LANE
                            486 	.globl _CAL_SAVE_DATA2_LANE
                            487 	.globl _CAL_SAVE_DATA1_LANE
                            488 	.globl _CAL_CTRL4_LANE
                            489 	.globl _CAL_CTRL3_LANE
                            490 	.globl _CAL_CTRL2_LANE
                            491 	.globl _CAL_CTRL1_LANE
                            492 	.globl _LANE_MARGIN_REG0
                            493 	.globl _EOM_VLD_REG4
                            494 	.globl _EOM_REG0
                            495 	.globl _EOM_ERR_REG3
                            496 	.globl _EOM_ERR_REG2
                            497 	.globl _EOM_ERR_REG1
                            498 	.globl _EOM_ERR_REG0
                            499 	.globl _EOM_VLD_REG3
                            500 	.globl _EOM_VLD_REG2
                            501 	.globl _EOM_VLD_REG1
                            502 	.globl _EOM_VLD_REG0
                            503 	.globl _DFE_STATIC_LANE_REG6
                            504 	.globl _DFE_STATIC_LANE_REG5
                            505 	.globl _DFE_STATIC_LANE_REG4
                            506 	.globl _DFE_STATIC_LANE_REG3
                            507 	.globl _DFE_STATIC_LANE_REG1
                            508 	.globl _DFE_STATIC_LANE_REG0
                            509 	.globl _DFE_DCE_REG0
                            510 	.globl _CAL_OFST_REG2
                            511 	.globl _CAL_OFST_REG1
                            512 	.globl _CAL_OFST_REG0
                            513 	.globl _DFE_READ_ODD_2C_REG8
                            514 	.globl _DFE_READ_EVEN_2C_REG8
                            515 	.globl _DFE_READ_ODD_2C_REG7
                            516 	.globl _DFE_READ_ODD_2C_REG6
                            517 	.globl _DFE_READ_ODD_2C_REG5
                            518 	.globl _DFE_READ_ODD_2C_REG4
                            519 	.globl _DFE_READ_ODD_2C_REG3
                            520 	.globl _DFE_READ_ODD_2C_REG2
                            521 	.globl _DFE_READ_ODD_2C_REG1
                            522 	.globl _DFE_READ_ODD_2C_REG0
                            523 	.globl _DFE_READ_EVEN_2C_REG7
                            524 	.globl _DFE_READ_EVEN_2C_REG6
                            525 	.globl _DFE_READ_EVEN_2C_REG5
                            526 	.globl _DFE_READ_EVEN_2C_REG4
                            527 	.globl _DFE_READ_EVEN_2C_REG3
                            528 	.globl _DFE_READ_EVEN_2C_REG2
                            529 	.globl _DFE_READ_EVEN_2C_REG1
                            530 	.globl _DFE_READ_EVEN_2C_REG0
                            531 	.globl _DFE_READ_ODD_SM_REG8
                            532 	.globl _DFE_READ_EVEN_SM_REG8
                            533 	.globl _DFE_READ_ODD_SM_REG7
                            534 	.globl _DFE_READ_ODD_SM_REG6
                            535 	.globl _DFE_READ_ODD_SM_REG5
                            536 	.globl _DFE_READ_ODD_SM_REG4
                            537 	.globl _DFE_READ_ODD_SM_REG3
                            538 	.globl _DFE_READ_ODD_SM_REG2
                            539 	.globl _DFE_READ_ODD_SM_REG1
                            540 	.globl _DFE_READ_ODD_SM_REG0
                            541 	.globl _DFE_READ_EVEN_SM_REG7
                            542 	.globl _DFE_READ_EVEN_SM_REG6
                            543 	.globl _DFE_READ_EVEN_SM_REG5
                            544 	.globl _DFE_READ_EVEN_SM_REG4
                            545 	.globl _DFE_READ_EVEN_SM_REG3
                            546 	.globl _DFE_READ_EVEN_SM_REG2
                            547 	.globl _DFE_READ_EVEN_SM_REG1
                            548 	.globl _DFE_READ_EVEN_SM_REG0
                            549 	.globl _DFE_FEXT_ODD_REG7
                            550 	.globl _DFE_FEXT_ODD_REG6
                            551 	.globl _DFE_FEXT_ODD_REG5
                            552 	.globl _DFE_FEXT_ODD_REG4
                            553 	.globl _DFE_FEXT_ODD_REG3
                            554 	.globl _DFE_FEXT_ODD_REG2
                            555 	.globl _DFE_FEXT_ODD_REG1
                            556 	.globl _DFE_FEXT_ODD_REG0
                            557 	.globl _DFE_FEXT_EVEN_REG7
                            558 	.globl _DFE_FEXT_EVEN_REG6
                            559 	.globl _DFE_FEXT_EVEN_REG5
                            560 	.globl _DFE_FEXT_EVEN_REG4
                            561 	.globl _DFE_FEXT_EVEN_REG3
                            562 	.globl _DFE_FEXT_EVEN_REG2
                            563 	.globl _DFE_FEXT_EVEN_REG1
                            564 	.globl _DFE_FEXT_EVEN_REG0
                            565 	.globl _DFE_DC_ODD_REG8
                            566 	.globl _DFE_DC_EVEN_REG8
                            567 	.globl _DFE_FEN_ODD_REG
                            568 	.globl _DFE_FEN_EVEN_REG
                            569 	.globl _DFE_STEP_REG1
                            570 	.globl _DFE_STEP_REG0
                            571 	.globl _DFE_ANA_REG1
                            572 	.globl _DFE_ANA_REG0
                            573 	.globl _DFE_CTRL_REG4
                            574 	.globl _RX_EQ_CLK_CTRL
                            575 	.globl _DFE_CTRL_REG3
                            576 	.globl _DFE_CTRL_REG2
                            577 	.globl _DFE_CTRL_REG1
                            578 	.globl _DFE_CTRL_REG0
                            579 	.globl _PT_COUNTER2
                            580 	.globl _PT_COUNTER1
                            581 	.globl _PT_COUNTER0
                            582 	.globl _PT_USER_PATTERN2
                            583 	.globl _PT_USER_PATTERN1
                            584 	.globl _PT_USER_PATTERN0
                            585 	.globl _PT_CONTROL1
                            586 	.globl _PT_CONTROL0
                            587 	.globl _XDATA_MEM_CHECKSUM_LANE1
                            588 	.globl _XDATA_MEM_CHECKSUM_LANE0
                            589 	.globl _MEM_ECC_ERR_ADDRESS0
                            590 	.globl _MCU_COMMAND0
                            591 	.globl _MCU_INT_CONTROL_13
                            592 	.globl _MCU_WDT_LANE
                            593 	.globl _MCU_IRQ_ISR_LANE
                            594 	.globl _ANA_IF_DFEO_REG0
                            595 	.globl _ANA_IF_DFEE_REG0
                            596 	.globl _ANA_IF_TRX_REG0
                            597 	.globl _EXT_INT_CONTROL
                            598 	.globl _MCU_DEBUG_LANE
                            599 	.globl _MCU_DEBUG3_LANE
                            600 	.globl _MCU_DEBUG2_LANE
                            601 	.globl _MCU_DEBUG1_LANE
                            602 	.globl _MCU_DEBUG0_LANE
                            603 	.globl _MCU_TIMER_CTRL_7_LANE
                            604 	.globl _MCU_TIMER_CTRL_6_LANE
                            605 	.globl _MCU_TIMER_CTRL_5_LANE
                            606 	.globl _MCU_TIMER_CTRL_4_LANE
                            607 	.globl _MCU_TIMER_CTRL_3_LANE
                            608 	.globl _MCU_TIMER_CTRL_2_LANE
                            609 	.globl _MCU_TIMER_CTRL_1_LANE
                            610 	.globl _MCU_MEM_REG2_LANE
                            611 	.globl _MCU_MEM_REG1_LANE
                            612 	.globl _MCU_IRQ_MASK_LANE
                            613 	.globl _MCU_IRQ_LANE
                            614 	.globl _MCU_TIMER3_CONTROL
                            615 	.globl _MCU_TIMER2_CONTROL
                            616 	.globl _MCU_TIMER1_CONTROL
                            617 	.globl _MCU_TIMER0_CONTROL
                            618 	.globl _MCU_TIMER_CONTROL
                            619 	.globl _MCU_INT12_CONTROL
                            620 	.globl _MCU_INT11_CONTROL
                            621 	.globl _MCU_INT10_CONTROL
                            622 	.globl _MCU_INT9_CONTROL
                            623 	.globl _MCU_INT8_CONTROL
                            624 	.globl _MCU_INT7_CONTROL
                            625 	.globl _MCU_INT6_CONTROL
                            626 	.globl _MCU_INT5_CONTROL
                            627 	.globl _MCU_INT4_CONTROL
                            628 	.globl _MCU_INT3_CONTROL
                            629 	.globl _MCU_INT2_CONTROL
                            630 	.globl _MCU_INT1_CONTROL
                            631 	.globl _MCU_INT0_CONTROL
                            632 	.globl _MCU_STATUS3_LANE
                            633 	.globl _MCU_STATUS2_LANE
                            634 	.globl _MCU_STATUS1_LANE
                            635 	.globl _MCU_STATUS0_LANE
                            636 	.globl _LANE_SYSTEM0
                            637 	.globl _CACHE_DEBUG1
                            638 	.globl _CACHE_DEBUG0
                            639 	.globl _MCU_GPIO
                            640 	.globl _MCU_CONTROL_LANE
                            641 	.globl _LANE_32G_PRESET_CFG16_LANE
                            642 	.globl _LANE_32G_PRESET_CFG14_LANE
                            643 	.globl _LANE_32G_PRESET_CFG12_LANE
                            644 	.globl _LANE_32G_PRESET_CFG10_LANE
                            645 	.globl _LANE_32G_PRESET_CFG8_LANE
                            646 	.globl _LANE_32G_PRESET_CFG6_LANE
                            647 	.globl _LANE_32G_PRESET_CFG4_LANE
                            648 	.globl _LANE_32G_PRESET_CFG2_LANE
                            649 	.globl _LANE_32G_PRESET_CFG0_LANE
                            650 	.globl _LANE_EQ_32G_CFG0_LANE
                            651 	.globl _LANE_16G_PRESET_CFG16_LANE
                            652 	.globl _LANE_16G_PRESET_CFG14_LANE
                            653 	.globl _LANE_16G_PRESET_CFG12_LANE
                            654 	.globl _LANE_16G_PRESET_CFG10_LANE
                            655 	.globl _LANE_16G_PRESET_CFG8_LANE
                            656 	.globl _LANE_16G_PRESET_CFG6_LANE
                            657 	.globl _LANE_16G_PRESET_CFG4_LANE
                            658 	.globl _LANE_16G_PRESET_CFG2_LANE
                            659 	.globl _LANE_16G_PRESET_CFG0_LANE
                            660 	.globl _LANE_EQ_16G_CFG0_LANE
                            661 	.globl _LANE_REMOTE_SET_LANE
                            662 	.globl _LANE_COEFF_MAX0_LANE
                            663 	.globl _LANE_PRESET_CFG16_LANE
                            664 	.globl _LANE_PRESET_CFG14_LANE
                            665 	.globl _LANE_PRESET_CFG12_LANE
                            666 	.globl _LANE_PRESET_CFG10_LANE
                            667 	.globl _LANE_PRESET_CFG8_LANE
                            668 	.globl _LANE_PRESET_CFG6_LANE
                            669 	.globl _LANE_PRESET_CFG4_LANE
                            670 	.globl _LANE_PRESET_CFG2_LANE
                            671 	.globl _LANE_PRESET_CFG0_LANE
                            672 	.globl _LANE_EQ_CFG1_LANE
                            673 	.globl _LANE_EQ_CFG0_LANE
                            674 	.globl _LANE_USB_DP_CFG2_LANE
                            675 	.globl _LANE_USB_DP_CFG1_LANE
                            676 	.globl _LANE_DP_PIE8_CFG0_LANE
                            677 	.globl _LANE_CFG_STATUS3_LANE
                            678 	.globl _LANE_CFG4
                            679 	.globl _LANE_CFG2_LANE
                            680 	.globl _LANE_CFG_STATUS2_LANE
                            681 	.globl _LANE_STATUS0
                            682 	.globl _LANE_CFG0
                            683 	.globl _SQ_REG0
                            684 	.globl _DTL_REG3
                            685 	.globl _DTL_REG2
                            686 	.globl _DTL_REG1
                            687 	.globl _DTL_REG0
                            688 	.globl _RX_LANE_INTERRUPT_REG1
                            689 	.globl _RX_CALIBRATION_REG
                            690 	.globl _INPUT_RX_PIN_REG3_LANE
                            691 	.globl _RX_DATA_PATH_REG
                            692 	.globl _RX_LANE_INTERRUPT_MASK
                            693 	.globl _RX_LANE_INTERRUPT
                            694 	.globl _CDR_LOCK_REG
                            695 	.globl _FRAME_SYNC_DET_REG6
                            696 	.globl _FRAME_SYNC_DET_REG5
                            697 	.globl _FRAME_SYNC_DET_REG4
                            698 	.globl _FRAME_SYNC_DET_REG3
                            699 	.globl _FRAME_SYNC_DET_REG2
                            700 	.globl _FRAME_SYNC_DET_REG1
                            701 	.globl _FRAME_SYNC_DET_REG0
                            702 	.globl _CLKGEN_RX_LANE_REG1_LANE
                            703 	.globl _DIG_RX_RSVD_REG0
                            704 	.globl _SPD_CTRL_RX_LANE_REG1_LANE
                            705 	.globl _INPUT_RX_PIN_REG2_LANE
                            706 	.globl _INPUT_RX_PIN_REG1_LANE
                            707 	.globl _INPUT_RX_PIN_REG0_LANE
                            708 	.globl _RX_SYSTEM_LANE
                            709 	.globl _PM_CTRL_RX_LANE_REG1_LANE
                            710 	.globl _MON_TOP
                            711 	.globl _ANALOG_TX_REALTIME_REG_1
                            712 	.globl _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE
                            713 	.globl _PM_CTRL_INTERRUPT_ISR_REG1_LANE
                            714 	.globl __FIELDNAME__LANE
                            715 	.globl _INPUT_TX_PIN_REG5_LANE
                            716 	.globl _DIG_TX_RSVD_REG0
                            717 	.globl _TX_CALIBRATION_LANE
                            718 	.globl _INPUT_TX_PIN_REG4_LANE
                            719 	.globl _TX_SYSTEM_LANE
                            720 	.globl _SPD_CTRL_TX_LANE_REG1_LANE
                            721 	.globl _SPD_CTRL_INTERRUPT_REG2
                            722 	.globl _SPD_CTRL_INTERRUPT_REG1_LANE
                            723 	.globl _TX_SPEED_CONVERT_LANE
                            724 	.globl _CLKGEN_TX_LANE_REG1_LANE
                            725 	.globl _PM_CTRL_INTERRUPT_REG2
                            726 	.globl _PM_CTRL_INTERRUPT_REG1_LANE
                            727 	.globl _INPUT_TX_PIN_REG3_LANE
                            728 	.globl _INPUT_TX_PIN_REG2_LANE
                            729 	.globl _INPUT_TX_PIN_REG1_LANE
                            730 	.globl _INPUT_TX_PIN_REG0_LANE
                            731 	.globl _PM_CTRL_TX_LANE_REG2_LANE
                            732 	.globl _PM_CTRL_TX_LANE_REG1_LANE
                            733 	.globl _UPHY14_CMN_ANAREG_TOP_214
                            734 	.globl _UPHY14_CMN_ANAREG_TOP_213
                            735 	.globl _UPHY14_CMN_ANAREG_TOP_212
                            736 	.globl _UPHY14_CMN_ANAREG_TOP_211
                            737 	.globl _UPHY14_CMN_ANAREG_TOP_210
                            738 	.globl _UPHY14_CMN_ANAREG_TOP_209
                            739 	.globl _UPHY14_CMN_ANAREG_TOP_208
                            740 	.globl _UPHY14_CMN_ANAREG_TOP_207
                            741 	.globl _UPHY14_CMN_ANAREG_TOP_206
                            742 	.globl _UPHY14_CMN_ANAREG_TOP_205
                            743 	.globl _UPHY14_CMN_ANAREG_TOP_204
                            744 	.globl _UPHY14_CMN_ANAREG_TOP_203
                            745 	.globl _UPHY14_CMN_ANAREG_TOP_202
                            746 	.globl _UPHY14_CMN_ANAREG_TOP_201
                            747 	.globl _UPHY14_CMN_ANAREG_TOP_200
                            748 	.globl _UPHY14_CMN_ANAREG_TOP_199
                            749 	.globl _UPHY14_CMN_ANAREG_TOP_198
                            750 	.globl _UPHY14_CMN_ANAREG_TOP_197
                            751 	.globl _UPHY14_CMN_ANAREG_TOP_196
                            752 	.globl _UPHY14_CMN_ANAREG_TOP_195
                            753 	.globl _UPHY14_CMN_ANAREG_TOP_194
                            754 	.globl _UPHY14_CMN_ANAREG_TOP_193
                            755 	.globl _UPHY14_CMN_ANAREG_TOP_192
                            756 	.globl _UPHY14_CMN_ANAREG_TOP_191
                            757 	.globl _UPHY14_CMN_ANAREG_TOP_190
                            758 	.globl _UPHY14_CMN_ANAREG_TOP_189
                            759 	.globl _UPHY14_CMN_ANAREG_TOP_188
                            760 	.globl _UPHY14_CMN_ANAREG_TOP_187
                            761 	.globl _UPHY14_CMN_ANAREG_TOP_186
                            762 	.globl _UPHY14_CMN_ANAREG_TOP_185
                            763 	.globl _UPHY14_CMN_ANAREG_TOP_184
                            764 	.globl _UPHY14_CMN_ANAREG_TOP_183
                            765 	.globl _UPHY14_CMN_ANAREG_TOP_182
                            766 	.globl _UPHY14_CMN_ANAREG_TOP_181
                            767 	.globl _UPHY14_CMN_ANAREG_TOP_180
                            768 	.globl _UPHY14_CMN_ANAREG_TOP_179
                            769 	.globl _UPHY14_CMN_ANAREG_TOP_178
                            770 	.globl _UPHY14_CMN_ANAREG_TOP_177
                            771 	.globl _UPHY14_CMN_ANAREG_TOP_176
                            772 	.globl _UPHY14_CMN_ANAREG_TOP_175
                            773 	.globl _UPHY14_CMN_ANAREG_TOP_174
                            774 	.globl _UPHY14_CMN_ANAREG_TOP_173
                            775 	.globl _UPHY14_CMN_ANAREG_TOP_172
                            776 	.globl _UPHY14_CMN_ANAREG_TOP_171
                            777 	.globl _UPHY14_CMN_ANAREG_TOP_170
                            778 	.globl _UPHY14_CMN_ANAREG_TOP_169
                            779 	.globl _UPHY14_CMN_ANAREG_TOP_168
                            780 	.globl _UPHY14_CMN_ANAREG_TOP_167
                            781 	.globl _UPHY14_CMN_ANAREG_TOP_166
                            782 	.globl _UPHY14_CMN_ANAREG_TOP_165
                            783 	.globl _UPHY14_CMN_ANAREG_TOP_164
                            784 	.globl _UPHY14_CMN_ANAREG_TOP_163
                            785 	.globl _UPHY14_CMN_ANAREG_TOP_162
                            786 	.globl _UPHY14_CMN_ANAREG_TOP_161
                            787 	.globl _UPHY14_CMN_ANAREG_TOP_160
                            788 	.globl _UPHY14_CMN_ANAREG_TOP_159
                            789 	.globl _UPHY14_CMN_ANAREG_TOP_158
                            790 	.globl _UPHY14_CMN_ANAREG_TOP_157
                            791 	.globl _UPHY14_CMN_ANAREG_TOP_156
                            792 	.globl _UPHY14_CMN_ANAREG_TOP_155
                            793 	.globl _UPHY14_CMN_ANAREG_TOP_154
                            794 	.globl _UPHY14_CMN_ANAREG_TOP_153
                            795 	.globl _UPHY14_CMN_ANAREG_TOP_152
                            796 	.globl _UPHY14_CMN_ANAREG_TOP_151
                            797 	.globl _UPHY14_CMN_ANAREG_TOP_150
                            798 	.globl _UPHY14_CMN_ANAREG_TOP_149
                            799 	.globl _UPHY14_CMN_ANAREG_TOP_148
                            800 	.globl _UPHY14_CMN_ANAREG_TOP_147
                            801 	.globl _UPHY14_CMN_ANAREG_TOP_146
                            802 	.globl _UPHY14_CMN_ANAREG_TOP_145
                            803 	.globl _UPHY14_CMN_ANAREG_TOP_144
                            804 	.globl _UPHY14_CMN_ANAREG_TOP_143
                            805 	.globl _UPHY14_CMN_ANAREG_TOP_142
                            806 	.globl _UPHY14_CMN_ANAREG_TOP_141
                            807 	.globl _UPHY14_CMN_ANAREG_TOP_140
                            808 	.globl _UPHY14_CMN_ANAREG_TOP_139
                            809 	.globl _UPHY14_CMN_ANAREG_TOP_138
                            810 	.globl _UPHY14_CMN_ANAREG_TOP_137
                            811 	.globl _UPHY14_CMN_ANAREG_TOP_136
                            812 	.globl _UPHY14_CMN_ANAREG_TOP_135
                            813 	.globl _UPHY14_CMN_ANAREG_TOP_134
                            814 	.globl _UPHY14_CMN_ANAREG_TOP_133
                            815 	.globl _UPHY14_CMN_ANAREG_TOP_132
                            816 	.globl _UPHY14_CMN_ANAREG_TOP_131
                            817 	.globl _UPHY14_CMN_ANAREG_TOP_130
                            818 	.globl _UPHY14_CMN_ANAREG_TOP_129
                            819 	.globl _UPHY14_CMN_ANAREG_TOP_128
                            820 	.globl _ANA_DFEO_REG_0B
                            821 	.globl _ANA_DFEO_REG_0A
                            822 	.globl _ANA_DFEO_REG_09
                            823 	.globl _ANA_DFEO_REG_08
                            824 	.globl _ANA_DFEO_REG_07
                            825 	.globl _ANA_DFEO_REG_06
                            826 	.globl _ANA_DFEO_REG_05
                            827 	.globl _ANA_DFEO_REG_04
                            828 	.globl _ANA_DFEO_REG_03
                            829 	.globl _ANA_DFEO_REG_02
                            830 	.globl _ANA_DFEO_REG_01
                            831 	.globl _ANA_DFEO_REG_00
                            832 	.globl _ANA_DFEO_REG_27
                            833 	.globl _ANA_DFEO_REG_26
                            834 	.globl _ANA_DFEO_REG_25
                            835 	.globl _ANA_DFEO_REG_24
                            836 	.globl _ANA_DFEO_REG_23
                            837 	.globl _ANA_DFEO_REG_22
                            838 	.globl _ANA_DFEO_REG_21
                            839 	.globl _ANA_DFEO_REG_20
                            840 	.globl _ANA_DFEO_REG_1F
                            841 	.globl _ANA_DFEO_REG_1E
                            842 	.globl _ANA_DFEO_REG_1D
                            843 	.globl _ANA_DFEO_REG_1C
                            844 	.globl _ANA_DFEO_REG_1B
                            845 	.globl _ANA_DFEO_REG_1A
                            846 	.globl _ANA_DFEO_REG_19
                            847 	.globl _ANA_DFEO_REG_18
                            848 	.globl _ANA_DFEO_REG_17
                            849 	.globl _ANA_DFEO_REG_16
                            850 	.globl _ANA_DFEO_REG_15
                            851 	.globl _ANA_DFEO_REG_14
                            852 	.globl _ANA_DFEO_REG_13
                            853 	.globl _ANA_DFEO_REG_12
                            854 	.globl _ANA_DFEO_REG_11
                            855 	.globl _ANA_DFEO_REG_10
                            856 	.globl _ANA_DFEO_REG_0F
                            857 	.globl _ANA_DFEO_REG_0E
                            858 	.globl _ANA_DFEO_REG_0D
                            859 	.globl _ANA_DFEO_REG_0C
                            860 	.globl _ANA_DFEE_REG_1D
                            861 	.globl _ANA_DFEE_REG_1C
                            862 	.globl _ANA_DFEE_REG_1B
                            863 	.globl _ANA_DFEE_REG_1A
                            864 	.globl _ANA_DFEE_REG_19
                            865 	.globl _ANA_DFEE_REG_18
                            866 	.globl _ANA_DFEE_REG_17
                            867 	.globl _ANA_DFEE_REG_16
                            868 	.globl _ANA_DFEE_REG_15
                            869 	.globl _ANA_DFEE_REG_14
                            870 	.globl _ANA_DFEE_REG_13
                            871 	.globl _ANA_DFEE_REG_12
                            872 	.globl _ANA_DFEE_REG_11
                            873 	.globl _ANA_DFEE_REG_10
                            874 	.globl _ANA_DFEE_REG_0F
                            875 	.globl _ANA_DFEE_REG_0E
                            876 	.globl _ANA_DFEE_REG_0D
                            877 	.globl _ANA_DFEE_REG_0C
                            878 	.globl _ANA_DFEE_REG_0B
                            879 	.globl _ANA_DFEE_REG_0A
                            880 	.globl _ANA_DFEE_REG_09
                            881 	.globl _ANA_DFEE_REG_08
                            882 	.globl _ANA_DFEE_REG_07
                            883 	.globl _ANA_DFEE_REG_06
                            884 	.globl _ANA_DFEE_REG_05
                            885 	.globl _ANA_DFEE_REG_04
                            886 	.globl _ANA_DFEE_REG_03
                            887 	.globl _ANA_DFEE_REG_02
                            888 	.globl _ANA_DFEE_REG_01
                            889 	.globl _ANA_DFEE_REG_00
                            890 	.globl _ANA_DFEE_REG_27
                            891 	.globl _ANA_DFEE_REG_26
                            892 	.globl _ANA_DFEE_REG_25
                            893 	.globl _ANA_DFEE_REG_24
                            894 	.globl _ANA_DFEE_REG_23
                            895 	.globl _ANA_DFEE_REG_22
                            896 	.globl _ANA_DFEE_REG_21
                            897 	.globl _ANA_DFEE_REG_20
                            898 	.globl _ANA_DFEE_REG_1F
                            899 	.globl _ANA_DFEE_REG_1E
                            900 	.globl _UPHY14_TRX_ANAREG_BOT_32
                            901 	.globl _UPHY14_TRX_ANAREG_BOT_31
                            902 	.globl _UPHY14_TRX_ANAREG_BOT_30
                            903 	.globl _UPHY14_TRX_ANAREG_BOT_29
                            904 	.globl _UPHY14_TRX_ANAREG_BOT_28
                            905 	.globl _UPHY14_TRX_ANAREG_BOT_27
                            906 	.globl _UPHY14_TRX_ANAREG_BOT_26
                            907 	.globl _UPHY14_TRX_ANAREG_BOT_25
                            908 	.globl _UPHY14_TRX_ANAREG_BOT_24
                            909 	.globl _UPHY14_TRX_ANAREG_BOT_23
                            910 	.globl _UPHY14_TRX_ANAREG_BOT_22
                            911 	.globl _UPHY14_TRX_ANAREG_BOT_21
                            912 	.globl _UPHY14_TRX_ANAREG_BOT_20
                            913 	.globl _UPHY14_TRX_ANAREG_BOT_19
                            914 	.globl _UPHY14_TRX_ANAREG_BOT_18
                            915 	.globl _UPHY14_TRX_ANAREG_BOT_17
                            916 	.globl _UPHY14_TRX_ANAREG_BOT_16
                            917 	.globl _UPHY14_TRX_ANAREG_BOT_15
                            918 	.globl _UPHY14_TRX_ANAREG_BOT_14
                            919 	.globl _UPHY14_TRX_ANAREG_BOT_13
                            920 	.globl _UPHY14_TRX_ANAREG_BOT_12
                            921 	.globl _UPHY14_TRX_ANAREG_BOT_11
                            922 	.globl _UPHY14_TRX_ANAREG_BOT_10
                            923 	.globl _UPHY14_TRX_ANAREG_BOT_9
                            924 	.globl _UPHY14_TRX_ANAREG_BOT_8
                            925 	.globl _UPHY14_TRX_ANAREG_BOT_7
                            926 	.globl _UPHY14_TRX_ANAREG_BOT_6
                            927 	.globl _UPHY14_TRX_ANAREG_BOT_5
                            928 	.globl _UPHY14_TRX_ANAREG_BOT_4
                            929 	.globl _UPHY14_TRX_ANAREG_BOT_3
                            930 	.globl _UPHY14_TRX_ANAREG_BOT_2
                            931 	.globl _UPHY14_TRX_ANAREG_BOT_1
                            932 	.globl _UPHY14_TRX_ANAREG_BOT_0
                            933 	.globl _UPHY14_TRX_ANAREG_TOP_157
                            934 	.globl _UPHY14_TRX_ANAREG_TOP_156
                            935 	.globl _UPHY14_TRX_ANAREG_TOP_155
                            936 	.globl _UPHY14_TRX_ANAREG_TOP_154
                            937 	.globl _UPHY14_TRX_ANAREG_TOP_153
                            938 	.globl _UPHY14_TRX_ANAREG_TOP_152
                            939 	.globl _UPHY14_TRX_ANAREG_TOP_151
                            940 	.globl _UPHY14_TRX_ANAREG_TOP_150
                            941 	.globl _UPHY14_TRX_ANAREG_TOP_149
                            942 	.globl _UPHY14_TRX_ANAREG_TOP_148
                            943 	.globl _UPHY14_TRX_ANAREG_TOP_147
                            944 	.globl _UPHY14_TRX_ANAREG_TOP_146
                            945 	.globl _UPHY14_TRX_ANAREG_TOP_145
                            946 	.globl _UPHY14_TRX_ANAREG_TOP_144
                            947 	.globl _UPHY14_TRX_ANAREG_TOP_143
                            948 	.globl _UPHY14_TRX_ANAREG_TOP_142
                            949 	.globl _UPHY14_TRX_ANAREG_TOP_141
                            950 	.globl _UPHY14_TRX_ANAREG_TOP_140
                            951 	.globl _UPHY14_TRX_ANAREG_TOP_139
                            952 	.globl _UPHY14_TRX_ANAREG_TOP_138
                            953 	.globl _UPHY14_TRX_ANAREG_TOP_137
                            954 	.globl _UPHY14_TRX_ANAREG_TOP_136
                            955 	.globl _UPHY14_TRX_ANAREG_TOP_135
                            956 	.globl _UPHY14_TRX_ANAREG_TOP_134
                            957 	.globl _UPHY14_TRX_ANAREG_TOP_133
                            958 	.globl _UPHY14_TRX_ANAREG_TOP_132
                            959 	.globl _UPHY14_TRX_ANAREG_TOP_131
                            960 	.globl _UPHY14_TRX_ANAREG_TOP_130
                            961 	.globl _UPHY14_TRX_ANAREG_TOP_129
                            962 	.globl _UPHY14_TRX_ANAREG_TOP_128
                            963 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_143
                            964 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_142
                            965 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_141
                            966 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_140
                            967 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_139
                            968 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_138
                            969 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_137
                            970 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_136
                            971 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_135
                            972 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_134
                            973 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_133
                            974 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_132
                            975 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_131
                            976 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_130
                            977 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_129
                            978 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_128
                            979 	.globl _Calibration
                            980 	.globl _Cal_Cont
                            981 	.globl _phy_check_lane
                            982 	.globl _mcu_align_0
                            983 	.globl _all_cal_ext
                            984 	.globl _clear_normal_mode_cal_en
                            985 ;--------------------------------------------------------
                            986 ; special function registers
                            987 ;--------------------------------------------------------
                            988 	.area RSEG    (ABS,DATA)
   0000                     989 	.org 0x0000
                    0080    990 _P0	=	0x0080
                    0082    991 _DPL	=	0x0082
                    0083    992 _DPH	=	0x0083
                    0086    993 _WDTREL	=	0x0086
                    0087    994 _PCON	=	0x0087
                    0088    995 _TCON	=	0x0088
                    0089    996 _TMOD	=	0x0089
                    008A    997 _TL0	=	0x008a
                    008B    998 _TL1	=	0x008b
                    008C    999 _TH0	=	0x008c
                    008D   1000 _TH1	=	0x008d
                    008E   1001 _CKCON	=	0x008e
                    0090   1002 _P1	=	0x0090
                    0092   1003 _DPS	=	0x0092
                    0094   1004 _PSBANK	=	0x0094
                    0098   1005 _SCON	=	0x0098
                    0099   1006 _SBUF	=	0x0099
                    009A   1007 _IEN2	=	0x009a
                    00A0   1008 _P2	=	0x00a0
                    00A1   1009 _DMAS0	=	0x00a1
                    00A2   1010 _DMAS1	=	0x00a2
                    00A3   1011 _DMAS2	=	0x00a3
                    00A4   1012 _DMAT0	=	0x00a4
                    00A5   1013 _DMAT1	=	0x00a5
                    00A6   1014 _DMAT2	=	0x00a6
                    00A8   1015 _IEN0	=	0x00a8
                    00A9   1016 _IP0	=	0x00a9
                    00AA   1017 _S0RELL	=	0x00aa
                    00B0   1018 _P3	=	0x00b0
                    00B1   1019 _DMAC0	=	0x00b1
                    00B2   1020 _DMAC1	=	0x00b2
                    00B3   1021 _DMAC2	=	0x00b3
                    00B4   1022 _DMASEL	=	0x00b4
                    00B5   1023 _DMAM0	=	0x00b5
                    00B6   1024 _DMAM1	=	0x00b6
                    00B8   1025 _IEN1	=	0x00b8
                    00B9   1026 _IP1	=	0x00b9
                    00BA   1027 _S0RELH	=	0x00ba
                    00C0   1028 _IRCON	=	0x00c0
                    00C1   1029 _CCEN	=	0x00c1
                    00C8   1030 _T2CON	=	0x00c8
                    00CA   1031 _RCAP2L	=	0x00ca
                    00CB   1032 _RCAP2H	=	0x00cb
                    00CC   1033 _TL2	=	0x00cc
                    00CD   1034 _TH2	=	0x00cd
                    00D0   1035 _PSW	=	0x00d0
                    00D8   1036 _ADCON	=	0x00d8
                    00E0   1037 _ACC	=	0x00e0
                    00E8   1038 _EIE	=	0x00e8
                    00F0   1039 _B	=	0x00f0
                    00F7   1040 _SRST	=	0x00f7
                    8C8A   1041 _TMR0	=	0x8c8a
                    8D8B   1042 _TMR1	=	0x8d8b
                    CDCC   1043 _TMR2	=	0xcdcc
                    A2A1   1044 _DMASA	=	0xa2a1
                    A5A4   1045 _DMATA	=	0xa5a4
                    B2B1   1046 _DMAC	=	0xb2b1
                           1047 ;--------------------------------------------------------
                           1048 ; special function bits
                           1049 ;--------------------------------------------------------
                           1050 	.area RSEG    (ABS,DATA)
   0000                    1051 	.org 0x0000
                    0080   1052 _P0_0	=	0x0080
                    0081   1053 _P0_1	=	0x0081
                    0082   1054 _P0_2	=	0x0082
                    0083   1055 _P0_3	=	0x0083
                    0084   1056 _P0_4	=	0x0084
                    0085   1057 _P0_5	=	0x0085
                    0086   1058 _P0_6	=	0x0086
                    0087   1059 _P0_7	=	0x0087
                    0090   1060 _P1_0	=	0x0090
                    0091   1061 _P1_1	=	0x0091
                    0092   1062 _P1_2	=	0x0092
                    0093   1063 _P1_3	=	0x0093
                    0094   1064 _P1_4	=	0x0094
                    0095   1065 _P1_5	=	0x0095
                    0096   1066 _P1_6	=	0x0096
                    0097   1067 _P1_7	=	0x0097
                    00A0   1068 _P2_0	=	0x00a0
                    00A1   1069 _P2_1	=	0x00a1
                    00A2   1070 _P2_2	=	0x00a2
                    00A3   1071 _P2_3	=	0x00a3
                    00A4   1072 _P2_4	=	0x00a4
                    00A5   1073 _P2_5	=	0x00a5
                    00A6   1074 _P2_6	=	0x00a6
                    00A7   1075 _P2_7	=	0x00a7
                    00B0   1076 _P3_0	=	0x00b0
                    00B1   1077 _P3_1	=	0x00b1
                    00B2   1078 _P3_2	=	0x00b2
                    00B3   1079 _P3_3	=	0x00b3
                    00B4   1080 _P3_4	=	0x00b4
                    00B5   1081 _P3_5	=	0x00b5
                    00B6   1082 _P3_6	=	0x00b6
                    00B7   1083 _P3_7	=	0x00b7
                    0088   1084 _IT0	=	0x0088
                    0089   1085 _IE0	=	0x0089
                    008A   1086 _IT1	=	0x008a
                    008B   1087 _IE1	=	0x008b
                    008C   1088 _TR0	=	0x008c
                    008D   1089 _TF0	=	0x008d
                    008E   1090 _TR1	=	0x008e
                    008F   1091 _TF1	=	0x008f
                    00A8   1092 _EX0	=	0x00a8
                    00A9   1093 _ET0	=	0x00a9
                    00AA   1094 _EX1	=	0x00aa
                    00AB   1095 _ET1	=	0x00ab
                    00AC   1096 _ES	=	0x00ac
                    00AD   1097 _ET2	=	0x00ad
                    00AE   1098 _WDT	=	0x00ae
                    00AF   1099 _EA	=	0x00af
                    00B8   1100 _EX7	=	0x00b8
                    00B9   1101 _EX2	=	0x00b9
                    00BA   1102 _EX3	=	0x00ba
                    00BB   1103 _EX4	=	0x00bb
                    00BC   1104 _EX5	=	0x00bc
                    00BD   1105 _EX6	=	0x00bd
                    00BE   1106 _PS1	=	0x00be
                    009A   1107 _ES1	=	0x009a
                    009B   1108 _EX8	=	0x009b
                    009C   1109 _EX9	=	0x009c
                    009D   1110 _EX10	=	0x009d
                    009E   1111 _EX11	=	0x009e
                    009F   1112 _EX12	=	0x009f
                    0098   1113 _RI	=	0x0098
                    0099   1114 _TI	=	0x0099
                    00C6   1115 _TF2	=	0x00c6
                           1116 ;--------------------------------------------------------
                           1117 ; overlayable register banks
                           1118 ;--------------------------------------------------------
                           1119 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1120 	.ds 8
                           1121 ;--------------------------------------------------------
                           1122 ; overlayable bit register bank
                           1123 ;--------------------------------------------------------
                           1124 	.area BIT_BANK	(REL,OVR,DATA)
   0000                    1125 bits:
   0000                    1126 	.ds 1
                    8000   1127 	b0 = bits[0]
                    8100   1128 	b1 = bits[1]
                    8200   1129 	b2 = bits[2]
                    8300   1130 	b3 = bits[3]
                    8400   1131 	b4 = bits[4]
                    8500   1132 	b5 = bits[5]
                    8600   1133 	b6 = bits[6]
                    8700   1134 	b7 = bits[7]
                           1135 ;--------------------------------------------------------
                           1136 ; internal ram data
                           1137 ;--------------------------------------------------------
                           1138 	.area DSEG    (DATA)
                           1139 ;--------------------------------------------------------
                           1140 ; overlayable items in internal ram 
                           1141 ;--------------------------------------------------------
                           1142 	.area OSEG    (OVR,DATA)
                           1143 ;--------------------------------------------------------
                           1144 ; indirectly addressable internal ram data
                           1145 ;--------------------------------------------------------
                           1146 	.area ISEG    (DATA)
                           1147 ;--------------------------------------------------------
                           1148 ; absolute internal ram data
                           1149 ;--------------------------------------------------------
                           1150 	.area IABS    (ABS,DATA)
                           1151 	.area IABS    (ABS,DATA)
                           1152 ;--------------------------------------------------------
                           1153 ; bit data
                           1154 ;--------------------------------------------------------
                           1155 	.area BSEG    (BIT)
                           1156 ;--------------------------------------------------------
                           1157 ; paged external ram data
                           1158 ;--------------------------------------------------------
                           1159 	.area PSEG    (PAG,XDATA)
                           1160 ;--------------------------------------------------------
                           1161 ; external ram data
                           1162 ;--------------------------------------------------------
                           1163 	.area XSEG    (XDATA)
                    1000   1164 _UPHY14_TRX_LANEPLL_ANAREG_TOP_128	=	0x1000
                    1004   1165 _UPHY14_TRX_LANEPLL_ANAREG_TOP_129	=	0x1004
                    1008   1166 _UPHY14_TRX_LANEPLL_ANAREG_TOP_130	=	0x1008
                    100C   1167 _UPHY14_TRX_LANEPLL_ANAREG_TOP_131	=	0x100c
                    1010   1168 _UPHY14_TRX_LANEPLL_ANAREG_TOP_132	=	0x1010
                    1014   1169 _UPHY14_TRX_LANEPLL_ANAREG_TOP_133	=	0x1014
                    1018   1170 _UPHY14_TRX_LANEPLL_ANAREG_TOP_134	=	0x1018
                    101C   1171 _UPHY14_TRX_LANEPLL_ANAREG_TOP_135	=	0x101c
                    1020   1172 _UPHY14_TRX_LANEPLL_ANAREG_TOP_136	=	0x1020
                    1024   1173 _UPHY14_TRX_LANEPLL_ANAREG_TOP_137	=	0x1024
                    1028   1174 _UPHY14_TRX_LANEPLL_ANAREG_TOP_138	=	0x1028
                    102C   1175 _UPHY14_TRX_LANEPLL_ANAREG_TOP_139	=	0x102c
                    1030   1176 _UPHY14_TRX_LANEPLL_ANAREG_TOP_140	=	0x1030
                    1034   1177 _UPHY14_TRX_LANEPLL_ANAREG_TOP_141	=	0x1034
                    1038   1178 _UPHY14_TRX_LANEPLL_ANAREG_TOP_142	=	0x1038
                    103C   1179 _UPHY14_TRX_LANEPLL_ANAREG_TOP_143	=	0x103c
                    0200   1180 _UPHY14_TRX_ANAREG_TOP_128	=	0x0200
                    0204   1181 _UPHY14_TRX_ANAREG_TOP_129	=	0x0204
                    0208   1182 _UPHY14_TRX_ANAREG_TOP_130	=	0x0208
                    020C   1183 _UPHY14_TRX_ANAREG_TOP_131	=	0x020c
                    0210   1184 _UPHY14_TRX_ANAREG_TOP_132	=	0x0210
                    0214   1185 _UPHY14_TRX_ANAREG_TOP_133	=	0x0214
                    0218   1186 _UPHY14_TRX_ANAREG_TOP_134	=	0x0218
                    021C   1187 _UPHY14_TRX_ANAREG_TOP_135	=	0x021c
                    0220   1188 _UPHY14_TRX_ANAREG_TOP_136	=	0x0220
                    0224   1189 _UPHY14_TRX_ANAREG_TOP_137	=	0x0224
                    0228   1190 _UPHY14_TRX_ANAREG_TOP_138	=	0x0228
                    022C   1191 _UPHY14_TRX_ANAREG_TOP_139	=	0x022c
                    0230   1192 _UPHY14_TRX_ANAREG_TOP_140	=	0x0230
                    0234   1193 _UPHY14_TRX_ANAREG_TOP_141	=	0x0234
                    0238   1194 _UPHY14_TRX_ANAREG_TOP_142	=	0x0238
                    023C   1195 _UPHY14_TRX_ANAREG_TOP_143	=	0x023c
                    0240   1196 _UPHY14_TRX_ANAREG_TOP_144	=	0x0240
                    0244   1197 _UPHY14_TRX_ANAREG_TOP_145	=	0x0244
                    0248   1198 _UPHY14_TRX_ANAREG_TOP_146	=	0x0248
                    024C   1199 _UPHY14_TRX_ANAREG_TOP_147	=	0x024c
                    0250   1200 _UPHY14_TRX_ANAREG_TOP_148	=	0x0250
                    0254   1201 _UPHY14_TRX_ANAREG_TOP_149	=	0x0254
                    0258   1202 _UPHY14_TRX_ANAREG_TOP_150	=	0x0258
                    025C   1203 _UPHY14_TRX_ANAREG_TOP_151	=	0x025c
                    0260   1204 _UPHY14_TRX_ANAREG_TOP_152	=	0x0260
                    0264   1205 _UPHY14_TRX_ANAREG_TOP_153	=	0x0264
                    0268   1206 _UPHY14_TRX_ANAREG_TOP_154	=	0x0268
                    026C   1207 _UPHY14_TRX_ANAREG_TOP_155	=	0x026c
                    0270   1208 _UPHY14_TRX_ANAREG_TOP_156	=	0x0270
                    0274   1209 _UPHY14_TRX_ANAREG_TOP_157	=	0x0274
                    0000   1210 _UPHY14_TRX_ANAREG_BOT_0	=	0x0000
                    0004   1211 _UPHY14_TRX_ANAREG_BOT_1	=	0x0004
                    0008   1212 _UPHY14_TRX_ANAREG_BOT_2	=	0x0008
                    000C   1213 _UPHY14_TRX_ANAREG_BOT_3	=	0x000c
                    0010   1214 _UPHY14_TRX_ANAREG_BOT_4	=	0x0010
                    0014   1215 _UPHY14_TRX_ANAREG_BOT_5	=	0x0014
                    0018   1216 _UPHY14_TRX_ANAREG_BOT_6	=	0x0018
                    001C   1217 _UPHY14_TRX_ANAREG_BOT_7	=	0x001c
                    0020   1218 _UPHY14_TRX_ANAREG_BOT_8	=	0x0020
                    0024   1219 _UPHY14_TRX_ANAREG_BOT_9	=	0x0024
                    0028   1220 _UPHY14_TRX_ANAREG_BOT_10	=	0x0028
                    002C   1221 _UPHY14_TRX_ANAREG_BOT_11	=	0x002c
                    0030   1222 _UPHY14_TRX_ANAREG_BOT_12	=	0x0030
                    0034   1223 _UPHY14_TRX_ANAREG_BOT_13	=	0x0034
                    0038   1224 _UPHY14_TRX_ANAREG_BOT_14	=	0x0038
                    003C   1225 _UPHY14_TRX_ANAREG_BOT_15	=	0x003c
                    0040   1226 _UPHY14_TRX_ANAREG_BOT_16	=	0x0040
                    0044   1227 _UPHY14_TRX_ANAREG_BOT_17	=	0x0044
                    0048   1228 _UPHY14_TRX_ANAREG_BOT_18	=	0x0048
                    004C   1229 _UPHY14_TRX_ANAREG_BOT_19	=	0x004c
                    0050   1230 _UPHY14_TRX_ANAREG_BOT_20	=	0x0050
                    0054   1231 _UPHY14_TRX_ANAREG_BOT_21	=	0x0054
                    0058   1232 _UPHY14_TRX_ANAREG_BOT_22	=	0x0058
                    005C   1233 _UPHY14_TRX_ANAREG_BOT_23	=	0x005c
                    0060   1234 _UPHY14_TRX_ANAREG_BOT_24	=	0x0060
                    0064   1235 _UPHY14_TRX_ANAREG_BOT_25	=	0x0064
                    0068   1236 _UPHY14_TRX_ANAREG_BOT_26	=	0x0068
                    006C   1237 _UPHY14_TRX_ANAREG_BOT_27	=	0x006c
                    0070   1238 _UPHY14_TRX_ANAREG_BOT_28	=	0x0070
                    0074   1239 _UPHY14_TRX_ANAREG_BOT_29	=	0x0074
                    0078   1240 _UPHY14_TRX_ANAREG_BOT_30	=	0x0078
                    007C   1241 _UPHY14_TRX_ANAREG_BOT_31	=	0x007c
                    0080   1242 _UPHY14_TRX_ANAREG_BOT_32	=	0x0080
                    0478   1243 _ANA_DFEE_REG_1E	=	0x0478
                    047C   1244 _ANA_DFEE_REG_1F	=	0x047c
                    0480   1245 _ANA_DFEE_REG_20	=	0x0480
                    0484   1246 _ANA_DFEE_REG_21	=	0x0484
                    0488   1247 _ANA_DFEE_REG_22	=	0x0488
                    048C   1248 _ANA_DFEE_REG_23	=	0x048c
                    0490   1249 _ANA_DFEE_REG_24	=	0x0490
                    0494   1250 _ANA_DFEE_REG_25	=	0x0494
                    0498   1251 _ANA_DFEE_REG_26	=	0x0498
                    049C   1252 _ANA_DFEE_REG_27	=	0x049c
                    0400   1253 _ANA_DFEE_REG_00	=	0x0400
                    0404   1254 _ANA_DFEE_REG_01	=	0x0404
                    0408   1255 _ANA_DFEE_REG_02	=	0x0408
                    040C   1256 _ANA_DFEE_REG_03	=	0x040c
                    0410   1257 _ANA_DFEE_REG_04	=	0x0410
                    0414   1258 _ANA_DFEE_REG_05	=	0x0414
                    0418   1259 _ANA_DFEE_REG_06	=	0x0418
                    041C   1260 _ANA_DFEE_REG_07	=	0x041c
                    0420   1261 _ANA_DFEE_REG_08	=	0x0420
                    0424   1262 _ANA_DFEE_REG_09	=	0x0424
                    0428   1263 _ANA_DFEE_REG_0A	=	0x0428
                    042C   1264 _ANA_DFEE_REG_0B	=	0x042c
                    0430   1265 _ANA_DFEE_REG_0C	=	0x0430
                    0434   1266 _ANA_DFEE_REG_0D	=	0x0434
                    0438   1267 _ANA_DFEE_REG_0E	=	0x0438
                    043C   1268 _ANA_DFEE_REG_0F	=	0x043c
                    0440   1269 _ANA_DFEE_REG_10	=	0x0440
                    0444   1270 _ANA_DFEE_REG_11	=	0x0444
                    0448   1271 _ANA_DFEE_REG_12	=	0x0448
                    044C   1272 _ANA_DFEE_REG_13	=	0x044c
                    0450   1273 _ANA_DFEE_REG_14	=	0x0450
                    0454   1274 _ANA_DFEE_REG_15	=	0x0454
                    0458   1275 _ANA_DFEE_REG_16	=	0x0458
                    045C   1276 _ANA_DFEE_REG_17	=	0x045c
                    0460   1277 _ANA_DFEE_REG_18	=	0x0460
                    0464   1278 _ANA_DFEE_REG_19	=	0x0464
                    0468   1279 _ANA_DFEE_REG_1A	=	0x0468
                    046C   1280 _ANA_DFEE_REG_1B	=	0x046c
                    0470   1281 _ANA_DFEE_REG_1C	=	0x0470
                    0474   1282 _ANA_DFEE_REG_1D	=	0x0474
                    0830   1283 _ANA_DFEO_REG_0C	=	0x0830
                    0834   1284 _ANA_DFEO_REG_0D	=	0x0834
                    0838   1285 _ANA_DFEO_REG_0E	=	0x0838
                    083C   1286 _ANA_DFEO_REG_0F	=	0x083c
                    0840   1287 _ANA_DFEO_REG_10	=	0x0840
                    0844   1288 _ANA_DFEO_REG_11	=	0x0844
                    0848   1289 _ANA_DFEO_REG_12	=	0x0848
                    084C   1290 _ANA_DFEO_REG_13	=	0x084c
                    0850   1291 _ANA_DFEO_REG_14	=	0x0850
                    0854   1292 _ANA_DFEO_REG_15	=	0x0854
                    0858   1293 _ANA_DFEO_REG_16	=	0x0858
                    085C   1294 _ANA_DFEO_REG_17	=	0x085c
                    0860   1295 _ANA_DFEO_REG_18	=	0x0860
                    0864   1296 _ANA_DFEO_REG_19	=	0x0864
                    0868   1297 _ANA_DFEO_REG_1A	=	0x0868
                    086C   1298 _ANA_DFEO_REG_1B	=	0x086c
                    0870   1299 _ANA_DFEO_REG_1C	=	0x0870
                    0874   1300 _ANA_DFEO_REG_1D	=	0x0874
                    0878   1301 _ANA_DFEO_REG_1E	=	0x0878
                    087C   1302 _ANA_DFEO_REG_1F	=	0x087c
                    0880   1303 _ANA_DFEO_REG_20	=	0x0880
                    0884   1304 _ANA_DFEO_REG_21	=	0x0884
                    0888   1305 _ANA_DFEO_REG_22	=	0x0888
                    088C   1306 _ANA_DFEO_REG_23	=	0x088c
                    0890   1307 _ANA_DFEO_REG_24	=	0x0890
                    0894   1308 _ANA_DFEO_REG_25	=	0x0894
                    0898   1309 _ANA_DFEO_REG_26	=	0x0898
                    089C   1310 _ANA_DFEO_REG_27	=	0x089c
                    0800   1311 _ANA_DFEO_REG_00	=	0x0800
                    0804   1312 _ANA_DFEO_REG_01	=	0x0804
                    0808   1313 _ANA_DFEO_REG_02	=	0x0808
                    080C   1314 _ANA_DFEO_REG_03	=	0x080c
                    0810   1315 _ANA_DFEO_REG_04	=	0x0810
                    0814   1316 _ANA_DFEO_REG_05	=	0x0814
                    0818   1317 _ANA_DFEO_REG_06	=	0x0818
                    081C   1318 _ANA_DFEO_REG_07	=	0x081c
                    0820   1319 _ANA_DFEO_REG_08	=	0x0820
                    0824   1320 _ANA_DFEO_REG_09	=	0x0824
                    0828   1321 _ANA_DFEO_REG_0A	=	0x0828
                    082C   1322 _ANA_DFEO_REG_0B	=	0x082c
                    8200   1323 _UPHY14_CMN_ANAREG_TOP_128	=	0x8200
                    8204   1324 _UPHY14_CMN_ANAREG_TOP_129	=	0x8204
                    8208   1325 _UPHY14_CMN_ANAREG_TOP_130	=	0x8208
                    820C   1326 _UPHY14_CMN_ANAREG_TOP_131	=	0x820c
                    8210   1327 _UPHY14_CMN_ANAREG_TOP_132	=	0x8210
                    8214   1328 _UPHY14_CMN_ANAREG_TOP_133	=	0x8214
                    8218   1329 _UPHY14_CMN_ANAREG_TOP_134	=	0x8218
                    821C   1330 _UPHY14_CMN_ANAREG_TOP_135	=	0x821c
                    8220   1331 _UPHY14_CMN_ANAREG_TOP_136	=	0x8220
                    8224   1332 _UPHY14_CMN_ANAREG_TOP_137	=	0x8224
                    8228   1333 _UPHY14_CMN_ANAREG_TOP_138	=	0x8228
                    822C   1334 _UPHY14_CMN_ANAREG_TOP_139	=	0x822c
                    8230   1335 _UPHY14_CMN_ANAREG_TOP_140	=	0x8230
                    8234   1336 _UPHY14_CMN_ANAREG_TOP_141	=	0x8234
                    8238   1337 _UPHY14_CMN_ANAREG_TOP_142	=	0x8238
                    823C   1338 _UPHY14_CMN_ANAREG_TOP_143	=	0x823c
                    8240   1339 _UPHY14_CMN_ANAREG_TOP_144	=	0x8240
                    8244   1340 _UPHY14_CMN_ANAREG_TOP_145	=	0x8244
                    8248   1341 _UPHY14_CMN_ANAREG_TOP_146	=	0x8248
                    824C   1342 _UPHY14_CMN_ANAREG_TOP_147	=	0x824c
                    8250   1343 _UPHY14_CMN_ANAREG_TOP_148	=	0x8250
                    8254   1344 _UPHY14_CMN_ANAREG_TOP_149	=	0x8254
                    8258   1345 _UPHY14_CMN_ANAREG_TOP_150	=	0x8258
                    825C   1346 _UPHY14_CMN_ANAREG_TOP_151	=	0x825c
                    8260   1347 _UPHY14_CMN_ANAREG_TOP_152	=	0x8260
                    8264   1348 _UPHY14_CMN_ANAREG_TOP_153	=	0x8264
                    8268   1349 _UPHY14_CMN_ANAREG_TOP_154	=	0x8268
                    826C   1350 _UPHY14_CMN_ANAREG_TOP_155	=	0x826c
                    8270   1351 _UPHY14_CMN_ANAREG_TOP_156	=	0x8270
                    8274   1352 _UPHY14_CMN_ANAREG_TOP_157	=	0x8274
                    8278   1353 _UPHY14_CMN_ANAREG_TOP_158	=	0x8278
                    827C   1354 _UPHY14_CMN_ANAREG_TOP_159	=	0x827c
                    8280   1355 _UPHY14_CMN_ANAREG_TOP_160	=	0x8280
                    8284   1356 _UPHY14_CMN_ANAREG_TOP_161	=	0x8284
                    8288   1357 _UPHY14_CMN_ANAREG_TOP_162	=	0x8288
                    828C   1358 _UPHY14_CMN_ANAREG_TOP_163	=	0x828c
                    8290   1359 _UPHY14_CMN_ANAREG_TOP_164	=	0x8290
                    8294   1360 _UPHY14_CMN_ANAREG_TOP_165	=	0x8294
                    8298   1361 _UPHY14_CMN_ANAREG_TOP_166	=	0x8298
                    829C   1362 _UPHY14_CMN_ANAREG_TOP_167	=	0x829c
                    82A0   1363 _UPHY14_CMN_ANAREG_TOP_168	=	0x82a0
                    82A4   1364 _UPHY14_CMN_ANAREG_TOP_169	=	0x82a4
                    82A8   1365 _UPHY14_CMN_ANAREG_TOP_170	=	0x82a8
                    82AC   1366 _UPHY14_CMN_ANAREG_TOP_171	=	0x82ac
                    82B0   1367 _UPHY14_CMN_ANAREG_TOP_172	=	0x82b0
                    82B4   1368 _UPHY14_CMN_ANAREG_TOP_173	=	0x82b4
                    82B8   1369 _UPHY14_CMN_ANAREG_TOP_174	=	0x82b8
                    82BC   1370 _UPHY14_CMN_ANAREG_TOP_175	=	0x82bc
                    82C0   1371 _UPHY14_CMN_ANAREG_TOP_176	=	0x82c0
                    82C4   1372 _UPHY14_CMN_ANAREG_TOP_177	=	0x82c4
                    82C8   1373 _UPHY14_CMN_ANAREG_TOP_178	=	0x82c8
                    82CC   1374 _UPHY14_CMN_ANAREG_TOP_179	=	0x82cc
                    82D0   1375 _UPHY14_CMN_ANAREG_TOP_180	=	0x82d0
                    82D4   1376 _UPHY14_CMN_ANAREG_TOP_181	=	0x82d4
                    82D8   1377 _UPHY14_CMN_ANAREG_TOP_182	=	0x82d8
                    82DC   1378 _UPHY14_CMN_ANAREG_TOP_183	=	0x82dc
                    82E0   1379 _UPHY14_CMN_ANAREG_TOP_184	=	0x82e0
                    82E4   1380 _UPHY14_CMN_ANAREG_TOP_185	=	0x82e4
                    82E8   1381 _UPHY14_CMN_ANAREG_TOP_186	=	0x82e8
                    82EC   1382 _UPHY14_CMN_ANAREG_TOP_187	=	0x82ec
                    82F0   1383 _UPHY14_CMN_ANAREG_TOP_188	=	0x82f0
                    82F4   1384 _UPHY14_CMN_ANAREG_TOP_189	=	0x82f4
                    82F8   1385 _UPHY14_CMN_ANAREG_TOP_190	=	0x82f8
                    82FC   1386 _UPHY14_CMN_ANAREG_TOP_191	=	0x82fc
                    8300   1387 _UPHY14_CMN_ANAREG_TOP_192	=	0x8300
                    8304   1388 _UPHY14_CMN_ANAREG_TOP_193	=	0x8304
                    8308   1389 _UPHY14_CMN_ANAREG_TOP_194	=	0x8308
                    830C   1390 _UPHY14_CMN_ANAREG_TOP_195	=	0x830c
                    8310   1391 _UPHY14_CMN_ANAREG_TOP_196	=	0x8310
                    8314   1392 _UPHY14_CMN_ANAREG_TOP_197	=	0x8314
                    8318   1393 _UPHY14_CMN_ANAREG_TOP_198	=	0x8318
                    831C   1394 _UPHY14_CMN_ANAREG_TOP_199	=	0x831c
                    8320   1395 _UPHY14_CMN_ANAREG_TOP_200	=	0x8320
                    8324   1396 _UPHY14_CMN_ANAREG_TOP_201	=	0x8324
                    8328   1397 _UPHY14_CMN_ANAREG_TOP_202	=	0x8328
                    832C   1398 _UPHY14_CMN_ANAREG_TOP_203	=	0x832c
                    8330   1399 _UPHY14_CMN_ANAREG_TOP_204	=	0x8330
                    8334   1400 _UPHY14_CMN_ANAREG_TOP_205	=	0x8334
                    8338   1401 _UPHY14_CMN_ANAREG_TOP_206	=	0x8338
                    833C   1402 _UPHY14_CMN_ANAREG_TOP_207	=	0x833c
                    8340   1403 _UPHY14_CMN_ANAREG_TOP_208	=	0x8340
                    8344   1404 _UPHY14_CMN_ANAREG_TOP_209	=	0x8344
                    8348   1405 _UPHY14_CMN_ANAREG_TOP_210	=	0x8348
                    834C   1406 _UPHY14_CMN_ANAREG_TOP_211	=	0x834c
                    8350   1407 _UPHY14_CMN_ANAREG_TOP_212	=	0x8350
                    8354   1408 _UPHY14_CMN_ANAREG_TOP_213	=	0x8354
                    8358   1409 _UPHY14_CMN_ANAREG_TOP_214	=	0x8358
                    2000   1410 _PM_CTRL_TX_LANE_REG1_LANE	=	0x2000
                    2004   1411 _PM_CTRL_TX_LANE_REG2_LANE	=	0x2004
                    2008   1412 _INPUT_TX_PIN_REG0_LANE	=	0x2008
                    200C   1413 _INPUT_TX_PIN_REG1_LANE	=	0x200c
                    2010   1414 _INPUT_TX_PIN_REG2_LANE	=	0x2010
                    2014   1415 _INPUT_TX_PIN_REG3_LANE	=	0x2014
                    2018   1416 _PM_CTRL_INTERRUPT_REG1_LANE	=	0x2018
                    201C   1417 _PM_CTRL_INTERRUPT_REG2	=	0x201c
                    2020   1418 _CLKGEN_TX_LANE_REG1_LANE	=	0x2020
                    2024   1419 _TX_SPEED_CONVERT_LANE	=	0x2024
                    2028   1420 _SPD_CTRL_INTERRUPT_REG1_LANE	=	0x2028
                    202C   1421 _SPD_CTRL_INTERRUPT_REG2	=	0x202c
                    2030   1422 _SPD_CTRL_TX_LANE_REG1_LANE	=	0x2030
                    2034   1423 _TX_SYSTEM_LANE	=	0x2034
                    203C   1424 _INPUT_TX_PIN_REG4_LANE	=	0x203c
                    2040   1425 _TX_CALIBRATION_LANE	=	0x2040
                    2044   1426 _DIG_TX_RSVD_REG0	=	0x2044
                    2048   1427 _INPUT_TX_PIN_REG5_LANE	=	0x2048
                    204C   1428 __FIELDNAME__LANE	=	0x204c
                    2050   1429 _PM_CTRL_INTERRUPT_ISR_REG1_LANE	=	0x2050
                    2054   1430 _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE	=	0x2054
                    2058   1431 _ANALOG_TX_REALTIME_REG_1	=	0x2058
                    205C   1432 _MON_TOP	=	0x205c
                    2100   1433 _PM_CTRL_RX_LANE_REG1_LANE	=	0x2100
                    2104   1434 _RX_SYSTEM_LANE	=	0x2104
                    2108   1435 _INPUT_RX_PIN_REG0_LANE	=	0x2108
                    210C   1436 _INPUT_RX_PIN_REG1_LANE	=	0x210c
                    2110   1437 _INPUT_RX_PIN_REG2_LANE	=	0x2110
                    2114   1438 _SPD_CTRL_RX_LANE_REG1_LANE	=	0x2114
                    2118   1439 _DIG_RX_RSVD_REG0	=	0x2118
                    211C   1440 _CLKGEN_RX_LANE_REG1_LANE	=	0x211c
                    2120   1441 _FRAME_SYNC_DET_REG0	=	0x2120
                    2124   1442 _FRAME_SYNC_DET_REG1	=	0x2124
                    2128   1443 _FRAME_SYNC_DET_REG2	=	0x2128
                    212C   1444 _FRAME_SYNC_DET_REG3	=	0x212c
                    2130   1445 _FRAME_SYNC_DET_REG4	=	0x2130
                    2134   1446 _FRAME_SYNC_DET_REG5	=	0x2134
                    2138   1447 _FRAME_SYNC_DET_REG6	=	0x2138
                    213C   1448 _CDR_LOCK_REG	=	0x213c
                    2140   1449 _RX_LANE_INTERRUPT	=	0x2140
                    2144   1450 _RX_LANE_INTERRUPT_MASK	=	0x2144
                    2148   1451 _RX_DATA_PATH_REG	=	0x2148
                    214C   1452 _INPUT_RX_PIN_REG3_LANE	=	0x214c
                    2150   1453 _RX_CALIBRATION_REG	=	0x2150
                    2158   1454 _RX_LANE_INTERRUPT_REG1	=	0x2158
                    2160   1455 _DTL_REG0	=	0x2160
                    2164   1456 _DTL_REG1	=	0x2164
                    2168   1457 _DTL_REG2	=	0x2168
                    216C   1458 _DTL_REG3	=	0x216c
                    2170   1459 _SQ_REG0	=	0x2170
                    4000   1460 _LANE_CFG0	=	0x4000
                    4004   1461 _LANE_STATUS0	=	0x4004
                    4008   1462 _LANE_CFG_STATUS2_LANE	=	0x4008
                    400C   1463 _LANE_CFG2_LANE	=	0x400c
                    4010   1464 _LANE_CFG4	=	0x4010
                    4014   1465 _LANE_CFG_STATUS3_LANE	=	0x4014
                    4018   1466 _LANE_DP_PIE8_CFG0_LANE	=	0x4018
                    401C   1467 _LANE_USB_DP_CFG1_LANE	=	0x401c
                    4020   1468 _LANE_USB_DP_CFG2_LANE	=	0x4020
                    4024   1469 _LANE_EQ_CFG0_LANE	=	0x4024
                    4028   1470 _LANE_EQ_CFG1_LANE	=	0x4028
                    402C   1471 _LANE_PRESET_CFG0_LANE	=	0x402c
                    4030   1472 _LANE_PRESET_CFG2_LANE	=	0x4030
                    4034   1473 _LANE_PRESET_CFG4_LANE	=	0x4034
                    4038   1474 _LANE_PRESET_CFG6_LANE	=	0x4038
                    403C   1475 _LANE_PRESET_CFG8_LANE	=	0x403c
                    4040   1476 _LANE_PRESET_CFG10_LANE	=	0x4040
                    4044   1477 _LANE_PRESET_CFG12_LANE	=	0x4044
                    4048   1478 _LANE_PRESET_CFG14_LANE	=	0x4048
                    404C   1479 _LANE_PRESET_CFG16_LANE	=	0x404c
                    4050   1480 _LANE_COEFF_MAX0_LANE	=	0x4050
                    4054   1481 _LANE_REMOTE_SET_LANE	=	0x4054
                    4058   1482 _LANE_EQ_16G_CFG0_LANE	=	0x4058
                    405C   1483 _LANE_16G_PRESET_CFG0_LANE	=	0x405c
                    4060   1484 _LANE_16G_PRESET_CFG2_LANE	=	0x4060
                    4064   1485 _LANE_16G_PRESET_CFG4_LANE	=	0x4064
                    4068   1486 _LANE_16G_PRESET_CFG6_LANE	=	0x4068
                    406C   1487 _LANE_16G_PRESET_CFG8_LANE	=	0x406c
                    4070   1488 _LANE_16G_PRESET_CFG10_LANE	=	0x4070
                    4074   1489 _LANE_16G_PRESET_CFG12_LANE	=	0x4074
                    4078   1490 _LANE_16G_PRESET_CFG14_LANE	=	0x4078
                    407C   1491 _LANE_16G_PRESET_CFG16_LANE	=	0x407c
                    4080   1492 _LANE_EQ_32G_CFG0_LANE	=	0x4080
                    4084   1493 _LANE_32G_PRESET_CFG0_LANE	=	0x4084
                    4088   1494 _LANE_32G_PRESET_CFG2_LANE	=	0x4088
                    408C   1495 _LANE_32G_PRESET_CFG4_LANE	=	0x408c
                    4090   1496 _LANE_32G_PRESET_CFG6_LANE	=	0x4090
                    4094   1497 _LANE_32G_PRESET_CFG8_LANE	=	0x4094
                    4098   1498 _LANE_32G_PRESET_CFG10_LANE	=	0x4098
                    409C   1499 _LANE_32G_PRESET_CFG12_LANE	=	0x409c
                    40A0   1500 _LANE_32G_PRESET_CFG14_LANE	=	0x40a0
                    40A4   1501 _LANE_32G_PRESET_CFG16_LANE	=	0x40a4
                    2200   1502 _MCU_CONTROL_LANE	=	0x2200
                    2204   1503 _MCU_GPIO	=	0x2204
                    2208   1504 _CACHE_DEBUG0	=	0x2208
                    220C   1505 _CACHE_DEBUG1	=	0x220c
                    2210   1506 _LANE_SYSTEM0	=	0x2210
                    2230   1507 _MCU_STATUS0_LANE	=	0x2230
                    2234   1508 _MCU_STATUS1_LANE	=	0x2234
                    2238   1509 _MCU_STATUS2_LANE	=	0x2238
                    223C   1510 _MCU_STATUS3_LANE	=	0x223c
                    2240   1511 _MCU_INT0_CONTROL	=	0x2240
                    2244   1512 _MCU_INT1_CONTROL	=	0x2244
                    2248   1513 _MCU_INT2_CONTROL	=	0x2248
                    224C   1514 _MCU_INT3_CONTROL	=	0x224c
                    2250   1515 _MCU_INT4_CONTROL	=	0x2250
                    2254   1516 _MCU_INT5_CONTROL	=	0x2254
                    2258   1517 _MCU_INT6_CONTROL	=	0x2258
                    225C   1518 _MCU_INT7_CONTROL	=	0x225c
                    2260   1519 _MCU_INT8_CONTROL	=	0x2260
                    2264   1520 _MCU_INT9_CONTROL	=	0x2264
                    2268   1521 _MCU_INT10_CONTROL	=	0x2268
                    226C   1522 _MCU_INT11_CONTROL	=	0x226c
                    2270   1523 _MCU_INT12_CONTROL	=	0x2270
                    2274   1524 _MCU_TIMER_CONTROL	=	0x2274
                    2278   1525 _MCU_TIMER0_CONTROL	=	0x2278
                    227C   1526 _MCU_TIMER1_CONTROL	=	0x227c
                    2280   1527 _MCU_TIMER2_CONTROL	=	0x2280
                    2284   1528 _MCU_TIMER3_CONTROL	=	0x2284
                    2288   1529 _MCU_IRQ_LANE	=	0x2288
                    228C   1530 _MCU_IRQ_MASK_LANE	=	0x228c
                    2290   1531 _MCU_MEM_REG1_LANE	=	0x2290
                    2294   1532 _MCU_MEM_REG2_LANE	=	0x2294
                    2298   1533 _MCU_TIMER_CTRL_1_LANE	=	0x2298
                    229C   1534 _MCU_TIMER_CTRL_2_LANE	=	0x229c
                    22A0   1535 _MCU_TIMER_CTRL_3_LANE	=	0x22a0
                    22A4   1536 _MCU_TIMER_CTRL_4_LANE	=	0x22a4
                    22A8   1537 _MCU_TIMER_CTRL_5_LANE	=	0x22a8
                    22AC   1538 _MCU_TIMER_CTRL_6_LANE	=	0x22ac
                    22B0   1539 _MCU_TIMER_CTRL_7_LANE	=	0x22b0
                    22B4   1540 _MCU_DEBUG0_LANE	=	0x22b4
                    22B8   1541 _MCU_DEBUG1_LANE	=	0x22b8
                    22BC   1542 _MCU_DEBUG2_LANE	=	0x22bc
                    22C0   1543 _MCU_DEBUG3_LANE	=	0x22c0
                    22C4   1544 _MCU_DEBUG_LANE	=	0x22c4
                    22C8   1545 _EXT_INT_CONTROL	=	0x22c8
                    22CC   1546 _ANA_IF_TRX_REG0	=	0x22cc
                    22D0   1547 _ANA_IF_DFEE_REG0	=	0x22d0
                    22D4   1548 _ANA_IF_DFEO_REG0	=	0x22d4
                    22D8   1549 _MCU_IRQ_ISR_LANE	=	0x22d8
                    22DC   1550 _MCU_WDT_LANE	=	0x22dc
                    22E0   1551 _MCU_INT_CONTROL_13	=	0x22e0
                    22E4   1552 _MCU_COMMAND0	=	0x22e4
                    22F4   1553 _MEM_ECC_ERR_ADDRESS0	=	0x22f4
                    22F8   1554 _XDATA_MEM_CHECKSUM_LANE0	=	0x22f8
                    22FC   1555 _XDATA_MEM_CHECKSUM_LANE1	=	0x22fc
                    2300   1556 _PT_CONTROL0	=	0x2300
                    2304   1557 _PT_CONTROL1	=	0x2304
                    2308   1558 _PT_USER_PATTERN0	=	0x2308
                    230C   1559 _PT_USER_PATTERN1	=	0x230c
                    2310   1560 _PT_USER_PATTERN2	=	0x2310
                    2314   1561 _PT_COUNTER0	=	0x2314
                    2318   1562 _PT_COUNTER1	=	0x2318
                    231C   1563 _PT_COUNTER2	=	0x231c
                    2400   1564 _DFE_CTRL_REG0	=	0x2400
                    2404   1565 _DFE_CTRL_REG1	=	0x2404
                    2408   1566 _DFE_CTRL_REG2	=	0x2408
                    240C   1567 _DFE_CTRL_REG3	=	0x240c
                    2410   1568 _RX_EQ_CLK_CTRL	=	0x2410
                    2414   1569 _DFE_CTRL_REG4	=	0x2414
                    2418   1570 _DFE_ANA_REG0	=	0x2418
                    241C   1571 _DFE_ANA_REG1	=	0x241c
                    2420   1572 _DFE_STEP_REG0	=	0x2420
                    2424   1573 _DFE_STEP_REG1	=	0x2424
                    2430   1574 _DFE_FEN_EVEN_REG	=	0x2430
                    2434   1575 _DFE_FEN_ODD_REG	=	0x2434
                    2438   1576 _DFE_DC_EVEN_REG8	=	0x2438
                    243C   1577 _DFE_DC_ODD_REG8	=	0x243c
                    2440   1578 _DFE_FEXT_EVEN_REG0	=	0x2440
                    2444   1579 _DFE_FEXT_EVEN_REG1	=	0x2444
                    2448   1580 _DFE_FEXT_EVEN_REG2	=	0x2448
                    244C   1581 _DFE_FEXT_EVEN_REG3	=	0x244c
                    2450   1582 _DFE_FEXT_EVEN_REG4	=	0x2450
                    2454   1583 _DFE_FEXT_EVEN_REG5	=	0x2454
                    2458   1584 _DFE_FEXT_EVEN_REG6	=	0x2458
                    245C   1585 _DFE_FEXT_EVEN_REG7	=	0x245c
                    2460   1586 _DFE_FEXT_ODD_REG0	=	0x2460
                    2464   1587 _DFE_FEXT_ODD_REG1	=	0x2464
                    2468   1588 _DFE_FEXT_ODD_REG2	=	0x2468
                    246C   1589 _DFE_FEXT_ODD_REG3	=	0x246c
                    2470   1590 _DFE_FEXT_ODD_REG4	=	0x2470
                    2474   1591 _DFE_FEXT_ODD_REG5	=	0x2474
                    2478   1592 _DFE_FEXT_ODD_REG6	=	0x2478
                    247C   1593 _DFE_FEXT_ODD_REG7	=	0x247c
                    2480   1594 _DFE_READ_EVEN_SM_REG0	=	0x2480
                    2484   1595 _DFE_READ_EVEN_SM_REG1	=	0x2484
                    2488   1596 _DFE_READ_EVEN_SM_REG2	=	0x2488
                    248C   1597 _DFE_READ_EVEN_SM_REG3	=	0x248c
                    2490   1598 _DFE_READ_EVEN_SM_REG4	=	0x2490
                    2494   1599 _DFE_READ_EVEN_SM_REG5	=	0x2494
                    2498   1600 _DFE_READ_EVEN_SM_REG6	=	0x2498
                    249C   1601 _DFE_READ_EVEN_SM_REG7	=	0x249c
                    24A0   1602 _DFE_READ_ODD_SM_REG0	=	0x24a0
                    24A4   1603 _DFE_READ_ODD_SM_REG1	=	0x24a4
                    24A8   1604 _DFE_READ_ODD_SM_REG2	=	0x24a8
                    24AC   1605 _DFE_READ_ODD_SM_REG3	=	0x24ac
                    24B0   1606 _DFE_READ_ODD_SM_REG4	=	0x24b0
                    24B4   1607 _DFE_READ_ODD_SM_REG5	=	0x24b4
                    24B8   1608 _DFE_READ_ODD_SM_REG6	=	0x24b8
                    24BC   1609 _DFE_READ_ODD_SM_REG7	=	0x24bc
                    24C0   1610 _DFE_READ_EVEN_SM_REG8	=	0x24c0
                    24C4   1611 _DFE_READ_ODD_SM_REG8	=	0x24c4
                    24D0   1612 _DFE_READ_EVEN_2C_REG0	=	0x24d0
                    24D4   1613 _DFE_READ_EVEN_2C_REG1	=	0x24d4
                    24D8   1614 _DFE_READ_EVEN_2C_REG2	=	0x24d8
                    24DC   1615 _DFE_READ_EVEN_2C_REG3	=	0x24dc
                    24E0   1616 _DFE_READ_EVEN_2C_REG4	=	0x24e0
                    24E4   1617 _DFE_READ_EVEN_2C_REG5	=	0x24e4
                    24E8   1618 _DFE_READ_EVEN_2C_REG6	=	0x24e8
                    24EC   1619 _DFE_READ_EVEN_2C_REG7	=	0x24ec
                    24F0   1620 _DFE_READ_ODD_2C_REG0	=	0x24f0
                    24F4   1621 _DFE_READ_ODD_2C_REG1	=	0x24f4
                    24F8   1622 _DFE_READ_ODD_2C_REG2	=	0x24f8
                    24FC   1623 _DFE_READ_ODD_2C_REG3	=	0x24fc
                    2500   1624 _DFE_READ_ODD_2C_REG4	=	0x2500
                    2504   1625 _DFE_READ_ODD_2C_REG5	=	0x2504
                    2508   1626 _DFE_READ_ODD_2C_REG6	=	0x2508
                    250C   1627 _DFE_READ_ODD_2C_REG7	=	0x250c
                    2510   1628 _DFE_READ_EVEN_2C_REG8	=	0x2510
                    2514   1629 _DFE_READ_ODD_2C_REG8	=	0x2514
                    2518   1630 _CAL_OFST_REG0	=	0x2518
                    251C   1631 _CAL_OFST_REG1	=	0x251c
                    2520   1632 _CAL_OFST_REG2	=	0x2520
                    2530   1633 _DFE_DCE_REG0	=	0x2530
                    2540   1634 _DFE_STATIC_LANE_REG0	=	0x2540
                    2544   1635 _DFE_STATIC_LANE_REG1	=	0x2544
                    2548   1636 _DFE_STATIC_LANE_REG3	=	0x2548
                    254C   1637 _DFE_STATIC_LANE_REG4	=	0x254c
                    2550   1638 _DFE_STATIC_LANE_REG5	=	0x2550
                    2554   1639 _DFE_STATIC_LANE_REG6	=	0x2554
                    2560   1640 _EOM_VLD_REG0	=	0x2560
                    2564   1641 _EOM_VLD_REG1	=	0x2564
                    2568   1642 _EOM_VLD_REG2	=	0x2568
                    256C   1643 _EOM_VLD_REG3	=	0x256c
                    2570   1644 _EOM_ERR_REG0	=	0x2570
                    2574   1645 _EOM_ERR_REG1	=	0x2574
                    2578   1646 _EOM_ERR_REG2	=	0x2578
                    257C   1647 _EOM_ERR_REG3	=	0x257c
                    2580   1648 _EOM_REG0	=	0x2580
                    25F0   1649 _EOM_VLD_REG4	=	0x25f0
                    25F4   1650 _LANE_MARGIN_REG0	=	0x25f4
                    6000   1651 _CAL_CTRL1_LANE	=	0x6000
                    6004   1652 _CAL_CTRL2_LANE	=	0x6004
                    6008   1653 _CAL_CTRL3_LANE	=	0x6008
                    600C   1654 _CAL_CTRL4_LANE	=	0x600c
                    6010   1655 _CAL_SAVE_DATA1_LANE	=	0x6010
                    6014   1656 _CAL_SAVE_DATA2_LANE	=	0x6014
                    6018   1657 _CAL_SAVE_DATA3_LANE	=	0x6018
                    601C   1658 _PHY_REMOTE_CTRL_COMMAND_LANE	=	0x601c
                    6020   1659 _PHY_REMOTE_CTRL_VALUE_LANE	=	0x6020
                    6024   1660 _PHY_LOCAL_VALUE_LANE	=	0x6024
                    6028   1661 _TRX_TRAIN_IF_TIMERS1_LANE	=	0x6028
                    602C   1662 _TRX_TRAIN_IF_TIMERS2_LANE	=	0x602c
                    6030   1663 _TRX_TRAIN_IF_TIMERS_ENABLE_LANE	=	0x6030
                    6034   1664 _DFE_CONTROL_0	=	0x6034
                    6038   1665 _DFE_CONTROL_1	=	0x6038
                    6040   1666 _DFE_CONTROL_2	=	0x6040
                    6044   1667 _DFE_CONTROL_3	=	0x6044
                    6048   1668 _DFE_CONTROL_4	=	0x6048
                    604C   1669 _DFE_CONTROL_5	=	0x604c
                    6050   1670 _TRAIN_CONTROL_0	=	0x6050
                    6054   1671 _TRAIN_CONTROL_1	=	0x6054
                    6058   1672 _TRAIN_CONTROL_2	=	0x6058
                    605C   1673 _RPTA_CONFIG_0	=	0x605c
                    6060   1674 _RPTA_CONFIG_1	=	0x6060
                    6064   1675 _DLL_CAL	=	0x6064
                    6068   1676 _TRAIN_PARA_0	=	0x6068
                    606C   1677 _TRAIN_PARA_1	=	0x606c
                    6070   1678 _TRAIN_PARA_2	=	0x6070
                    6074   1679 _TRAIN_PARA_3	=	0x6074
                    6078   1680 _DFE_CONTROL_6	=	0x6078
                    607C   1681 _DFE_TEST_0	=	0x607c
                    6080   1682 _DFE_TEST_1	=	0x6080
                    6084   1683 _DFE_TEST_4	=	0x6084
                    6088   1684 _DFE_TEST_5	=	0x6088
                    608C   1685 _DFE_CONTROL_7	=	0x608c
                    6090   1686 _DFE_CONTROL_8	=	0x6090
                    6094   1687 _DFE_CONTROL_9	=	0x6094
                    6098   1688 _DFE_CONTROL_10	=	0x6098
                    609C   1689 _DFE_CONTROL_11	=	0x609c
                    60A0   1690 _CDS_CTRL_REG0	=	0x60a0
                    60A4   1691 _CDS_CTRL_REG1	=	0x60a4
                    60A8   1692 _ESM_POP_P_CNT_LOW_LANE	=	0x60a8
                    60AC   1693 _ESM_ERR_P_CNT_LOW_LANE	=	0x60ac
                    60B0   1694 _ESM_ERR_POP_CNT_HIGH_LANE	=	0x60b0
                    60B4   1695 _TRAIN_CONTROL_3	=	0x60b4
                    60B8   1696 _TRAIN_CONTROL_4	=	0x60b8
                    60BC   1697 _TRAIN_CONTROL_5	=	0x60bc
                    60C0   1698 _TRAIN_CONTROL_6	=	0x60c0
                    60C4   1699 _TRAIN_CONTROL_7	=	0x60c4
                    60C8   1700 _TRAIN_CONTROL_8	=	0x60c8
                    60CC   1701 _TRAIN_CONTROL_9	=	0x60cc
                    60D0   1702 _TRAIN_CONTROL_10	=	0x60d0
                    60D4   1703 _TRAIN_CONTROL_11	=	0x60d4
                    60D8   1704 _TRAIN_CONTROL_12	=	0x60d8
                    60DC   1705 _ESM_POP_N_CNT_LOW_LANE	=	0x60dc
                    60E0   1706 _ESM_ERR_N_CNT_LOW_LANE	=	0x60e0
                    60E4   1707 _TRAIN_CONTROL_13	=	0x60e4
                    60E8   1708 _TRAIN_CONTROL_14	=	0x60e8
                    60EC   1709 _TRAIN_CONTROL_15	=	0x60ec
                    60F0   1710 _TRAIN_CONTROL_16	=	0x60f0
                    60F4   1711 _TRAIN_CONTROL_17	=	0x60f4
                    60F8   1712 _END_XDAT_LANE	=	0x60f8
                    A000   1713 _TX_CMN_REG	=	0xa000
                    A008   1714 _DTX_REG0	=	0xa008
                    A00C   1715 _DTX_REG1	=	0xa00c
                    A010   1716 _DTX_REG2	=	0xa010
                    A014   1717 _DTX_REG3	=	0xa014
                    A018   1718 _DTX_REG4	=	0xa018
                    A01C   1719 _DTX_PHY_ALIGN_REG0	=	0xa01c
                    A024   1720 _DTX_PHY_ALIGN_REG1	=	0xa024
                    A028   1721 _DTX_PHY_ALIGN_REG2	=	0xa028
                    A02C   1722 _SRIS_REG0	=	0xa02c
                    A030   1723 _SRIS_REG1	=	0xa030
                    A100   1724 _RX_CMN_0	=	0xa100
                    A110   1725 _DFE_STATIC_REG0	=	0xa110
                    A114   1726 _DFE_STATIC_REG1	=	0xa114
                    A118   1727 _DFE_STATIC_REG3	=	0xa118
                    A11C   1728 _DFE_STATIC_REG4	=	0xa11c
                    A120   1729 _DFE_STATIC_REG5	=	0xa120
                    A124   1730 _DFE_STATIC_REG6	=	0xa124
                    4200   1731 _GLOB_RST_CLK_CTRL	=	0x4200
                    4204   1732 _GLOB_CLK_SRC_LO	=	0x4204
                    4208   1733 _GLOB_CLK_SRC_HI	=	0x4208
                    420C   1734 _GLOB_MISC_CTRL	=	0x420c
                    4210   1735 _GLOB_DP_SAL_CFG	=	0x4210
                    4214   1736 _GLOB_DP_SAL_CFG1	=	0x4214
                    4218   1737 _GLOB_DP_SAL_CFG3	=	0x4218
                    421C   1738 _GLOB_DP_SAL_CFG5	=	0x421c
                    4220   1739 _GLOB_PM_CFG0	=	0x4220
                    4224   1740 _GLOB_COUNTER_CTRL	=	0x4224
                    4228   1741 _GLOB_COUNTER_HI	=	0x4228
                    422C   1742 _GLOB_PM_DP_CTRL	=	0x422c
                    4230   1743 _GLOB_DP_BAL_CFG0	=	0x4230
                    4234   1744 _GLOB_DP_BAL_CFG2	=	0x4234
                    4238   1745 _GLOB_DP_BAL_CFG4	=	0x4238
                    423C   1746 _GLOB_BIST_CTRL	=	0x423c
                    4240   1747 _GLOB_BIST_LANE_TYPE	=	0x4240
                    4244   1748 _GLOB_BIST_START	=	0x4244
                    4248   1749 _GLOB_BIST_MASK	=	0x4248
                    424C   1750 _GLOB_BIST_RESULT	=	0x424c
                    4250   1751 _GLOB_BIST_SEQR_CFG	=	0x4250
                    4254   1752 _GLOB_BIST_DATA_HI	=	0x4254
                    4258   1753 _GLOB_PIPE_REVISION	=	0x4258
                    425C   1754 _GLOB_L1_SUBSTATES_CFG	=	0x425c
                    A200   1755 _MCU_CONTROL_0	=	0xa200
                    A204   1756 _MCU_CONTROL_1	=	0xa204
                    A208   1757 _MCU_CONTROL_2	=	0xa208
                    A20C   1758 _MCU_CONTROL_3	=	0xa20c
                    A210   1759 _MCU_CONTROL_4	=	0xa210
                    A214   1760 _MCU_DEBUG0	=	0xa214
                    A218   1761 _MCU_DEBUG1	=	0xa218
                    A21C   1762 _MEMORY_CONTROL_0	=	0xa21c
                    A220   1763 _MEMORY_CONTROL_1	=	0xa220
                    A224   1764 _MEMORY_CONTROL_2	=	0xa224
                    A228   1765 _MEMORY_CONTROL_3	=	0xa228
                    A22C   1766 _MEMORY_CONTROL_4	=	0xa22c
                    A234   1767 _MCU_INFO_0	=	0xa234
                    A238   1768 _MCU_INFO_1	=	0xa238
                    A23C   1769 _MCU_INFO_2	=	0xa23c
                    A240   1770 _MCU_INFO_3	=	0xa240
                    A244   1771 _MEM_CMN_ECC_ERR_ADDRESS0	=	0xa244
                    A2E0   1772 _ANA_IF_CMN_REG1	=	0xa2e0
                    A2E4   1773 _MEM_IRQ	=	0xa2e4
                    A2E8   1774 _MEM_IRQ_MASK	=	0xa2e8
                    A2EC   1775 _ANA_IF_CMN_REG0	=	0xa2ec
                    A2F0   1776 _APB_CONTROL_REG	=	0xa2f0
                    A2F4   1777 _MEM_IRQ_CLEAR	=	0xa2f4
                    A2F8   1778 _MCU_SYNC1	=	0xa2f8
                    A2FC   1779 _MCU_SYNC2	=	0xa2fc
                    A300   1780 _TEST0	=	0xa300
                    A304   1781 _TEST1	=	0xa304
                    A308   1782 _TEST2	=	0xa308
                    A30C   1783 _TEST3	=	0xa30c
                    A310   1784 _TEST4	=	0xa310
                    A314   1785 _SYSTEM	=	0xa314
                    A318   1786 _PM_CMN_REG1	=	0xa318
                    A31C   1787 _INPUT_CMN_PIN_REG0	=	0xa31c
                    A320   1788 _INPUT_CMN_PIN_REG1	=	0xa320
                    A324   1789 _INPUT_CMN_PIN_REG2	=	0xa324
                    A328   1790 _ANA_TSEN_CONTROL	=	0xa328
                    A32C   1791 _PLLCAL_REG0	=	0xa32c
                    A330   1792 _PLLCAL_REG1	=	0xa330
                    A334   1793 _CLKGEN_CMN_REG1	=	0xa334
                    A338   1794 _SPD_CMN_REG1	=	0xa338
                    A33C   1795 _OUTPUT_CMN_PIN_REG0	=	0xa33c
                    A340   1796 _CMN_CALIBRATION	=	0xa340
                    A344   1797 __FIELDNAME_	=	0xa344
                    A348   1798 _INPUT_CMN_PIN_REG3	=	0xa348
                    A34C   1799 _PM_CMN_REG2	=	0xa34c
                    A354   1800 _TEST5	=	0xa354
                    A358   1801 _XDATA_MEM_CHECKSUM_CMN_0	=	0xa358
                    A35C   1802 _XDATA_MEM_CHECKSUM_CMN_1	=	0xa35c
                    A360   1803 _XDATA_MEM_CHECKSUM_CMN_2	=	0xa360
                    A364   1804 _MCU_SDT_CMN	=	0xa364
                    A368   1805 _CMN_CACHE_DEBUG0	=	0xa368
                    A36C   1806 _MCU_INT_ADDR	=	0xa36c
                    A370   1807 _CMN_ISR_2	=	0xa370
                    A374   1808 _CMN_ISR_MASK_2	=	0xa374
                    A378   1809 _CMN_ISR_CLEAR_2	=	0xa378
                    A37C   1810 _CMN_MCU_GPIO	=	0xa37c
                    A380   1811 _CMN_CACHE_DEBUG1	=	0xa380
                    A384   1812 _CMN_MCU_TIMER_CONTROL	=	0xa384
                    A388   1813 _CMN_MCU_TIMER_CTRL_2_LANE	=	0xa388
                    A38C   1814 _CMN_MCU_TIMER_CTRL_3_LANE	=	0xa38c
                    A390   1815 _CMN_MCU_TIMER_CTRL_4_LANE	=	0xa390
                    A394   1816 _CMN_MCU_TIMER_CTRL_5_LANE	=	0xa394
                    A398   1817 _CMN_MCU_TIMER0_CONTROL	=	0xa398
                    A39C   1818 _CMN_MCU_TIMER1_CONTROL	=	0xa39c
                    A3A0   1819 _CMN_MCU_TIMER2_CONTROL	=	0xa3a0
                    A3A4   1820 _CMN_MCU_TIMER3_CONTROL	=	0xa3a4
                    A3A8   1821 _CMN_ISR_1	=	0xa3a8
                    A3AC   1822 _CMN_ISR_MASK_1	=	0xa3ac
                    A3B0   1823 _SET_LANE_ISR	=	0xa3b0
                    A3F4   1824 _CMN_MCU_REG	=	0xa3f4
                    A3F8   1825 _CID_REG0	=	0xa3f8
                    A3FC   1826 _CID_REG1	=	0xa3fc
                    E600   1827 _FW_REV	=	0xe600
                    E604   1828 _CONTROL_CONFIG0	=	0xe604
                    E608   1829 _CONTROL_CONFIG1	=	0xe608
                    E60C   1830 _CONTROL_CONFIG2	=	0xe60c
                    E610   1831 _CONTROL_CONFIG3	=	0xe610
                    E614   1832 _CONTROL_CONFIG4	=	0xe614
                    E618   1833 _CONTROL_CONFIG5	=	0xe618
                    E61C   1834 _CONTROL_CONFIG6	=	0xe61c
                    E620   1835 _CONTROL_CONFIG7	=	0xe620
                    E624   1836 _CAL_DATA0	=	0xe624
                    E628   1837 _TRAIN_IF_CONFIG	=	0xe628
                    E62C   1838 _CONTROL_CONFIG8	=	0xe62c
                    E630   1839 _CONTROL_CONFIG9	=	0xe630
                    E634   1840 _CON_CAL_STEP_SIZE1	=	0xe634
                    E638   1841 _CON_CAL_STEP_SIZE2	=	0xe638
                    E63C   1842 _CON_CAL_STEP_SIZE3	=	0xe63c
                    E640   1843 _CON_CAL_STEP_SIZE4	=	0xe640
                    E644   1844 _CON_CAL_STEP_SIZE5	=	0xe644
                    E648   1845 _CAL_TIME_OUT_AND_DIS	=	0xe648
                    E64C   1846 _CAL_STATUS_READ	=	0xe64c
                    E650   1847 _MCU_CONFIG	=	0xe650
                    E654   1848 _CAL_DATA1	=	0xe654
                    E658   1849 _LOOP_CNTS	=	0xe658
                    E65C   1850 _MCU_CONFIG1	=	0xe65c
                    E660   1851 _TIMER_SEL1	=	0xe660
                    E664   1852 _TIMER_SEL2	=	0xe664
                    E668   1853 _TIMER_SEL3	=	0xe668
                    E66C   1854 _G_SELLV_TXCLK	=	0xe66c
                    E670   1855 _G_SELLV_TXDATA	=	0xe670
                    E674   1856 _G_SELLV_TXPRE	=	0xe674
                    E678   1857 _G_SELLV_RXEOMCLK	=	0xe678
                    E67C   1858 _G_SELLV_RXDATACLK	=	0xe67c
                    E680   1859 _G_SELLV_RXSAMPLER	=	0xe680
                    E684   1860 _SAS_PRESET0_TB	=	0xe684
                    E688   1861 _SAS_PRESET1_TB	=	0xe688
                    E68C   1862 _SAS_PRESET2_TB	=	0xe68c
                    E690   1863 _ETH_PRESET0_TB	=	0xe690
                    E694   1864 _ETH_PRESET1_TB	=	0xe694
                    E698   1865 _TX_SAVE_0	=	0xe698
                    E69C   1866 _TX_SAVE_1	=	0xe69c
                    E6A0   1867 _TX_SAVE_2	=	0xe6a0
                    E6A4   1868 _TX_SAVE_3	=	0xe6a4
                    E6A8   1869 _TX_SAVE_4	=	0xe6a8
                    E6AC   1870 _CDS_EYE_CLK_THR	=	0xe6ac
                    E6B0   1871 _SYNC_INFO	=	0xe6b0
                    E6B4   1872 _MCU_INFO_4	=	0xe6b4
                    E6B8   1873 _MCU_INFO_5	=	0xe6b8
                    E6BC   1874 _MCU_INFO_12	=	0xe6bc
                    E6C0   1875 _MCU_INFO_13	=	0xe6c0
                    E6C4   1876 _END_XDAT_CMN	=	0xe6c4
                    2600   1877 _DME_ENC_REG0	=	0x2600
                    2604   1878 _DME_ENC_REG1	=	0x2604
                    2608   1879 _DME_ENC_REG2	=	0x2608
                    260C   1880 _DME_DEC_REG0	=	0x260c
                    2610   1881 _DME_DEC_REG1	=	0x2610
                    2614   1882 _TX_TRAIN_IF_REG0	=	0x2614
                    2618   1883 _TX_TRAIN_IF_REG1	=	0x2618
                    261C   1884 _TX_TRAIN_IF_REG2	=	0x261c
                    2620   1885 _TX_TRAIN_IF_REG3	=	0x2620
                    2624   1886 _TX_TRAIN_PATTTERN_REG0	=	0x2624
                    2628   1887 _TX_TRAIN_DRIVER_REG0	=	0x2628
                    262C   1888 _TX_TRAIN_DRIVER_REG1	=	0x262c
                    2630   1889 _TX_TRAIN_DRIVER_REG2	=	0x2630
                    2634   1890 _TX_TRAIN_DEFAULT_REG0	=	0x2634
                    2638   1891 _TX_TRAIN_DEFAULT_REG1	=	0x2638
                    263C   1892 _TX_TRAIN_DEFAULT_REG2	=	0x263c
                    2640   1893 _TX_TRAIN_DEFAULT_REG3	=	0x2640
                    2644   1894 _TX_TRAIN_DEFAULT_REG4	=	0x2644
                    2648   1895 _TX_TRAIN_DEFAULT_REG5	=	0x2648
                    264C   1896 _TX_EMPH_CTRL_REG0	=	0x264c
                    2650   1897 _LINK_TRAIN_MODE0	=	0x2650
                    2654   1898 _TX_DRV_RD_OUT_REG0	=	0x2654
                    2658   1899 _TX_AMP_CTRL_REG0	=	0x2658
                    265C   1900 _TRX_TRAIN_IF_INTERRUPT_LANE	=	0x265c
                    2660   1901 _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE	=	0x2660
                    2664   1902 _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE	=	0x2664
                    2668   1903 _TX_TRAIN_IF_REG4	=	0x2668
                    266C   1904 _TX_TRAIN_IF_REG5	=	0x266c
                    2670   1905 _TX_TRAIN_IF_REG6	=	0x2670
                    2674   1906 _TX_TRAIN_IF_REG7	=	0x2674
                    2678   1907 _TX_TRAIN_CTRL_LANE	=	0x2678
                    267C   1908 _TX_TRAIN_IF_REG8	=	0x267c
                    6100   1909 _DFE_READ_EVEN_REG0	=	0x6100
                    6104   1910 _DFE_READ_EVEN_REG1	=	0x6104
                    6108   1911 _DFE_READ_EVEN_REG2	=	0x6108
                    610C   1912 _DFE_READ_EVEN_REG3	=	0x610c
                    6110   1913 _DFE_READ_EVEN_REG4	=	0x6110
                    6114   1914 _DFE_READ_EVEN_REG5	=	0x6114
                    6118   1915 _DFE_READ_EVEN_REG6	=	0x6118
                    611C   1916 _DFE_READ_EVEN_REG7	=	0x611c
                    6120   1917 _DFE_READ_ODD_REG0	=	0x6120
                    6124   1918 _DFE_READ_ODD_REG1	=	0x6124
                    6128   1919 _DFE_READ_ODD_REG2	=	0x6128
                    612C   1920 _DFE_READ_ODD_REG3	=	0x612c
                    6130   1921 _DFE_READ_ODD_REG4	=	0x6130
                    6134   1922 _DFE_READ_ODD_REG5	=	0x6134
                    6138   1923 _DFE_READ_ODD_REG6	=	0x6138
                    613C   1924 _DFE_READ_ODD_REG7	=	0x613c
                    6140   1925 _DFE_READ_EVEN_REG8	=	0x6140
                    6144   1926 _DFE_READ_ODD_REG8	=	0x6144
                    6148   1927 _DFE_READ_F0A_EVEN	=	0x6148
                    614C   1928 _DFE_READ_F0A_ODD	=	0x614c
                    6150   1929 _DFE_READ_F0B_EVEN	=	0x6150
                    6154   1930 _DFE_READ_F0B_ODD	=	0x6154
                    6158   1931 _DFE_READ_F0D_EVEN	=	0x6158
                    615C   1932 _DFE_READ_F0D_ODD	=	0x615c
                    6160   1933 _DFE_READ_F0D_LEFT_EVEN	=	0x6160
                    6164   1934 _DFE_READ_F0D_LEFT_ODD	=	0x6164
                    6168   1935 _DFE_READ_F0D_RIGHT_EVEN	=	0x6168
                    616C   1936 _DFE_READ_F0D_RIGHT_ODD	=	0x616c
                    6170   1937 _CDS_READ_MISC0	=	0x6170
                    6174   1938 _CDS_READ_MISC1	=	0x6174
                    6214   1939 _TXTRAIN_IF_REG0	=	0x6214
                    E000   1940 _lc_speedtable	=	0xe000
                    E1C0   1941 _ring_speedtable	=	0xe1c0
                    E5C0   1942 _phy_mode_cmn_table	=	0xe5c0
                    6300   1943 _max_gen	=	0x6300
                    6301   1944 _min_gen	=	0x6301
                    6304   1945 _speedtable	=	0x6304
                    65D4   1946 _phy_mode_lane_table	=	0x65d4
                    60B4   1947 _rc_save	=	0x60b4
                    60D0   1948 _txffe_save	=	0x60d0
                    60E4   1949 _phase_save	=	0x60e4
                    6030   1950 _train_gn1_index	=	0x6030
                    6031   1951 _train_g1_index	=	0x6031
                    6032   1952 _train_g0_index	=	0x6032
                    E6B0   1953 _local_tx_preset_tb	=	0xe6b0
                    E5C1   1954 _cmx_cal_lcvco_dac	=	0xe5c1
                    E5C1   1955 _cmx_cal_lcvco_dac_lsb	=	0xe5c1
                    E5C4   1956 _cmx_cal_lcvco_dac_msb	=	0xe5c4
                    E5CA   1957 _cmx_cal_lccap_msb	=	0xe5ca
                    E5C8   1958 _cmx_cal_lccap_lsb	=	0xe5c8
                    E5CC   1959 _cmx_cal_plldcc	=	0xe5cc
                    E5D0   1960 _cmx_cal_pll_speed_ring	=	0xe5d0
                    E5D4   1961 _cmx_cal_pll_sllp_dac_coarse_ring	=	0xe5d4
                    E5D8   1962 _cmx_cal_sllp_dac_fine_ring	=	0xe5d8
                    65D4   1963 _lnx_cal_txdcc_pdiv	=	0x65d4
                    65D8   1964 _lnx_cal_txdcc_pdiv_hg	=	0x65d8
                    65DA   1965 _lnx_cal_txdcc	=	0x65da
                    65DE   1966 _lnx_cal_txdcc_hg	=	0x65de
                    65E0   1967 _lnx_cal_rxdcc_dll	=	0x65e0
                    65E4   1968 _lnx_cal_rxdcc_dll_hg	=	0x65e4
                    65E6   1969 _lnx_cal_rxdcc_data	=	0x65e6
                    65F0   1970 _lnx_cal_rxdcc_data_hg	=	0x65f0
                    65F5   1971 _lnx_cal_rxdcc_eom	=	0x65f5
                    65FF   1972 _lnx_cal_rxdcc_eom_hg	=	0x65ff
                    6604   1973 _lnx_cal_dll_gmsel	=	0x6604
                    6606   1974 _lnx_cal_vdda_dll_sel	=	0x6606
                    660A   1975 _lnx_cal_dll_eom_gmsel	=	0x660a
                    660C   1976 _lnx_cal_vdda_dll_eom_sel	=	0x660c
                    6610   1977 _lnx_cal_eom_dpher	=	0x6610
                    6612   1978 _lnx_cal_align90_dummy_clk	=	0x6612
                    661A   1979 _lnx_cal_align90_dac	=	0x661a
                    6622   1980 _lnx_cal_align90_gm	=	0x6622
                    662A   1981 _lnx_cal_sellv_txdata	=	0x662a
                    6634   1982 _lnx_cal_sellv_txclk	=	0x6634
                    663E   1983 _lnx_cal_sellv_rxdataclk	=	0x663e
                    6648   1984 _lnx_cal_sellv_txpre	=	0x6648
                    6652   1985 _lnx_cal_sellv_rxsampler	=	0x6652
                    665C   1986 _lnx_cal_sellv_rxeomclk	=	0x665c
                    6666   1987 _lnx_spdoft_tx_preset_index_lane	=	0x6666
                    6490   1988 _lnx_calx_txdcc_pdiv	=	0x6490
                    6496   1989 _lnx_calx_txdcc_pdiv_hg	=	0x6496
                    6499   1990 _lnx_calx_txdcc	=	0x6499
                    649F   1991 _lnx_calx_txdcc_hg	=	0x649f
                    64A2   1992 _lnx_calx_rxdcc_dll	=	0x64a2
                    64A8   1993 _lnx_calx_rxdcc_dll_hg	=	0x64a8
                    64AB   1994 _lnx_calx_dll_gmsel	=	0x64ab
                    64AE   1995 _lnx_calx_vdda_dll_sel	=	0x64ae
                    64B4   1996 _lnx_calx_dll_eom_gmsel	=	0x64b4
                    64B7   1997 _lnx_calx_vdda_dll_eom_sel	=	0x64b7
                    64BD   1998 _lnx_calx_eom_dpher	=	0x64bd
                    64C0   1999 _lnx_calx_align90_dummy_clk	=	0x64c0
                    64CC   2000 _lnx_calx_align90_dac	=	0x64cc
                    64D8   2001 _lnx_calx_align90_gm	=	0x64d8
                    6100   2002 _cds28	=	0x6100
                    6178   2003 _dfe_sm	=	0x6178
                    61B8   2004 _dfe_sm_dc	=	0x61b8
                    61C0   2005 _dfe_sm_save	=	0x61c0
                    03FC   2006 _UPHY_ANAREG_REV_0	=	0x03fc
                    E684   2007 _tx_tb	=	0xe684
                    E698   2008 _train_save_tb	=	0xe698
                    607C   2009 _sq_thrs_ratio_tb	=	0x607c
                           2010 ;--------------------------------------------------------
                           2011 ; absolute external ram data
                           2012 ;--------------------------------------------------------
                           2013 	.area XABS    (ABS,XDATA)
                           2014 ;--------------------------------------------------------
                           2015 ; external initialized ram data
                           2016 ;--------------------------------------------------------
                           2017 	.area HOME    (CODE)
                           2018 	.area GSINIT0 (CODE)
                           2019 	.area GSINIT1 (CODE)
                           2020 	.area GSINIT2 (CODE)
                           2021 	.area GSINIT3 (CODE)
                           2022 	.area GSINIT4 (CODE)
                           2023 	.area GSINIT5 (CODE)
                           2024 	.area GSINIT  (CODE)
                           2025 	.area GSFINAL (CODE)
                           2026 	.area CSEG    (CODE)
                           2027 ;--------------------------------------------------------
                           2028 ; global & static initialisations
                           2029 ;--------------------------------------------------------
                           2030 	.area HOME    (CODE)
                           2031 	.area GSINIT  (CODE)
                           2032 	.area GSFINAL (CODE)
                           2033 	.area GSINIT  (CODE)
                           2034 ;--------------------------------------------------------
                           2035 ; Home
                           2036 ;--------------------------------------------------------
                           2037 	.area HOME    (CODE)
                           2038 	.area HOME    (CODE)
                           2039 ;--------------------------------------------------------
                           2040 ; code
                           2041 ;--------------------------------------------------------
                           2042 	.area BANK1   (CODE)
                           2043 ;------------------------------------------------------------
                           2044 ;Allocation info for local variables in function 'Calibration'
                           2045 ;------------------------------------------------------------
                           2046 ;rate                      Allocated to registers r3 
                           2047 ;inx                       Allocated to registers r4 
                           2048 ;genno                     Allocated to registers r2 
                           2049 ;dtx_off                   Allocated to registers r3 
                           2050 ;------------------------------------------------------------
                           2051 ;	../../shared/src/cal_top.c:25: void Calibration(void) BANKING_CTRL {
                           2052 ;	-----------------------------------------
                           2053 ;	 function Calibration
                           2054 ;	-----------------------------------------
   0000                    2055 _Calibration:
                    0002   2056 	ar2 = 0x02
                    0003   2057 	ar3 = 0x03
                    0004   2058 	ar4 = 0x04
                    0005   2059 	ar5 = 0x05
                    0006   2060 	ar6 = 0x06
                    0007   2061 	ar7 = 0x07
                    0000   2062 	ar0 = 0x00
                    0001   2063 	ar1 = 0x01
                           2064 ;	../../shared/src/cal_top.c:30: lnx_CAL_DONE_LANE = 0;
   0000 90 60 03           2065 	mov	dptr,#(_CAL_CTRL1_LANE + 0x0003)
   0003 E0                 2066 	movx	a,@dptr
   0004 54 FE              2067 	anl	a,#0xfe
   0006 F0                 2068 	movx	@dptr,a
                           2069 ;	../../shared/src/cal_top.c:32: phy_check_lane(0);
   0007 75 82 00           2070 	mov	dpl,#0x00
   000A 78r86              2071 	mov	r0,#_phy_check_lane
   000C 79s0B              2072 	mov	r1,#(_phy_check_lane >> 8)
   000E 7As00              2073 	mov	r2,#(_phy_check_lane >> 16)
   0010 12s00r00           2074 	lcall	__sdcc_banked_call
                           2075 ;	../../shared/src/cal_top.c:33: reg_DFE_ADAPT_CONT_LANE = 0;
   0013 90 24 01           2076 	mov	dptr,#(_DFE_CTRL_REG0 + 0x0001)
   0016 E0                 2077 	movx	a,@dptr
   0017 54 DF              2078 	anl	a,#0xdf
   0019 F0                 2079 	movx	@dptr,a
                           2080 ;	../../shared/src/cal_top.c:34: reg_DFE_START_LANE = 0;
   001A 90 24 02           2081 	mov	dptr,#(_DFE_CTRL_REG0 + 0x0002)
   001D E0                 2082 	movx	a,@dptr
   001E 54 FE              2083 	anl	a,#0xfe
   0020 F0                 2084 	movx	@dptr,a
                           2085 ;	../../shared/src/cal_top.c:36: gen_tx = reg_PIN_PHY_GEN_TX_RD_LANE_3_0; gen_tx = min(gen_tx, cmx_PHY_GEN_MAX_3_0);
   0021 90 20 33           2086 	mov	dptr,#(_SPD_CTRL_TX_LANE_REG1_LANE + 0x0003)
   0024 E0                 2087 	movx	a,@dptr
   0025 C4                 2088 	swap	a
   0026 54 0F              2089 	anl	a,#0x0f
   0028 FA                 2090 	mov	r2,a
   0029 90s00r00           2091 	mov	dptr,#_gen_tx
   002C F0                 2092 	movx	@dptr,a
   002D 90 E6 2C           2093 	mov	dptr,#_CONTROL_CONFIG8
   0030 E0                 2094 	movx	a,@dptr
   0031 54 0F              2095 	anl	a,#0x0f
   0033 FB                 2096 	mov	r3,a
   0034 C0 03              2097 	push	ar3
   0036 8A 82              2098 	mov	dpl,r2
   0038 78r00              2099 	mov	r0,#_min
   003A 79s00              2100 	mov	r1,#(_min >> 8)
   003C 7As00              2101 	mov	r2,#(_min >> 16)
   003E 12s00r00           2102 	lcall	__sdcc_banked_call
   0041 AA 82              2103 	mov	r2,dpl
   0043 15 81              2104 	dec	sp
   0045 90s00r00           2105 	mov	dptr,#_gen_tx
   0048 EA                 2106 	mov	a,r2
   0049 F0                 2107 	movx	@dptr,a
                           2108 ;	../../shared/src/cal_top.c:37: gen_rx = reg_PIN_PHY_GEN_RX_RD_LANE_3_0; gen_rx = min(gen_rx, cmx_PHY_GEN_MAX_3_0);
   004A 90 21 17           2109 	mov	dptr,#(_SPD_CTRL_RX_LANE_REG1_LANE + 0x0003)
   004D E0                 2110 	movx	a,@dptr
   004E C4                 2111 	swap	a
   004F 54 0F              2112 	anl	a,#0x0f
   0051 FA                 2113 	mov	r2,a
   0052 90s00r00           2114 	mov	dptr,#_gen_rx
   0055 F0                 2115 	movx	@dptr,a
   0056 90 E6 2C           2116 	mov	dptr,#_CONTROL_CONFIG8
   0059 E0                 2117 	movx	a,@dptr
   005A 54 0F              2118 	anl	a,#0x0f
   005C FB                 2119 	mov	r3,a
   005D C0 03              2120 	push	ar3
   005F 8A 82              2121 	mov	dpl,r2
   0061 78r00              2122 	mov	r0,#_min
   0063 79s00              2123 	mov	r1,#(_min >> 8)
   0065 7As00              2124 	mov	r2,#(_min >> 16)
   0067 12s00r00           2125 	lcall	__sdcc_banked_call
   006A AA 82              2126 	mov	r2,dpl
   006C 15 81              2127 	dec	sp
   006E 90s00r00           2128 	mov	dptr,#_gen_rx
   0071 EA                 2129 	mov	a,r2
   0072 F0                 2130 	movx	@dptr,a
                           2131 ;	../../shared/src/cal_top.c:39: for(genno=min_gen; genno<= max_gen; genno++) {  
   0073 90 63 01           2132 	mov	dptr,#_min_gen
   0076 E0                 2133 	movx	a,@dptr
   0077 FA                 2134 	mov	r2,a
   0078 FB                 2135 	mov	r3,a
   0079                    2136 00298$:
   0079 90 63 00           2137 	mov	dptr,#_max_gen
   007C E0                 2138 	movx	a,@dptr
   007D FC                 2139 	mov	r4,a
   007E B5 03 00           2140 	cjne	a,ar3,00388$
   0081                    2141 00388$:
   0081 40 3A              2142 	jc	00301$
                           2143 ;	../../shared/src/cal_top.c:40: if(speedtable[genno][spdoft_tx_ck_sel_lane] == 1 || speedtable[genno][spdoft_rx_ck_sel_lane] == 1) ring_pll_enabled = 1;
   0083 EB                 2144 	mov	a,r3
   0084 75 F0 50           2145 	mov	b,#0x50
   0087 A4                 2146 	mul	ab
   0088 FC                 2147 	mov	r4,a
   0089 AD F0              2148 	mov	r5,b
   008B 24 04              2149 	add	a,#_speedtable
   008D FE                 2150 	mov	r6,a
   008E ED                 2151 	mov	a,r5
   008F 34 63              2152 	addc	a,#(_speedtable >> 8)
   0091 FF                 2153 	mov	r7,a
   0092 8E 82              2154 	mov	dpl,r6
   0094 8F 83              2155 	mov	dph,r7
   0096 A3                 2156 	inc	dptr
   0097 E0                 2157 	movx	a,@dptr
   0098 FE                 2158 	mov	r6,a
   0099 BE 01 02           2159 	cjne	r6,#0x01,00390$
   009C 80 16              2160 	sjmp	00101$
   009E                    2161 00390$:
   009E EC                 2162 	mov	a,r4
   009F 24 04              2163 	add	a,#_speedtable
   00A1 FC                 2164 	mov	r4,a
   00A2 ED                 2165 	mov	a,r5
   00A3 34 63              2166 	addc	a,#(_speedtable >> 8)
   00A5 FD                 2167 	mov	r5,a
   00A6 74 16              2168 	mov	a,#0x16
   00A8 2C                 2169 	add	a,r4
   00A9 F5 82              2170 	mov	dpl,a
   00AB E4                 2171 	clr	a
   00AC 3D                 2172 	addc	a,r5
   00AD F5 83              2173 	mov	dph,a
   00AF E0                 2174 	movx	a,@dptr
   00B0 FC                 2175 	mov	r4,a
   00B1 BC 01 04           2176 	cjne	r4,#0x01,00102$
   00B4                    2177 00101$:
   00B4 D2*00              2178 	setb	_ring_pll_enabled
   00B6 80 02              2179 	sjmp	00300$
   00B8                    2180 00102$:
                           2181 ;	../../shared/src/cal_top.c:41: else 	lc_pll_used = 1;
   00B8 D2*00              2182 	setb	_lc_pll_used
   00BA                    2183 00300$:
                           2184 ;	../../shared/src/cal_top.c:39: for(genno=min_gen; genno<= max_gen; genno++) {  
   00BA 0B                 2185 	inc	r3
   00BB 80 BC              2186 	sjmp	00298$
   00BD                    2187 00301$:
                           2188 ;	../../shared/src/cal_top.c:47: genno = gen_tx;
   00BD 90s00r00           2189 	mov	dptr,#_gen_tx
   00C0 E0                 2190 	movx	a,@dptr
   00C1 FA                 2191 	mov	r2,a
                           2192 ;	../../shared/src/cal_top.c:49: if(phy_mode==SERDES) { 
   00C2 90 A3 16           2193 	mov	dptr,#(_SYSTEM + 0x0002)
   00C5 E0                 2194 	movx	a,@dptr
   00C6 54 07              2195 	anl	a,#0x07
   00C8 FB                 2196 	mov	r3,a
   00C9 BB 04 2A           2197 	cjne	r3,#0x04,00106$
                           2198 ;	../../shared/src/cal_top.c:50: genno = min(reg_PIN_PHY_GEN_TX_RD_LANE_3_0, cmx_PHY_GEN_MAX_3_0);
   00CC 90 E6 2C           2199 	mov	dptr,#_CONTROL_CONFIG8
   00CF E0                 2200 	movx	a,@dptr
   00D0 54 0F              2201 	anl	a,#0x0f
   00D2 FB                 2202 	mov	r3,a
   00D3 90 20 33           2203 	mov	dptr,#(_SPD_CTRL_TX_LANE_REG1_LANE + 0x0003)
   00D6 E0                 2204 	movx	a,@dptr
   00D7 C4                 2205 	swap	a
   00D8 54 0F              2206 	anl	a,#0x0f
   00DA F5 82              2207 	mov	dpl,a
   00DC C0 03              2208 	push	ar3
   00DE 78r00              2209 	mov	r0,#_min
   00E0 79s00              2210 	mov	r1,#(_min >> 8)
   00E2 7As00              2211 	mov	r2,#(_min >> 16)
   00E4 12s00r00           2212 	lcall	__sdcc_banked_call
   00E7 AB 82              2213 	mov	r3,dpl
   00E9 15 81              2214 	dec	sp
   00EB 8B 02              2215 	mov	ar2,r3
                           2216 ;	../../shared/src/cal_top.c:51: genno = get_gen_memory_index(genno);
   00ED 8A 82              2217 	mov	dpl,r2
   00EF 12s00r00           2218 	lcall	_get_gen_memory_index
   00F2 AB 82              2219 	mov	r3,dpl
   00F4 8B 02              2220 	mov	ar2,r3
   00F6                    2221 00106$:
                           2222 ;	../../shared/src/cal_top.c:55: gen_pll_rate = speedtable[genno][spdoft_pll_rate_sel_tx];
   00F6 EA                 2223 	mov	a,r2
   00F7 75 F0 50           2224 	mov	b,#0x50
   00FA A4                 2225 	mul	ab
   00FB FB                 2226 	mov	r3,a
   00FC AC F0              2227 	mov	r4,b
   00FE 24 04              2228 	add	a,#_speedtable
   0100 F5 82              2229 	mov	dpl,a
   0102 EC                 2230 	mov	a,r4
   0103 34 63              2231 	addc	a,#(_speedtable >> 8)
   0105 F5 83              2232 	mov	dph,a
   0107 E0                 2233 	movx	a,@dptr
   0108 FD                 2234 	mov	r5,a
   0109 90s00r00           2235 	mov	dptr,#_gen_pll_rate
   010C F0                 2236 	movx	@dptr,a
                           2237 ;	../../shared/src/cal_top.c:56: if(gen_pll_rate>1 || phy_mode==SERDES) { tx_pll_rate = 0; tx_pll_rate_x = 0; }
   010D 74 01              2238 	mov	a,#0x01
   010F B5 05 00           2239 	cjne	a,ar5,00395$
   0112                    2240 00395$:
   0112 40 0A              2241 	jc	00107$
   0114 90 A3 16           2242 	mov	dptr,#(_SYSTEM + 0x0002)
   0117 E0                 2243 	movx	a,@dptr
   0118 54 07              2244 	anl	a,#0x07
   011A FE                 2245 	mov	r6,a
   011B BE 04 09           2246 	cjne	r6,#0x04,00108$
   011E                    2247 00107$:
   011E C2*00              2248 	clr	_tx_pll_rate
   0120 90s00r00           2249 	mov	dptr,#_tx_pll_rate_x
   0123 E4                 2250 	clr	a
   0124 F0                 2251 	movx	@dptr,a
   0125 80 0A              2252 	sjmp	00109$
   0127                    2253 00108$:
                           2254 ;	../../shared/src/cal_top.c:57: else { tx_pll_rate = gen_pll_rate; tx_pll_rate_x = gen_pll_rate; }
   0127 ED                 2255 	mov	a,r5
   0128 24 FF              2256 	add	a,#0xff
   012A 92*00              2257 	mov	_tx_pll_rate,c
   012C 90s00r00           2258 	mov	dptr,#_tx_pll_rate_x
   012F ED                 2259 	mov	a,r5
   0130 F0                 2260 	movx	@dptr,a
   0131                    2261 00109$:
                           2262 ;	../../shared/src/cal_top.c:58: use_ring_pll = speedtable[genno][spdoft_tx_ck_sel_lane];
   0131 EB                 2263 	mov	a,r3
   0132 24 04              2264 	add	a,#_speedtable
   0134 FB                 2265 	mov	r3,a
   0135 EC                 2266 	mov	a,r4
   0136 34 63              2267 	addc	a,#(_speedtable >> 8)
   0138 FC                 2268 	mov	r4,a
   0139 8B 82              2269 	mov	dpl,r3
   013B 8C 83              2270 	mov	dph,r4
   013D A3                 2271 	inc	dptr
   013E E0                 2272 	movx	a,@dptr
   013F 24 FF              2273 	add	a,#0xff
   0141 92*00              2274 	mov	_use_ring_pll,c
                           2275 ;	../../shared/src/cal_top.c:79: if(phy_mode==SERDES && SPDCHG_ON_READ) {
   0143 90 A3 16           2276 	mov	dptr,#(_SYSTEM + 0x0002)
   0146 E0                 2277 	movx	a,@dptr
   0147 54 07              2278 	anl	a,#0x07
   0149 FB                 2279 	mov	r3,a
   014A BB 04 02           2280 	cjne	r3,#0x04,00399$
   014D 80 03              2281 	sjmp	00400$
   014F                    2282 00399$:
   014F 02s01rDA           2283 	ljmp	00124$
   0152                    2284 00400$:
   0152 90 22 38           2285 	mov	dptr,#_MCU_STATUS2_LANE
   0155 E0                 2286 	movx	a,@dptr
   0156 FB                 2287 	mov	r3,a
   0157 53 03 01           2288 	anl	ar3,#0x01
   015A BB 01 02           2289 	cjne	r3,#0x01,00401$
   015D 80 02              2290 	sjmp	00402$
   015F                    2291 00401$:
   015F 80 79              2292 	sjmp	00124$
   0161                    2293 00402$:
                           2294 ;	../../shared/src/cal_top.c:80: dtx_off = pre_gen_pll_rate != gen_pll_rate;
   0161 90s00r00           2295 	mov	dptr,#_pre_gen_pll_rate
   0164 E0                 2296 	movx	a,@dptr
   0165 FB                 2297 	mov	r3,a
   0166 B5 05 04           2298 	cjne	a,ar5,00403$
   0169 74 01              2299 	mov	a,#0x01
   016B 80 01              2300 	sjmp	00404$
   016D                    2301 00403$:
   016D E4                 2302 	clr	a
   016E                    2303 00404$:
   016E FD                 2304 	mov	r5,a
   016F B4 01 00           2305 	cjne	a,#0x01,00405$
   0172                    2306 00405$:
   0172 E4                 2307 	clr	a
   0173 33                 2308 	rlc	a
   0174 FD                 2309 	mov	r5,a
                           2310 ;	../../shared/src/cal_top.c:81: if(dtx_off) {
   0175 FB                 2311 	mov	r3,a
   0176 60 57              2312 	jz	00122$
                           2313 ;	../../shared/src/cal_top.c:82: if(serdes_ring_lane_en) {
   0178 90s00r00           2314 	mov	dptr,#_serdes_ring_lane_en
   017B E0                 2315 	movx	a,@dptr
   017C FC                 2316 	mov	r4,a
   017D 60 25              2317 	jz	00119$
                           2318 ;	../../shared/src/cal_top.c:83: if(ring_lane_sel) pll_clk_ready_ring_0();
   017F 90s00r00           2319 	mov	dptr,#_ring_lane_sel
   0182 E0                 2320 	movx	a,@dptr
   0183 FC                 2321 	mov	r4,a
   0184 60 0F              2322 	jz	00112$
   0186 C0 03              2323 	push	ar3
   0188 78r00              2324 	mov	r0,#_pll_clk_ready_ring_0
   018A 79s00              2325 	mov	r1,#(_pll_clk_ready_ring_0 >> 8)
   018C 7As00              2326 	mov	r2,#(_pll_clk_ready_ring_0 >> 16)
   018E 12s00r00           2327 	lcall	__sdcc_banked_call
   0191 D0 03              2328 	pop	ar3
   0193 80 3A              2329 	sjmp	00122$
   0195                    2330 00112$:
                           2331 ;	../../shared/src/cal_top.c:86: else pll_clk_ready_0();
   0195 C0 03              2332 	push	ar3
   0197 78r00              2333 	mov	r0,#_pll_clk_ready_0
   0199 79s00              2334 	mov	r1,#(_pll_clk_ready_0 >> 8)
   019B 7As00              2335 	mov	r2,#(_pll_clk_ready_0 >> 16)
   019D 12s00r00           2336 	lcall	__sdcc_banked_call
   01A0 D0 03              2337 	pop	ar3
   01A2 80 2B              2338 	sjmp	00122$
   01A4                    2339 00119$:
                           2340 ;	../../shared/src/cal_top.c:89: else if(mcuid == master_mcu) {
   01A4 90 22 00           2341 	mov	dptr,#_MCU_CONTROL_LANE
   01A7 E0                 2342 	movx	a,@dptr
   01A8 FC                 2343 	mov	r4,a
   01A9 90 E6 50           2344 	mov	dptr,#_MCU_CONFIG
   01AC E0                 2345 	movx	a,@dptr
   01AD FD                 2346 	mov	r5,a
   01AE EC                 2347 	mov	a,r4
   01AF B5 05 1D           2348 	cjne	a,ar5,00122$
                           2349 ;	../../shared/src/cal_top.c:90: pll_clk_ready_0();
   01B2 C0 03              2350 	push	ar3
   01B4 78r00              2351 	mov	r0,#_pll_clk_ready_0
   01B6 79s00              2352 	mov	r1,#(_pll_clk_ready_0 >> 8)
   01B8 7As00              2353 	mov	r2,#(_pll_clk_ready_0 >> 16)
   01BA 12s00r00           2354 	lcall	__sdcc_banked_call
   01BD D0 03              2355 	pop	ar3
                           2356 ;	../../shared/src/cal_top.c:91: if(ring_pll_enabled) pll_clk_ready_ring_0();
   01BF 30*00 0D           2357 	jnb	_ring_pll_enabled,00122$
   01C2 C0 03              2358 	push	ar3
   01C4 78r00              2359 	mov	r0,#_pll_clk_ready_ring_0
   01C6 79s00              2360 	mov	r1,#(_pll_clk_ready_ring_0 >> 8)
   01C8 7As00              2361 	mov	r2,#(_pll_clk_ready_ring_0 >> 16)
   01CA 12s00r00           2362 	lcall	__sdcc_banked_call
   01CD D0 03              2363 	pop	ar3
   01CF                    2364 00122$:
                           2365 ;	../../shared/src/cal_top.c:99: DTL_DTX_DFE_clkoff_reset_1(dtx_off); //(mcuid == master_mcu) && (pre_gen_pll_rate != gen_pll_rate));
   01CF 8B 82              2366 	mov	dpl,r3
   01D1 78r00              2367 	mov	r0,#_DTL_DTX_DFE_clkoff_reset_1
   01D3 79s00              2368 	mov	r1,#(_DTL_DTX_DFE_clkoff_reset_1 >> 8)
   01D5 7As00              2369 	mov	r2,#(_DTL_DTX_DFE_clkoff_reset_1 >> 16)
   01D7 12s00r00           2370 	lcall	__sdcc_banked_call
   01DA                    2371 00124$:
                           2372 ;	../../shared/src/cal_top.c:106: if( mcuid== master_mcu || (cmx_TX_LANE_ALIGN_OFF && reg_TSEN_ADC_RD_REQ==0)) {
   01DA 90 22 00           2373 	mov	dptr,#_MCU_CONTROL_LANE
   01DD E0                 2374 	movx	a,@dptr
   01DE FB                 2375 	mov	r3,a
   01DF 90 E6 50           2376 	mov	dptr,#_MCU_CONFIG
   01E2 E0                 2377 	movx	a,@dptr
   01E3 FC                 2378 	mov	r4,a
   01E4 EB                 2379 	mov	a,r3
   01E5 B5 04 02           2380 	cjne	a,ar4,00412$
   01E8 80 0E              2381 	sjmp	00128$
   01EA                    2382 00412$:
   01EA 90 E6 04           2383 	mov	dptr,#_CONTROL_CONFIG0
   01ED E0                 2384 	movx	a,@dptr
   01EE 30 E4 38           2385 	jnb	acc.4,00129$
   01F1 90 A3 29           2386 	mov	dptr,#(_ANA_TSEN_CONTROL + 0x0001)
   01F4 E0                 2387 	movx	a,@dptr
   01F5 20 E3 31           2388 	jb	acc.3,00129$
   01F8                    2389 00128$:
                           2390 ;	../../shared/src/cal_top.c:107: reg_TSEN_ADC_CAL_1_0 = 0x2; //Automatic self-offset-cal enforced, TSENE_ADC in normal mode.
   01F8 90 83 1C           2391 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_199
   01FB E0                 2392 	movx	a,@dptr
   01FC 54 F9              2393 	anl	a,#0xf9
   01FE 44 04              2394 	orl	a,#0x04
   0200 F0                 2395 	movx	@dptr,a
                           2396 ;	../../shared/src/cal_top.c:108: CMN_CALIBRATION.BT.B1 = 0x08; //reg_ANA_TSEN_ADC_RESET = 0;
                           2397 ;	../../shared/src/cal_top.c:109: CMN_CALIBRATION.BT.B1 = 0x09; //reg_ANA_TSEN_ADC_EN = 1;
                           2398 ;	../../shared/src/cal_top.c:110: CMN_CALIBRATION.BT.B1 = 0x0d; //reg_ANA_TSEN_ADC_START = 1;
   0201 90 A3 41           2399 	mov	dptr,#(_CMN_CALIBRATION + 0x0001)
   0204 74 08              2400 	mov	a,#0x08
   0206 F0                 2401 	movx	@dptr,a
   0207 74 09              2402 	mov	a,#0x09
   0209 F0                 2403 	movx	@dptr,a
   020A 74 0D              2404 	mov	a,#0x0D
   020C F0                 2405 	movx	@dptr,a
                           2406 ;	../../shared/src/cal_top.c:111: reg_TSEN_ADC_RD_REQ = 1;
   020D 90 A3 29           2407 	mov	dptr,#(_ANA_TSEN_CONTROL + 0x0001)
   0210 E0                 2408 	movx	a,@dptr
   0211 44 08              2409 	orl	a,#0x08
   0213 F0                 2410 	movx	@dptr,a
                           2411 ;	../../shared/src/cal_top.c:114: if (FAST_POWER_ON_EN) {
   0214 90 E6 07           2412 	mov	dptr,#(_CONTROL_CONFIG0 + 0x0003)
   0217 E0                 2413 	movx	a,@dptr
   0218 30 E4 0E           2414 	jnb	acc.4,00129$
                           2415 ;	../../shared/src/cal_top.c:115: reg_ANA_TSEN_ADC_RDY_FM_REG = 1;
   021B 90 A3 2B           2416 	mov	dptr,#(_ANA_TSEN_CONTROL + 0x0003)
   021E E0                 2417 	movx	a,@dptr
   021F 44 02              2418 	orl	a,#0x02
   0221 F0                 2419 	movx	@dptr,a
                           2420 ;	../../shared/src/cal_top.c:116: reg_ANA_TSEN_ADC_RDY = 1;
   0222 90 A3 2B           2421 	mov	dptr,#(_ANA_TSEN_CONTROL + 0x0003)
   0225 E0                 2422 	movx	a,@dptr
   0226 44 04              2423 	orl	a,#0x04
   0228 F0                 2424 	movx	@dptr,a
   0229                    2425 00129$:
                           2426 ;	../../shared/src/cal_top.c:120: read_tsen();
   0229 78r00              2427 	mov	r0,#_read_tsen
   022B 79s00              2428 	mov	r1,#(_read_tsen >> 8)
   022D 7As00              2429 	mov	r2,#(_read_tsen >> 16)
   022F 12s00r00           2430 	lcall	__sdcc_banked_call
                           2431 ;	../../shared/src/cal_top.c:122: if( force_exit_cal ) {
   0232 30*00 1C           2432 	jnb	_force_exit_cal,00133$
                           2433 ;	../../shared/src/cal_top.c:124: CONTROL_CONFIG1.VAL = 0x0ffffffc;
   0235 90 E6 08           2434 	mov	dptr,#_CONTROL_CONFIG1
   0238 74 FC              2435 	mov	a,#0xFC
   023A F0                 2436 	movx	@dptr,a
   023B A3                 2437 	inc	dptr
   023C 74 FF              2438 	mov	a,#0xFF
   023E F0                 2439 	movx	@dptr,a
   023F A3                 2440 	inc	dptr
   0240 F0                 2441 	movx	@dptr,a
   0241 A3                 2442 	inc	dptr
   0242 74 0F              2443 	mov	a,#0x0F
   0244 F0                 2444 	movx	@dptr,a
                           2445 ;	../../shared/src/cal_top.c:125: all_cal_ext();
   0245 78rFA              2446 	mov	r0,#_all_cal_ext
   0247 79s0B              2447 	mov	r1,#(_all_cal_ext >> 8)
   0249 7As00              2448 	mov	r2,#(_all_cal_ext >> 16)
   024B 12s00r00           2449 	lcall	__sdcc_banked_call
                           2450 ;	../../shared/src/cal_top.c:129: goto skip_out; //test
   024E 02s07rA8           2451 	ljmp	00278$
   0251                    2452 00133$:
                           2453 ;	../../shared/src/cal_top.c:132: reg_RX_INIT_DONE_LANE = 0; //??	
   0251 90 21 02           2454 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   0254 E0                 2455 	movx	a,@dptr
   0255 54 F7              2456 	anl	a,#0xf7
   0257 F0                 2457 	movx	@dptr,a
                           2458 ;	../../shared/src/cal_top.c:134: reg_ANA_TX_IDLE_FORCE_LANE = 1;
   0258 90 20 03           2459 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   025B E0                 2460 	movx	a,@dptr
   025C 44 04              2461 	orl	a,#0x04
   025E F0                 2462 	movx	@dptr,a
                           2463 ;	../../shared/src/cal_top.c:135: reg_ANA_TX_IDLE_LANE = 1;
   025F 90 20 03           2464 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   0262 E0                 2465 	movx	a,@dptr
   0263 44 01              2466 	orl	a,#0x01
   0265 F0                 2467 	movx	@dptr,a
                           2468 ;	../../shared/src/cal_top.c:136: reg_EOM_CLK_EN_LANE = 1;
   0266 90 02 18           2469 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_134
   0269 E0                 2470 	movx	a,@dptr
   026A 44 04              2471 	orl	a,#0x04
   026C F0                 2472 	movx	@dptr,a
                           2473 ;	../../shared/src/cal_top.c:137: reg_TX_TDTAP_SEL_LANE = 0;
   026D 90 02 44           2474 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_145
   0270 E0                 2475 	movx	a,@dptr
   0271 54 7F              2476 	anl	a,#0x7f
   0273 F0                 2477 	movx	@dptr,a
                           2478 ;	../../shared/src/cal_top.c:138: lnx_DLL_VDDA_TRACKING_ON_LANE = 0;
   0274 90 60 0A           2479 	mov	dptr,#(_CAL_CTRL3_LANE + 0x0002)
   0277 E0                 2480 	movx	a,@dptr
   0278 54 DF              2481 	anl	a,#0xdf
   027A F0                 2482 	movx	@dptr,a
                           2483 ;	../../shared/src/cal_top.c:141: reg_MCU_DEBUG0_LANE_7_0 = 0x31;
   027B 90 22 B4           2484 	mov	dptr,#_MCU_DEBUG0_LANE
   027E 74 31              2485 	mov	a,#0x31
   0280 F0                 2486 	movx	@dptr,a
                           2487 ;	../../shared/src/cal_top.c:142: reg_MCU_DEBUG3_LANE_7_0 = gen_pll_rate;
   0281 90s00r00           2488 	mov	dptr,#_gen_pll_rate
   0284 E0                 2489 	movx	a,@dptr
   0285 FB                 2490 	mov	r3,a
   0286 90 22 B7           2491 	mov	dptr,#(_MCU_DEBUG0_LANE + 0x0003)
   0289 F0                 2492 	movx	@dptr,a
                           2493 ;	../../shared/src/cal_top.c:143: reg_MCU_DEBUG5_LANE_7_0 = ring_pll_enabled;
   028A A2*00              2494 	mov	c,_ring_pll_enabled
   028C E4                 2495 	clr	a
   028D 33                 2496 	rlc	a
   028E 90 22 B9           2497 	mov	dptr,#(_MCU_DEBUG1_LANE + 0x0001)
   0291 F0                 2498 	movx	@dptr,a
                           2499 ;	../../shared/src/cal_top.c:144: reg_MCU_DEBUG6_LANE_7_0 = use_ring_pll;
   0292 A2*00              2500 	mov	c,_use_ring_pll
   0294 E4                 2501 	clr	a
   0295 33                 2502 	rlc	a
   0296 90 22 BA           2503 	mov	dptr,#(_MCU_DEBUG1_LANE + 0x0002)
   0299 F0                 2504 	movx	@dptr,a
                           2505 ;	../../shared/src/cal_top.c:145: reg_MCU_DEBUG8_LANE_7_0 = ring_lane_sel;
   029A 90s00r00           2506 	mov	dptr,#_ring_lane_sel
   029D E0                 2507 	movx	a,@dptr
   029E 90 22 BC           2508 	mov	dptr,#_MCU_DEBUG2_LANE
   02A1 F0                 2509 	movx	@dptr,a
                           2510 ;	../../shared/src/cal_top.c:146: reg_MCU_DEBUG9_LANE_7_0 = slave_phy_on;
   02A2 90s00r00           2511 	mov	dptr,#_slave_phy_on
   02A5 E0                 2512 	movx	a,@dptr
   02A6 90 22 BD           2513 	mov	dptr,#(_MCU_DEBUG2_LANE + 0x0001)
   02A9 F0                 2514 	movx	@dptr,a
                           2515 ;	../../shared/src/cal_top.c:152: if ((gen_pll_rate!=pre_gen_pll_rate && SPDCHG_ON_READ) || 
   02AA 90s00r00           2516 	mov	dptr,#_pre_gen_pll_rate
   02AD E0                 2517 	movx	a,@dptr
   02AE FC                 2518 	mov	r4,a
   02AF EB                 2519 	mov	a,r3
   02B0 B5 04 02           2520 	cjne	a,ar4,00417$
   02B3 80 0D              2521 	sjmp	00179$
   02B5                    2522 00417$:
   02B5 90 22 38           2523 	mov	dptr,#_MCU_STATUS2_LANE
   02B8 E0                 2524 	movx	a,@dptr
   02B9 FB                 2525 	mov	r3,a
   02BA 53 03 01           2526 	anl	ar3,#0x01
   02BD BB 01 02           2527 	cjne	r3,#0x01,00418$
   02C0 80 18              2528 	sjmp	00176$
   02C2                    2529 00418$:
   02C2                    2530 00179$:
                           2531 ;	../../shared/src/cal_top.c:154: (!SPDCHG_ON_READ) || phy_mode!=SERDES) {
   02C2 90 22 38           2532 	mov	dptr,#_MCU_STATUS2_LANE
   02C5 E0                 2533 	movx	a,@dptr
   02C6 FB                 2534 	mov	r3,a
   02C7 53 03 01           2535 	anl	ar3,#0x01
   02CA BB 01 0D           2536 	cjne	r3,#0x01,00176$
   02CD 90 A3 16           2537 	mov	dptr,#(_SYSTEM + 0x0002)
   02D0 E0                 2538 	movx	a,@dptr
   02D1 54 07              2539 	anl	a,#0x07
   02D3 FB                 2540 	mov	r3,a
   02D4 BB 04 03           2541 	cjne	r3,#0x04,00421$
   02D7 02s04rBA           2542 	ljmp	00177$
   02DA                    2543 00421$:
   02DA                    2544 00176$:
                           2545 ;	../../shared/src/cal_top.c:156: if( mcuid== master_mcu ) {
   02DA 90 22 00           2546 	mov	dptr,#_MCU_CONTROL_LANE
   02DD E0                 2547 	movx	a,@dptr
   02DE FB                 2548 	mov	r3,a
   02DF 90 E6 50           2549 	mov	dptr,#_MCU_CONFIG
   02E2 E0                 2550 	movx	a,@dptr
   02E3 FC                 2551 	mov	r4,a
   02E4 EB                 2552 	mov	a,r3
   02E5 B5 04 2D           2553 	cjne	a,ar4,00137$
                           2554 ;	../../shared/src/cal_top.c:157: cmx_CAL_START=0;
   02E8 90 E6 08           2555 	mov	dptr,#_CONTROL_CONFIG1
   02EB E0                 2556 	movx	a,@dptr
   02EC 54 FE              2557 	anl	a,#0xfe
   02EE F0                 2558 	movx	@dptr,a
                           2559 ;	../../shared/src/cal_top.c:159: if(!SPDCHG_ON_READ)	proc_cal();
   02EF 90 22 38           2560 	mov	dptr,#_MCU_STATUS2_LANE
   02F2 E0                 2561 	movx	a,@dptr
   02F3 FB                 2562 	mov	r3,a
   02F4 53 03 01           2563 	anl	ar3,#0x01
   02F7 BB 01 02           2564 	cjne	r3,#0x01,00424$
   02FA 80 09              2565 	sjmp	00135$
   02FC                    2566 00424$:
   02FC 78r00              2567 	mov	r0,#_proc_cal
   02FE 79s00              2568 	mov	r1,#(_proc_cal >> 8)
   0300 7As00              2569 	mov	r2,#(_proc_cal >> 16)
   0302 12s00r00           2570 	lcall	__sdcc_banked_call
   0305                    2571 00135$:
                           2572 ;	../../shared/src/cal_top.c:161: reg_RING_PLL_DISABLE = !ring_pll_enabled;
   0305 A2*00              2573 	mov	c,_ring_pll_enabled
   0307 B3                 2574 	cpl	c
   0308 92*00              2575 	mov  b0,c
   030A E4                 2576 	clr	a
   030B 33                 2577 	rlc	a
   030C FB                 2578 	mov	r3,a
   030D 90 A3 24           2579 	mov	dptr,#_INPUT_CMN_PIN_REG2
   0310 13                 2580 	rrc	a
   0311 E0                 2581 	movx	a,@dptr
   0312 92 E0              2582 	mov	acc.0,c
   0314 F0                 2583 	movx	@dptr,a
   0315                    2584 00137$:
                           2585 ;	../../shared/src/cal_top.c:164: mcu_align_0(10);
   0315 75 82 0A           2586 	mov	dpl,#0x0A
   0318 78rA2              2587 	mov	r0,#_mcu_align_0
   031A 79s0B              2588 	mov	r1,#(_mcu_align_0 >> 8)
   031C 7As00              2589 	mov	r2,#(_mcu_align_0 >> 16)
   031E 12s00r00           2590 	lcall	__sdcc_banked_call
                           2591 ;	../../shared/src/cal_top.c:170: if (mcuid == master_mcu) {
   0321 90 22 00           2592 	mov	dptr,#_MCU_CONTROL_LANE
   0324 E0                 2593 	movx	a,@dptr
   0325 FB                 2594 	mov	r3,a
   0326 90 E6 50           2595 	mov	dptr,#_MCU_CONFIG
   0329 E0                 2596 	movx	a,@dptr
   032A FC                 2597 	mov	r4,a
   032B EB                 2598 	mov	a,r3
   032C B5 04 02           2599 	cjne	a,ar4,00425$
   032F 80 03              2600 	sjmp	00426$
   0331                    2601 00425$:
   0331 02s04r31           2602 	ljmp	00162$
   0334                    2603 00426$:
                           2604 ;	../../shared/src/cal_top.c:176: pll_clk_ready_0();
   0334 78r00              2605 	mov	r0,#_pll_clk_ready_0
   0336 79s00              2606 	mov	r1,#(_pll_clk_ready_0 >> 8)
   0338 7As00              2607 	mov	r2,#(_pll_clk_ready_0 >> 16)
   033A 12s00r00           2608 	lcall	__sdcc_banked_call
                           2609 ;	../../shared/src/cal_top.c:178: if(phy_mode==PCIE || phy_mode<=SAS) rate = 1;
   033D 90 A3 16           2610 	mov	dptr,#(_SYSTEM + 0x0002)
   0340 E0                 2611 	movx	a,@dptr
   0341 54 07              2612 	anl	a,#0x07
   0343 FB                 2613 	mov	r3,a
   0344 BB 03 02           2614 	cjne	r3,#0x03,00427$
   0347 80 13              2615 	sjmp	00138$
   0349                    2616 00427$:
   0349 90 A3 16           2617 	mov	dptr,#(_SYSTEM + 0x0002)
   034C E0                 2618 	movx	a,@dptr
   034D 54 07              2619 	anl	a,#0x07
   034F FB                 2620 	mov	r3,a
   0350 C3                 2621 	clr	c
   0351 74 81              2622 	mov	a,#(0x01 ^ 0x80)
   0353 8B F0              2623 	mov	b,r3
   0355 63 F0 80           2624 	xrl	b,#0x80
   0358 95 F0              2625 	subb	a,b
   035A 40 04              2626 	jc	00139$
   035C                    2627 00138$:
   035C 7B 01              2628 	mov	r3,#0x01
   035E 80 02              2629 	sjmp	00332$
   0360                    2630 00139$:
                           2631 ;	../../shared/src/cal_top.c:179: else rate = 0;
   0360 7B 00              2632 	mov	r3,#0x00
                           2633 ;	../../shared/src/cal_top.c:180: for(inx=0; inx<2; inx++) {
   0362                    2634 00332$:
   0362 7C 00              2635 	mov	r4,#0x00
   0364                    2636 00155$:
   0364 BC 02 00           2637 	cjne	r4,#0x02,00429$
   0367                    2638 00429$:
   0367 40 03              2639 	jc	00430$
   0369 02s04r1D           2640 	ljmp	00158$
   036C                    2641 00430$:
                           2642 ;	../../shared/src/cal_top.c:182: reg_MCU_DEBUG0_LANE_7_0 = 0x10;
   036C 90 22 B4           2643 	mov	dptr,#_MCU_DEBUG0_LANE
   036F 74 10              2644 	mov	a,#0x10
   0371 F0                 2645 	movx	@dptr,a
                           2646 ;	../../shared/src/cal_top.c:183: reg_MCU_DEBUG6_LANE_7_0 = rate + 0x70;
   0372 74 70              2647 	mov	a,#0x70
   0374 2B                 2648 	add	a,r3
   0375 90 22 BA           2649 	mov	dptr,#(_MCU_DEBUG1_LANE + 0x0002)
   0378 F0                 2650 	movx	@dptr,a
                           2651 ;	../../shared/src/cal_top.c:185: loadspeedtbl_pll(rate);
   0379 8B 82              2652 	mov	dpl,r3
   037B C0 04              2653 	push	ar4
   037D 12s00r00           2654 	lcall	_loadspeedtbl_pll
                           2655 ;	../../shared/src/cal_top.c:186: load_init_temp_table();
   0380 78r00              2656 	mov	r0,#_load_init_temp_table
   0382 79s00              2657 	mov	r1,#(_load_init_temp_table >> 8)
   0384 7As00              2658 	mov	r2,#(_load_init_temp_table >> 16)
   0386 12s00r00           2659 	lcall	__sdcc_banked_call
   0389 D0 04              2660 	pop	ar4
                           2661 ;	../../shared/src/cal_top.c:188: if(slave_phy_on==0) {
   038B 90s00r00           2662 	mov	dptr,#_slave_phy_on
   038E E0                 2663 	movx	a,@dptr
   038F FD                 2664 	mov	r5,a
   0390 70 53              2665 	jnz	00146$
                           2666 ;	../../shared/src/cal_top.c:189: pll_clk_ready_0();
   0392 C0 04              2667 	push	ar4
   0394 78r00              2668 	mov	r0,#_pll_clk_ready_0
   0396 79s00              2669 	mov	r1,#(_pll_clk_ready_0 >> 8)
   0398 7As00              2670 	mov	r2,#(_pll_clk_ready_0 >> 16)
   039A 12s00r00           2671 	lcall	__sdcc_banked_call
                           2672 ;	../../shared/src/cal_top.c:190: reg_RESET_ANA = 0;
   039D 90 A3 19           2673 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   03A0 E0                 2674 	movx	a,@dptr
   03A1 54 EF              2675 	anl	a,#0xef
   03A3 F0                 2676 	movx	@dptr,a
                           2677 ;	../../shared/src/cal_top.c:191: pll_cal();
   03A4 78r00              2678 	mov	r0,#_pll_cal
   03A6 79s00              2679 	mov	r1,#(_pll_cal >> 8)
   03A8 7As00              2680 	mov	r2,#(_pll_cal >> 16)
   03AA 12s00r00           2681 	lcall	__sdcc_banked_call
                           2682 ;	../../shared/src/cal_top.c:192: pll_clk_ready_1();
   03AD 78r00              2683 	mov	r0,#_pll_clk_ready_1
   03AF 79s00              2684 	mov	r1,#(_pll_clk_ready_1 >> 8)
   03B1 7As00              2685 	mov	r2,#(_pll_clk_ready_1 >> 16)
   03B3 12s00r00           2686 	lcall	__sdcc_banked_call
   03B6 D0 04              2687 	pop	ar4
                           2688 ;	../../shared/src/cal_top.c:196: if (reg_LCPLLCLK_DIV2_SEL == 0) {
   03B8 90 83 3C           2689 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_207
   03BB E0                 2690 	movx	a,@dptr
   03BC 20 E1 19           2691 	jb	acc.1,00143$
                           2692 ;	../../shared/src/cal_top.c:197: reg_LCPLL_DCC_5_0 = 0x20; //if LCPLLCLK_DIV2_SEL=0, need to set default
   03BF 90 82 D8           2693 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_182
   03C2 E0                 2694 	movx	a,@dptr
   03C3 54 03              2695 	anl	a,#0x03
   03C5 44 80              2696 	orl	a,#0x80
   03C7 F0                 2697 	movx	@dptr,a
                           2698 ;	../../shared/src/cal_top.c:198: cmx_PLLDCC_CAL_DONE = 1; cmx_PLLDCC_CAL_PASS = 1;
   03C8 90 E6 4C           2699 	mov	dptr,#_CAL_STATUS_READ
   03CB E0                 2700 	movx	a,@dptr
   03CC 44 02              2701 	orl	a,#0x02
   03CE F0                 2702 	movx	@dptr,a
   03CF 90 E6 4D           2703 	mov	dptr,#(_CAL_STATUS_READ + 0x0001)
   03D2 E0                 2704 	movx	a,@dptr
   03D3 44 04              2705 	orl	a,#0x04
   03D5 F0                 2706 	movx	@dptr,a
   03D6 80 0D              2707 	sjmp	00146$
   03D8                    2708 00143$:
                           2709 ;	../../shared/src/cal_top.c:202: plldcc_cal();
   03D8 C0 04              2710 	push	ar4
   03DA 78r00              2711 	mov	r0,#_plldcc_cal
   03DC 79s00              2712 	mov	r1,#(_plldcc_cal >> 8)
   03DE 7As00              2713 	mov	r2,#(_plldcc_cal >> 16)
   03E0 12s00r00           2714 	lcall	__sdcc_banked_call
   03E3 D0 04              2715 	pop	ar4
   03E5                    2716 00146$:
                           2717 ;	../../shared/src/cal_top.c:205: if( no_pllspdchg ) break; //SERDES always use LC PLL rate0
   03E5 20*00 35           2718 	jb	_no_pllspdchg,00158$
                           2719 ;	../../shared/src/cal_top.c:206: if( phy_mode == SERDES ) break;
   03E8 90 A3 16           2720 	mov	dptr,#(_SYSTEM + 0x0002)
   03EB E0                 2721 	movx	a,@dptr
   03EC 54 07              2722 	anl	a,#0x07
   03EE FD                 2723 	mov	r5,a
   03EF BD 04 02           2724 	cjne	r5,#0x04,00434$
   03F2 80 29              2725 	sjmp	00158$
   03F4                    2726 00434$:
                           2727 ;	../../shared/src/cal_top.c:209: if(phy_mode==PCIE  || phy_mode<=SAS) rate = 0;
   03F4 90 A3 16           2728 	mov	dptr,#(_SYSTEM + 0x0002)
   03F7 E0                 2729 	movx	a,@dptr
   03F8 54 07              2730 	anl	a,#0x07
   03FA FD                 2731 	mov	r5,a
   03FB BD 03 02           2732 	cjne	r5,#0x03,00435$
   03FE 80 13              2733 	sjmp	00151$
   0400                    2734 00435$:
   0400 90 A3 16           2735 	mov	dptr,#(_SYSTEM + 0x0002)
   0403 E0                 2736 	movx	a,@dptr
   0404 54 07              2737 	anl	a,#0x07
   0406 FD                 2738 	mov	r5,a
   0407 C3                 2739 	clr	c
   0408 74 81              2740 	mov	a,#(0x01 ^ 0x80)
   040A 8D F0              2741 	mov	b,r5
   040C 63 F0 80           2742 	xrl	b,#0x80
   040F 95 F0              2743 	subb	a,b
   0411 40 04              2744 	jc	00152$
   0413                    2745 00151$:
   0413 7B 00              2746 	mov	r3,#0x00
   0415 80 02              2747 	sjmp	00157$
   0417                    2748 00152$:
                           2749 ;	../../shared/src/cal_top.c:210: else rate = 1;
   0417 7B 01              2750 	mov	r3,#0x01
   0419                    2751 00157$:
                           2752 ;	../../shared/src/cal_top.c:180: for(inx=0; inx<2; inx++) {
   0419 0C                 2753 	inc	r4
   041A 02s03r64           2754 	ljmp	00155$
   041D                    2755 00158$:
                           2756 ;	../../shared/src/cal_top.c:216: if(slave_phy_on==0) PHY_STATUS_INT |= LCPLL_CAL_LOOP_DONE;
   041D 90s00r00           2757 	mov	dptr,#_slave_phy_on
   0420 E0                 2758 	movx	a,@dptr
   0421 FB                 2759 	mov	r3,a
   0422 70 0D              2760 	jnz	00162$
   0424 90 22 38           2761 	mov	dptr,#_MCU_STATUS2_LANE
   0427 E0                 2762 	movx	a,@dptr
   0428 FB                 2763 	mov	r3,a
   0429 43 03 02           2764 	orl	ar3,#0x02
   042C 90 22 38           2765 	mov	dptr,#_MCU_STATUS2_LANE
   042F EB                 2766 	mov	a,r3
   0430 F0                 2767 	movx	@dptr,a
   0431                    2768 00162$:
                           2769 ;	../../shared/src/cal_top.c:221: mcu_align_0(11);
   0431 75 82 0B           2770 	mov	dpl,#0x0B
   0434 78rA2              2771 	mov	r0,#_mcu_align_0
   0436 79s0B              2772 	mov	r1,#(_mcu_align_0 >> 8)
   0438 7As00              2773 	mov	r2,#(_mcu_align_0 >> 16)
   043A 12s00r00           2774 	lcall	__sdcc_banked_call
                           2775 ;	../../shared/src/cal_top.c:224: if( ring_lane_sel ) {
   043D 90s00r00           2776 	mov	dptr,#_ring_lane_sel
   0440 E0                 2777 	movx	a,@dptr
   0441 FB                 2778 	mov	r3,a
   0442 60 76              2779 	jz	00177$
                           2780 ;	../../shared/src/cal_top.c:227: if( ring_pll_enabled ) {
   0444 30*00 6C           2781 	jnb	_ring_pll_enabled,00172$
                           2782 ;	../../shared/src/cal_top.c:229: pll_clk_ready_ring_0();
   0447 78r00              2783 	mov	r0,#_pll_clk_ready_ring_0
   0449 79s00              2784 	mov	r1,#(_pll_clk_ready_ring_0 >> 8)
   044B 7As00              2785 	mov	r2,#(_pll_clk_ready_ring_0 >> 16)
   044D 12s00r00           2786 	lcall	__sdcc_banked_call
                           2787 ;	../../shared/src/cal_top.c:231: for(rate=0; rate<2; rate++) {
   0450 7B 00              2788 	mov	r3,#0x00
   0452                    2789 00167$:
   0452 BB 02 00           2790 	cjne	r3,#0x02,00440$
   0455                    2791 00440$:
   0455 50 51              2792 	jnc	00170$
                           2793 ;	../../shared/src/cal_top.c:236: loadspeedtbl_ringpll(rate);
   0457 8B 82              2794 	mov	dpl,r3
   0459 C0 03              2795 	push	ar3
   045B 12s00r00           2796 	lcall	_loadspeedtbl_ringpll
                           2797 ;	../../shared/src/cal_top.c:245: reg_ANA_PU_PLL_RING = 1;
   045E 90 A3 24           2798 	mov	dptr,#_INPUT_CMN_PIN_REG2
   0461 E0                 2799 	movx	a,@dptr
   0462 44 20              2800 	orl	a,#0x20
   0464 F0                 2801 	movx	@dptr,a
                           2802 ;	../../shared/src/cal_top.c:246: delay01(5);
   0465 90 00 05           2803 	mov	dptr,#0x0005
   0468 78r00              2804 	mov	r0,#_delay01
   046A 79s00              2805 	mov	r1,#(_delay01 >> 8)
   046C 7As00              2806 	mov	r2,#(_delay01 >> 16)
   046E 12s00r00           2807 	lcall	__sdcc_banked_call
                           2808 ;	../../shared/src/cal_top.c:247: reg_ANA_PU_PLL_DLY_RING = 1;
   0471 90 A3 4D           2809 	mov	dptr,#(_PM_CMN_REG2 + 0x0001)
   0474 E0                 2810 	movx	a,@dptr
   0475 44 04              2811 	orl	a,#0x04
   0477 F0                 2812 	movx	@dptr,a
                           2813 ;	../../shared/src/cal_top.c:248: delay01(5);
   0478 90 00 05           2814 	mov	dptr,#0x0005
   047B 78r00              2815 	mov	r0,#_delay01
   047D 79s00              2816 	mov	r1,#(_delay01 >> 8)
   047F 7As00              2817 	mov	r2,#(_delay01 >> 16)
   0481 12s00r00           2818 	lcall	__sdcc_banked_call
                           2819 ;	../../shared/src/cal_top.c:249: reg_RESET_ANA_RING = 0;
   0484 90 A3 33           2820 	mov	dptr,#(_PLLCAL_REG1 + 0x0003)
   0487 E0                 2821 	movx	a,@dptr
   0488 54 F7              2822 	anl	a,#0xf7
   048A F0                 2823 	movx	@dptr,a
                           2824 ;	../../shared/src/cal_top.c:253: ring_pll_cal();
   048B 78r00              2825 	mov	r0,#_ring_pll_cal
   048D 79s00              2826 	mov	r1,#(_ring_pll_cal >> 8)
   048F 7As00              2827 	mov	r2,#(_ring_pll_cal >> 16)
   0491 12s00r00           2828 	lcall	__sdcc_banked_call
   0494 D0 03              2829 	pop	ar3
                           2830 ;	../../shared/src/cal_top.c:255: if( no_pllspdchg ) break;  
   0496 20*00 0F           2831 	jb	_no_pllspdchg,00170$
                           2832 ;	../../shared/src/cal_top.c:256: if( phy_mode == SERDES ) break; //SERDAS always use rate0
   0499 90 A3 16           2833 	mov	dptr,#(_SYSTEM + 0x0002)
   049C E0                 2834 	movx	a,@dptr
   049D 54 07              2835 	anl	a,#0x07
   049F FC                 2836 	mov	r4,a
   04A0 BC 04 02           2837 	cjne	r4,#0x04,00443$
   04A3 80 03              2838 	sjmp	00170$
   04A5                    2839 00443$:
                           2840 ;	../../shared/src/cal_top.c:231: for(rate=0; rate<2; rate++) {
   04A5 0B                 2841 	inc	r3
   04A6 80 AA              2842 	sjmp	00167$
   04A8                    2843 00170$:
                           2844 ;	../../shared/src/cal_top.c:262: pll_clk_ready_ring_1();
   04A8 78r00              2845 	mov	r0,#_pll_clk_ready_ring_1
   04AA 79s00              2846 	mov	r1,#(_pll_clk_ready_ring_1 >> 8)
   04AC 7As00              2847 	mov	r2,#(_pll_clk_ready_ring_1 >> 16)
   04AE 12s00r00           2848 	lcall	__sdcc_banked_call
   04B1 80 07              2849 	sjmp	00177$
   04B3                    2850 00172$:
                           2851 ;	../../shared/src/cal_top.c:265: else reg_RING_PLL_DISABLE = 1;
   04B3 90 A3 24           2852 	mov	dptr,#_INPUT_CMN_PIN_REG2
   04B6 E0                 2853 	movx	a,@dptr
   04B7 44 01              2854 	orl	a,#0x01
   04B9 F0                 2855 	movx	@dptr,a
   04BA                    2856 00177$:
                           2857 ;	../../shared/src/cal_top.c:271: mcu_align_0(12);
   04BA 75 82 0C           2858 	mov	dpl,#0x0C
   04BD 78rA2              2859 	mov	r0,#_mcu_align_0
   04BF 79s0B              2860 	mov	r1,#(_mcu_align_0 >> 8)
   04C1 7As00              2861 	mov	r2,#(_mcu_align_0 >> 16)
   04C3 12s00r00           2862 	lcall	__sdcc_banked_call
                           2863 ;	../../shared/src/cal_top.c:274: for(genno = min_gen; genno<=max_gen; genno++)  
   04C6 90 63 01           2864 	mov	dptr,#_min_gen
   04C9 E0                 2865 	movx	a,@dptr
   04CA FB                 2866 	mov	r3,a
   04CB FA                 2867 	mov	r2,a
   04CC                    2868 00222$:
   04CC 90 63 00           2869 	mov	dptr,#_max_gen
   04CF E0                 2870 	movx	a,@dptr
   04D0 FB                 2871 	mov	r3,a
   04D1 B5 02 00           2872 	cjne	a,ar2,00444$
   04D4                    2873 00444$:
   04D4 50 03              2874 	jnc	00445$
   04D6 02s06r53           2875 	ljmp	00225$
   04D9                    2876 00445$:
                           2877 ;	../../shared/src/cal_top.c:276: gen_rx = genno;	gen_tx = genno;
   04D9 90s00r00           2878 	mov	dptr,#_gen_rx
   04DC EA                 2879 	mov	a,r2
   04DD F0                 2880 	movx	@dptr,a
   04DE 90s00r00           2881 	mov	dptr,#_gen_tx
   04E1 EA                 2882 	mov	a,r2
   04E2 F0                 2883 	movx	@dptr,a
                           2884 ;	../../shared/src/cal_top.c:278: if(phy_mode==SERDES) { //serdes need to calibrate on own speed
   04E3 90 A3 16           2885 	mov	dptr,#(_SYSTEM + 0x0002)
   04E6 E0                 2886 	movx	a,@dptr
   04E7 54 07              2887 	anl	a,#0x07
   04E9 FB                 2888 	mov	r3,a
   04EA BB 04 09           2889 	cjne	r3,#0x04,00182$
                           2890 ;	../../shared/src/cal_top.c:279: loadspeedtbl_gen();
   04ED C0 02              2891 	push	ar2
   04EF 12s00r00           2892 	lcall	_loadspeedtbl_gen
   04F2 D0 02              2893 	pop	ar2
   04F4 80 07              2894 	sjmp	00183$
   04F6                    2895 00182$:
                           2896 ;	../../shared/src/cal_top.c:282: loadSpeedtbl();
   04F6 C0 02              2897 	push	ar2
   04F8 12s00r00           2898 	lcall	_loadSpeedtbl
   04FB D0 02              2899 	pop	ar2
   04FD                    2900 00183$:
                           2901 ;	../../shared/src/cal_top.c:292: if(!SPDCHG_ON_READ)
   04FD 90 22 38           2902 	mov	dptr,#_MCU_STATUS2_LANE
   0500 E0                 2903 	movx	a,@dptr
   0501 FB                 2904 	mov	r3,a
   0502 53 03 01           2905 	anl	ar3,#0x01
   0505 BB 01 02           2906 	cjne	r3,#0x01,00448$
   0508 80 70              2907 	sjmp	00201$
   050A                    2908 00448$:
                           2909 ;	../../shared/src/cal_top.c:294: mcu_align_0(20);
   050A 75 82 14           2910 	mov	dpl,#0x14
   050D C0 02              2911 	push	ar2
   050F 78rA2              2912 	mov	r0,#_mcu_align_0
   0511 79s0B              2913 	mov	r1,#(_mcu_align_0 >> 8)
   0513 7As00              2914 	mov	r2,#(_mcu_align_0 >> 16)
   0515 12s00r00           2915 	lcall	__sdcc_banked_call
   0518 D0 02              2916 	pop	ar2
                           2917 ;	../../shared/src/cal_top.c:296: if( mcu_en0) {
   051A 90 E6 BE           2918 	mov	dptr,#(_MCU_INFO_12 + 0x0002)
   051D E0                 2919 	movx	a,@dptr
   051E 60 29              2920 	jz	00191$
                           2921 ;	../../shared/src/cal_top.c:297: if( mcuid==MCU_LANE0)	{
   0520 90 22 00           2922 	mov	dptr,#_MCU_CONTROL_LANE
   0523 E0                 2923 	movx	a,@dptr
   0524 70 1B              2924 	jnz	00184$
                           2925 ;	../../shared/src/cal_top.c:298: vdd_cal();
   0526 C0 02              2926 	push	ar2
   0528 78r00              2927 	mov	r0,#_vdd_cal
   052A 79s00              2928 	mov	r1,#(_vdd_cal >> 8)
   052C 7As00              2929 	mov	r2,#(_vdd_cal >> 16)
   052E 12s00r00           2930 	lcall	__sdcc_banked_call
                           2931 ;	../../shared/src/cal_top.c:300: phy_check_lane(1);
   0531 75 82 01           2932 	mov	dpl,#0x01
   0534 78r86              2933 	mov	r0,#_phy_check_lane
   0536 79s0B              2934 	mov	r1,#(_phy_check_lane >> 8)
   0538 7As00              2935 	mov	r2,#(_phy_check_lane >> 16)
   053A 12s00r00           2936 	lcall	__sdcc_banked_call
   053D D0 02              2937 	pop	ar2
                           2938 ;	../../shared/src/cal_top.c:302: else while(PHY_CHECK_LANE0_READ!=1);
   053F 80 08              2939 	sjmp	00191$
   0541                    2940 00184$:
   0541 90 E6 B6           2941 	mov	dptr,#(_MCU_INFO_4 + 0x0002)
   0544 E0                 2942 	movx	a,@dptr
   0545 FB                 2943 	mov	r3,a
   0546 BB 01 F8           2944 	cjne	r3,#0x01,00184$
   0549                    2945 00191$:
                           2946 ;	../../shared/src/cal_top.c:305: if( mcu_en1) {
   0549 90 E6 C2           2947 	mov	dptr,#(_MCU_INFO_13 + 0x0002)
   054C E0                 2948 	movx	a,@dptr
   054D 60 2B              2949 	jz	00201$
                           2950 ;	../../shared/src/cal_top.c:306: if( mcuid==MCU_LANE1)	{
   054F 90 22 00           2951 	mov	dptr,#_MCU_CONTROL_LANE
   0552 E0                 2952 	movx	a,@dptr
   0553 FB                 2953 	mov	r3,a
   0554 BB 01 1B           2954 	cjne	r3,#0x01,00192$
                           2955 ;	../../shared/src/cal_top.c:307: vdd_cal();
   0557 C0 02              2956 	push	ar2
   0559 78r00              2957 	mov	r0,#_vdd_cal
   055B 79s00              2958 	mov	r1,#(_vdd_cal >> 8)
   055D 7As00              2959 	mov	r2,#(_vdd_cal >> 16)
   055F 12s00r00           2960 	lcall	__sdcc_banked_call
                           2961 ;	../../shared/src/cal_top.c:309: phy_check_lane(1);
   0562 75 82 01           2962 	mov	dpl,#0x01
   0565 78r86              2963 	mov	r0,#_phy_check_lane
   0567 79s0B              2964 	mov	r1,#(_phy_check_lane >> 8)
   0569 7As00              2965 	mov	r2,#(_phy_check_lane >> 16)
   056B 12s00r00           2966 	lcall	__sdcc_banked_call
   056E D0 02              2967 	pop	ar2
                           2968 ;	../../shared/src/cal_top.c:311: else while(PHY_CHECK_LANE1_READ!=1);
   0570 80 08              2969 	sjmp	00201$
   0572                    2970 00192$:
   0572 90 E6 BA           2971 	mov	dptr,#(_MCU_INFO_5 + 0x0002)
   0575 E0                 2972 	movx	a,@dptr
   0576 FB                 2973 	mov	r3,a
   0577 BB 01 F8           2974 	cjne	r3,#0x01,00192$
   057A                    2975 00201$:
                           2976 ;	../../shared/src/cal_top.c:335: if(!SPDCHG_ON_READ)
   057A 90 22 38           2977 	mov	dptr,#_MCU_STATUS2_LANE
   057D E0                 2978 	movx	a,@dptr
   057E FB                 2979 	mov	r3,a
   057F 53 03 01           2980 	anl	ar3,#0x01
   0582 BB 01 02           2981 	cjne	r3,#0x01,00458$
   0585 80 70              2982 	sjmp	00219$
   0587                    2983 00458$:
                           2984 ;	../../shared/src/cal_top.c:337: mcu_align_0(21);
   0587 75 82 15           2985 	mov	dpl,#0x15
   058A C0 02              2986 	push	ar2
   058C 78rA2              2987 	mov	r0,#_mcu_align_0
   058E 79s0B              2988 	mov	r1,#(_mcu_align_0 >> 8)
   0590 7As00              2989 	mov	r2,#(_mcu_align_0 >> 16)
   0592 12s00r00           2990 	lcall	__sdcc_banked_call
   0595 D0 02              2991 	pop	ar2
                           2992 ;	../../shared/src/cal_top.c:339: if( mcu_en0) {
   0597 90 E6 BE           2993 	mov	dptr,#(_MCU_INFO_12 + 0x0002)
   059A E0                 2994 	movx	a,@dptr
   059B 60 29              2995 	jz	00209$
                           2996 ;	../../shared/src/cal_top.c:340: if( mcuid==MCU_LANE0)	{
   059D 90 22 00           2997 	mov	dptr,#_MCU_CONTROL_LANE
   05A0 E0                 2998 	movx	a,@dptr
   05A1 70 1B              2999 	jnz	00202$
                           3000 ;	../../shared/src/cal_top.c:341: txdetect_cal();
   05A3 C0 02              3001 	push	ar2
   05A5 78r00              3002 	mov	r0,#_txdetect_cal
   05A7 79s00              3003 	mov	r1,#(_txdetect_cal >> 8)
   05A9 7As00              3004 	mov	r2,#(_txdetect_cal >> 16)
   05AB 12s00r00           3005 	lcall	__sdcc_banked_call
                           3006 ;	../../shared/src/cal_top.c:343: phy_check_lane(2);
   05AE 75 82 02           3007 	mov	dpl,#0x02
   05B1 78r86              3008 	mov	r0,#_phy_check_lane
   05B3 79s0B              3009 	mov	r1,#(_phy_check_lane >> 8)
   05B5 7As00              3010 	mov	r2,#(_phy_check_lane >> 16)
   05B7 12s00r00           3011 	lcall	__sdcc_banked_call
   05BA D0 02              3012 	pop	ar2
                           3013 ;	../../shared/src/cal_top.c:345: else while(PHY_CHECK_LANE0_READ!=2);
   05BC 80 08              3014 	sjmp	00209$
   05BE                    3015 00202$:
   05BE 90 E6 B6           3016 	mov	dptr,#(_MCU_INFO_4 + 0x0002)
   05C1 E0                 3017 	movx	a,@dptr
   05C2 FB                 3018 	mov	r3,a
   05C3 BB 02 F8           3019 	cjne	r3,#0x02,00202$
   05C6                    3020 00209$:
                           3021 ;	../../shared/src/cal_top.c:348: if( mcu_en1) {
   05C6 90 E6 C2           3022 	mov	dptr,#(_MCU_INFO_13 + 0x0002)
   05C9 E0                 3023 	movx	a,@dptr
   05CA 60 2B              3024 	jz	00219$
                           3025 ;	../../shared/src/cal_top.c:349: if( mcuid==MCU_LANE1)	{
   05CC 90 22 00           3026 	mov	dptr,#_MCU_CONTROL_LANE
   05CF E0                 3027 	movx	a,@dptr
   05D0 FB                 3028 	mov	r3,a
   05D1 BB 01 1B           3029 	cjne	r3,#0x01,00210$
                           3030 ;	../../shared/src/cal_top.c:350: txdetect_cal();
   05D4 C0 02              3031 	push	ar2
   05D6 78r00              3032 	mov	r0,#_txdetect_cal
   05D8 79s00              3033 	mov	r1,#(_txdetect_cal >> 8)
   05DA 7As00              3034 	mov	r2,#(_txdetect_cal >> 16)
   05DC 12s00r00           3035 	lcall	__sdcc_banked_call
                           3036 ;	../../shared/src/cal_top.c:352: phy_check_lane(2);
   05DF 75 82 02           3037 	mov	dpl,#0x02
   05E2 78r86              3038 	mov	r0,#_phy_check_lane
   05E4 79s0B              3039 	mov	r1,#(_phy_check_lane >> 8)
   05E6 7As00              3040 	mov	r2,#(_phy_check_lane >> 16)
   05E8 12s00r00           3041 	lcall	__sdcc_banked_call
   05EB D0 02              3042 	pop	ar2
                           3043 ;	../../shared/src/cal_top.c:354: else while(PHY_CHECK_LANE1_READ!=2);
   05ED 80 08              3044 	sjmp	00219$
   05EF                    3045 00210$:
   05EF 90 E6 BA           3046 	mov	dptr,#(_MCU_INFO_5 + 0x0002)
   05F2 E0                 3047 	movx	a,@dptr
   05F3 FB                 3048 	mov	r3,a
   05F4 BB 02 F8           3049 	cjne	r3,#0x02,00210$
   05F7                    3050 00219$:
                           3051 ;	../../shared/src/cal_top.c:379: rxdcc_dll_cal();
   05F7 C0 02              3052 	push	ar2
   05F9 78r00              3053 	mov	r0,#_rxdcc_dll_cal
   05FB 79s00              3054 	mov	r1,#(_rxdcc_dll_cal >> 8)
   05FD 7As00              3055 	mov	r2,#(_rxdcc_dll_cal >> 16)
   05FF 12s00r00           3056 	lcall	__sdcc_banked_call
                           3057 ;	../../shared/src/cal_top.c:380: dll_cal();
   0602 78r00              3058 	mov	r0,#_dll_cal
   0604 79s00              3059 	mov	r1,#(_dll_cal >> 8)
   0606 7As00              3060 	mov	r2,#(_dll_cal >> 16)
   0608 12s00r00           3061 	lcall	__sdcc_banked_call
                           3062 ;	../../shared/src/cal_top.c:381: rxdcc_data_cal();
   060B 78r00              3063 	mov	r0,#_rxdcc_data_cal
   060D 79s00              3064 	mov	r1,#(_rxdcc_data_cal >> 8)
   060F 7As00              3065 	mov	r2,#(_rxdcc_data_cal >> 16)
   0611 12s00r00           3066 	lcall	__sdcc_banked_call
                           3067 ;	../../shared/src/cal_top.c:382: rxdcc_eom_cal();
   0614 78r00              3068 	mov	r0,#_rxdcc_eom_cal
   0616 79s00              3069 	mov	r1,#(_rxdcc_eom_cal >> 8)
   0618 7As00              3070 	mov	r2,#(_rxdcc_eom_cal >> 16)
   061A 12s00r00           3071 	lcall	__sdcc_banked_call
                           3072 ;	../../shared/src/cal_top.c:384: align90_comp_cal();
   061D 78r00              3073 	mov	r0,#_align90_comp_cal
   061F 79s00              3074 	mov	r1,#(_align90_comp_cal >> 8)
   0621 7As00              3075 	mov	r2,#(_align90_comp_cal >> 16)
   0623 12s00r00           3076 	lcall	__sdcc_banked_call
                           3077 ;	../../shared/src/cal_top.c:388: rxalign90_cal();
   0626 78r00              3078 	mov	r0,#_rxalign90_cal
   0628 79s00              3079 	mov	r1,#(_rxalign90_cal >> 8)
   062A 7As00              3080 	mov	r2,#(_rxalign90_cal >> 16)
   062C 12s00r00           3081 	lcall	__sdcc_banked_call
                           3082 ;	../../shared/src/cal_top.c:389: txdcc_cal();
   062F 78r00              3083 	mov	r0,#_txdcc_cal
   0631 79s00              3084 	mov	r1,#(_txdcc_cal >> 8)
   0633 7As00              3085 	mov	r2,#(_txdcc_cal >> 16)
   0635 12s00r00           3086 	lcall	__sdcc_banked_call
                           3087 ;	../../shared/src/cal_top.c:390: txdcc_pdiv_cal();
   0638 78r00              3088 	mov	r0,#_txdcc_pdiv_cal
   063A 79s00              3089 	mov	r1,#(_txdcc_pdiv_cal >> 8)
   063C 7As00              3090 	mov	r2,#(_txdcc_pdiv_cal >> 16)
   063E 12s00r00           3091 	lcall	__sdcc_banked_call
   0641 D0 02              3092 	pop	ar2
                           3093 ;	../../shared/src/cal_top.c:392: if( phy_mode==SERDES ) break; //SERDAS always use one gen
   0643 90 A3 16           3094 	mov	dptr,#(_SYSTEM + 0x0002)
   0646 E0                 3095 	movx	a,@dptr
   0647 54 07              3096 	anl	a,#0x07
   0649 FB                 3097 	mov	r3,a
   064A BB 04 02           3098 	cjne	r3,#0x04,00468$
   064D 80 04              3099 	sjmp	00225$
   064F                    3100 00468$:
                           3101 ;	../../shared/src/cal_top.c:274: for(genno = min_gen; genno<=max_gen; genno++)  
   064F 0A                 3102 	inc	r2
   0650 02s04rCC           3103 	ljmp	00222$
   0653                    3104 00225$:
                           3105 ;	../../shared/src/cal_top.c:395: if(SPDCHG_ON_READ) goto skip_out;
   0653 90 22 38           3106 	mov	dptr,#_MCU_STATUS2_LANE
   0656 E0                 3107 	movx	a,@dptr
   0657 FA                 3108 	mov	r2,a
   0658 53 02 01           3109 	anl	ar2,#0x01
   065B BA 01 03           3110 	cjne	r2,#0x01,00469$
   065E 02s07rA8           3111 	ljmp	00278$
   0661                    3112 00469$:
                           3113 ;	../../shared/src/cal_top.c:397: sampler_cal();
   0661 78r00              3114 	mov	r0,#_sampler_cal
   0663 79s00              3115 	mov	r1,#(_sampler_cal >> 8)
   0665 7As00              3116 	mov	r2,#(_sampler_cal >> 16)
   0667 12s00r00           3117 	lcall	__sdcc_banked_call
                           3118 ;	../../shared/src/cal_top.c:398: squelch_cal();
   066A 78r00              3119 	mov	r0,#_squelch_cal
   066C 79s00              3120 	mov	r1,#(_squelch_cal >> 8)
   066E 7As00              3121 	mov	r2,#(_squelch_cal >> 16)
   0670 12s00r00           3122 	lcall	__sdcc_banked_call
                           3123 ;	../../shared/src/cal_top.c:403: mcu_align_0(22);
   0673 75 82 16           3124 	mov	dpl,#0x16
   0676 78rA2              3125 	mov	r0,#_mcu_align_0
   0678 79s0B              3126 	mov	r1,#(_mcu_align_0 >> 8)
   067A 7As00              3127 	mov	r2,#(_mcu_align_0 >> 16)
   067C 12s00r00           3128 	lcall	__sdcc_banked_call
                           3129 ;	../../shared/src/cal_top.c:405: if(mcuid == master_mcu) reg_RXIMPCAL_EN = 1;
   067F 90 22 00           3130 	mov	dptr,#_MCU_CONTROL_LANE
   0682 E0                 3131 	movx	a,@dptr
   0683 FA                 3132 	mov	r2,a
   0684 90 E6 50           3133 	mov	dptr,#_MCU_CONFIG
   0687 E0                 3134 	movx	a,@dptr
   0688 FB                 3135 	mov	r3,a
   0689 EA                 3136 	mov	a,r2
   068A B5 03 09           3137 	cjne	a,ar3,00228$
   068D 90 82 00           3138 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   0690 E0                 3139 	movx	a,@dptr
   0691 44 04              3140 	orl	a,#0x04
   0693 F0                 3141 	movx	@dptr,a
                           3142 ;	../../shared/src/cal_top.c:406: else while(reg_RXIMPCAL_EN==0);
   0694 80 07              3143 	sjmp	00233$
   0696                    3144 00228$:
   0696 90 82 00           3145 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   0699 E0                 3146 	movx	a,@dptr
   069A 30 E2 F9           3147 	jnb	acc.2,00228$
   069D                    3148 00233$:
                           3149 ;	../../shared/src/cal_top.c:409: if( mcu_en0) {
   069D 90 E6 BE           3150 	mov	dptr,#(_MCU_INFO_12 + 0x0002)
   06A0 E0                 3151 	movx	a,@dptr
   06A1 60 25              3152 	jz	00241$
                           3153 ;	../../shared/src/cal_top.c:410: if(mcuid==MCU_LANE0) {
   06A3 90 22 00           3154 	mov	dptr,#_MCU_CONTROL_LANE
   06A6 E0                 3155 	movx	a,@dptr
   06A7 70 17              3156 	jnz	00234$
                           3157 ;	../../shared/src/cal_top.c:411: rximp_cal();
   06A9 78r00              3158 	mov	r0,#_rximp_cal
   06AB 79s00              3159 	mov	r1,#(_rximp_cal >> 8)
   06AD 7As00              3160 	mov	r2,#(_rximp_cal >> 16)
   06AF 12s00r00           3161 	lcall	__sdcc_banked_call
                           3162 ;	../../shared/src/cal_top.c:413: phy_check_lane(3);
   06B2 75 82 03           3163 	mov	dpl,#0x03
   06B5 78r86              3164 	mov	r0,#_phy_check_lane
   06B7 79s0B              3165 	mov	r1,#(_phy_check_lane >> 8)
   06B9 7As00              3166 	mov	r2,#(_phy_check_lane >> 16)
   06BB 12s00r00           3167 	lcall	__sdcc_banked_call
                           3168 ;	../../shared/src/cal_top.c:415: else while(PHY_CHECK_LANE0_READ!=3);
   06BE 80 08              3169 	sjmp	00241$
   06C0                    3170 00234$:
   06C0 90 E6 B6           3171 	mov	dptr,#(_MCU_INFO_4 + 0x0002)
   06C3 E0                 3172 	movx	a,@dptr
   06C4 FA                 3173 	mov	r2,a
   06C5 BA 03 F8           3174 	cjne	r2,#0x03,00234$
   06C8                    3175 00241$:
                           3176 ;	../../shared/src/cal_top.c:419: if(mcu_en1) {
   06C8 90 E6 C2           3177 	mov	dptr,#(_MCU_INFO_13 + 0x0002)
   06CB E0                 3178 	movx	a,@dptr
   06CC 60 27              3179 	jz	00249$
                           3180 ;	../../shared/src/cal_top.c:420: if(mcuid==MCU_LANE1)	{
   06CE 90 22 00           3181 	mov	dptr,#_MCU_CONTROL_LANE
   06D1 E0                 3182 	movx	a,@dptr
   06D2 FA                 3183 	mov	r2,a
   06D3 BA 01 17           3184 	cjne	r2,#0x01,00242$
                           3185 ;	../../shared/src/cal_top.c:421: rximp_cal();
   06D6 78r00              3186 	mov	r0,#_rximp_cal
   06D8 79s00              3187 	mov	r1,#(_rximp_cal >> 8)
   06DA 7As00              3188 	mov	r2,#(_rximp_cal >> 16)
   06DC 12s00r00           3189 	lcall	__sdcc_banked_call
                           3190 ;	../../shared/src/cal_top.c:423: phy_check_lane(3);
   06DF 75 82 03           3191 	mov	dpl,#0x03
   06E2 78r86              3192 	mov	r0,#_phy_check_lane
   06E4 79s0B              3193 	mov	r1,#(_phy_check_lane >> 8)
   06E6 7As00              3194 	mov	r2,#(_phy_check_lane >> 16)
   06E8 12s00r00           3195 	lcall	__sdcc_banked_call
                           3196 ;	../../shared/src/cal_top.c:425: else while(PHY_CHECK_LANE1_READ!=3);
   06EB 80 08              3197 	sjmp	00249$
   06ED                    3198 00242$:
   06ED 90 E6 BA           3199 	mov	dptr,#(_MCU_INFO_5 + 0x0002)
   06F0 E0                 3200 	movx	a,@dptr
   06F1 FA                 3201 	mov	r2,a
   06F2 BA 03 F8           3202 	cjne	r2,#0x03,00242$
   06F5                    3203 00249$:
                           3204 ;	../../shared/src/cal_top.c:449: if(mcuid == master_mcu)
   06F5 90 22 00           3205 	mov	dptr,#_MCU_CONTROL_LANE
   06F8 E0                 3206 	movx	a,@dptr
   06F9 FA                 3207 	mov	r2,a
   06FA 90 E6 50           3208 	mov	dptr,#_MCU_CONFIG
   06FD E0                 3209 	movx	a,@dptr
   06FE FB                 3210 	mov	r3,a
   06FF EA                 3211 	mov	a,r2
   0700 B5 03 09           3212 	cjne	a,ar3,00250$
                           3213 ;	../../shared/src/cal_top.c:450: reg_RXIMPCAL_EN = 0;
   0703 90 82 00           3214 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   0706 E0                 3215 	movx	a,@dptr
   0707 54 FB              3216 	anl	a,#0xfb
   0709 F0                 3217 	movx	@dptr,a
                           3218 ;	../../shared/src/cal_top.c:451: else while(reg_RXIMPCAL_EN);
   070A 80 07              3219 	sjmp	00255$
   070C                    3220 00250$:
   070C 90 82 00           3221 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   070F E0                 3222 	movx	a,@dptr
   0710 20 E2 F9           3223 	jb	acc.2,00250$
   0713                    3224 00255$:
                           3225 ;	../../shared/src/cal_top.c:456: mcu_align_0(24);
   0713 75 82 18           3226 	mov	dpl,#0x18
   0716 78rA2              3227 	mov	r0,#_mcu_align_0
   0718 79s0B              3228 	mov	r1,#(_mcu_align_0 >> 8)
   071A 7As00              3229 	mov	r2,#(_mcu_align_0 >> 16)
   071C 12s00r00           3230 	lcall	__sdcc_banked_call
                           3231 ;	../../shared/src/cal_top.c:458: if(mcuid == master_mcu) reg_TXIMPCAL_EN = 1;
   071F 90 22 00           3232 	mov	dptr,#_MCU_CONTROL_LANE
   0722 E0                 3233 	movx	a,@dptr
   0723 FA                 3234 	mov	r2,a
   0724 90 E6 50           3235 	mov	dptr,#_MCU_CONFIG
   0727 E0                 3236 	movx	a,@dptr
   0728 FB                 3237 	mov	r3,a
   0729 EA                 3238 	mov	a,r2
   072A B5 03 09           3239 	cjne	a,ar3,00256$
   072D 90 82 00           3240 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   0730 E0                 3241 	movx	a,@dptr
   0731 44 08              3242 	orl	a,#0x08
   0733 F0                 3243 	movx	@dptr,a
                           3244 ;	../../shared/src/cal_top.c:459: else while(reg_TXIMPCAL_EN==0);
   0734 80 07              3245 	sjmp	00261$
   0736                    3246 00256$:
   0736 90 82 00           3247 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   0739 E0                 3248 	movx	a,@dptr
   073A 30 E3 F9           3249 	jnb	acc.3,00256$
   073D                    3250 00261$:
                           3251 ;	../../shared/src/cal_top.c:462: if( mcu_en0) {
   073D 90 E6 BE           3252 	mov	dptr,#(_MCU_INFO_12 + 0x0002)
   0740 E0                 3253 	movx	a,@dptr
   0741 60 25              3254 	jz	00269$
                           3255 ;	../../shared/src/cal_top.c:463: if( mcuid==MCU_LANE0 )	{
   0743 90 22 00           3256 	mov	dptr,#_MCU_CONTROL_LANE
   0746 E0                 3257 	movx	a,@dptr
   0747 70 17              3258 	jnz	00262$
                           3259 ;	../../shared/src/cal_top.c:464: tximp_cal();  phy_check_lane(5);  //PHY_CHECK_LANE = 5;
   0749 78r00              3260 	mov	r0,#_tximp_cal
   074B 79s00              3261 	mov	r1,#(_tximp_cal >> 8)
   074D 7As00              3262 	mov	r2,#(_tximp_cal >> 16)
   074F 12s00r00           3263 	lcall	__sdcc_banked_call
   0752 75 82 05           3264 	mov	dpl,#0x05
   0755 78r86              3265 	mov	r0,#_phy_check_lane
   0757 79s0B              3266 	mov	r1,#(_phy_check_lane >> 8)
   0759 7As00              3267 	mov	r2,#(_phy_check_lane >> 16)
   075B 12s00r00           3268 	lcall	__sdcc_banked_call
                           3269 ;	../../shared/src/cal_top.c:466: else while(PHY_CHECK_LANE0_READ!=5);
   075E 80 08              3270 	sjmp	00269$
   0760                    3271 00262$:
   0760 90 E6 B6           3272 	mov	dptr,#(_MCU_INFO_4 + 0x0002)
   0763 E0                 3273 	movx	a,@dptr
   0764 FA                 3274 	mov	r2,a
   0765 BA 05 F8           3275 	cjne	r2,#0x05,00262$
   0768                    3276 00269$:
                           3277 ;	../../shared/src/cal_top.c:470: if(mcu_en1) {
   0768 90 E6 C2           3278 	mov	dptr,#(_MCU_INFO_13 + 0x0002)
   076B E0                 3279 	movx	a,@dptr
   076C 60 27              3280 	jz	00277$
                           3281 ;	../../shared/src/cal_top.c:471: if( mcuid==MCU_LANE1 )	{
   076E 90 22 00           3282 	mov	dptr,#_MCU_CONTROL_LANE
   0771 E0                 3283 	movx	a,@dptr
   0772 FA                 3284 	mov	r2,a
   0773 BA 01 17           3285 	cjne	r2,#0x01,00270$
                           3286 ;	../../shared/src/cal_top.c:472: tximp_cal();  phy_check_lane(5);  //PHY_CHECK_LANE = 5;
   0776 78r00              3287 	mov	r0,#_tximp_cal
   0778 79s00              3288 	mov	r1,#(_tximp_cal >> 8)
   077A 7As00              3289 	mov	r2,#(_tximp_cal >> 16)
   077C 12s00r00           3290 	lcall	__sdcc_banked_call
   077F 75 82 05           3291 	mov	dpl,#0x05
   0782 78r86              3292 	mov	r0,#_phy_check_lane
   0784 79s0B              3293 	mov	r1,#(_phy_check_lane >> 8)
   0786 7As00              3294 	mov	r2,#(_phy_check_lane >> 16)
   0788 12s00r00           3295 	lcall	__sdcc_banked_call
                           3296 ;	../../shared/src/cal_top.c:474: else while(PHY_CHECK_LANE1_READ!=5);
   078B 80 08              3297 	sjmp	00277$
   078D                    3298 00270$:
   078D 90 E6 BA           3299 	mov	dptr,#(_MCU_INFO_5 + 0x0002)
   0790 E0                 3300 	movx	a,@dptr
   0791 FA                 3301 	mov	r2,a
   0792 BA 05 F8           3302 	cjne	r2,#0x05,00270$
   0795                    3303 00277$:
                           3304 ;	../../shared/src/cal_top.c:494: reg_TXIMPCAL_EN = 0;
   0795 90 82 00           3305 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_128
   0798 E0                 3306 	movx	a,@dptr
   0799 54 F7              3307 	anl	a,#0xf7
   079B F0                 3308 	movx	@dptr,a
                           3309 ;	../../shared/src/cal_top.c:498: mcu_align_0(0);
   079C 75 82 00           3310 	mov	dpl,#0x00
   079F 78rA2              3311 	mov	r0,#_mcu_align_0
   07A1 79s0B              3312 	mov	r1,#(_mcu_align_0 >> 8)
   07A3 7As00              3313 	mov	r2,#(_mcu_align_0 >> 16)
   07A5 12s00r00           3314 	lcall	__sdcc_banked_call
                           3315 ;	../../shared/src/cal_top.c:500: skip_out:
   07A8                    3316 00278$:
                           3317 ;	../../shared/src/cal_top.c:502: reg_ANA_TX_IDLE_FORCE_LANE = 0;
   07A8 90 20 03           3318 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   07AB E0                 3319 	movx	a,@dptr
   07AC 54 FB              3320 	anl	a,#0xfb
   07AE F0                 3321 	movx	@dptr,a
                           3322 ;	../../shared/src/cal_top.c:503: reg_ANA_TX_IDLE_LANE = 0;
   07AF 90 20 03           3323 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0003)
   07B2 E0                 3324 	movx	a,@dptr
   07B3 54 FE              3325 	anl	a,#0xfe
   07B5 F0                 3326 	movx	@dptr,a
                           3327 ;	../../shared/src/cal_top.c:506: reg_DTL_LOOP_FREEZE_LANE = 0;  //analog deleted
   07B6 90 21 6A           3328 	mov	dptr,#(_DTL_REG2 + 0x0002)
   07B9 E0                 3329 	movx	a,@dptr
   07BA 54 FB              3330 	anl	a,#0xfb
   07BC F0                 3331 	movx	@dptr,a
                           3332 ;	../../shared/src/cal_top.c:510: reg_DTL_FLOOP_FREEZE_LANE = 0;
   07BD 90 21 63           3333 	mov	dptr,#(_DTL_REG0 + 0x0003)
   07C0 E0                 3334 	movx	a,@dptr
   07C1 54 BF              3335 	anl	a,#0xbf
   07C3 F0                 3336 	movx	@dptr,a
                           3337 ;	../../shared/src/cal_top.c:517: reg_TX_TDTAP_SEL_LANE = 1;
   07C4 90 02 44           3338 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_145
   07C7 E0                 3339 	movx	a,@dptr
   07C8 44 80              3340 	orl	a,#0x80
   07CA F0                 3341 	movx	@dptr,a
                           3342 ;	../../shared/src/cal_top.c:518: reg_TXDCCCAL_EN_LANE = 0;
   07CB 90 02 4C           3343 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_147
   07CE E0                 3344 	movx	a,@dptr
   07CF 54 7F              3345 	anl	a,#0x7f
   07D1 F0                 3346 	movx	@dptr,a
                           3347 ;	../../shared/src/cal_top.c:519: lnx_DLL_VDDA_TRACKING_ON_LANE = 1;
   07D2 90 60 0A           3348 	mov	dptr,#(_CAL_CTRL3_LANE + 0x0002)
   07D5 E0                 3349 	movx	a,@dptr
   07D6 44 20              3350 	orl	a,#0x20
   07D8 F0                 3351 	movx	@dptr,a
                           3352 ;	../../shared/src/cal_top.c:520: vdd_cnt = 0;
   07D9 90s00r00           3353 	mov	dptr,#_vdd_cnt
                           3354 ;	../../shared/src/cal_top.c:521: dcc_cont = 0;
   07DC E4                 3355 	clr	a
   07DD F0                 3356 	movx	@dptr,a
   07DE 90s00r00           3357 	mov	dptr,#_dcc_cont
   07E1 F0                 3358 	movx	@dptr,a
                           3359 ;	../../shared/src/cal_top.c:522: reg_SHRTR = 0; //recover
   07E2 90 82 2C           3360 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_139
   07E5 E0                 3361 	movx	a,@dptr
   07E6 54 EF              3362 	anl	a,#0xef
   07E8 F0                 3363 	movx	@dptr,a
                           3364 ;	../../shared/src/cal_top.c:524: SYNC_SATUS_PLL_OR_PLL_OFF = 0;
   07E9 90 E6 B1           3365 	mov	dptr,#(_SYNC_INFO + 0x0001)
   07EC E4                 3366 	clr	a
   07ED F0                 3367 	movx	@dptr,a
                           3368 ;	../../shared/src/cal_top.c:526: lnx_CAL_DONE_LANE = 1;
   07EE 90 60 03           3369 	mov	dptr,#(_CAL_CTRL1_LANE + 0x0003)
   07F1 E0                 3370 	movx	a,@dptr
   07F2 44 01              3371 	orl	a,#0x01
   07F4 F0                 3372 	movx	@dptr,a
                           3373 ;	../../shared/src/cal_top.c:529: if(reg_PWRON_SEQ) {
   07F5 90 A3 18           3374 	mov	dptr,#_PM_CMN_REG1
   07F8 E0                 3375 	movx	a,@dptr
   07F9 30 E5 2C           3376 	jnb	acc.5,00289$
                           3377 ;	../../shared/src/cal_top.c:530: if((master_mcu==MCU_LANE0 && mcuid==MCU_LANE0) || (master_mcu==MCU_LANE1 && mcuid==MCU_LANE1)
   07FC 90 E6 50           3378 	mov	dptr,#_MCU_CONFIG
   07FF E0                 3379 	movx	a,@dptr
   0800 70 06              3380 	jnz	00287$
   0802 90 22 00           3381 	mov	dptr,#_MCU_CONTROL_LANE
   0805 E0                 3382 	movx	a,@dptr
   0806 60 10              3383 	jz	00282$
   0808                    3384 00287$:
   0808 90 E6 50           3385 	mov	dptr,#_MCU_CONFIG
   080B E0                 3386 	movx	a,@dptr
   080C FA                 3387 	mov	r2,a
   080D BA 01 11           3388 	cjne	r2,#0x01,00279$
   0810 90 22 00           3389 	mov	dptr,#_MCU_CONTROL_LANE
   0813 E0                 3390 	movx	a,@dptr
   0814 FA                 3391 	mov	r2,a
   0815 BA 01 09           3392 	cjne	r2,#0x01,00279$
   0818                    3393 00282$:
                           3394 ;	../../shared/src/cal_top.c:535: reg_PWRON_SEQ = 0;
   0818 90 A3 18           3395 	mov	dptr,#_PM_CMN_REG1
   081B E0                 3396 	movx	a,@dptr
   081C 54 DF              3397 	anl	a,#0xdf
   081E F0                 3398 	movx	@dptr,a
                           3399 ;	../../shared/src/cal_top.c:537: else while(reg_PWRON_SEQ);
   081F 80 07              3400 	sjmp	00289$
   0821                    3401 00279$:
   0821 90 A3 18           3402 	mov	dptr,#_PM_CMN_REG1
   0824 E0                 3403 	movx	a,@dptr
   0825 20 E5 F9           3404 	jb	acc.5,00279$
   0828                    3405 00289$:
                           3406 ;	../../shared/src/cal_top.c:539: if( phy_mode == PCIE ) {
   0828 90 A3 16           3407 	mov	dptr,#(_SYSTEM + 0x0002)
   082B E0                 3408 	movx	a,@dptr
   082C 54 07              3409 	anl	a,#0x07
   082E FA                 3410 	mov	r2,a
   082F BA 03 11           3411 	cjne	r2,#0x03,00291$
                           3412 ;	../../shared/src/cal_top.c:540: pre_ringpll_rate = PLL_RATE_SEL_RING;
   0832 90 E6 1F           3413 	mov	dptr,#(_CONTROL_CONFIG6 + 0x0003)
   0835 E0                 3414 	movx	a,@dptr
   0836 90s00r00           3415 	mov	dptr,#_pre_ringpll_rate
   0839 F0                 3416 	movx	@dptr,a
                           3417 ;	../../shared/src/cal_top.c:541: pre_lcpll_rate = PLL_RATE_SEL;
   083A 90 E6 1E           3418 	mov	dptr,#(_CONTROL_CONFIG6 + 0x0002)
   083D E0                 3419 	movx	a,@dptr
   083E FA                 3420 	mov	r2,a
   083F 90s00r00           3421 	mov	dptr,#_pre_lcpll_rate
   0842 F0                 3422 	movx	@dptr,a
   0843                    3423 00291$:
                           3424 ;	../../shared/src/cal_top.c:544: pwrsq_on = 0;
   0843 90s00r00           3425 	mov	dptr,#_pwrsq_on
   0846 E4                 3426 	clr	a
   0847 F0                 3427 	movx	@dptr,a
                           3428 ;	../../shared/src/cal_top.c:546: if(serdes_ring_lane_en==0)
   0848 90s00r00           3429 	mov	dptr,#_serdes_ring_lane_en
   084B E0                 3430 	movx	a,@dptr
   084C FA                 3431 	mov	r2,a
   084D 70 08              3432 	jnz	00296$
                           3433 ;	../../shared/src/cal_top.c:547: PHY_STATUS = ST_SPDCHG;
   084F 90 22 30           3434 	mov	dptr,#_MCU_STATUS0_LANE
   0852 74 19              3435 	mov	a,#0x19
   0854 F0                 3436 	movx	@dptr,a
   0855 80 15              3437 	sjmp	00302$
   0857                    3438 00296$:
                           3439 ;	../../shared/src/cal_top.c:549: if(reg_PIN_PU_PLL_RD_LANE) PHY_STATUS = ST_SPDCHG;
   0857 90 20 07           3440 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   085A E0                 3441 	movx	a,@dptr
   085B 30 E5 08           3442 	jnb	acc.5,00293$
   085E 90 22 30           3443 	mov	dptr,#_MCU_STATUS0_LANE
   0861 74 19              3444 	mov	a,#0x19
   0863 F0                 3445 	movx	@dptr,a
   0864 80 06              3446 	sjmp	00302$
   0866                    3447 00293$:
                           3448 ;	../../shared/src/cal_top.c:550: else PHY_STATUS = ST_SLUMBER;
   0866 90 22 30           3449 	mov	dptr,#_MCU_STATUS0_LANE
   0869 74 1A              3450 	mov	a,#0x1A
   086B F0                 3451 	movx	@dptr,a
   086C                    3452 00302$:
   086C 02s00r00           3453 	ljmp	__sdcc_banked_ret
                           3454 ;------------------------------------------------------------
                           3455 ;Allocation info for local variables in function 'Cal_Cont'
                           3456 ;------------------------------------------------------------
                           3457 ;cont_cal_inx              Allocated to registers r2 
                           3458 ;------------------------------------------------------------
                           3459 ;	../../shared/src/cal_top.c:563: void Cal_Cont(void) BANKING_CTRL {
                           3460 ;	-----------------------------------------
                           3461 ;	 function Cal_Cont
                           3462 ;	-----------------------------------------
   086F                    3463 _Cal_Cont:
                           3464 ;	../../shared/src/cal_top.c:566: if(cmx_FORCE_CONT_CAL_SKIP) return;
   086F 90 E6 07           3465 	mov	dptr,#(_CONTROL_CONFIG0 + 0x0003)
   0872 E0                 3466 	movx	a,@dptr
   0873 30 E0 03           3467 	jnb	acc.0,00102$
   0876 02s0Br83           3468 	ljmp	00185$
   0879                    3469 00102$:
                           3470 ;	../../shared/src/cal_top.c:568: cont_cal_on = 1;
   0879 D2*00              3471 	setb	_cont_cal_on
                           3472 ;	../../shared/src/cal_top.c:569: do {
   087B 7A 00              3473 	mov	r2,#0x00
   087D                    3474 00182$:
                           3475 ;	../../shared/src/cal_top.c:570: switch(cont_cal_inx) {
   087D 74 07              3476 	mov	a,#0x07
   087F B5 02 00           3477 	cjne	a,ar2,00228$
   0882                    3478 00228$:
   0882 50 03              3479 	jnc	00229$
   0884 02s0Br70           3480 	ljmp	00183$
   0887                    3481 00229$:
   0887 EA                 3482 	mov	a,r2
   0888 2A                 3483 	add	a,r2
   0889 2A                 3484 	add	a,r2
   088A 90s08r8E           3485 	mov	dptr,#00230$
   088D 73                 3486 	jmp	@a+dptr
   088E                    3487 00230$:
   088E 02s08rA6           3488 	ljmp	00103$
   0891 02s08rEE           3489 	ljmp	00108$
   0894 02s09r72           3490 	ljmp	00123$
   0897 02s09r8C           3491 	ljmp	00126$
   089A 02s09rA9           3492 	ljmp	00129$
   089D 02s09rC6           3493 	ljmp	00132$
   08A0 02s0ArA0           3494 	ljmp	00152$
   08A3 02s0Br3B           3495 	ljmp	00173$
                           3496 ;	../../shared/src/cal_top.c:571: case 0:
   08A6                    3497 00103$:
                           3498 ;	../../shared/src/cal_top.c:572: tsen_dat = read_tsen();
   08A6 C0 02              3499 	push	ar2
   08A8 78r00              3500 	mov	r0,#_read_tsen
   08AA 79s00              3501 	mov	r1,#(_read_tsen >> 8)
   08AC 7As00              3502 	mov	r2,#(_read_tsen >> 16)
   08AE 12s00r00           3503 	lcall	__sdcc_banked_call
   08B1 E5 82              3504 	mov	a,dpl
   08B3 85 83 F0           3505 	mov	b,dph
   08B6 D0 02              3506 	pop	ar2
   08B8 90s00r00           3507 	mov	dptr,#_tsen_dat
   08BB F0                 3508 	movx	@dptr,a
   08BC A3                 3509 	inc	dptr
   08BD E5 F0              3510 	mov	a,b
   08BF F0                 3511 	movx	@dptr,a
                           3512 ;	../../shared/src/cal_top.c:577: if(ring_lane_sel && /*slave_phy_on==0 &&*/ reg_ANA_PLL_CLK_READY_RING && cmx_RINGPLL_CAL_CONT_EN)
   08C0 90s00r00           3513 	mov	dptr,#_ring_lane_sel
   08C3 E0                 3514 	movx	a,@dptr
   08C4 FB                 3515 	mov	r3,a
   08C5 70 03              3516 	jnz	00231$
   08C7 02s0Br70           3517 	ljmp	00183$
   08CA                    3518 00231$:
   08CA 90 A3 4E           3519 	mov	dptr,#(_PM_CMN_REG2 + 0x0002)
   08CD E0                 3520 	movx	a,@dptr
   08CE 20 E5 03           3521 	jb	acc.5,00232$
   08D1 02s0Br70           3522 	ljmp	00183$
   08D4                    3523 00232$:
   08D4 90 E6 0D           3524 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0001)
   08D7 E0                 3525 	movx	a,@dptr
   08D8 20 E5 03           3526 	jb	acc.5,00233$
   08DB 02s0Br70           3527 	ljmp	00183$
   08DE                    3528 00233$:
                           3529 ;	../../shared/src/cal_top.c:578: ring_pll_cont();
   08DE C0 02              3530 	push	ar2
   08E0 78r00              3531 	mov	r0,#_ring_pll_cont
   08E2 79s00              3532 	mov	r1,#(_ring_pll_cont >> 8)
   08E4 7As00              3533 	mov	r2,#(_ring_pll_cont >> 16)
   08E6 12s00r00           3534 	lcall	__sdcc_banked_call
   08E9 D0 02              3535 	pop	ar2
                           3536 ;	../../shared/src/cal_top.c:580: break;
   08EB 02s0Br70           3537 	ljmp	00183$
                           3538 ;	../../shared/src/cal_top.c:581: case 1:
   08EE                    3539 00108$:
                           3540 ;	../../shared/src/cal_top.c:582: if( lnx_CAL_VDD_CONTINUOUS_MODE_EN_LANE ) {
   08EE 90 60 0A           3541 	mov	dptr,#(_CAL_CTRL3_LANE + 0x0002)
   08F1 E0                 3542 	movx	a,@dptr
   08F2 20 E3 03           3543 	jb	acc.3,00234$
   08F5 02s0Br70           3544 	ljmp	00183$
   08F8                    3545 00234$:
                           3546 ;	../../shared/src/cal_top.c:587: if(vdd_cnt==SELLV_TXDATA && cmx_TXDETECT_CAL_CONT_EN && reg_PIN_PLL_READY_TX_LANE)
   08F8 90s00r00           3547 	mov	dptr,#_vdd_cnt
   08FB E0                 3548 	movx	a,@dptr
   08FC FB                 3549 	mov	r3,a
   08FD BB 01 1D           3550 	cjne	r3,#0x01,00115$
   0900 90 E6 0E           3551 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0002)
   0903 E0                 3552 	movx	a,@dptr
   0904 30 E0 16           3553 	jnb	acc.0,00115$
   0907 90 20 02           3554 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   090A E0                 3555 	movx	a,@dptr
   090B 30 E2 0F           3556 	jnb	acc.2,00115$
                           3557 ;	../../shared/src/cal_top.c:588: txdetect_cal();
   090E C0 02              3558 	push	ar2
   0910 78r00              3559 	mov	r0,#_txdetect_cal
   0912 79s00              3560 	mov	r1,#(_txdetect_cal >> 8)
   0914 7As00              3561 	mov	r2,#(_txdetect_cal >> 16)
   0916 12s00r00           3562 	lcall	__sdcc_banked_call
   0919 D0 02              3563 	pop	ar2
   091B 80 37              3564 	sjmp	00116$
   091D                    3565 00115$:
                           3566 ;	../../shared/src/cal_top.c:590: if((vdd_cnt<SELLV_RXEOMCLK && reg_PIN_PU_TX_RD_LANE) || (vdd_cnt>SELLV_TXPRE && reg_PIN_PLL_READY_RX_LANE))	//Skip t/rx cal when pu_px=0
   091D 90s00r00           3567 	mov	dptr,#_vdd_cnt
   0920 E0                 3568 	movx	a,@dptr
   0921 FB                 3569 	mov	r3,a
   0922 BB 03 00           3570 	cjne	r3,#0x03,00239$
   0925                    3571 00239$:
   0925 50 07              3572 	jnc	00113$
   0927 90 20 07           3573 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   092A E0                 3574 	movx	a,@dptr
   092B 20 E4 13           3575 	jb	acc.4,00109$
   092E                    3576 00113$:
   092E 90s00r00           3577 	mov	dptr,#_vdd_cnt
   0931 E0                 3578 	movx	a,@dptr
   0932 FB                 3579 	mov	r3,a
   0933 74 02              3580 	mov	a,#0x02
   0935 B5 03 00           3581 	cjne	a,ar3,00242$
   0938                    3582 00242$:
   0938 50 1A              3583 	jnc	00116$
   093A 90 21 02           3584 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   093D E0                 3585 	movx	a,@dptr
   093E 30 E6 13           3586 	jnb	acc.6,00116$
   0941                    3587 00109$:
                           3588 ;	../../shared/src/cal_top.c:591: vdd_cal_sel(vdd_cnt);
   0941 90s00r00           3589 	mov	dptr,#_vdd_cnt
   0944 E0                 3590 	movx	a,@dptr
   0945 F5 82              3591 	mov	dpl,a
   0947 C0 02              3592 	push	ar2
   0949 78r00              3593 	mov	r0,#_vdd_cal_sel
   094B 79s00              3594 	mov	r1,#(_vdd_cal_sel >> 8)
   094D 7As00              3595 	mov	r2,#(_vdd_cal_sel >> 16)
   094F 12s00r00           3596 	lcall	__sdcc_banked_call
   0952 D0 02              3597 	pop	ar2
   0954                    3598 00116$:
                           3599 ;	../../shared/src/cal_top.c:593: vdd_cnt++;
   0954 90s00r00           3600 	mov	dptr,#_vdd_cnt
   0957 E0                 3601 	movx	a,@dptr
   0958 24 01              3602 	add	a,#0x01
   095A F0                 3603 	movx	@dptr,a
                           3604 ;	../../shared/src/cal_top.c:594: if(vdd_cnt>5) vdd_cnt = 0;
   095B 90s00r00           3605 	mov	dptr,#_vdd_cnt
   095E E0                 3606 	movx	a,@dptr
   095F FB                 3607 	mov	r3,a
   0960 74 05              3608 	mov	a,#0x05
   0962 B5 03 00           3609 	cjne	a,ar3,00245$
   0965                    3610 00245$:
   0965 40 03              3611 	jc	00246$
   0967 02s0Br70           3612 	ljmp	00183$
   096A                    3613 00246$:
   096A 90s00r00           3614 	mov	dptr,#_vdd_cnt
   096D E4                 3615 	clr	a
   096E F0                 3616 	movx	@dptr,a
                           3617 ;	../../shared/src/cal_top.c:599: break;
   096F 02s0Br70           3618 	ljmp	00183$
                           3619 ;	../../shared/src/cal_top.c:600: case 2: if(cmx_ALIGN90_CAL_CONT_EN)  find_align90_lock(); break; //phase_lookup_tracking(1); break;
   0972                    3620 00123$:
   0972 90 E6 0E           3621 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0002)
   0975 E0                 3622 	movx	a,@dptr
   0976 20 E3 03           3623 	jb	acc.3,00247$
   0979 02s0Br70           3624 	ljmp	00183$
   097C                    3625 00247$:
   097C C0 02              3626 	push	ar2
   097E 78r00              3627 	mov	r0,#_find_align90_lock
   0980 79s00              3628 	mov	r1,#(_find_align90_lock >> 8)
   0982 7As00              3629 	mov	r2,#(_find_align90_lock >> 16)
   0984 12s00r00           3630 	lcall	__sdcc_banked_call
   0987 D0 02              3631 	pop	ar2
   0989 02s0Br70           3632 	ljmp	00183$
                           3633 ;	../../shared/src/cal_top.c:601: case 3: if( cmx_RXDLL_CAL_CONT_EN ) dll_vdda_cal(DLL_PHASE_STEP);	break;
   098C                    3634 00126$:
   098C 90 E6 0E           3635 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0002)
   098F E0                 3636 	movx	a,@dptr
   0990 20 E1 03           3637 	jb	acc.1,00248$
   0993 02s0Br70           3638 	ljmp	00183$
   0996                    3639 00248$:
   0996 75 82 00           3640 	mov	dpl,#0x00
   0999 C0 02              3641 	push	ar2
   099B 78r00              3642 	mov	r0,#_dll_vdda_cal
   099D 79s00              3643 	mov	r1,#(_dll_vdda_cal >> 8)
   099F 7As00              3644 	mov	r2,#(_dll_vdda_cal >> 16)
   09A1 12s00r00           3645 	lcall	__sdcc_banked_call
   09A4 D0 02              3646 	pop	ar2
   09A6 02s0Br70           3647 	ljmp	00183$
                           3648 ;	../../shared/src/cal_top.c:602: case 4:	if( cmx_EOM_DLL_CAL_CONT_EN ) dll_eom_vdda_cal(DLL_PHASE_STEP); break;
   09A9                    3649 00129$:
   09A9 90 E6 0E           3650 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0002)
   09AC E0                 3651 	movx	a,@dptr
   09AD 20 E2 03           3652 	jb	acc.2,00249$
   09B0 02s0Br70           3653 	ljmp	00183$
   09B3                    3654 00249$:
   09B3 75 82 00           3655 	mov	dpl,#0x00
   09B6 C0 02              3656 	push	ar2
   09B8 78r00              3657 	mov	r0,#_dll_eom_vdda_cal
   09BA 79s00              3658 	mov	r1,#(_dll_eom_vdda_cal >> 8)
   09BC 7As00              3659 	mov	r2,#(_dll_eom_vdda_cal >> 16)
   09BE 12s00r00           3660 	lcall	__sdcc_banked_call
   09C1 D0 02              3661 	pop	ar2
   09C3 02s0Br70           3662 	ljmp	00183$
                           3663 ;	../../shared/src/cal_top.c:603: case 5:	
   09C6                    3664 00132$:
                           3665 ;	../../shared/src/cal_top.c:604: switch(dcc_cont) {
   09C6 90s00r00           3666 	mov	dptr,#_dcc_cont
   09C9 E0                 3667 	movx	a,@dptr
   09CA FB                 3668 	mov	r3,a
   09CB 74 04              3669 	mov	a,#0x04
   09CD B5 03 00           3670 	cjne	a,ar3,00250$
   09D0                    3671 00250$:
   09D0 50 03              3672 	jnc	00251$
   09D2 02s0Ar82           3673 	ljmp	00149$
   09D5                    3674 00251$:
   09D5 EB                 3675 	mov	a,r3
   09D6 2B                 3676 	add	a,r3
   09D7 2B                 3677 	add	a,r3
   09D8 90s09rDC           3678 	mov	dptr,#00252$
   09DB 73                 3679 	jmp	@a+dptr
   09DC                    3680 00252$:
   09DC 02s09rEB           3681 	ljmp	00133$
   09DF 02s09rFB           3682 	ljmp	00134$
   09E2 02s0Ar0B           3683 	ljmp	00135$
   09E5 02s0Ar1A           3684 	ljmp	00136$
   09E8 02s0Ar47           3685 	ljmp	00142$
                           3686 ;	../../shared/src/cal_top.c:605: case 0: rxdcc_dll_cal(); break;
   09EB                    3687 00133$:
   09EB C0 02              3688 	push	ar2
   09ED 78r00              3689 	mov	r0,#_rxdcc_dll_cal
   09EF 79s00              3690 	mov	r1,#(_rxdcc_dll_cal >> 8)
   09F1 7As00              3691 	mov	r2,#(_rxdcc_dll_cal >> 16)
   09F3 12s00r00           3692 	lcall	__sdcc_banked_call
   09F6 D0 02              3693 	pop	ar2
   09F8 02s0Ar82           3694 	ljmp	00149$
                           3695 ;	../../shared/src/cal_top.c:606: case 1: rxdcc_data_cal(); break;
   09FB                    3696 00134$:
   09FB C0 02              3697 	push	ar2
   09FD 78r00              3698 	mov	r0,#_rxdcc_data_cal
   09FF 79s00              3699 	mov	r1,#(_rxdcc_data_cal >> 8)
   0A01 7As00              3700 	mov	r2,#(_rxdcc_data_cal >> 16)
   0A03 12s00r00           3701 	lcall	__sdcc_banked_call
   0A06 D0 02              3702 	pop	ar2
   0A08 02s0Ar82           3703 	ljmp	00149$
                           3704 ;	../../shared/src/cal_top.c:607: case 2: rxdcc_eom_cal(); break;
   0A0B                    3705 00135$:
   0A0B C0 02              3706 	push	ar2
   0A0D 78r00              3707 	mov	r0,#_rxdcc_eom_cal
   0A0F 79s00              3708 	mov	r1,#(_rxdcc_eom_cal >> 8)
   0A11 7As00              3709 	mov	r2,#(_rxdcc_eom_cal >> 16)
   0A13 12s00r00           3710 	lcall	__sdcc_banked_call
   0A16 D0 02              3711 	pop	ar2
                           3712 ;	../../shared/src/cal_top.c:608: case 3: if(reg_PIN_PU_TX_RD_LANE) {
   0A18 80 68              3713 	sjmp	00149$
   0A1A                    3714 00136$:
   0A1A 90 20 07           3715 	mov	dptr,#(_PM_CTRL_TX_LANE_REG2_LANE + 0x0003)
   0A1D E0                 3716 	movx	a,@dptr
   0A1E 30 E4 61           3717 	jnb	acc.4,00149$
                           3718 ;	../../shared/src/cal_top.c:609: if(reg_TX_SPEED_DIV_LANE_2_0==0) txdcc_cal();
   0A21 90 02 58           3719 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_150
   0A24 E0                 3720 	movx	a,@dptr
   0A25 54 07              3721 	anl	a,#0x07
   0A27 70 0F              3722 	jnz	00138$
   0A29 C0 02              3723 	push	ar2
   0A2B 78r00              3724 	mov	r0,#_txdcc_cal
   0A2D 79s00              3725 	mov	r1,#(_txdcc_cal >> 8)
   0A2F 7As00              3726 	mov	r2,#(_txdcc_cal >> 16)
   0A31 12s00r00           3727 	lcall	__sdcc_banked_call
   0A34 D0 02              3728 	pop	ar2
   0A36 80 4A              3729 	sjmp	00149$
   0A38                    3730 00138$:
                           3731 ;	../../shared/src/cal_top.c:610: else txdcc_pdiv_cal();
   0A38 C0 02              3732 	push	ar2
   0A3A 78r00              3733 	mov	r0,#_txdcc_pdiv_cal
   0A3C 79s00              3734 	mov	r1,#(_txdcc_pdiv_cal >> 8)
   0A3E 7As00              3735 	mov	r2,#(_txdcc_pdiv_cal >> 16)
   0A40 12s00r00           3736 	lcall	__sdcc_banked_call
   0A43 D0 02              3737 	pop	ar2
                           3738 ;	../../shared/src/cal_top.c:612: break;
                           3739 ;	../../shared/src/cal_top.c:613: case 4: if(mcuid==master_mcu && slave_phy_on==0 && cmx_PLLDCC_CAL_CONT_EN && reg_ANA_PLL_CLK_READY
   0A45 80 3B              3740 	sjmp	00149$
   0A47                    3741 00142$:
   0A47 90 22 00           3742 	mov	dptr,#_MCU_CONTROL_LANE
   0A4A E0                 3743 	movx	a,@dptr
   0A4B FB                 3744 	mov	r3,a
   0A4C 90 E6 50           3745 	mov	dptr,#_MCU_CONFIG
   0A4F E0                 3746 	movx	a,@dptr
   0A50 FC                 3747 	mov	r4,a
   0A51 EB                 3748 	mov	a,r3
   0A52 B5 04 2D           3749 	cjne	a,ar4,00149$
   0A55 90s00r00           3750 	mov	dptr,#_slave_phy_on
   0A58 E0                 3751 	movx	a,@dptr
   0A59 FB                 3752 	mov	r3,a
   0A5A 70 26              3753 	jnz	00149$
   0A5C 90 E6 0E           3754 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0002)
   0A5F E0                 3755 	movx	a,@dptr
   0A60 30 E4 1F           3756 	jnb	acc.4,00149$
   0A63 90 A3 4F           3757 	mov	dptr,#(_PM_CMN_REG2 + 0x0003)
   0A66 E0                 3758 	movx	a,@dptr
   0A67 30 E0 18           3759 	jnb	acc.0,00149$
                           3760 ;	../../shared/src/cal_top.c:615: && reg_LCPLLCLK_DIV2_SEL==1
   0A6A 90 83 3C           3761 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_207
   0A6D E0                 3762 	movx	a,@dptr
   0A6E 03                 3763 	rr	a
   0A6F 54 01              3764 	anl	a,#0x01
   0A71 FB                 3765 	mov	r3,a
   0A72 BB 01 0D           3766 	cjne	r3,#0x01,00149$
                           3767 ;	../../shared/src/cal_top.c:619: plldcc_cal();
   0A75 C0 02              3768 	push	ar2
   0A77 78r00              3769 	mov	r0,#_plldcc_cal
   0A79 79s00              3770 	mov	r1,#(_plldcc_cal >> 8)
   0A7B 7As00              3771 	mov	r2,#(_plldcc_cal >> 16)
   0A7D 12s00r00           3772 	lcall	__sdcc_banked_call
   0A80 D0 02              3773 	pop	ar2
                           3774 ;	../../shared/src/cal_top.c:622: }
   0A82                    3775 00149$:
                           3776 ;	../../shared/src/cal_top.c:623: dcc_cont++;
   0A82 90s00r00           3777 	mov	dptr,#_dcc_cont
   0A85 E0                 3778 	movx	a,@dptr
   0A86 24 01              3779 	add	a,#0x01
   0A88 F0                 3780 	movx	@dptr,a
                           3781 ;	../../shared/src/cal_top.c:624: if(dcc_cont>4) dcc_cont = 0;	
   0A89 90s00r00           3782 	mov	dptr,#_dcc_cont
   0A8C E0                 3783 	movx	a,@dptr
   0A8D FB                 3784 	mov	r3,a
   0A8E 74 04              3785 	mov	a,#0x04
   0A90 B5 03 00           3786 	cjne	a,ar3,00262$
   0A93                    3787 00262$:
   0A93 40 03              3788 	jc	00263$
   0A95 02s0Br70           3789 	ljmp	00183$
   0A98                    3790 00263$:
   0A98 90s00r00           3791 	mov	dptr,#_dcc_cont
   0A9B E4                 3792 	clr	a
   0A9C F0                 3793 	movx	@dptr,a
                           3794 ;	../../shared/src/cal_top.c:625: break;
   0A9D 02s0Br70           3795 	ljmp	00183$
                           3796 ;	../../shared/src/cal_top.c:626: case 6:	
   0AA0                    3797 00152$:
                           3798 ;	../../shared/src/cal_top.c:627: reg_MCU_DEBUG0_LANE_7_0 = timeout;
   0AA0 A2*00              3799 	mov	c,_timeout
   0AA2 E4                 3800 	clr	a
   0AA3 33                 3801 	rlc	a
   0AA4 FB                 3802 	mov	r3,a
   0AA5 90 22 B4           3803 	mov	dptr,#_MCU_DEBUG0_LANE
   0AA8 EB                 3804 	mov	a,r3
   0AA9 F0                 3805 	movx	@dptr,a
                           3806 ;	../../shared/src/cal_top.c:628: if( mcuid==master_mcu && slave_phy_on==0 && reg_ANA_PLL_CLK_READY) {
   0AAA 90 22 00           3807 	mov	dptr,#_MCU_CONTROL_LANE
   0AAD E0                 3808 	movx	a,@dptr
   0AAE FB                 3809 	mov	r3,a
   0AAF 90 E6 50           3810 	mov	dptr,#_MCU_CONFIG
   0AB2 E0                 3811 	movx	a,@dptr
   0AB3 FC                 3812 	mov	r4,a
   0AB4 EB                 3813 	mov	a,r3
   0AB5 B5 04 02           3814 	cjne	a,ar4,00264$
   0AB8 80 03              3815 	sjmp	00265$
   0ABA                    3816 00264$:
   0ABA 02s0Br70           3817 	ljmp	00183$
   0ABD                    3818 00265$:
   0ABD 90s00r00           3819 	mov	dptr,#_slave_phy_on
   0AC0 E0                 3820 	movx	a,@dptr
   0AC1 FB                 3821 	mov	r3,a
   0AC2 60 03              3822 	jz	00266$
   0AC4 02s0Br70           3823 	ljmp	00183$
   0AC7                    3824 00266$:
   0AC7 90 A3 4F           3825 	mov	dptr,#(_PM_CMN_REG2 + 0x0003)
   0ACA E0                 3826 	movx	a,@dptr
   0ACB 20 E0 03           3827 	jb	acc.0,00267$
   0ACE 02s0Br70           3828 	ljmp	00183$
   0AD1                    3829 00267$:
                           3830 ;	../../shared/src/cal_top.c:629: if( timeout == 0 ) break;
   0AD1 20*00 03           3831 	jb	_timeout,00268$
   0AD4 02s0Br70           3832 	ljmp	00183$
   0AD7                    3833 00268$:
                           3834 ;	../../shared/src/cal_top.c:630: if( cmx_PLL_TEMP_CAL_CONT_EN) {
   0AD7 90 E6 0D           3835 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0001)
   0ADA E0                 3836 	movx	a,@dptr
   0ADB 20 E6 03           3837 	jb	acc.6,00269$
   0ADE 02s0Br70           3838 	ljmp	00183$
   0AE1                    3839 00269$:
                           3840 ;	../../shared/src/cal_top.c:631: pll_temp_cal();
   0AE1 C0 02              3841 	push	ar2
   0AE3 78r00              3842 	mov	r0,#_pll_temp_cal
   0AE5 79s00              3843 	mov	r1,#(_pll_temp_cal >> 8)
   0AE7 7As00              3844 	mov	r2,#(_pll_temp_cal >> 16)
   0AE9 12s00r00           3845 	lcall	__sdcc_banked_call
   0AEC D0 02              3846 	pop	ar2
                           3847 ;	../../shared/src/cal_top.c:632: if(BYPASS_DELAY==0) {
   0AEE 90 E6 06           3848 	mov	dptr,#(_CONTROL_CONFIG0 + 0x0002)
   0AF1 E0                 3849 	movx	a,@dptr
   0AF2 54 1C              3850 	anl	a,#0x1c
   0AF4 70 41              3851 	jnz	00165$
                           3852 ;	../../shared/src/cal_top.c:633: if((tempc_step_state&0xf0) == 0x10) { timeout_start((uint16_t)5); }
   0AF6 90s00r00           3853 	mov	dptr,#_tempc_step_state
   0AF9 E0                 3854 	movx	a,@dptr
   0AFA FB                 3855 	mov	r3,a
   0AFB 74 F0              3856 	mov	a,#0xF0
   0AFD 5B                 3857 	anl	a,r3
   0AFE FC                 3858 	mov	r4,a
   0AFF BC 10 0C           3859 	cjne	r4,#0x10,00162$
   0B02 75 8B FB           3860 	mov	_TMR1,#0xFB
   0B05 75 8D FF           3861 	mov	(_TMR1 >> 8),#0xFF
   0B08 D2 8E              3862 	setb	_TR1
   0B0A C2*00              3863 	clr	_timeout
   0B0C 80 62              3864 	sjmp	00183$
   0B0E                    3865 00162$:
                           3866 ;	../../shared/src/cal_top.c:634: else if((tempc_step_state&0xf0) == 0x20) {timeout_start((uint16_t)40); }
   0B0E 74 F0              3867 	mov	a,#0xF0
   0B10 5B                 3868 	anl	a,r3
   0B11 FC                 3869 	mov	r4,a
   0B12 BC 20 0C           3870 	cjne	r4,#0x20,00159$
   0B15 75 8B D8           3871 	mov	_TMR1,#0xD8
   0B18 75 8D FF           3872 	mov	(_TMR1 >> 8),#0xFF
   0B1B D2 8E              3873 	setb	_TR1
   0B1D C2*00              3874 	clr	_timeout
   0B1F 80 4F              3875 	sjmp	00183$
   0B21                    3876 00159$:
                           3877 ;	../../shared/src/cal_top.c:635: else if((tempc_step_state&0xf0) == 0x30) { timeout_start((uint16_t)100); }
   0B21 53 03 F0           3878 	anl	ar3,#0xF0
   0B24 BB 30 0C           3879 	cjne	r3,#0x30,00156$
   0B27 75 8B 9C           3880 	mov	_TMR1,#0x9C
   0B2A 75 8D FF           3881 	mov	(_TMR1 >> 8),#0xFF
   0B2D D2 8E              3882 	setb	_TR1
   0B2F C2*00              3883 	clr	_timeout
   0B31 80 3D              3884 	sjmp	00183$
   0B33                    3885 00156$:
                           3886 ;	../../shared/src/cal_top.c:636: else timeout = 1;
   0B33 D2*00              3887 	setb	_timeout
   0B35 80 39              3888 	sjmp	00183$
   0B37                    3889 00165$:
                           3890 ;	../../shared/src/cal_top.c:639: timeout = 1;
   0B37 D2*00              3891 	setb	_timeout
                           3892 ;	../../shared/src/cal_top.c:643: break;
                           3893 ;	../../shared/src/cal_top.c:644: case 7:	
   0B39 80 35              3894 	sjmp	00183$
   0B3B                    3895 00173$:
                           3896 ;	../../shared/src/cal_top.c:645: if(mcuid==master_mcu && slave_phy_on==0  && reg_ANA_PLL_LOCK_RD) {
   0B3B 90 22 00           3897 	mov	dptr,#_MCU_CONTROL_LANE
   0B3E E0                 3898 	movx	a,@dptr
   0B3F FB                 3899 	mov	r3,a
   0B40 90 E6 50           3900 	mov	dptr,#_MCU_CONFIG
   0B43 E0                 3901 	movx	a,@dptr
   0B44 FC                 3902 	mov	r4,a
   0B45 EB                 3903 	mov	a,r3
   0B46 B5 04 27           3904 	cjne	a,ar4,00183$
   0B49 90s00r00           3905 	mov	dptr,#_slave_phy_on
   0B4C E0                 3906 	movx	a,@dptr
   0B4D FB                 3907 	mov	r3,a
   0B4E 70 20              3908 	jnz	00183$
   0B50 90 A3 19           3909 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   0B53 E0                 3910 	movx	a,@dptr
   0B54 30 E6 19           3911 	jnb	acc.6,00183$
                           3912 ;	../../shared/src/cal_top.c:648: if(cmx_PLLAMP_CAL_CONT_EN==1) pll_amp_cal_cont();
   0B57 90 E6 0E           3913 	mov	dptr,#(_CONTROL_CONFIG2 + 0x0002)
   0B5A E0                 3914 	movx	a,@dptr
   0B5B C4                 3915 	swap	a
   0B5C 03                 3916 	rr	a
   0B5D 54 01              3917 	anl	a,#0x01
   0B5F FB                 3918 	mov	r3,a
   0B60 BB 01 0D           3919 	cjne	r3,#0x01,00183$
   0B63 C0 02              3920 	push	ar2
   0B65 78r00              3921 	mov	r0,#_pll_amp_cal_cont
   0B67 79s00              3922 	mov	r1,#(_pll_amp_cal_cont >> 8)
   0B69 7As00              3923 	mov	r2,#(_pll_amp_cal_cont >> 16)
   0B6B 12s00r00           3924 	lcall	__sdcc_banked_call
   0B6E D0 02              3925 	pop	ar2
                           3926 ;	../../shared/src/cal_top.c:651: }
   0B70                    3927 00183$:
                           3928 ;	../../shared/src/cal_top.c:652: } while( PHY_NS==ST_INIT &&  cont_cal_inx++<8);
   0B70 90 22 31           3929 	mov	dptr,#(_MCU_STATUS0_LANE + 0x0001)
   0B73 E0                 3930 	movx	a,@dptr
   0B74 70 0B              3931 	jnz	00184$
   0B76 8A 03              3932 	mov	ar3,r2
   0B78 0A                 3933 	inc	r2
   0B79 BB 08 00           3934 	cjne	r3,#0x08,00284$
   0B7C                    3935 00284$:
   0B7C 50 03              3936 	jnc	00285$
   0B7E 02s08r7D           3937 	ljmp	00182$
   0B81                    3938 00285$:
   0B81                    3939 00184$:
                           3940 ;	../../shared/src/cal_top.c:660: cont_cal_on = 0;
   0B81 C2*00              3941 	clr	_cont_cal_on
   0B83                    3942 00185$:
   0B83 02s00r00           3943 	ljmp	__sdcc_banked_ret
                           3944 ;------------------------------------------------------------
                           3945 ;Allocation info for local variables in function 'phy_check_lane'
                           3946 ;------------------------------------------------------------
                           3947 ;val                       Allocated to registers r2 
                           3948 ;------------------------------------------------------------
                           3949 ;	../../shared/src/cal_top.c:708: void phy_check_lane(uint8_t val) BANKING_CTRL {
                           3950 ;	-----------------------------------------
                           3951 ;	 function phy_check_lane
                           3952 ;	-----------------------------------------
   0B86                    3953 _phy_check_lane:
   0B86 AA 82              3954 	mov	r2,dpl
                           3955 ;	../../shared/src/cal_top.c:709: PHY_CHECK_LANE = val;
   0B88 90 22 32           3956 	mov	dptr,#(_MCU_STATUS0_LANE + 0x0002)
   0B8B EA                 3957 	mov	a,r2
   0B8C F0                 3958 	movx	@dptr,a
                           3959 ;	../../shared/src/cal_top.c:710: if (mcuid == MCU_LANE0)
   0B8D 90 22 00           3960 	mov	dptr,#_MCU_CONTROL_LANE
   0B90 E0                 3961 	movx	a,@dptr
   0B91 70 07              3962 	jnz	00102$
                           3963 ;	../../shared/src/cal_top.c:711: PHY_CHECK_LANE0 = val;
   0B93 90 E6 B6           3964 	mov	dptr,#(_MCU_INFO_4 + 0x0002)
   0B96 EA                 3965 	mov	a,r2
   0B97 F0                 3966 	movx	@dptr,a
   0B98 80 05              3967 	sjmp	00104$
   0B9A                    3968 00102$:
                           3969 ;	../../shared/src/cal_top.c:713: PHY_CHECK_LANE1 = val;
   0B9A 90 E6 BA           3970 	mov	dptr,#(_MCU_INFO_5 + 0x0002)
   0B9D EA                 3971 	mov	a,r2
   0B9E F0                 3972 	movx	@dptr,a
   0B9F                    3973 00104$:
   0B9F 02s00r00           3974 	ljmp	__sdcc_banked_ret
                           3975 ;------------------------------------------------------------
                           3976 ;Allocation info for local variables in function 'mcu_align_0'
                           3977 ;------------------------------------------------------------
                           3978 ;val                       Allocated to registers r2 
                           3979 ;------------------------------------------------------------
                           3980 ;	../../shared/src/cal_top.c:716: void mcu_align_0(uint8_t val) BANKING_CTRL {
                           3981 ;	-----------------------------------------
                           3982 ;	 function mcu_align_0
                           3983 ;	-----------------------------------------
   0BA2                    3984 _mcu_align_0:
   0BA2 AA 82              3985 	mov	r2,dpl
                           3986 ;	../../shared/src/cal_top.c:718: if(phy_mode==SERDES && SPDCHG_ON_READ) return;
   0BA4 90 A3 16           3987 	mov	dptr,#(_SYSTEM + 0x0002)
   0BA7 E0                 3988 	movx	a,@dptr
   0BA8 54 07              3989 	anl	a,#0x07
   0BAA FB                 3990 	mov	r3,a
   0BAB BB 04 0D           3991 	cjne	r3,#0x04,00102$
   0BAE 90 22 38           3992 	mov	dptr,#_MCU_STATUS2_LANE
   0BB1 E0                 3993 	movx	a,@dptr
   0BB2 FB                 3994 	mov	r3,a
   0BB3 53 03 01           3995 	anl	ar3,#0x01
   0BB6 BB 01 02           3996 	cjne	r3,#0x01,00102$
   0BB9 80 3C              3997 	sjmp	00111$
   0BBB                    3998 00102$:
                           3999 ;	../../shared/src/cal_top.c:722: phy_check_lane(val);
   0BBB 8A 82              4000 	mov	dpl,r2
   0BBD C0 02              4001 	push	ar2
   0BBF 78r86              4002 	mov	r0,#_phy_check_lane
   0BC1 79s0B              4003 	mov	r1,#(_phy_check_lane >> 8)
   0BC3 7As00              4004 	mov	r2,#(_phy_check_lane >> 16)
   0BC5 12s00r00           4005 	lcall	__sdcc_banked_call
   0BC8 D0 02              4006 	pop	ar2
                           4007 ;	../../shared/src/cal_top.c:723: while ((PHY_CHECK_LANE0_READ != val) || (PHY_CHECK_LANE1_READ != val)) {
   0BCA                    4008 00108$:
   0BCA 90 E6 B6           4009 	mov	dptr,#(_MCU_INFO_4 + 0x0002)
   0BCD E0                 4010 	movx	a,@dptr
   0BCE FB                 4011 	mov	r3,a
   0BCF B5 02 0A           4012 	cjne	a,ar2,00109$
   0BD2 90 E6 BA           4013 	mov	dptr,#(_MCU_INFO_5 + 0x0002)
   0BD5 E0                 4014 	movx	a,@dptr
   0BD6 FB                 4015 	mov	r3,a
   0BD7 B5 02 02           4016 	cjne	a,ar2,00125$
   0BDA 80 1B              4017 	sjmp	00111$
   0BDC                    4018 00125$:
   0BDC                    4019 00109$:
                           4020 ;	../../shared/src/cal_top.c:724: if(SYNC_STATUS_LANE0_EN_READ==0 || SYNC_STATUS_LANE1_EN_READ==0) break;
   0BDC 90 E6 BE           4021 	mov	dptr,#(_MCU_INFO_12 + 0x0002)
   0BDF E0                 4022 	movx	a,@dptr
   0BE0 60 15              4023 	jz	00111$
   0BE2 90 E6 C2           4024 	mov	dptr,#(_MCU_INFO_13 + 0x0002)
   0BE5 E0                 4025 	movx	a,@dptr
   0BE6 60 0F              4026 	jz	00111$
                           4027 ;	../../shared/src/cal_top.c:725: short_delay();
   0BE8 C0 02              4028 	push	ar2
   0BEA 78r00              4029 	mov	r0,#_short_delay
   0BEC 79s00              4030 	mov	r1,#(_short_delay >> 8)
   0BEE 7As00              4031 	mov	r2,#(_short_delay >> 16)
   0BF0 12s00r00           4032 	lcall	__sdcc_banked_call
   0BF3 D0 02              4033 	pop	ar2
   0BF5 80 D3              4034 	sjmp	00108$
   0BF7                    4035 00111$:
   0BF7 02s00r00           4036 	ljmp	__sdcc_banked_ret
                           4037 ;------------------------------------------------------------
                           4038 ;Allocation info for local variables in function 'all_cal_ext'
                           4039 ;------------------------------------------------------------
                           4040 ;lc_pll_rate               Allocated to registers b0 
                           4041 ;ring_pll_rate             Allocated to stack - offset 1
                           4042 ;------------------------------------------------------------
                           4043 ;	../../shared/src/cal_top.c:744: void all_cal_ext(void) BANKING_CTRL {
                           4044 ;	-----------------------------------------
                           4045 ;	 function all_cal_ext
                           4046 ;	-----------------------------------------
   0BFA                    4047 _all_cal_ext:
   0BFA C0*00              4048 	push	_bp
   0BFC 85 81*00           4049 	mov	_bp,sp
   0BFF 05 81              4050 	inc	sp
                           4051 ;	../../shared/src/cal_top.c:747: loadspeedtbl_gen();
   0C01 12s00r00           4052 	lcall	_loadspeedtbl_gen
                           4053 ;	../../shared/src/cal_top.c:748: if(phy_mode==SERDES) {
   0C04 90 A3 16           4054 	mov	dptr,#(_SYSTEM + 0x0002)
   0C07 E0                 4055 	movx	a,@dptr
   0C08 54 07              4056 	anl	a,#0x07
   0C0A FA                 4057 	mov	r2,a
   0C0B BA 04 11           4058 	cjne	r2,#0x04,00104$
                           4059 ;	../../shared/src/cal_top.c:749: if(gen_pll_rate==pre_gen_pll_rate) return;
   0C0E 90s00r00           4060 	mov	dptr,#_gen_pll_rate
   0C11 E0                 4061 	movx	a,@dptr
   0C12 FA                 4062 	mov	r2,a
   0C13 90s00r00           4063 	mov	dptr,#_pre_gen_pll_rate
   0C16 E0                 4064 	movx	a,@dptr
   0C17 FB                 4065 	mov	r3,a
   0C18 EA                 4066 	mov	a,r2
   0C19 B5 03 03           4067 	cjne	a,ar3,00104$
   0C1C 02s0DrA8           4068 	ljmp	00124$
   0C1F                    4069 00104$:
                           4070 ;	../../shared/src/cal_top.c:752: if( mcuid==master_mcu ) {
   0C1F 90 22 00           4071 	mov	dptr,#_MCU_CONTROL_LANE
   0C22 E0                 4072 	movx	a,@dptr
   0C23 FA                 4073 	mov	r2,a
   0C24 90 E6 50           4074 	mov	dptr,#_MCU_CONFIG
   0C27 E0                 4075 	movx	a,@dptr
   0C28 FB                 4076 	mov	r3,a
   0C29 EA                 4077 	mov	a,r2
   0C2A B5 03 02           4078 	cjne	a,ar3,00140$
   0C2D 80 03              4079 	sjmp	00141$
   0C2F                    4080 00140$:
   0C2F 02s0CrB8           4081 	ljmp	00115$
   0C32                    4082 00141$:
                           4083 ;	../../shared/src/cal_top.c:754: pll_clk_ready_0();
   0C32 78r00              4084 	mov	r0,#_pll_clk_ready_0
   0C34 79s00              4085 	mov	r1,#(_pll_clk_ready_0 >> 8)
   0C36 7As00              4086 	mov	r2,#(_pll_clk_ready_0 >> 16)
   0C38 12s00r00           4087 	lcall	__sdcc_banked_call
                           4088 ;	../../shared/src/cal_top.c:757: reg_LCVCO_DAC_LSB_4_0 = 0x10;
   0C3B 90 82 B4           4089 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_173
   0C3E E0                 4090 	movx	a,@dptr
   0C3F 54 07              4091 	anl	a,#0x07
   0C41 44 80              4092 	orl	a,#0x80
   0C43 F0                 4093 	movx	@dptr,a
                           4094 ;	../../shared/src/cal_top.c:758: reg_LCVCO_DAC_MSB_2_0 = 0x02;
   0C44 90 82 B4           4095 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_173
   0C47 E0                 4096 	movx	a,@dptr
   0C48 54 F8              4097 	anl	a,#0xf8
   0C4A 44 02              4098 	orl	a,#0x02
   0C4C F0                 4099 	movx	@dptr,a
                           4100 ;	../../shared/src/cal_top.c:760: reg_LCCAP_MSB_3_0 = 0;
   0C4D 90 82 C8           4101 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_178
   0C50 E0                 4102 	movx	a,@dptr
   0C51 54 0F              4103 	anl	a,#0x0f
   0C53 F0                 4104 	movx	@dptr,a
                           4105 ;	../../shared/src/cal_top.c:770: if( phy_mode==SERDES ) {
   0C54 90 A3 16           4106 	mov	dptr,#(_SYSTEM + 0x0002)
   0C57 E0                 4107 	movx	a,@dptr
   0C58 54 07              4108 	anl	a,#0x07
   0C5A FA                 4109 	mov	r2,a
   0C5B BA 04 06           4110 	cjne	r2,#0x04,00112$
                           4111 ;	../../shared/src/cal_top.c:771: lc_pll_rate = 0; ring_pll_rate = 0;
   0C5E C2*00              4112 	clr	b0
   0C60 C2*00              4113 	clr	b1
   0C62 80 2B              4114 	sjmp	00113$
   0C64                    4115 00112$:
                           4116 ;	../../shared/src/cal_top.c:774: if( lc_pll_used ) {
   0C64 30*00 1D           4117 	jnb	_lc_pll_used,00109$
                           4118 ;	../../shared/src/cal_top.c:775: if(use_ring_pll) { lc_pll_rate = !tx_pll_rate; ring_pll_rate = tx_pll_rate; }
   0C67 30*00 0D           4119 	jnb	_use_ring_pll,00106$
   0C6A A2*00              4120 	mov	c,_tx_pll_rate
   0C6C B3                 4121 	cpl	c
   0C6D 92*00              4122 	mov  b2,c
   0C6F 92*00              4123 	mov	b0,c
   0C71 A2*00              4124 	mov	c,_tx_pll_rate
   0C73 92*00              4125 	mov	b1,c
   0C75 80 18              4126 	sjmp	00113$
   0C77                    4127 00106$:
                           4128 ;	../../shared/src/cal_top.c:776: else {	lc_pll_rate = tx_pll_rate; ring_pll_rate = !tx_pll_rate; }
   0C77 A2*00              4129 	mov	c,_tx_pll_rate
   0C79 92*00              4130 	mov	b0,c
   0C7B A2*00              4131 	mov	c,_tx_pll_rate
   0C7D B3                 4132 	cpl	c
   0C7E 92*00              4133 	mov  b2,c
   0C80 92*00              4134 	mov	b1,c
   0C82 80 0B              4135 	sjmp	00113$
   0C84                    4136 00109$:
                           4137 ;	../../shared/src/cal_top.c:778: else {	lc_pll_rate = !tx_pll_rate; ring_pll_rate = tx_pll_rate; }
   0C84 A2*00              4138 	mov	c,_tx_pll_rate
   0C86 B3                 4139 	cpl	c
   0C87 92*00              4140 	mov  b2,c
   0C89 92*00              4141 	mov	b0,c
   0C8B A2*00              4142 	mov	c,_tx_pll_rate
   0C8D 92*00              4143 	mov	b1,c
   0C8F                    4144 00113$:
                           4145 ;	../../shared/src/cal_top.c:781: PLL_RATE_SEL = tx_pll_rate;
   0C8F A2*00              4146 	mov	c,_tx_pll_rate
   0C91 E4                 4147 	clr	a
   0C92 33                 4148 	rlc	a
   0C93 90 E6 1E           4149 	mov	dptr,#(_CONTROL_CONFIG6 + 0x0002)
   0C96 F0                 4150 	movx	@dptr,a
                           4151 ;	../../shared/src/cal_top.c:782: loadspeedtbl_pll(lc_pll_rate);
   0C97 A2*00              4152 	mov	c,b0
   0C99 E4                 4153 	clr	a
   0C9A 33                 4154 	rlc	a
   0C9B F5 82              4155 	mov	dpl,a
   0C9D C0*00              4156 	push	bits
   0C9F 12s00r00           4157 	lcall	_loadspeedtbl_pll
   0CA2 D0*00              4158 	pop	bits
                           4159 ;	../../shared/src/cal_top.c:784: reg_RESET_ANA = 0;
   0CA4 90 A3 19           4160 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   0CA7 E0                 4161 	movx	a,@dptr
   0CA8 54 EF              4162 	anl	a,#0xef
   0CAA F0                 4163 	movx	@dptr,a
                           4164 ;	../../shared/src/cal_top.c:788: pll_clk_ready_1();
   0CAB C0*00              4165 	push	bits
   0CAD 78r00              4166 	mov	r0,#_pll_clk_ready_1
   0CAF 79s00              4167 	mov	r1,#(_pll_clk_ready_1 >> 8)
   0CB1 7As00              4168 	mov	r2,#(_pll_clk_ready_1 >> 16)
   0CB3 12s00r00           4169 	lcall	__sdcc_banked_call
   0CB6 D0*00              4170 	pop	bits
   0CB8                    4171 00115$:
                           4172 ;	../../shared/src/cal_top.c:806: reg_MCU_DEBUG0_LANE_7_0 = 0x32;
   0CB8 90 22 B4           4173 	mov	dptr,#_MCU_DEBUG0_LANE
   0CBB 74 32              4174 	mov	a,#0x32
   0CBD F0                 4175 	movx	@dptr,a
                           4176 ;	../../shared/src/cal_top.c:807: reg_MCU_DEBUG1_LANE_7_0 = gen_tx;
   0CBE 90s00r00           4177 	mov	dptr,#_gen_tx
   0CC1 E0                 4178 	movx	a,@dptr
   0CC2 90 22 B5           4179 	mov	dptr,#(_MCU_DEBUG0_LANE + 0x0001)
   0CC5 F0                 4180 	movx	@dptr,a
                           4181 ;	../../shared/src/cal_top.c:808: reg_MCU_DEBUG2_LANE_7_0 = gen_rx;
   0CC6 90s00r00           4182 	mov	dptr,#_gen_rx
   0CC9 E0                 4183 	movx	a,@dptr
   0CCA 90 22 B6           4184 	mov	dptr,#(_MCU_DEBUG0_LANE + 0x0002)
   0CCD F0                 4185 	movx	@dptr,a
                           4186 ;	../../shared/src/cal_top.c:809: reg_MCU_DEBUG3_LANE_7_0 = gen_pll_rate;
   0CCE 90s00r00           4187 	mov	dptr,#_gen_pll_rate
   0CD1 E0                 4188 	movx	a,@dptr
   0CD2 90 22 B7           4189 	mov	dptr,#(_MCU_DEBUG0_LANE + 0x0003)
   0CD5 F0                 4190 	movx	@dptr,a
                           4191 ;	../../shared/src/cal_top.c:810: reg_MCU_DEBUG4_LANE_7_0 = max_gen;
   0CD6 90 63 00           4192 	mov	dptr,#_max_gen
   0CD9 E0                 4193 	movx	a,@dptr
   0CDA 90 22 B8           4194 	mov	dptr,#_MCU_DEBUG1_LANE
   0CDD F0                 4195 	movx	@dptr,a
                           4196 ;	../../shared/src/cal_top.c:811: reg_MCU_DEBUG5_LANE_7_0 = ring_pll_enabled;
   0CDE A2*00              4197 	mov	c,_ring_pll_enabled
   0CE0 E4                 4198 	clr	a
   0CE1 33                 4199 	rlc	a
   0CE2 90 22 B9           4200 	mov	dptr,#(_MCU_DEBUG1_LANE + 0x0001)
   0CE5 F0                 4201 	movx	@dptr,a
                           4202 ;	../../shared/src/cal_top.c:812: reg_MCU_DEBUG6_LANE_7_0 = use_ring_pll;
   0CE6 A2*00              4203 	mov	c,_use_ring_pll
   0CE8 E4                 4204 	clr	a
   0CE9 33                 4205 	rlc	a
   0CEA 90 22 BA           4206 	mov	dptr,#(_MCU_DEBUG1_LANE + 0x0002)
   0CED F0                 4207 	movx	@dptr,a
                           4208 ;	../../shared/src/cal_top.c:813: reg_MCU_DEBUG7_LANE_7_0 = tx_pll_rate;
   0CEE A2*00              4209 	mov	c,_tx_pll_rate
   0CF0 E4                 4210 	clr	a
   0CF1 33                 4211 	rlc	a
   0CF2 90 22 BB           4212 	mov	dptr,#(_MCU_DEBUG1_LANE + 0x0003)
   0CF5 F0                 4213 	movx	@dptr,a
                           4214 ;	../../shared/src/cal_top.c:814: reg_MCU_DEBUG8_LANE_7_0 = ring_lane_sel;
   0CF6 90s00r00           4215 	mov	dptr,#_ring_lane_sel
   0CF9 E0                 4216 	movx	a,@dptr
   0CFA FA                 4217 	mov	r2,a
   0CFB 90 22 BC           4218 	mov	dptr,#_MCU_DEBUG2_LANE
   0CFE F0                 4219 	movx	@dptr,a
                           4220 ;	../../shared/src/cal_top.c:816: reg_RING_PLL_DISABLE = !ring_pll_enabled;
   0CFF A2*00              4221 	mov	c,_ring_pll_enabled
   0D01 B3                 4222 	cpl	c
   0D02 92*00              4223 	mov  b0,c
   0D04 E4                 4224 	clr	a
   0D05 33                 4225 	rlc	a
   0D06 FB                 4226 	mov	r3,a
   0D07 90 A3 24           4227 	mov	dptr,#_INPUT_CMN_PIN_REG2
   0D0A 13                 4228 	rrc	a
   0D0B E0                 4229 	movx	a,@dptr
   0D0C 92 E0              4230 	mov	acc.0,c
   0D0E F0                 4231 	movx	@dptr,a
                           4232 ;	../../shared/src/cal_top.c:817: if( ring_lane_sel )
   0D0F EA                 4233 	mov	a,r2
   0D10 70 03              4234 	jnz	00146$
   0D12 02s0Dr98           4235 	ljmp	00121$
   0D15                    4236 00146$:
                           4237 ;	../../shared/src/cal_top.c:819: if( phy_mode==SERDES ) { ring_pll_rate = 0; }
   0D15 90 A3 16           4238 	mov	dptr,#(_SYSTEM + 0x0002)
   0D18 E0                 4239 	movx	a,@dptr
   0D19 54 07              4240 	anl	a,#0x07
   0D1B FA                 4241 	mov	r2,a
   0D1C BA 04 02           4242 	cjne	r2,#0x04,00117$
   0D1F C2*00              4243 	clr	b1
   0D21                    4244 00117$:
                           4245 ;	../../shared/src/cal_top.c:821: if(ring_pll_enabled) {
   0D21 30*00 74           4246 	jnb	_ring_pll_enabled,00121$
                           4247 ;	../../shared/src/cal_top.c:822: pll_clk_ready_ring_0();
   0D24 C0*00              4248 	push	bits
   0D26 78r00              4249 	mov	r0,#_pll_clk_ready_ring_0
   0D28 79s00              4250 	mov	r1,#(_pll_clk_ready_ring_0 >> 8)
   0D2A 7As00              4251 	mov	r2,#(_pll_clk_ready_ring_0 >> 16)
   0D2C 12s00r00           4252 	lcall	__sdcc_banked_call
   0D2F D0*00              4253 	pop	bits
                           4254 ;	../../shared/src/cal_top.c:823: loadspeedtbl_ringpll(ring_pll_rate);
   0D31 A2*00              4255 	mov	c,b1
   0D33 E4                 4256 	clr	a
   0D34 33                 4257 	rlc	a
   0D35 F5 82              4258 	mov	dpl,a
   0D37 12s00r00           4259 	lcall	_loadspeedtbl_ringpll
                           4260 ;	../../shared/src/cal_top.c:838: reg_PLL_SPEED_RING_4_0 = 0x10;
   0D3A 90 83 00           4261 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_192
   0D3D E0                 4262 	movx	a,@dptr
   0D3E 54 07              4263 	anl	a,#0x07
   0D40 44 80              4264 	orl	a,#0x80
   0D42 F0                 4265 	movx	@dptr,a
                           4266 ;	../../shared/src/cal_top.c:839: reg_PLL_SLLP_DAC_COARSE_RING_3_0 = 0x8;
   0D43 90 83 04           4267 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0D46 E0                 4268 	movx	a,@dptr
   0D47 54 F0              4269 	anl	a,#0xf0
   0D49 44 08              4270 	orl	a,#0x08
   0D4B F0                 4271 	movx	@dptr,a
                           4272 ;	../../shared/src/cal_top.c:840: reg_PLL_SLLP_DAC_FINE_RING_10_8 = 0x3;
   0D4C 90 83 08           4273 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_194
   0D4F E0                 4274 	movx	a,@dptr
   0D50 54 1F              4275 	anl	a,#0x1f
   0D52 44 60              4276 	orl	a,#0x60
   0D54 F0                 4277 	movx	@dptr,a
                           4278 ;	../../shared/src/cal_top.c:841: reg_PLL_SLLP_DAC_FINE_RING_7_0 = 0x84;
   0D55 90 83 0C           4279 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_195
   0D58 74 84              4280 	mov	a,#0x84
   0D5A F0                 4281 	movx	@dptr,a
                           4282 ;	../../shared/src/cal_top.c:842: reg_PLL_SLLP_DAC_RANGE_SHIFT_RING_1_0 = 0;
   0D5B 90 83 04           4283 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0D5E E0                 4284 	movx	a,@dptr
   0D5F 54 CF              4285 	anl	a,#0xcf
   0D61 F0                 4286 	movx	@dptr,a
                           4287 ;	../../shared/src/cal_top.c:844: reg_ANA_PU_PLL_RING = 1;
   0D62 90 A3 24           4288 	mov	dptr,#_INPUT_CMN_PIN_REG2
   0D65 E0                 4289 	movx	a,@dptr
   0D66 44 20              4290 	orl	a,#0x20
   0D68 F0                 4291 	movx	@dptr,a
                           4292 ;	../../shared/src/cal_top.c:845: delay01(5);
   0D69 90 00 05           4293 	mov	dptr,#0x0005
   0D6C 78r00              4294 	mov	r0,#_delay01
   0D6E 79s00              4295 	mov	r1,#(_delay01 >> 8)
   0D70 7As00              4296 	mov	r2,#(_delay01 >> 16)
   0D72 12s00r00           4297 	lcall	__sdcc_banked_call
                           4298 ;	../../shared/src/cal_top.c:846: reg_ANA_PU_PLL_DLY_RING = 1;
   0D75 90 A3 4D           4299 	mov	dptr,#(_PM_CMN_REG2 + 0x0001)
   0D78 E0                 4300 	movx	a,@dptr
   0D79 44 04              4301 	orl	a,#0x04
   0D7B F0                 4302 	movx	@dptr,a
                           4303 ;	../../shared/src/cal_top.c:847: delay01(5);
   0D7C 90 00 05           4304 	mov	dptr,#0x0005
   0D7F 78r00              4305 	mov	r0,#_delay01
   0D81 79s00              4306 	mov	r1,#(_delay01 >> 8)
   0D83 7As00              4307 	mov	r2,#(_delay01 >> 16)
   0D85 12s00r00           4308 	lcall	__sdcc_banked_call
                           4309 ;	../../shared/src/cal_top.c:848: reg_RESET_ANA_RING = 0;
   0D88 90 A3 33           4310 	mov	dptr,#(_PLLCAL_REG1 + 0x0003)
   0D8B E0                 4311 	movx	a,@dptr
   0D8C 54 F7              4312 	anl	a,#0xf7
   0D8E F0                 4313 	movx	@dptr,a
                           4314 ;	../../shared/src/cal_top.c:853: pll_clk_ready_ring_1();
   0D8F 78r00              4315 	mov	r0,#_pll_clk_ready_ring_1
   0D91 79s00              4316 	mov	r1,#(_pll_clk_ready_ring_1 >> 8)
   0D93 7As00              4317 	mov	r2,#(_pll_clk_ready_ring_1 >> 16)
   0D95 12s00r00           4318 	lcall	__sdcc_banked_call
   0D98                    4319 00121$:
                           4320 ;	../../shared/src/cal_top.c:858: if(serdes_ring_lane_en==0)
   0D98 90s00r00           4321 	mov	dptr,#_serdes_ring_lane_en
   0D9B E0                 4322 	movx	a,@dptr
   0D9C FA                 4323 	mov	r2,a
   0D9D 70 09              4324 	jnz	00124$
                           4325 ;	../../shared/src/cal_top.c:859: check_pll_clk_ready();
   0D9F 78r00              4326 	mov	r0,#_check_pll_clk_ready
   0DA1 79s00              4327 	mov	r1,#(_check_pll_clk_ready >> 8)
   0DA3 7As00              4328 	mov	r2,#(_check_pll_clk_ready >> 16)
   0DA5 12s00r00           4329 	lcall	__sdcc_banked_call
   0DA8                    4330 00124$:
   0DA8 85*00 81           4331 	mov	sp,_bp
   0DAB D0*00              4332 	pop	_bp
   0DAD 02s00r00           4333 	ljmp	__sdcc_banked_ret
                           4334 ;------------------------------------------------------------
                           4335 ;Allocation info for local variables in function 'clear_normal_mode_cal_en'
                           4336 ;------------------------------------------------------------
                           4337 ;------------------------------------------------------------
                           4338 ;	../../shared/src/cal_top.c:883: void clear_normal_mode_cal_en(void) BANKING_CTRL {
                           4339 ;	-----------------------------------------
                           4340 ;	 function clear_normal_mode_cal_en
                           4341 ;	-----------------------------------------
   0DB0                    4342 _clear_normal_mode_cal_en:
                           4343 ;	../../shared/src/cal_top.c:894: TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE.VAL = 0x00040303;
   0DB0 90 26 64           4344 	mov	dptr,#_TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
   0DB3 74 03              4345 	mov	a,#0x03
   0DB5 F0                 4346 	movx	@dptr,a
   0DB6 A3                 4347 	inc	dptr
   0DB7 F0                 4348 	movx	@dptr,a
   0DB8 A3                 4349 	inc	dptr
   0DB9 74 04              4350 	mov	a,#0x04
   0DBB F0                 4351 	movx	@dptr,a
   0DBC A3                 4352 	inc	dptr
                           4353 ;	../../shared/src/cal_top.c:895: TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE.VAL = 0;
   0DBD E4                 4354 	clr	a
   0DBE F0                 4355 	movx	@dptr,a
   0DBF 90 26 64           4356 	mov	dptr,#_TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
   0DC2 F0                 4357 	movx	@dptr,a
   0DC3 A3                 4358 	inc	dptr
   0DC4 F0                 4359 	movx	@dptr,a
   0DC5 A3                 4360 	inc	dptr
   0DC6 F0                 4361 	movx	@dptr,a
   0DC7 A3                 4362 	inc	dptr
   0DC8 F0                 4363 	movx	@dptr,a
                           4364 ;	../../shared/src/cal_top.c:896: RX_LANE_INTERRUPT_REG1.BT.B3 = 0x60;
                           4365 ;	../../shared/src/cal_top.c:897: RX_LANE_INTERRUPT_REG1.BT.B3 = 0;
   0DC9 90 21 5B           4366 	mov	dptr,#(_RX_LANE_INTERRUPT_REG1 + 0x0003)
   0DCC 74 60              4367 	mov	a,#0x60
   0DCE F0                 4368 	movx	@dptr,a
   0DCF E4                 4369 	clr	a
   0DD0 F0                 4370 	movx	@dptr,a
                           4371 ;	../../shared/src/cal_top.c:899: if(reg_PIN_PLL_READY_RX_LANE==0 || reg_PIN_PLL_READY_TX_LANE==0) {
   0DD1 90 21 02           4372 	mov	dptr,#(_PM_CTRL_RX_LANE_REG1_LANE + 0x0002)
   0DD4 E0                 4373 	movx	a,@dptr
   0DD5 30 E6 07           4374 	jnb	acc.6,00101$
   0DD8 90 20 02           4375 	mov	dptr,#(_PM_CTRL_TX_LANE_REG1_LANE + 0x0002)
   0DDB E0                 4376 	movx	a,@dptr
   0DDC 20 E2 2E           4377 	jb	acc.2,00102$
   0DDF                    4378 00101$:
                           4379 ;	../../shared/src/cal_top.c:901: TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE.BT.B0 = 0x08; //APTA
                           4380 ;	../../shared/src/cal_top.c:902: TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE.BT.B0 = 0;
   0DDF 90 26 64           4381 	mov	dptr,#_TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
   0DE2 74 08              4382 	mov	a,#0x08
   0DE4 F0                 4383 	movx	@dptr,a
   0DE5 E4                 4384 	clr	a
   0DE6 F0                 4385 	movx	@dptr,a
                           4386 ;	../../shared/src/cal_top.c:908: TX_TRAIN_CTRL_LANE.VAL &= 0xa01f0002;
   0DE7 90 26 78           4387 	mov	dptr,#_TX_TRAIN_CTRL_LANE
   0DEA E0                 4388 	movx	a,@dptr
   0DEB FA                 4389 	mov	r2,a
   0DEC A3                 4390 	inc	dptr
   0DED E0                 4391 	movx	a,@dptr
   0DEE A3                 4392 	inc	dptr
   0DEF E0                 4393 	movx	a,@dptr
   0DF0 FC                 4394 	mov	r4,a
   0DF1 A3                 4395 	inc	dptr
   0DF2 E0                 4396 	movx	a,@dptr
   0DF3 FD                 4397 	mov	r5,a
   0DF4 53 02 02           4398 	anl	ar2,#0x02
   0DF7 7B 00              4399 	mov	r3,#0x00
   0DF9 53 04 1F           4400 	anl	ar4,#0x1F
   0DFC 53 05 A0           4401 	anl	ar5,#0xA0
   0DFF 90 26 78           4402 	mov	dptr,#_TX_TRAIN_CTRL_LANE
   0E02 EA                 4403 	mov	a,r2
   0E03 F0                 4404 	movx	@dptr,a
   0E04 A3                 4405 	inc	dptr
   0E05 EB                 4406 	mov	a,r3
   0E06 F0                 4407 	movx	@dptr,a
   0E07 A3                 4408 	inc	dptr
   0E08 EC                 4409 	mov	a,r4
   0E09 F0                 4410 	movx	@dptr,a
   0E0A A3                 4411 	inc	dptr
   0E0B ED                 4412 	mov	a,r5
   0E0C F0                 4413 	movx	@dptr,a
   0E0D                    4414 00102$:
                           4415 ;	../../shared/src/cal_top.c:1016: if(PHY_MCU_REMOTE_REQ_LANE) {
   0E0D 90 22 E4           4416 	mov	dptr,#_MCU_COMMAND0
   0E10 E0                 4417 	movx	a,@dptr
   0E11 30 E0 0D           4418 	jnb	acc.0,00105$
                           4419 ;	../../shared/src/cal_top.c:1017: lnx_PHY_LOCAL_STATUS_LANE_7_0 = 0x2; //NOT_VAILD
   0E14 90 60 2E           4420 	mov	dptr,#(_TRX_TRAIN_IF_TIMERS2_LANE + 0x0002)
   0E17 74 02              4421 	mov	a,#0x02
   0E19 F0                 4422 	movx	@dptr,a
                           4423 ;	../../shared/src/cal_top.c:1018: lnx_PHY_MCU_LOCAL_ACK_LANE = 1;
   0E1A 90 60 33           4424 	mov	dptr,#(_TRX_TRAIN_IF_TIMERS_ENABLE_LANE + 0x0003)
   0E1D E0                 4425 	movx	a,@dptr
   0E1E 44 01              4426 	orl	a,#0x01
   0E20 F0                 4427 	movx	@dptr,a
   0E21                    4428 00105$:
                           4429 ;	../../shared/src/cal_top.c:1032: if( cont_cal_on==0) return;
   0E21 20*00 03           4430 	jb	_cont_cal_on,00107$
   0E24 02s0ErBE           4431 	ljmp	00110$
   0E27                    4432 00107$:
                           4433 ;	../../shared/src/cal_top.c:1033: cont_cal_on = 0;
   0E27 C2*00              4434 	clr	_cont_cal_on
                           4435 ;	../../shared/src/cal_top.c:1036: if(mcuid== master_mcu) 
   0E29 90 22 00           4436 	mov	dptr,#_MCU_CONTROL_LANE
   0E2C E0                 4437 	movx	a,@dptr
   0E2D FA                 4438 	mov	r2,a
   0E2E 90 E6 50           4439 	mov	dptr,#_MCU_CONFIG
   0E31 E0                 4440 	movx	a,@dptr
   0E32 FB                 4441 	mov	r3,a
   0E33 EA                 4442 	mov	a,r2
   0E34 B5 03 09           4443 	cjne	a,ar3,00109$
                           4444 ;	../../shared/src/cal_top.c:1037: pll_temp_jump_idle();
   0E37 78r00              4445 	mov	r0,#_pll_temp_jump_idle
   0E39 79s00              4446 	mov	r1,#(_pll_temp_jump_idle >> 8)
   0E3B 7As00              4447 	mov	r2,#(_pll_temp_jump_idle >> 16)
   0E3D 12s00r00           4448 	lcall	__sdcc_banked_call
   0E40                    4449 00109$:
                           4450 ;	../../shared/src/cal_top.c:1038: reg_ALIGN90_SYN_CLK_LANE = 0;
   0E40 90 00 34           4451 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_13
   0E43 E0                 4452 	movx	a,@dptr
   0E44 54 FE              4453 	anl	a,#0xfe
   0E46 F0                 4454 	movx	@dptr,a
                           4455 ;	../../shared/src/cal_top.c:1039: reg_RXDCC_DAC_SYNC_CLK_LANE = 0;
   0E47 90 00 44           4456 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_17
   0E4A E0                 4457 	movx	a,@dptr
   0E4B 54 EF              4458 	anl	a,#0xef
   0E4D F0                 4459 	movx	@dptr,a
                           4460 ;	../../shared/src/cal_top.c:1040: reg_TRXDCC_CAL_CLK100KHZ_LANE = 0;
   0E4E 90 02 20           4461 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_136
   0E51 E0                 4462 	movx	a,@dptr
   0E52 54 FE              4463 	anl	a,#0xfe
   0E54 F0                 4464 	movx	@dptr,a
                           4465 ;	../../shared/src/cal_top.c:1041: reg_RXDCC_EN_DLLCLK_LANE = 0;
   0E55 90 02 18           4466 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_134
   0E58 E0                 4467 	movx	a,@dptr
   0E59 54 FE              4468 	anl	a,#0xfe
   0E5B F0                 4469 	movx	@dptr,a
                           4470 ;	../../shared/src/cal_top.c:1042: reg_RXDCC_EN_DATACLK_LANE = 0;
   0E5C 90 02 1C           4471 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_135
   0E5F E0                 4472 	movx	a,@dptr
   0E60 54 FE              4473 	anl	a,#0xfe
   0E62 F0                 4474 	movx	@dptr,a
                           4475 ;	../../shared/src/cal_top.c:1043: reg_RXDCC_EN_EOMCLK_LANE = 0;
   0E63 90 00 3C           4476 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_15
   0E66 E0                 4477 	movx	a,@dptr
   0E67 54 FD              4478 	anl	a,#0xfd
   0E69 F0                 4479 	movx	@dptr,a
                           4480 ;	../../shared/src/cal_top.c:1044: reg_RXDCC_HG_DLLCLK_LANE = 0;
   0E6A 90 02 1C           4481 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_135
   0E6D E0                 4482 	movx	a,@dptr
   0E6E 54 FD              4483 	anl	a,#0xfd
   0E70 F0                 4484 	movx	@dptr,a
                           4485 ;	../../shared/src/cal_top.c:1045: reg_RXDCC_HG_DATACLK_LANE = 0;
   0E71 90 02 20           4486 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_136
   0E74 E0                 4487 	movx	a,@dptr
   0E75 54 FD              4488 	anl	a,#0xfd
   0E77 F0                 4489 	movx	@dptr,a
                           4490 ;	../../shared/src/cal_top.c:1046: reg_RXDCC_HG_EOMCLK_LANE = 0;
   0E78 90 00 40           4491 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_16
   0E7B E0                 4492 	movx	a,@dptr
   0E7C 54 FD              4493 	anl	a,#0xfd
   0E7E F0                 4494 	movx	@dptr,a
                           4495 ;	../../shared/src/cal_top.c:1047: reg_TRX_IMPCAL_CLK = 0;
   0E7F 90 82 2C           4496 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_139
   0E82 E0                 4497 	movx	a,@dptr
   0E83 54 7F              4498 	anl	a,#0x7f
   0E85 F0                 4499 	movx	@dptr,a
                           4500 ;	../../shared/src/cal_top.c:1048: reg_LCPLL_DCC_CLK = 0;
   0E86 90 82 D8           4501 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_182
   0E89 E0                 4502 	movx	a,@dptr
   0E8A 54 FE              4503 	anl	a,#0xfe
   0E8C F0                 4504 	movx	@dptr,a
                           4505 ;	../../shared/src/cal_top.c:1049: reg_RXDCC_CAL_EN_LANE = 0;
   0E8D 90 00 40           4506 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_16
   0E90 E0                 4507 	movx	a,@dptr
   0E91 54 FE              4508 	anl	a,#0xfe
   0E93 F0                 4509 	movx	@dptr,a
                           4510 ;	../../shared/src/cal_top.c:1050: reg_TXDCCCAL_EN_LANE = 0;
   0E94 90 02 4C           4511 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_147
   0E97 E0                 4512 	movx	a,@dptr
   0E98 54 7F              4513 	anl	a,#0x7f
   0E9A F0                 4514 	movx	@dptr,a
                           4515 ;	../../shared/src/cal_top.c:1051: reg_TXDCCCAL_PDIV_EN_LANE = 0;
   0E9B 90 02 5C           4516 	mov	dptr,#_UPHY14_TRX_ANAREG_TOP_151
   0E9E E0                 4517 	movx	a,@dptr
   0E9F 54 FD              4518 	anl	a,#0xfd
   0EA1 F0                 4519 	movx	@dptr,a
                           4520 ;	../../shared/src/cal_top.c:1052: reg_TX_TDCAL_EN_LANE = 0;
   0EA2 90 00 60           4521 	mov	dptr,#_UPHY14_TRX_ANAREG_BOT_24
   0EA5 E0                 4522 	movx	a,@dptr
   0EA6 54 FD              4523 	anl	a,#0xfd
   0EA8 F0                 4524 	movx	@dptr,a
                           4525 ;	../../shared/src/cal_top.c:1053: reg_LCPLL_DCC_CAL_EN = 0;
   0EA9 90 82 DC           4526 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_183
   0EAC E0                 4527 	movx	a,@dptr
   0EAD 54 7F              4528 	anl	a,#0x7f
   0EAF F0                 4529 	movx	@dptr,a
                           4530 ;	../../shared/src/cal_top.c:1058: reg_PLL_SLLP_DAC_VALID_RING = 0;
   0EB0 90 83 04           4531 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0EB3 E0                 4532 	movx	a,@dptr
   0EB4 54 BF              4533 	anl	a,#0xbf
   0EB6 F0                 4534 	movx	@dptr,a
                           4535 ;	../../shared/src/cal_top.c:1059: reg_PLL_CAL_EN_RING = 0;
   0EB7 90 83 10           4536 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   0EBA E0                 4537 	movx	a,@dptr
   0EBB 54 7F              4538 	anl	a,#0x7f
   0EBD F0                 4539 	movx	@dptr,a
   0EBE                    4540 00110$:
   0EBE 02s00r00           4541 	ljmp	__sdcc_banked_ret
                           4542 	.area CSEG    (CODE)
                           4543 	.area CSEG    (CODE)
                           4544 	.area CABS    (ABS,CODE)
