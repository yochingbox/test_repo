                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (May 26 2011) (Linux)
                              4 ; This file was generated Thu Oct 18 21:21:47 2018
                              5 ;--------------------------------------------------------
                              6 	.module ring_pll_cal
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _TF2
                             13 	.globl _TI
                             14 	.globl _RI
                             15 	.globl _EX12
                             16 	.globl _EX11
                             17 	.globl _EX10
                             18 	.globl _EX9
                             19 	.globl _EX8
                             20 	.globl _ES1
                             21 	.globl _PS1
                             22 	.globl _EX6
                             23 	.globl _EX5
                             24 	.globl _EX4
                             25 	.globl _EX3
                             26 	.globl _EX2
                             27 	.globl _EX7
                             28 	.globl _EA
                             29 	.globl _WDT
                             30 	.globl _ET2
                             31 	.globl _ES
                             32 	.globl _ET1
                             33 	.globl _EX1
                             34 	.globl _ET0
                             35 	.globl _EX0
                             36 	.globl _TF1
                             37 	.globl _TR1
                             38 	.globl _TF0
                             39 	.globl _TR0
                             40 	.globl _IE1
                             41 	.globl _IT1
                             42 	.globl _IE0
                             43 	.globl _IT0
                             44 	.globl _P3_7
                             45 	.globl _P3_6
                             46 	.globl _P3_5
                             47 	.globl _P3_4
                             48 	.globl _P3_3
                             49 	.globl _P3_2
                             50 	.globl _P3_1
                             51 	.globl _P3_0
                             52 	.globl _P2_7
                             53 	.globl _P2_6
                             54 	.globl _P2_5
                             55 	.globl _P2_4
                             56 	.globl _P2_3
                             57 	.globl _P2_2
                             58 	.globl _P2_1
                             59 	.globl _P2_0
                             60 	.globl _P1_7
                             61 	.globl _P1_6
                             62 	.globl _P1_5
                             63 	.globl _P1_4
                             64 	.globl _P1_3
                             65 	.globl _P1_2
                             66 	.globl _P1_1
                             67 	.globl _P1_0
                             68 	.globl _P0_7
                             69 	.globl _P0_6
                             70 	.globl _P0_5
                             71 	.globl _P0_4
                             72 	.globl _P0_3
                             73 	.globl _P0_2
                             74 	.globl _P0_1
                             75 	.globl _P0_0
                             76 	.globl _DMAC
                             77 	.globl _DMATA
                             78 	.globl _DMASA
                             79 	.globl _TMR2
                             80 	.globl _TMR1
                             81 	.globl _TMR0
                             82 	.globl _SRST
                             83 	.globl _B
                             84 	.globl _EIE
                             85 	.globl _ACC
                             86 	.globl _ADCON
                             87 	.globl _PSW
                             88 	.globl _TH2
                             89 	.globl _TL2
                             90 	.globl _RCAP2H
                             91 	.globl _RCAP2L
                             92 	.globl _T2CON
                             93 	.globl _CCEN
                             94 	.globl _IRCON
                             95 	.globl _S0RELH
                             96 	.globl _IP1
                             97 	.globl _IEN1
                             98 	.globl _DMAM1
                             99 	.globl _DMAM0
                            100 	.globl _DMASEL
                            101 	.globl _DMAC2
                            102 	.globl _DMAC1
                            103 	.globl _DMAC0
                            104 	.globl _P3
                            105 	.globl _S0RELL
                            106 	.globl _IP0
                            107 	.globl _IEN0
                            108 	.globl _DMAT2
                            109 	.globl _DMAT1
                            110 	.globl _DMAT0
                            111 	.globl _DMAS2
                            112 	.globl _DMAS1
                            113 	.globl _DMAS0
                            114 	.globl _P2
                            115 	.globl _IEN2
                            116 	.globl _SBUF
                            117 	.globl _SCON
                            118 	.globl _PSBANK
                            119 	.globl _DPS
                            120 	.globl _P1
                            121 	.globl _CKCON
                            122 	.globl _TH1
                            123 	.globl _TH0
                            124 	.globl _TL1
                            125 	.globl _TL0
                            126 	.globl _TMOD
                            127 	.globl _TCON
                            128 	.globl _PCON
                            129 	.globl _WDTREL
                            130 	.globl _DPH
                            131 	.globl _DPL
                            132 	.globl _P0
                            133 	.globl _sq_thrs_ratio_tb
                            134 	.globl _train_save_tb
                            135 	.globl _tx_tb
                            136 	.globl _UPHY_ANAREG_REV_0
                            137 	.globl _dfe_sm_save
                            138 	.globl _dfe_sm_dc
                            139 	.globl _dfe_sm
                            140 	.globl _cds28
                            141 	.globl _lnx_calx_align90_gm
                            142 	.globl _lnx_calx_align90_dac
                            143 	.globl _lnx_calx_align90_dummy_clk
                            144 	.globl _lnx_calx_eom_dpher
                            145 	.globl _lnx_calx_vdda_dll_eom_sel
                            146 	.globl _lnx_calx_dll_eom_gmsel
                            147 	.globl _lnx_calx_vdda_dll_sel
                            148 	.globl _lnx_calx_dll_gmsel
                            149 	.globl _lnx_calx_rxdcc_dll_hg
                            150 	.globl _lnx_calx_rxdcc_dll
                            151 	.globl _lnx_calx_txdcc_hg
                            152 	.globl _lnx_calx_txdcc
                            153 	.globl _lnx_calx_txdcc_pdiv_hg
                            154 	.globl _lnx_calx_txdcc_pdiv
                            155 	.globl _lnx_spdoft_tx_preset_index_lane
                            156 	.globl _lnx_cal_sellv_rxeomclk
                            157 	.globl _lnx_cal_sellv_rxsampler
                            158 	.globl _lnx_cal_sellv_txpre
                            159 	.globl _lnx_cal_sellv_rxdataclk
                            160 	.globl _lnx_cal_sellv_txclk
                            161 	.globl _lnx_cal_sellv_txdata
                            162 	.globl _lnx_cal_align90_gm
                            163 	.globl _lnx_cal_align90_dac
                            164 	.globl _lnx_cal_align90_dummy_clk
                            165 	.globl _lnx_cal_eom_dpher
                            166 	.globl _lnx_cal_vdda_dll_eom_sel
                            167 	.globl _lnx_cal_dll_eom_gmsel
                            168 	.globl _lnx_cal_vdda_dll_sel
                            169 	.globl _lnx_cal_dll_gmsel
                            170 	.globl _lnx_cal_rxdcc_eom_hg
                            171 	.globl _lnx_cal_rxdcc_eom
                            172 	.globl _lnx_cal_rxdcc_data_hg
                            173 	.globl _lnx_cal_rxdcc_data
                            174 	.globl _lnx_cal_rxdcc_dll_hg
                            175 	.globl _lnx_cal_rxdcc_dll
                            176 	.globl _lnx_cal_txdcc_hg
                            177 	.globl _lnx_cal_txdcc
                            178 	.globl _lnx_cal_txdcc_pdiv_hg
                            179 	.globl _lnx_cal_txdcc_pdiv
                            180 	.globl _cmx_cal_sllp_dac_fine_ring
                            181 	.globl _cmx_cal_pll_sllp_dac_coarse_ring
                            182 	.globl _cmx_cal_pll_speed_ring
                            183 	.globl _cmx_cal_plldcc
                            184 	.globl _cmx_cal_lccap_lsb
                            185 	.globl _cmx_cal_lccap_msb
                            186 	.globl _cmx_cal_lcvco_dac_msb
                            187 	.globl _cmx_cal_lcvco_dac_lsb
                            188 	.globl _cmx_cal_lcvco_dac
                            189 	.globl _local_tx_preset_tb
                            190 	.globl _train_g0_index
                            191 	.globl _train_g1_index
                            192 	.globl _train_gn1_index
                            193 	.globl _phase_save
                            194 	.globl _txffe_save
                            195 	.globl _rc_save
                            196 	.globl _phy_mode_lane_table
                            197 	.globl _speedtable
                            198 	.globl _min_gen
                            199 	.globl _max_gen
                            200 	.globl _phy_mode_cmn_table
                            201 	.globl _ring_speedtable
                            202 	.globl _lc_speedtable
                            203 	.globl _TXTRAIN_IF_REG0
                            204 	.globl _CDS_READ_MISC1
                            205 	.globl _CDS_READ_MISC0
                            206 	.globl _DFE_READ_F0D_RIGHT_ODD
                            207 	.globl _DFE_READ_F0D_RIGHT_EVEN
                            208 	.globl _DFE_READ_F0D_LEFT_ODD
                            209 	.globl _DFE_READ_F0D_LEFT_EVEN
                            210 	.globl _DFE_READ_F0D_ODD
                            211 	.globl _DFE_READ_F0D_EVEN
                            212 	.globl _DFE_READ_F0B_ODD
                            213 	.globl _DFE_READ_F0B_EVEN
                            214 	.globl _DFE_READ_F0A_ODD
                            215 	.globl _DFE_READ_F0A_EVEN
                            216 	.globl _DFE_READ_ODD_REG8
                            217 	.globl _DFE_READ_EVEN_REG8
                            218 	.globl _DFE_READ_ODD_REG7
                            219 	.globl _DFE_READ_ODD_REG6
                            220 	.globl _DFE_READ_ODD_REG5
                            221 	.globl _DFE_READ_ODD_REG4
                            222 	.globl _DFE_READ_ODD_REG3
                            223 	.globl _DFE_READ_ODD_REG2
                            224 	.globl _DFE_READ_ODD_REG1
                            225 	.globl _DFE_READ_ODD_REG0
                            226 	.globl _DFE_READ_EVEN_REG7
                            227 	.globl _DFE_READ_EVEN_REG6
                            228 	.globl _DFE_READ_EVEN_REG5
                            229 	.globl _DFE_READ_EVEN_REG4
                            230 	.globl _DFE_READ_EVEN_REG3
                            231 	.globl _DFE_READ_EVEN_REG2
                            232 	.globl _DFE_READ_EVEN_REG1
                            233 	.globl _DFE_READ_EVEN_REG0
                            234 	.globl _TX_TRAIN_IF_REG8
                            235 	.globl _TX_TRAIN_CTRL_LANE
                            236 	.globl _TX_TRAIN_IF_REG7
                            237 	.globl _TX_TRAIN_IF_REG6
                            238 	.globl _TX_TRAIN_IF_REG5
                            239 	.globl _TX_TRAIN_IF_REG4
                            240 	.globl _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE
                            241 	.globl _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE
                            242 	.globl _TRX_TRAIN_IF_INTERRUPT_LANE
                            243 	.globl _TX_AMP_CTRL_REG0
                            244 	.globl _TX_DRV_RD_OUT_REG0
                            245 	.globl _LINK_TRAIN_MODE0
                            246 	.globl _TX_EMPH_CTRL_REG0
                            247 	.globl _TX_TRAIN_DEFAULT_REG5
                            248 	.globl _TX_TRAIN_DEFAULT_REG4
                            249 	.globl _TX_TRAIN_DEFAULT_REG3
                            250 	.globl _TX_TRAIN_DEFAULT_REG2
                            251 	.globl _TX_TRAIN_DEFAULT_REG1
                            252 	.globl _TX_TRAIN_DEFAULT_REG0
                            253 	.globl _TX_TRAIN_DRIVER_REG2
                            254 	.globl _TX_TRAIN_DRIVER_REG1
                            255 	.globl _TX_TRAIN_DRIVER_REG0
                            256 	.globl _TX_TRAIN_PATTTERN_REG0
                            257 	.globl _TX_TRAIN_IF_REG3
                            258 	.globl _TX_TRAIN_IF_REG2
                            259 	.globl _TX_TRAIN_IF_REG1
                            260 	.globl _TX_TRAIN_IF_REG0
                            261 	.globl _DME_DEC_REG1
                            262 	.globl _DME_DEC_REG0
                            263 	.globl _DME_ENC_REG2
                            264 	.globl _DME_ENC_REG1
                            265 	.globl _DME_ENC_REG0
                            266 	.globl _END_XDAT_CMN
                            267 	.globl _MCU_INFO_13
                            268 	.globl _MCU_INFO_12
                            269 	.globl _MCU_INFO_5
                            270 	.globl _MCU_INFO_4
                            271 	.globl _SYNC_INFO
                            272 	.globl _CDS_EYE_CLK_THR
                            273 	.globl _TX_SAVE_4
                            274 	.globl _TX_SAVE_3
                            275 	.globl _TX_SAVE_2
                            276 	.globl _TX_SAVE_1
                            277 	.globl _TX_SAVE_0
                            278 	.globl _ETH_PRESET1_TB
                            279 	.globl _ETH_PRESET0_TB
                            280 	.globl _SAS_PRESET2_TB
                            281 	.globl _SAS_PRESET1_TB
                            282 	.globl _SAS_PRESET0_TB
                            283 	.globl _G_SELLV_RXSAMPLER
                            284 	.globl _G_SELLV_RXDATACLK
                            285 	.globl _G_SELLV_RXEOMCLK
                            286 	.globl _G_SELLV_TXPRE
                            287 	.globl _G_SELLV_TXDATA
                            288 	.globl _G_SELLV_TXCLK
                            289 	.globl _TIMER_SEL3
                            290 	.globl _TIMER_SEL2
                            291 	.globl _TIMER_SEL1
                            292 	.globl _MCU_CONFIG1
                            293 	.globl _LOOP_CNTS
                            294 	.globl _CAL_DATA1
                            295 	.globl _MCU_CONFIG
                            296 	.globl _CAL_STATUS_READ
                            297 	.globl _CAL_TIME_OUT_AND_DIS
                            298 	.globl _CON_CAL_STEP_SIZE5
                            299 	.globl _CON_CAL_STEP_SIZE4
                            300 	.globl _CON_CAL_STEP_SIZE3
                            301 	.globl _CON_CAL_STEP_SIZE2
                            302 	.globl _CON_CAL_STEP_SIZE1
                            303 	.globl _CONTROL_CONFIG9
                            304 	.globl _CONTROL_CONFIG8
                            305 	.globl _TRAIN_IF_CONFIG
                            306 	.globl _CAL_DATA0
                            307 	.globl _CONTROL_CONFIG7
                            308 	.globl _CONTROL_CONFIG6
                            309 	.globl _CONTROL_CONFIG5
                            310 	.globl _CONTROL_CONFIG4
                            311 	.globl _CONTROL_CONFIG3
                            312 	.globl _CONTROL_CONFIG2
                            313 	.globl _CONTROL_CONFIG1
                            314 	.globl _CONTROL_CONFIG0
                            315 	.globl _FW_REV
                            316 	.globl _CID_REG1
                            317 	.globl _CID_REG0
                            318 	.globl _CMN_MCU_REG
                            319 	.globl _SET_LANE_ISR
                            320 	.globl _CMN_ISR_MASK_1
                            321 	.globl _CMN_ISR_1
                            322 	.globl _CMN_MCU_TIMER3_CONTROL
                            323 	.globl _CMN_MCU_TIMER2_CONTROL
                            324 	.globl _CMN_MCU_TIMER1_CONTROL
                            325 	.globl _CMN_MCU_TIMER0_CONTROL
                            326 	.globl _CMN_MCU_TIMER_CTRL_5_LANE
                            327 	.globl _CMN_MCU_TIMER_CTRL_4_LANE
                            328 	.globl _CMN_MCU_TIMER_CTRL_3_LANE
                            329 	.globl _CMN_MCU_TIMER_CTRL_2_LANE
                            330 	.globl _CMN_MCU_TIMER_CONTROL
                            331 	.globl _CMN_CACHE_DEBUG1
                            332 	.globl _CMN_MCU_GPIO
                            333 	.globl _CMN_ISR_CLEAR_2
                            334 	.globl _CMN_ISR_MASK_2
                            335 	.globl _CMN_ISR_2
                            336 	.globl _MCU_INT_ADDR
                            337 	.globl _CMN_CACHE_DEBUG0
                            338 	.globl _MCU_SDT_CMN
                            339 	.globl _XDATA_MEM_CHECKSUM_CMN_2
                            340 	.globl _XDATA_MEM_CHECKSUM_CMN_1
                            341 	.globl _XDATA_MEM_CHECKSUM_CMN_0
                            342 	.globl _TEST5
                            343 	.globl _PM_CMN_REG2
                            344 	.globl _INPUT_CMN_PIN_REG3
                            345 	.globl __FIELDNAME_
                            346 	.globl _CMN_CALIBRATION
                            347 	.globl _OUTPUT_CMN_PIN_REG0
                            348 	.globl _SPD_CMN_REG1
                            349 	.globl _CLKGEN_CMN_REG1
                            350 	.globl _PLLCAL_REG1
                            351 	.globl _PLLCAL_REG0
                            352 	.globl _ANA_TSEN_CONTROL
                            353 	.globl _INPUT_CMN_PIN_REG2
                            354 	.globl _INPUT_CMN_PIN_REG1
                            355 	.globl _INPUT_CMN_PIN_REG0
                            356 	.globl _PM_CMN_REG1
                            357 	.globl _SYSTEM
                            358 	.globl _TEST4
                            359 	.globl _TEST3
                            360 	.globl _TEST2
                            361 	.globl _TEST1
                            362 	.globl _TEST0
                            363 	.globl _MCU_SYNC2
                            364 	.globl _MCU_SYNC1
                            365 	.globl _MEM_IRQ_CLEAR
                            366 	.globl _APB_CONTROL_REG
                            367 	.globl _ANA_IF_CMN_REG0
                            368 	.globl _MEM_IRQ_MASK
                            369 	.globl _MEM_IRQ
                            370 	.globl _ANA_IF_CMN_REG1
                            371 	.globl _MEM_CMN_ECC_ERR_ADDRESS0
                            372 	.globl _MCU_INFO_3
                            373 	.globl _MCU_INFO_2
                            374 	.globl _MCU_INFO_1
                            375 	.globl _MCU_INFO_0
                            376 	.globl _MEMORY_CONTROL_4
                            377 	.globl _MEMORY_CONTROL_3
                            378 	.globl _MEMORY_CONTROL_2
                            379 	.globl _MEMORY_CONTROL_1
                            380 	.globl _MEMORY_CONTROL_0
                            381 	.globl _MCU_DEBUG1
                            382 	.globl _MCU_DEBUG0
                            383 	.globl _MCU_CONTROL_4
                            384 	.globl _MCU_CONTROL_3
                            385 	.globl _MCU_CONTROL_2
                            386 	.globl _MCU_CONTROL_1
                            387 	.globl _MCU_CONTROL_0
                            388 	.globl _GLOB_L1_SUBSTATES_CFG
                            389 	.globl _GLOB_PIPE_REVISION
                            390 	.globl _GLOB_BIST_DATA_HI
                            391 	.globl _GLOB_BIST_SEQR_CFG
                            392 	.globl _GLOB_BIST_RESULT
                            393 	.globl _GLOB_BIST_MASK
                            394 	.globl _GLOB_BIST_START
                            395 	.globl _GLOB_BIST_LANE_TYPE
                            396 	.globl _GLOB_BIST_CTRL
                            397 	.globl _GLOB_DP_BAL_CFG4
                            398 	.globl _GLOB_DP_BAL_CFG2
                            399 	.globl _GLOB_DP_BAL_CFG0
                            400 	.globl _GLOB_PM_DP_CTRL
                            401 	.globl _GLOB_COUNTER_HI
                            402 	.globl _GLOB_COUNTER_CTRL
                            403 	.globl _GLOB_PM_CFG0
                            404 	.globl _GLOB_DP_SAL_CFG5
                            405 	.globl _GLOB_DP_SAL_CFG3
                            406 	.globl _GLOB_DP_SAL_CFG1
                            407 	.globl _GLOB_DP_SAL_CFG
                            408 	.globl _GLOB_MISC_CTRL
                            409 	.globl _GLOB_CLK_SRC_HI
                            410 	.globl _GLOB_CLK_SRC_LO
                            411 	.globl _GLOB_RST_CLK_CTRL
                            412 	.globl _DFE_STATIC_REG6
                            413 	.globl _DFE_STATIC_REG5
                            414 	.globl _DFE_STATIC_REG4
                            415 	.globl _DFE_STATIC_REG3
                            416 	.globl _DFE_STATIC_REG1
                            417 	.globl _DFE_STATIC_REG0
                            418 	.globl _RX_CMN_0
                            419 	.globl _SRIS_REG1
                            420 	.globl _SRIS_REG0
                            421 	.globl _DTX_PHY_ALIGN_REG2
                            422 	.globl _DTX_PHY_ALIGN_REG1
                            423 	.globl _DTX_PHY_ALIGN_REG0
                            424 	.globl _DTX_REG4
                            425 	.globl _DTX_REG3
                            426 	.globl _DTX_REG2
                            427 	.globl _DTX_REG1
                            428 	.globl _DTX_REG0
                            429 	.globl _TX_CMN_REG
                            430 	.globl _END_XDAT_LANE
                            431 	.globl _TRAIN_CONTROL_17
                            432 	.globl _TRAIN_CONTROL_16
                            433 	.globl _TRAIN_CONTROL_15
                            434 	.globl _TRAIN_CONTROL_14
                            435 	.globl _TRAIN_CONTROL_13
                            436 	.globl _ESM_ERR_N_CNT_LOW_LANE
                            437 	.globl _ESM_POP_N_CNT_LOW_LANE
                            438 	.globl _TRAIN_CONTROL_12
                            439 	.globl _TRAIN_CONTROL_11
                            440 	.globl _TRAIN_CONTROL_10
                            441 	.globl _TRAIN_CONTROL_9
                            442 	.globl _TRAIN_CONTROL_8
                            443 	.globl _TRAIN_CONTROL_7
                            444 	.globl _TRAIN_CONTROL_6
                            445 	.globl _TRAIN_CONTROL_5
                            446 	.globl _TRAIN_CONTROL_4
                            447 	.globl _TRAIN_CONTROL_3
                            448 	.globl _ESM_ERR_POP_CNT_HIGH_LANE
                            449 	.globl _ESM_ERR_P_CNT_LOW_LANE
                            450 	.globl _ESM_POP_P_CNT_LOW_LANE
                            451 	.globl _CDS_CTRL_REG1
                            452 	.globl _CDS_CTRL_REG0
                            453 	.globl _DFE_CONTROL_11
                            454 	.globl _DFE_CONTROL_10
                            455 	.globl _DFE_CONTROL_9
                            456 	.globl _DFE_CONTROL_8
                            457 	.globl _DFE_CONTROL_7
                            458 	.globl _DFE_TEST_5
                            459 	.globl _DFE_TEST_4
                            460 	.globl _DFE_TEST_1
                            461 	.globl _DFE_TEST_0
                            462 	.globl _DFE_CONTROL_6
                            463 	.globl _TRAIN_PARA_3
                            464 	.globl _TRAIN_PARA_2
                            465 	.globl _TRAIN_PARA_1
                            466 	.globl _TRAIN_PARA_0
                            467 	.globl _DLL_CAL
                            468 	.globl _RPTA_CONFIG_1
                            469 	.globl _RPTA_CONFIG_0
                            470 	.globl _TRAIN_CONTROL_2
                            471 	.globl _TRAIN_CONTROL_1
                            472 	.globl _TRAIN_CONTROL_0
                            473 	.globl _DFE_CONTROL_5
                            474 	.globl _DFE_CONTROL_4
                            475 	.globl _DFE_CONTROL_3
                            476 	.globl _DFE_CONTROL_2
                            477 	.globl _DFE_CONTROL_1
                            478 	.globl _DFE_CONTROL_0
                            479 	.globl _TRX_TRAIN_IF_TIMERS_ENABLE_LANE
                            480 	.globl _TRX_TRAIN_IF_TIMERS2_LANE
                            481 	.globl _TRX_TRAIN_IF_TIMERS1_LANE
                            482 	.globl _PHY_LOCAL_VALUE_LANE
                            483 	.globl _PHY_REMOTE_CTRL_VALUE_LANE
                            484 	.globl _PHY_REMOTE_CTRL_COMMAND_LANE
                            485 	.globl _CAL_SAVE_DATA3_LANE
                            486 	.globl _CAL_SAVE_DATA2_LANE
                            487 	.globl _CAL_SAVE_DATA1_LANE
                            488 	.globl _CAL_CTRL4_LANE
                            489 	.globl _CAL_CTRL3_LANE
                            490 	.globl _CAL_CTRL2_LANE
                            491 	.globl _CAL_CTRL1_LANE
                            492 	.globl _LANE_MARGIN_REG0
                            493 	.globl _EOM_VLD_REG4
                            494 	.globl _EOM_REG0
                            495 	.globl _EOM_ERR_REG3
                            496 	.globl _EOM_ERR_REG2
                            497 	.globl _EOM_ERR_REG1
                            498 	.globl _EOM_ERR_REG0
                            499 	.globl _EOM_VLD_REG3
                            500 	.globl _EOM_VLD_REG2
                            501 	.globl _EOM_VLD_REG1
                            502 	.globl _EOM_VLD_REG0
                            503 	.globl _DFE_STATIC_LANE_REG6
                            504 	.globl _DFE_STATIC_LANE_REG5
                            505 	.globl _DFE_STATIC_LANE_REG4
                            506 	.globl _DFE_STATIC_LANE_REG3
                            507 	.globl _DFE_STATIC_LANE_REG1
                            508 	.globl _DFE_STATIC_LANE_REG0
                            509 	.globl _DFE_DCE_REG0
                            510 	.globl _CAL_OFST_REG2
                            511 	.globl _CAL_OFST_REG1
                            512 	.globl _CAL_OFST_REG0
                            513 	.globl _DFE_READ_ODD_2C_REG8
                            514 	.globl _DFE_READ_EVEN_2C_REG8
                            515 	.globl _DFE_READ_ODD_2C_REG7
                            516 	.globl _DFE_READ_ODD_2C_REG6
                            517 	.globl _DFE_READ_ODD_2C_REG5
                            518 	.globl _DFE_READ_ODD_2C_REG4
                            519 	.globl _DFE_READ_ODD_2C_REG3
                            520 	.globl _DFE_READ_ODD_2C_REG2
                            521 	.globl _DFE_READ_ODD_2C_REG1
                            522 	.globl _DFE_READ_ODD_2C_REG0
                            523 	.globl _DFE_READ_EVEN_2C_REG7
                            524 	.globl _DFE_READ_EVEN_2C_REG6
                            525 	.globl _DFE_READ_EVEN_2C_REG5
                            526 	.globl _DFE_READ_EVEN_2C_REG4
                            527 	.globl _DFE_READ_EVEN_2C_REG3
                            528 	.globl _DFE_READ_EVEN_2C_REG2
                            529 	.globl _DFE_READ_EVEN_2C_REG1
                            530 	.globl _DFE_READ_EVEN_2C_REG0
                            531 	.globl _DFE_READ_ODD_SM_REG8
                            532 	.globl _DFE_READ_EVEN_SM_REG8
                            533 	.globl _DFE_READ_ODD_SM_REG7
                            534 	.globl _DFE_READ_ODD_SM_REG6
                            535 	.globl _DFE_READ_ODD_SM_REG5
                            536 	.globl _DFE_READ_ODD_SM_REG4
                            537 	.globl _DFE_READ_ODD_SM_REG3
                            538 	.globl _DFE_READ_ODD_SM_REG2
                            539 	.globl _DFE_READ_ODD_SM_REG1
                            540 	.globl _DFE_READ_ODD_SM_REG0
                            541 	.globl _DFE_READ_EVEN_SM_REG7
                            542 	.globl _DFE_READ_EVEN_SM_REG6
                            543 	.globl _DFE_READ_EVEN_SM_REG5
                            544 	.globl _DFE_READ_EVEN_SM_REG4
                            545 	.globl _DFE_READ_EVEN_SM_REG3
                            546 	.globl _DFE_READ_EVEN_SM_REG2
                            547 	.globl _DFE_READ_EVEN_SM_REG1
                            548 	.globl _DFE_READ_EVEN_SM_REG0
                            549 	.globl _DFE_FEXT_ODD_REG7
                            550 	.globl _DFE_FEXT_ODD_REG6
                            551 	.globl _DFE_FEXT_ODD_REG5
                            552 	.globl _DFE_FEXT_ODD_REG4
                            553 	.globl _DFE_FEXT_ODD_REG3
                            554 	.globl _DFE_FEXT_ODD_REG2
                            555 	.globl _DFE_FEXT_ODD_REG1
                            556 	.globl _DFE_FEXT_ODD_REG0
                            557 	.globl _DFE_FEXT_EVEN_REG7
                            558 	.globl _DFE_FEXT_EVEN_REG6
                            559 	.globl _DFE_FEXT_EVEN_REG5
                            560 	.globl _DFE_FEXT_EVEN_REG4
                            561 	.globl _DFE_FEXT_EVEN_REG3
                            562 	.globl _DFE_FEXT_EVEN_REG2
                            563 	.globl _DFE_FEXT_EVEN_REG1
                            564 	.globl _DFE_FEXT_EVEN_REG0
                            565 	.globl _DFE_DC_ODD_REG8
                            566 	.globl _DFE_DC_EVEN_REG8
                            567 	.globl _DFE_FEN_ODD_REG
                            568 	.globl _DFE_FEN_EVEN_REG
                            569 	.globl _DFE_STEP_REG1
                            570 	.globl _DFE_STEP_REG0
                            571 	.globl _DFE_ANA_REG1
                            572 	.globl _DFE_ANA_REG0
                            573 	.globl _DFE_CTRL_REG4
                            574 	.globl _RX_EQ_CLK_CTRL
                            575 	.globl _DFE_CTRL_REG3
                            576 	.globl _DFE_CTRL_REG2
                            577 	.globl _DFE_CTRL_REG1
                            578 	.globl _DFE_CTRL_REG0
                            579 	.globl _PT_COUNTER2
                            580 	.globl _PT_COUNTER1
                            581 	.globl _PT_COUNTER0
                            582 	.globl _PT_USER_PATTERN2
                            583 	.globl _PT_USER_PATTERN1
                            584 	.globl _PT_USER_PATTERN0
                            585 	.globl _PT_CONTROL1
                            586 	.globl _PT_CONTROL0
                            587 	.globl _XDATA_MEM_CHECKSUM_LANE1
                            588 	.globl _XDATA_MEM_CHECKSUM_LANE0
                            589 	.globl _MEM_ECC_ERR_ADDRESS0
                            590 	.globl _MCU_COMMAND0
                            591 	.globl _MCU_INT_CONTROL_13
                            592 	.globl _MCU_WDT_LANE
                            593 	.globl _MCU_IRQ_ISR_LANE
                            594 	.globl _ANA_IF_DFEO_REG0
                            595 	.globl _ANA_IF_DFEE_REG0
                            596 	.globl _ANA_IF_TRX_REG0
                            597 	.globl _EXT_INT_CONTROL
                            598 	.globl _MCU_DEBUG_LANE
                            599 	.globl _MCU_DEBUG3_LANE
                            600 	.globl _MCU_DEBUG2_LANE
                            601 	.globl _MCU_DEBUG1_LANE
                            602 	.globl _MCU_DEBUG0_LANE
                            603 	.globl _MCU_TIMER_CTRL_7_LANE
                            604 	.globl _MCU_TIMER_CTRL_6_LANE
                            605 	.globl _MCU_TIMER_CTRL_5_LANE
                            606 	.globl _MCU_TIMER_CTRL_4_LANE
                            607 	.globl _MCU_TIMER_CTRL_3_LANE
                            608 	.globl _MCU_TIMER_CTRL_2_LANE
                            609 	.globl _MCU_TIMER_CTRL_1_LANE
                            610 	.globl _MCU_MEM_REG2_LANE
                            611 	.globl _MCU_MEM_REG1_LANE
                            612 	.globl _MCU_IRQ_MASK_LANE
                            613 	.globl _MCU_IRQ_LANE
                            614 	.globl _MCU_TIMER3_CONTROL
                            615 	.globl _MCU_TIMER2_CONTROL
                            616 	.globl _MCU_TIMER1_CONTROL
                            617 	.globl _MCU_TIMER0_CONTROL
                            618 	.globl _MCU_TIMER_CONTROL
                            619 	.globl _MCU_INT12_CONTROL
                            620 	.globl _MCU_INT11_CONTROL
                            621 	.globl _MCU_INT10_CONTROL
                            622 	.globl _MCU_INT9_CONTROL
                            623 	.globl _MCU_INT8_CONTROL
                            624 	.globl _MCU_INT7_CONTROL
                            625 	.globl _MCU_INT6_CONTROL
                            626 	.globl _MCU_INT5_CONTROL
                            627 	.globl _MCU_INT4_CONTROL
                            628 	.globl _MCU_INT3_CONTROL
                            629 	.globl _MCU_INT2_CONTROL
                            630 	.globl _MCU_INT1_CONTROL
                            631 	.globl _MCU_INT0_CONTROL
                            632 	.globl _MCU_STATUS3_LANE
                            633 	.globl _MCU_STATUS2_LANE
                            634 	.globl _MCU_STATUS1_LANE
                            635 	.globl _MCU_STATUS0_LANE
                            636 	.globl _LANE_SYSTEM0
                            637 	.globl _CACHE_DEBUG1
                            638 	.globl _CACHE_DEBUG0
                            639 	.globl _MCU_GPIO
                            640 	.globl _MCU_CONTROL_LANE
                            641 	.globl _LANE_32G_PRESET_CFG16_LANE
                            642 	.globl _LANE_32G_PRESET_CFG14_LANE
                            643 	.globl _LANE_32G_PRESET_CFG12_LANE
                            644 	.globl _LANE_32G_PRESET_CFG10_LANE
                            645 	.globl _LANE_32G_PRESET_CFG8_LANE
                            646 	.globl _LANE_32G_PRESET_CFG6_LANE
                            647 	.globl _LANE_32G_PRESET_CFG4_LANE
                            648 	.globl _LANE_32G_PRESET_CFG2_LANE
                            649 	.globl _LANE_32G_PRESET_CFG0_LANE
                            650 	.globl _LANE_EQ_32G_CFG0_LANE
                            651 	.globl _LANE_16G_PRESET_CFG16_LANE
                            652 	.globl _LANE_16G_PRESET_CFG14_LANE
                            653 	.globl _LANE_16G_PRESET_CFG12_LANE
                            654 	.globl _LANE_16G_PRESET_CFG10_LANE
                            655 	.globl _LANE_16G_PRESET_CFG8_LANE
                            656 	.globl _LANE_16G_PRESET_CFG6_LANE
                            657 	.globl _LANE_16G_PRESET_CFG4_LANE
                            658 	.globl _LANE_16G_PRESET_CFG2_LANE
                            659 	.globl _LANE_16G_PRESET_CFG0_LANE
                            660 	.globl _LANE_EQ_16G_CFG0_LANE
                            661 	.globl _LANE_REMOTE_SET_LANE
                            662 	.globl _LANE_COEFF_MAX0_LANE
                            663 	.globl _LANE_PRESET_CFG16_LANE
                            664 	.globl _LANE_PRESET_CFG14_LANE
                            665 	.globl _LANE_PRESET_CFG12_LANE
                            666 	.globl _LANE_PRESET_CFG10_LANE
                            667 	.globl _LANE_PRESET_CFG8_LANE
                            668 	.globl _LANE_PRESET_CFG6_LANE
                            669 	.globl _LANE_PRESET_CFG4_LANE
                            670 	.globl _LANE_PRESET_CFG2_LANE
                            671 	.globl _LANE_PRESET_CFG0_LANE
                            672 	.globl _LANE_EQ_CFG1_LANE
                            673 	.globl _LANE_EQ_CFG0_LANE
                            674 	.globl _LANE_USB_DP_CFG2_LANE
                            675 	.globl _LANE_USB_DP_CFG1_LANE
                            676 	.globl _LANE_DP_PIE8_CFG0_LANE
                            677 	.globl _LANE_CFG_STATUS3_LANE
                            678 	.globl _LANE_CFG4
                            679 	.globl _LANE_CFG2_LANE
                            680 	.globl _LANE_CFG_STATUS2_LANE
                            681 	.globl _LANE_STATUS0
                            682 	.globl _LANE_CFG0
                            683 	.globl _SQ_REG0
                            684 	.globl _DTL_REG3
                            685 	.globl _DTL_REG2
                            686 	.globl _DTL_REG1
                            687 	.globl _DTL_REG0
                            688 	.globl _RX_LANE_INTERRUPT_REG1
                            689 	.globl _RX_CALIBRATION_REG
                            690 	.globl _INPUT_RX_PIN_REG3_LANE
                            691 	.globl _RX_DATA_PATH_REG
                            692 	.globl _RX_LANE_INTERRUPT_MASK
                            693 	.globl _RX_LANE_INTERRUPT
                            694 	.globl _CDR_LOCK_REG
                            695 	.globl _FRAME_SYNC_DET_REG6
                            696 	.globl _FRAME_SYNC_DET_REG5
                            697 	.globl _FRAME_SYNC_DET_REG4
                            698 	.globl _FRAME_SYNC_DET_REG3
                            699 	.globl _FRAME_SYNC_DET_REG2
                            700 	.globl _FRAME_SYNC_DET_REG1
                            701 	.globl _FRAME_SYNC_DET_REG0
                            702 	.globl _CLKGEN_RX_LANE_REG1_LANE
                            703 	.globl _DIG_RX_RSVD_REG0
                            704 	.globl _SPD_CTRL_RX_LANE_REG1_LANE
                            705 	.globl _INPUT_RX_PIN_REG2_LANE
                            706 	.globl _INPUT_RX_PIN_REG1_LANE
                            707 	.globl _INPUT_RX_PIN_REG0_LANE
                            708 	.globl _RX_SYSTEM_LANE
                            709 	.globl _PM_CTRL_RX_LANE_REG1_LANE
                            710 	.globl _MON_TOP
                            711 	.globl _ANALOG_TX_REALTIME_REG_1
                            712 	.globl _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE
                            713 	.globl _PM_CTRL_INTERRUPT_ISR_REG1_LANE
                            714 	.globl __FIELDNAME__LANE
                            715 	.globl _INPUT_TX_PIN_REG5_LANE
                            716 	.globl _DIG_TX_RSVD_REG0
                            717 	.globl _TX_CALIBRATION_LANE
                            718 	.globl _INPUT_TX_PIN_REG4_LANE
                            719 	.globl _TX_SYSTEM_LANE
                            720 	.globl _SPD_CTRL_TX_LANE_REG1_LANE
                            721 	.globl _SPD_CTRL_INTERRUPT_REG2
                            722 	.globl _SPD_CTRL_INTERRUPT_REG1_LANE
                            723 	.globl _TX_SPEED_CONVERT_LANE
                            724 	.globl _CLKGEN_TX_LANE_REG1_LANE
                            725 	.globl _PM_CTRL_INTERRUPT_REG2
                            726 	.globl _PM_CTRL_INTERRUPT_REG1_LANE
                            727 	.globl _INPUT_TX_PIN_REG3_LANE
                            728 	.globl _INPUT_TX_PIN_REG2_LANE
                            729 	.globl _INPUT_TX_PIN_REG1_LANE
                            730 	.globl _INPUT_TX_PIN_REG0_LANE
                            731 	.globl _PM_CTRL_TX_LANE_REG2_LANE
                            732 	.globl _PM_CTRL_TX_LANE_REG1_LANE
                            733 	.globl _UPHY14_CMN_ANAREG_TOP_214
                            734 	.globl _UPHY14_CMN_ANAREG_TOP_213
                            735 	.globl _UPHY14_CMN_ANAREG_TOP_212
                            736 	.globl _UPHY14_CMN_ANAREG_TOP_211
                            737 	.globl _UPHY14_CMN_ANAREG_TOP_210
                            738 	.globl _UPHY14_CMN_ANAREG_TOP_209
                            739 	.globl _UPHY14_CMN_ANAREG_TOP_208
                            740 	.globl _UPHY14_CMN_ANAREG_TOP_207
                            741 	.globl _UPHY14_CMN_ANAREG_TOP_206
                            742 	.globl _UPHY14_CMN_ANAREG_TOP_205
                            743 	.globl _UPHY14_CMN_ANAREG_TOP_204
                            744 	.globl _UPHY14_CMN_ANAREG_TOP_203
                            745 	.globl _UPHY14_CMN_ANAREG_TOP_202
                            746 	.globl _UPHY14_CMN_ANAREG_TOP_201
                            747 	.globl _UPHY14_CMN_ANAREG_TOP_200
                            748 	.globl _UPHY14_CMN_ANAREG_TOP_199
                            749 	.globl _UPHY14_CMN_ANAREG_TOP_198
                            750 	.globl _UPHY14_CMN_ANAREG_TOP_197
                            751 	.globl _UPHY14_CMN_ANAREG_TOP_196
                            752 	.globl _UPHY14_CMN_ANAREG_TOP_195
                            753 	.globl _UPHY14_CMN_ANAREG_TOP_194
                            754 	.globl _UPHY14_CMN_ANAREG_TOP_193
                            755 	.globl _UPHY14_CMN_ANAREG_TOP_192
                            756 	.globl _UPHY14_CMN_ANAREG_TOP_191
                            757 	.globl _UPHY14_CMN_ANAREG_TOP_190
                            758 	.globl _UPHY14_CMN_ANAREG_TOP_189
                            759 	.globl _UPHY14_CMN_ANAREG_TOP_188
                            760 	.globl _UPHY14_CMN_ANAREG_TOP_187
                            761 	.globl _UPHY14_CMN_ANAREG_TOP_186
                            762 	.globl _UPHY14_CMN_ANAREG_TOP_185
                            763 	.globl _UPHY14_CMN_ANAREG_TOP_184
                            764 	.globl _UPHY14_CMN_ANAREG_TOP_183
                            765 	.globl _UPHY14_CMN_ANAREG_TOP_182
                            766 	.globl _UPHY14_CMN_ANAREG_TOP_181
                            767 	.globl _UPHY14_CMN_ANAREG_TOP_180
                            768 	.globl _UPHY14_CMN_ANAREG_TOP_179
                            769 	.globl _UPHY14_CMN_ANAREG_TOP_178
                            770 	.globl _UPHY14_CMN_ANAREG_TOP_177
                            771 	.globl _UPHY14_CMN_ANAREG_TOP_176
                            772 	.globl _UPHY14_CMN_ANAREG_TOP_175
                            773 	.globl _UPHY14_CMN_ANAREG_TOP_174
                            774 	.globl _UPHY14_CMN_ANAREG_TOP_173
                            775 	.globl _UPHY14_CMN_ANAREG_TOP_172
                            776 	.globl _UPHY14_CMN_ANAREG_TOP_171
                            777 	.globl _UPHY14_CMN_ANAREG_TOP_170
                            778 	.globl _UPHY14_CMN_ANAREG_TOP_169
                            779 	.globl _UPHY14_CMN_ANAREG_TOP_168
                            780 	.globl _UPHY14_CMN_ANAREG_TOP_167
                            781 	.globl _UPHY14_CMN_ANAREG_TOP_166
                            782 	.globl _UPHY14_CMN_ANAREG_TOP_165
                            783 	.globl _UPHY14_CMN_ANAREG_TOP_164
                            784 	.globl _UPHY14_CMN_ANAREG_TOP_163
                            785 	.globl _UPHY14_CMN_ANAREG_TOP_162
                            786 	.globl _UPHY14_CMN_ANAREG_TOP_161
                            787 	.globl _UPHY14_CMN_ANAREG_TOP_160
                            788 	.globl _UPHY14_CMN_ANAREG_TOP_159
                            789 	.globl _UPHY14_CMN_ANAREG_TOP_158
                            790 	.globl _UPHY14_CMN_ANAREG_TOP_157
                            791 	.globl _UPHY14_CMN_ANAREG_TOP_156
                            792 	.globl _UPHY14_CMN_ANAREG_TOP_155
                            793 	.globl _UPHY14_CMN_ANAREG_TOP_154
                            794 	.globl _UPHY14_CMN_ANAREG_TOP_153
                            795 	.globl _UPHY14_CMN_ANAREG_TOP_152
                            796 	.globl _UPHY14_CMN_ANAREG_TOP_151
                            797 	.globl _UPHY14_CMN_ANAREG_TOP_150
                            798 	.globl _UPHY14_CMN_ANAREG_TOP_149
                            799 	.globl _UPHY14_CMN_ANAREG_TOP_148
                            800 	.globl _UPHY14_CMN_ANAREG_TOP_147
                            801 	.globl _UPHY14_CMN_ANAREG_TOP_146
                            802 	.globl _UPHY14_CMN_ANAREG_TOP_145
                            803 	.globl _UPHY14_CMN_ANAREG_TOP_144
                            804 	.globl _UPHY14_CMN_ANAREG_TOP_143
                            805 	.globl _UPHY14_CMN_ANAREG_TOP_142
                            806 	.globl _UPHY14_CMN_ANAREG_TOP_141
                            807 	.globl _UPHY14_CMN_ANAREG_TOP_140
                            808 	.globl _UPHY14_CMN_ANAREG_TOP_139
                            809 	.globl _UPHY14_CMN_ANAREG_TOP_138
                            810 	.globl _UPHY14_CMN_ANAREG_TOP_137
                            811 	.globl _UPHY14_CMN_ANAREG_TOP_136
                            812 	.globl _UPHY14_CMN_ANAREG_TOP_135
                            813 	.globl _UPHY14_CMN_ANAREG_TOP_134
                            814 	.globl _UPHY14_CMN_ANAREG_TOP_133
                            815 	.globl _UPHY14_CMN_ANAREG_TOP_132
                            816 	.globl _UPHY14_CMN_ANAREG_TOP_131
                            817 	.globl _UPHY14_CMN_ANAREG_TOP_130
                            818 	.globl _UPHY14_CMN_ANAREG_TOP_129
                            819 	.globl _UPHY14_CMN_ANAREG_TOP_128
                            820 	.globl _ANA_DFEO_REG_0B
                            821 	.globl _ANA_DFEO_REG_0A
                            822 	.globl _ANA_DFEO_REG_09
                            823 	.globl _ANA_DFEO_REG_08
                            824 	.globl _ANA_DFEO_REG_07
                            825 	.globl _ANA_DFEO_REG_06
                            826 	.globl _ANA_DFEO_REG_05
                            827 	.globl _ANA_DFEO_REG_04
                            828 	.globl _ANA_DFEO_REG_03
                            829 	.globl _ANA_DFEO_REG_02
                            830 	.globl _ANA_DFEO_REG_01
                            831 	.globl _ANA_DFEO_REG_00
                            832 	.globl _ANA_DFEO_REG_27
                            833 	.globl _ANA_DFEO_REG_26
                            834 	.globl _ANA_DFEO_REG_25
                            835 	.globl _ANA_DFEO_REG_24
                            836 	.globl _ANA_DFEO_REG_23
                            837 	.globl _ANA_DFEO_REG_22
                            838 	.globl _ANA_DFEO_REG_21
                            839 	.globl _ANA_DFEO_REG_20
                            840 	.globl _ANA_DFEO_REG_1F
                            841 	.globl _ANA_DFEO_REG_1E
                            842 	.globl _ANA_DFEO_REG_1D
                            843 	.globl _ANA_DFEO_REG_1C
                            844 	.globl _ANA_DFEO_REG_1B
                            845 	.globl _ANA_DFEO_REG_1A
                            846 	.globl _ANA_DFEO_REG_19
                            847 	.globl _ANA_DFEO_REG_18
                            848 	.globl _ANA_DFEO_REG_17
                            849 	.globl _ANA_DFEO_REG_16
                            850 	.globl _ANA_DFEO_REG_15
                            851 	.globl _ANA_DFEO_REG_14
                            852 	.globl _ANA_DFEO_REG_13
                            853 	.globl _ANA_DFEO_REG_12
                            854 	.globl _ANA_DFEO_REG_11
                            855 	.globl _ANA_DFEO_REG_10
                            856 	.globl _ANA_DFEO_REG_0F
                            857 	.globl _ANA_DFEO_REG_0E
                            858 	.globl _ANA_DFEO_REG_0D
                            859 	.globl _ANA_DFEO_REG_0C
                            860 	.globl _ANA_DFEE_REG_1D
                            861 	.globl _ANA_DFEE_REG_1C
                            862 	.globl _ANA_DFEE_REG_1B
                            863 	.globl _ANA_DFEE_REG_1A
                            864 	.globl _ANA_DFEE_REG_19
                            865 	.globl _ANA_DFEE_REG_18
                            866 	.globl _ANA_DFEE_REG_17
                            867 	.globl _ANA_DFEE_REG_16
                            868 	.globl _ANA_DFEE_REG_15
                            869 	.globl _ANA_DFEE_REG_14
                            870 	.globl _ANA_DFEE_REG_13
                            871 	.globl _ANA_DFEE_REG_12
                            872 	.globl _ANA_DFEE_REG_11
                            873 	.globl _ANA_DFEE_REG_10
                            874 	.globl _ANA_DFEE_REG_0F
                            875 	.globl _ANA_DFEE_REG_0E
                            876 	.globl _ANA_DFEE_REG_0D
                            877 	.globl _ANA_DFEE_REG_0C
                            878 	.globl _ANA_DFEE_REG_0B
                            879 	.globl _ANA_DFEE_REG_0A
                            880 	.globl _ANA_DFEE_REG_09
                            881 	.globl _ANA_DFEE_REG_08
                            882 	.globl _ANA_DFEE_REG_07
                            883 	.globl _ANA_DFEE_REG_06
                            884 	.globl _ANA_DFEE_REG_05
                            885 	.globl _ANA_DFEE_REG_04
                            886 	.globl _ANA_DFEE_REG_03
                            887 	.globl _ANA_DFEE_REG_02
                            888 	.globl _ANA_DFEE_REG_01
                            889 	.globl _ANA_DFEE_REG_00
                            890 	.globl _ANA_DFEE_REG_27
                            891 	.globl _ANA_DFEE_REG_26
                            892 	.globl _ANA_DFEE_REG_25
                            893 	.globl _ANA_DFEE_REG_24
                            894 	.globl _ANA_DFEE_REG_23
                            895 	.globl _ANA_DFEE_REG_22
                            896 	.globl _ANA_DFEE_REG_21
                            897 	.globl _ANA_DFEE_REG_20
                            898 	.globl _ANA_DFEE_REG_1F
                            899 	.globl _ANA_DFEE_REG_1E
                            900 	.globl _UPHY14_TRX_ANAREG_BOT_32
                            901 	.globl _UPHY14_TRX_ANAREG_BOT_31
                            902 	.globl _UPHY14_TRX_ANAREG_BOT_30
                            903 	.globl _UPHY14_TRX_ANAREG_BOT_29
                            904 	.globl _UPHY14_TRX_ANAREG_BOT_28
                            905 	.globl _UPHY14_TRX_ANAREG_BOT_27
                            906 	.globl _UPHY14_TRX_ANAREG_BOT_26
                            907 	.globl _UPHY14_TRX_ANAREG_BOT_25
                            908 	.globl _UPHY14_TRX_ANAREG_BOT_24
                            909 	.globl _UPHY14_TRX_ANAREG_BOT_23
                            910 	.globl _UPHY14_TRX_ANAREG_BOT_22
                            911 	.globl _UPHY14_TRX_ANAREG_BOT_21
                            912 	.globl _UPHY14_TRX_ANAREG_BOT_20
                            913 	.globl _UPHY14_TRX_ANAREG_BOT_19
                            914 	.globl _UPHY14_TRX_ANAREG_BOT_18
                            915 	.globl _UPHY14_TRX_ANAREG_BOT_17
                            916 	.globl _UPHY14_TRX_ANAREG_BOT_16
                            917 	.globl _UPHY14_TRX_ANAREG_BOT_15
                            918 	.globl _UPHY14_TRX_ANAREG_BOT_14
                            919 	.globl _UPHY14_TRX_ANAREG_BOT_13
                            920 	.globl _UPHY14_TRX_ANAREG_BOT_12
                            921 	.globl _UPHY14_TRX_ANAREG_BOT_11
                            922 	.globl _UPHY14_TRX_ANAREG_BOT_10
                            923 	.globl _UPHY14_TRX_ANAREG_BOT_9
                            924 	.globl _UPHY14_TRX_ANAREG_BOT_8
                            925 	.globl _UPHY14_TRX_ANAREG_BOT_7
                            926 	.globl _UPHY14_TRX_ANAREG_BOT_6
                            927 	.globl _UPHY14_TRX_ANAREG_BOT_5
                            928 	.globl _UPHY14_TRX_ANAREG_BOT_4
                            929 	.globl _UPHY14_TRX_ANAREG_BOT_3
                            930 	.globl _UPHY14_TRX_ANAREG_BOT_2
                            931 	.globl _UPHY14_TRX_ANAREG_BOT_1
                            932 	.globl _UPHY14_TRX_ANAREG_BOT_0
                            933 	.globl _UPHY14_TRX_ANAREG_TOP_157
                            934 	.globl _UPHY14_TRX_ANAREG_TOP_156
                            935 	.globl _UPHY14_TRX_ANAREG_TOP_155
                            936 	.globl _UPHY14_TRX_ANAREG_TOP_154
                            937 	.globl _UPHY14_TRX_ANAREG_TOP_153
                            938 	.globl _UPHY14_TRX_ANAREG_TOP_152
                            939 	.globl _UPHY14_TRX_ANAREG_TOP_151
                            940 	.globl _UPHY14_TRX_ANAREG_TOP_150
                            941 	.globl _UPHY14_TRX_ANAREG_TOP_149
                            942 	.globl _UPHY14_TRX_ANAREG_TOP_148
                            943 	.globl _UPHY14_TRX_ANAREG_TOP_147
                            944 	.globl _UPHY14_TRX_ANAREG_TOP_146
                            945 	.globl _UPHY14_TRX_ANAREG_TOP_145
                            946 	.globl _UPHY14_TRX_ANAREG_TOP_144
                            947 	.globl _UPHY14_TRX_ANAREG_TOP_143
                            948 	.globl _UPHY14_TRX_ANAREG_TOP_142
                            949 	.globl _UPHY14_TRX_ANAREG_TOP_141
                            950 	.globl _UPHY14_TRX_ANAREG_TOP_140
                            951 	.globl _UPHY14_TRX_ANAREG_TOP_139
                            952 	.globl _UPHY14_TRX_ANAREG_TOP_138
                            953 	.globl _UPHY14_TRX_ANAREG_TOP_137
                            954 	.globl _UPHY14_TRX_ANAREG_TOP_136
                            955 	.globl _UPHY14_TRX_ANAREG_TOP_135
                            956 	.globl _UPHY14_TRX_ANAREG_TOP_134
                            957 	.globl _UPHY14_TRX_ANAREG_TOP_133
                            958 	.globl _UPHY14_TRX_ANAREG_TOP_132
                            959 	.globl _UPHY14_TRX_ANAREG_TOP_131
                            960 	.globl _UPHY14_TRX_ANAREG_TOP_130
                            961 	.globl _UPHY14_TRX_ANAREG_TOP_129
                            962 	.globl _UPHY14_TRX_ANAREG_TOP_128
                            963 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_143
                            964 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_142
                            965 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_141
                            966 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_140
                            967 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_139
                            968 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_138
                            969 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_137
                            970 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_136
                            971 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_135
                            972 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_134
                            973 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_133
                            974 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_132
                            975 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_131
                            976 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_130
                            977 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_129
                            978 	.globl _UPHY14_TRX_LANEPLL_ANAREG_TOP_128
                            979 	.globl _ring_pll_cal
                            980 	.globl _ring_pll_cont
                            981 	.globl _ring_pll_fast_cal
                            982 ;--------------------------------------------------------
                            983 ; special function registers
                            984 ;--------------------------------------------------------
                            985 	.area RSEG    (ABS,DATA)
   0000                     986 	.org 0x0000
                    0080    987 _P0	=	0x0080
                    0082    988 _DPL	=	0x0082
                    0083    989 _DPH	=	0x0083
                    0086    990 _WDTREL	=	0x0086
                    0087    991 _PCON	=	0x0087
                    0088    992 _TCON	=	0x0088
                    0089    993 _TMOD	=	0x0089
                    008A    994 _TL0	=	0x008a
                    008B    995 _TL1	=	0x008b
                    008C    996 _TH0	=	0x008c
                    008D    997 _TH1	=	0x008d
                    008E    998 _CKCON	=	0x008e
                    0090    999 _P1	=	0x0090
                    0092   1000 _DPS	=	0x0092
                    0094   1001 _PSBANK	=	0x0094
                    0098   1002 _SCON	=	0x0098
                    0099   1003 _SBUF	=	0x0099
                    009A   1004 _IEN2	=	0x009a
                    00A0   1005 _P2	=	0x00a0
                    00A1   1006 _DMAS0	=	0x00a1
                    00A2   1007 _DMAS1	=	0x00a2
                    00A3   1008 _DMAS2	=	0x00a3
                    00A4   1009 _DMAT0	=	0x00a4
                    00A5   1010 _DMAT1	=	0x00a5
                    00A6   1011 _DMAT2	=	0x00a6
                    00A8   1012 _IEN0	=	0x00a8
                    00A9   1013 _IP0	=	0x00a9
                    00AA   1014 _S0RELL	=	0x00aa
                    00B0   1015 _P3	=	0x00b0
                    00B1   1016 _DMAC0	=	0x00b1
                    00B2   1017 _DMAC1	=	0x00b2
                    00B3   1018 _DMAC2	=	0x00b3
                    00B4   1019 _DMASEL	=	0x00b4
                    00B5   1020 _DMAM0	=	0x00b5
                    00B6   1021 _DMAM1	=	0x00b6
                    00B8   1022 _IEN1	=	0x00b8
                    00B9   1023 _IP1	=	0x00b9
                    00BA   1024 _S0RELH	=	0x00ba
                    00C0   1025 _IRCON	=	0x00c0
                    00C1   1026 _CCEN	=	0x00c1
                    00C8   1027 _T2CON	=	0x00c8
                    00CA   1028 _RCAP2L	=	0x00ca
                    00CB   1029 _RCAP2H	=	0x00cb
                    00CC   1030 _TL2	=	0x00cc
                    00CD   1031 _TH2	=	0x00cd
                    00D0   1032 _PSW	=	0x00d0
                    00D8   1033 _ADCON	=	0x00d8
                    00E0   1034 _ACC	=	0x00e0
                    00E8   1035 _EIE	=	0x00e8
                    00F0   1036 _B	=	0x00f0
                    00F7   1037 _SRST	=	0x00f7
                    8C8A   1038 _TMR0	=	0x8c8a
                    8D8B   1039 _TMR1	=	0x8d8b
                    CDCC   1040 _TMR2	=	0xcdcc
                    A2A1   1041 _DMASA	=	0xa2a1
                    A5A4   1042 _DMATA	=	0xa5a4
                    B2B1   1043 _DMAC	=	0xb2b1
                           1044 ;--------------------------------------------------------
                           1045 ; special function bits
                           1046 ;--------------------------------------------------------
                           1047 	.area RSEG    (ABS,DATA)
   0000                    1048 	.org 0x0000
                    0080   1049 _P0_0	=	0x0080
                    0081   1050 _P0_1	=	0x0081
                    0082   1051 _P0_2	=	0x0082
                    0083   1052 _P0_3	=	0x0083
                    0084   1053 _P0_4	=	0x0084
                    0085   1054 _P0_5	=	0x0085
                    0086   1055 _P0_6	=	0x0086
                    0087   1056 _P0_7	=	0x0087
                    0090   1057 _P1_0	=	0x0090
                    0091   1058 _P1_1	=	0x0091
                    0092   1059 _P1_2	=	0x0092
                    0093   1060 _P1_3	=	0x0093
                    0094   1061 _P1_4	=	0x0094
                    0095   1062 _P1_5	=	0x0095
                    0096   1063 _P1_6	=	0x0096
                    0097   1064 _P1_7	=	0x0097
                    00A0   1065 _P2_0	=	0x00a0
                    00A1   1066 _P2_1	=	0x00a1
                    00A2   1067 _P2_2	=	0x00a2
                    00A3   1068 _P2_3	=	0x00a3
                    00A4   1069 _P2_4	=	0x00a4
                    00A5   1070 _P2_5	=	0x00a5
                    00A6   1071 _P2_6	=	0x00a6
                    00A7   1072 _P2_7	=	0x00a7
                    00B0   1073 _P3_0	=	0x00b0
                    00B1   1074 _P3_1	=	0x00b1
                    00B2   1075 _P3_2	=	0x00b2
                    00B3   1076 _P3_3	=	0x00b3
                    00B4   1077 _P3_4	=	0x00b4
                    00B5   1078 _P3_5	=	0x00b5
                    00B6   1079 _P3_6	=	0x00b6
                    00B7   1080 _P3_7	=	0x00b7
                    0088   1081 _IT0	=	0x0088
                    0089   1082 _IE0	=	0x0089
                    008A   1083 _IT1	=	0x008a
                    008B   1084 _IE1	=	0x008b
                    008C   1085 _TR0	=	0x008c
                    008D   1086 _TF0	=	0x008d
                    008E   1087 _TR1	=	0x008e
                    008F   1088 _TF1	=	0x008f
                    00A8   1089 _EX0	=	0x00a8
                    00A9   1090 _ET0	=	0x00a9
                    00AA   1091 _EX1	=	0x00aa
                    00AB   1092 _ET1	=	0x00ab
                    00AC   1093 _ES	=	0x00ac
                    00AD   1094 _ET2	=	0x00ad
                    00AE   1095 _WDT	=	0x00ae
                    00AF   1096 _EA	=	0x00af
                    00B8   1097 _EX7	=	0x00b8
                    00B9   1098 _EX2	=	0x00b9
                    00BA   1099 _EX3	=	0x00ba
                    00BB   1100 _EX4	=	0x00bb
                    00BC   1101 _EX5	=	0x00bc
                    00BD   1102 _EX6	=	0x00bd
                    00BE   1103 _PS1	=	0x00be
                    009A   1104 _ES1	=	0x009a
                    009B   1105 _EX8	=	0x009b
                    009C   1106 _EX9	=	0x009c
                    009D   1107 _EX10	=	0x009d
                    009E   1108 _EX11	=	0x009e
                    009F   1109 _EX12	=	0x009f
                    0098   1110 _RI	=	0x0098
                    0099   1111 _TI	=	0x0099
                    00C6   1112 _TF2	=	0x00c6
                           1113 ;--------------------------------------------------------
                           1114 ; overlayable register banks
                           1115 ;--------------------------------------------------------
                           1116 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1117 	.ds 8
                           1118 ;--------------------------------------------------------
                           1119 ; internal ram data
                           1120 ;--------------------------------------------------------
                           1121 	.area DSEG    (DATA)
                           1122 ;--------------------------------------------------------
                           1123 ; overlayable items in internal ram 
                           1124 ;--------------------------------------------------------
                           1125 	.area OSEG    (OVR,DATA)
                           1126 ;--------------------------------------------------------
                           1127 ; indirectly addressable internal ram data
                           1128 ;--------------------------------------------------------
                           1129 	.area ISEG    (DATA)
                           1130 ;--------------------------------------------------------
                           1131 ; absolute internal ram data
                           1132 ;--------------------------------------------------------
                           1133 	.area IABS    (ABS,DATA)
                           1134 	.area IABS    (ABS,DATA)
                           1135 ;--------------------------------------------------------
                           1136 ; bit data
                           1137 ;--------------------------------------------------------
                           1138 	.area BSEG    (BIT)
                           1139 ;--------------------------------------------------------
                           1140 ; paged external ram data
                           1141 ;--------------------------------------------------------
                           1142 	.area PSEG    (PAG,XDATA)
                           1143 ;--------------------------------------------------------
                           1144 ; external ram data
                           1145 ;--------------------------------------------------------
                           1146 	.area XSEG    (XDATA)
                    1000   1147 _UPHY14_TRX_LANEPLL_ANAREG_TOP_128	=	0x1000
                    1004   1148 _UPHY14_TRX_LANEPLL_ANAREG_TOP_129	=	0x1004
                    1008   1149 _UPHY14_TRX_LANEPLL_ANAREG_TOP_130	=	0x1008
                    100C   1150 _UPHY14_TRX_LANEPLL_ANAREG_TOP_131	=	0x100c
                    1010   1151 _UPHY14_TRX_LANEPLL_ANAREG_TOP_132	=	0x1010
                    1014   1152 _UPHY14_TRX_LANEPLL_ANAREG_TOP_133	=	0x1014
                    1018   1153 _UPHY14_TRX_LANEPLL_ANAREG_TOP_134	=	0x1018
                    101C   1154 _UPHY14_TRX_LANEPLL_ANAREG_TOP_135	=	0x101c
                    1020   1155 _UPHY14_TRX_LANEPLL_ANAREG_TOP_136	=	0x1020
                    1024   1156 _UPHY14_TRX_LANEPLL_ANAREG_TOP_137	=	0x1024
                    1028   1157 _UPHY14_TRX_LANEPLL_ANAREG_TOP_138	=	0x1028
                    102C   1158 _UPHY14_TRX_LANEPLL_ANAREG_TOP_139	=	0x102c
                    1030   1159 _UPHY14_TRX_LANEPLL_ANAREG_TOP_140	=	0x1030
                    1034   1160 _UPHY14_TRX_LANEPLL_ANAREG_TOP_141	=	0x1034
                    1038   1161 _UPHY14_TRX_LANEPLL_ANAREG_TOP_142	=	0x1038
                    103C   1162 _UPHY14_TRX_LANEPLL_ANAREG_TOP_143	=	0x103c
                    0200   1163 _UPHY14_TRX_ANAREG_TOP_128	=	0x0200
                    0204   1164 _UPHY14_TRX_ANAREG_TOP_129	=	0x0204
                    0208   1165 _UPHY14_TRX_ANAREG_TOP_130	=	0x0208
                    020C   1166 _UPHY14_TRX_ANAREG_TOP_131	=	0x020c
                    0210   1167 _UPHY14_TRX_ANAREG_TOP_132	=	0x0210
                    0214   1168 _UPHY14_TRX_ANAREG_TOP_133	=	0x0214
                    0218   1169 _UPHY14_TRX_ANAREG_TOP_134	=	0x0218
                    021C   1170 _UPHY14_TRX_ANAREG_TOP_135	=	0x021c
                    0220   1171 _UPHY14_TRX_ANAREG_TOP_136	=	0x0220
                    0224   1172 _UPHY14_TRX_ANAREG_TOP_137	=	0x0224
                    0228   1173 _UPHY14_TRX_ANAREG_TOP_138	=	0x0228
                    022C   1174 _UPHY14_TRX_ANAREG_TOP_139	=	0x022c
                    0230   1175 _UPHY14_TRX_ANAREG_TOP_140	=	0x0230
                    0234   1176 _UPHY14_TRX_ANAREG_TOP_141	=	0x0234
                    0238   1177 _UPHY14_TRX_ANAREG_TOP_142	=	0x0238
                    023C   1178 _UPHY14_TRX_ANAREG_TOP_143	=	0x023c
                    0240   1179 _UPHY14_TRX_ANAREG_TOP_144	=	0x0240
                    0244   1180 _UPHY14_TRX_ANAREG_TOP_145	=	0x0244
                    0248   1181 _UPHY14_TRX_ANAREG_TOP_146	=	0x0248
                    024C   1182 _UPHY14_TRX_ANAREG_TOP_147	=	0x024c
                    0250   1183 _UPHY14_TRX_ANAREG_TOP_148	=	0x0250
                    0254   1184 _UPHY14_TRX_ANAREG_TOP_149	=	0x0254
                    0258   1185 _UPHY14_TRX_ANAREG_TOP_150	=	0x0258
                    025C   1186 _UPHY14_TRX_ANAREG_TOP_151	=	0x025c
                    0260   1187 _UPHY14_TRX_ANAREG_TOP_152	=	0x0260
                    0264   1188 _UPHY14_TRX_ANAREG_TOP_153	=	0x0264
                    0268   1189 _UPHY14_TRX_ANAREG_TOP_154	=	0x0268
                    026C   1190 _UPHY14_TRX_ANAREG_TOP_155	=	0x026c
                    0270   1191 _UPHY14_TRX_ANAREG_TOP_156	=	0x0270
                    0274   1192 _UPHY14_TRX_ANAREG_TOP_157	=	0x0274
                    0000   1193 _UPHY14_TRX_ANAREG_BOT_0	=	0x0000
                    0004   1194 _UPHY14_TRX_ANAREG_BOT_1	=	0x0004
                    0008   1195 _UPHY14_TRX_ANAREG_BOT_2	=	0x0008
                    000C   1196 _UPHY14_TRX_ANAREG_BOT_3	=	0x000c
                    0010   1197 _UPHY14_TRX_ANAREG_BOT_4	=	0x0010
                    0014   1198 _UPHY14_TRX_ANAREG_BOT_5	=	0x0014
                    0018   1199 _UPHY14_TRX_ANAREG_BOT_6	=	0x0018
                    001C   1200 _UPHY14_TRX_ANAREG_BOT_7	=	0x001c
                    0020   1201 _UPHY14_TRX_ANAREG_BOT_8	=	0x0020
                    0024   1202 _UPHY14_TRX_ANAREG_BOT_9	=	0x0024
                    0028   1203 _UPHY14_TRX_ANAREG_BOT_10	=	0x0028
                    002C   1204 _UPHY14_TRX_ANAREG_BOT_11	=	0x002c
                    0030   1205 _UPHY14_TRX_ANAREG_BOT_12	=	0x0030
                    0034   1206 _UPHY14_TRX_ANAREG_BOT_13	=	0x0034
                    0038   1207 _UPHY14_TRX_ANAREG_BOT_14	=	0x0038
                    003C   1208 _UPHY14_TRX_ANAREG_BOT_15	=	0x003c
                    0040   1209 _UPHY14_TRX_ANAREG_BOT_16	=	0x0040
                    0044   1210 _UPHY14_TRX_ANAREG_BOT_17	=	0x0044
                    0048   1211 _UPHY14_TRX_ANAREG_BOT_18	=	0x0048
                    004C   1212 _UPHY14_TRX_ANAREG_BOT_19	=	0x004c
                    0050   1213 _UPHY14_TRX_ANAREG_BOT_20	=	0x0050
                    0054   1214 _UPHY14_TRX_ANAREG_BOT_21	=	0x0054
                    0058   1215 _UPHY14_TRX_ANAREG_BOT_22	=	0x0058
                    005C   1216 _UPHY14_TRX_ANAREG_BOT_23	=	0x005c
                    0060   1217 _UPHY14_TRX_ANAREG_BOT_24	=	0x0060
                    0064   1218 _UPHY14_TRX_ANAREG_BOT_25	=	0x0064
                    0068   1219 _UPHY14_TRX_ANAREG_BOT_26	=	0x0068
                    006C   1220 _UPHY14_TRX_ANAREG_BOT_27	=	0x006c
                    0070   1221 _UPHY14_TRX_ANAREG_BOT_28	=	0x0070
                    0074   1222 _UPHY14_TRX_ANAREG_BOT_29	=	0x0074
                    0078   1223 _UPHY14_TRX_ANAREG_BOT_30	=	0x0078
                    007C   1224 _UPHY14_TRX_ANAREG_BOT_31	=	0x007c
                    0080   1225 _UPHY14_TRX_ANAREG_BOT_32	=	0x0080
                    0478   1226 _ANA_DFEE_REG_1E	=	0x0478
                    047C   1227 _ANA_DFEE_REG_1F	=	0x047c
                    0480   1228 _ANA_DFEE_REG_20	=	0x0480
                    0484   1229 _ANA_DFEE_REG_21	=	0x0484
                    0488   1230 _ANA_DFEE_REG_22	=	0x0488
                    048C   1231 _ANA_DFEE_REG_23	=	0x048c
                    0490   1232 _ANA_DFEE_REG_24	=	0x0490
                    0494   1233 _ANA_DFEE_REG_25	=	0x0494
                    0498   1234 _ANA_DFEE_REG_26	=	0x0498
                    049C   1235 _ANA_DFEE_REG_27	=	0x049c
                    0400   1236 _ANA_DFEE_REG_00	=	0x0400
                    0404   1237 _ANA_DFEE_REG_01	=	0x0404
                    0408   1238 _ANA_DFEE_REG_02	=	0x0408
                    040C   1239 _ANA_DFEE_REG_03	=	0x040c
                    0410   1240 _ANA_DFEE_REG_04	=	0x0410
                    0414   1241 _ANA_DFEE_REG_05	=	0x0414
                    0418   1242 _ANA_DFEE_REG_06	=	0x0418
                    041C   1243 _ANA_DFEE_REG_07	=	0x041c
                    0420   1244 _ANA_DFEE_REG_08	=	0x0420
                    0424   1245 _ANA_DFEE_REG_09	=	0x0424
                    0428   1246 _ANA_DFEE_REG_0A	=	0x0428
                    042C   1247 _ANA_DFEE_REG_0B	=	0x042c
                    0430   1248 _ANA_DFEE_REG_0C	=	0x0430
                    0434   1249 _ANA_DFEE_REG_0D	=	0x0434
                    0438   1250 _ANA_DFEE_REG_0E	=	0x0438
                    043C   1251 _ANA_DFEE_REG_0F	=	0x043c
                    0440   1252 _ANA_DFEE_REG_10	=	0x0440
                    0444   1253 _ANA_DFEE_REG_11	=	0x0444
                    0448   1254 _ANA_DFEE_REG_12	=	0x0448
                    044C   1255 _ANA_DFEE_REG_13	=	0x044c
                    0450   1256 _ANA_DFEE_REG_14	=	0x0450
                    0454   1257 _ANA_DFEE_REG_15	=	0x0454
                    0458   1258 _ANA_DFEE_REG_16	=	0x0458
                    045C   1259 _ANA_DFEE_REG_17	=	0x045c
                    0460   1260 _ANA_DFEE_REG_18	=	0x0460
                    0464   1261 _ANA_DFEE_REG_19	=	0x0464
                    0468   1262 _ANA_DFEE_REG_1A	=	0x0468
                    046C   1263 _ANA_DFEE_REG_1B	=	0x046c
                    0470   1264 _ANA_DFEE_REG_1C	=	0x0470
                    0474   1265 _ANA_DFEE_REG_1D	=	0x0474
                    0830   1266 _ANA_DFEO_REG_0C	=	0x0830
                    0834   1267 _ANA_DFEO_REG_0D	=	0x0834
                    0838   1268 _ANA_DFEO_REG_0E	=	0x0838
                    083C   1269 _ANA_DFEO_REG_0F	=	0x083c
                    0840   1270 _ANA_DFEO_REG_10	=	0x0840
                    0844   1271 _ANA_DFEO_REG_11	=	0x0844
                    0848   1272 _ANA_DFEO_REG_12	=	0x0848
                    084C   1273 _ANA_DFEO_REG_13	=	0x084c
                    0850   1274 _ANA_DFEO_REG_14	=	0x0850
                    0854   1275 _ANA_DFEO_REG_15	=	0x0854
                    0858   1276 _ANA_DFEO_REG_16	=	0x0858
                    085C   1277 _ANA_DFEO_REG_17	=	0x085c
                    0860   1278 _ANA_DFEO_REG_18	=	0x0860
                    0864   1279 _ANA_DFEO_REG_19	=	0x0864
                    0868   1280 _ANA_DFEO_REG_1A	=	0x0868
                    086C   1281 _ANA_DFEO_REG_1B	=	0x086c
                    0870   1282 _ANA_DFEO_REG_1C	=	0x0870
                    0874   1283 _ANA_DFEO_REG_1D	=	0x0874
                    0878   1284 _ANA_DFEO_REG_1E	=	0x0878
                    087C   1285 _ANA_DFEO_REG_1F	=	0x087c
                    0880   1286 _ANA_DFEO_REG_20	=	0x0880
                    0884   1287 _ANA_DFEO_REG_21	=	0x0884
                    0888   1288 _ANA_DFEO_REG_22	=	0x0888
                    088C   1289 _ANA_DFEO_REG_23	=	0x088c
                    0890   1290 _ANA_DFEO_REG_24	=	0x0890
                    0894   1291 _ANA_DFEO_REG_25	=	0x0894
                    0898   1292 _ANA_DFEO_REG_26	=	0x0898
                    089C   1293 _ANA_DFEO_REG_27	=	0x089c
                    0800   1294 _ANA_DFEO_REG_00	=	0x0800
                    0804   1295 _ANA_DFEO_REG_01	=	0x0804
                    0808   1296 _ANA_DFEO_REG_02	=	0x0808
                    080C   1297 _ANA_DFEO_REG_03	=	0x080c
                    0810   1298 _ANA_DFEO_REG_04	=	0x0810
                    0814   1299 _ANA_DFEO_REG_05	=	0x0814
                    0818   1300 _ANA_DFEO_REG_06	=	0x0818
                    081C   1301 _ANA_DFEO_REG_07	=	0x081c
                    0820   1302 _ANA_DFEO_REG_08	=	0x0820
                    0824   1303 _ANA_DFEO_REG_09	=	0x0824
                    0828   1304 _ANA_DFEO_REG_0A	=	0x0828
                    082C   1305 _ANA_DFEO_REG_0B	=	0x082c
                    8200   1306 _UPHY14_CMN_ANAREG_TOP_128	=	0x8200
                    8204   1307 _UPHY14_CMN_ANAREG_TOP_129	=	0x8204
                    8208   1308 _UPHY14_CMN_ANAREG_TOP_130	=	0x8208
                    820C   1309 _UPHY14_CMN_ANAREG_TOP_131	=	0x820c
                    8210   1310 _UPHY14_CMN_ANAREG_TOP_132	=	0x8210
                    8214   1311 _UPHY14_CMN_ANAREG_TOP_133	=	0x8214
                    8218   1312 _UPHY14_CMN_ANAREG_TOP_134	=	0x8218
                    821C   1313 _UPHY14_CMN_ANAREG_TOP_135	=	0x821c
                    8220   1314 _UPHY14_CMN_ANAREG_TOP_136	=	0x8220
                    8224   1315 _UPHY14_CMN_ANAREG_TOP_137	=	0x8224
                    8228   1316 _UPHY14_CMN_ANAREG_TOP_138	=	0x8228
                    822C   1317 _UPHY14_CMN_ANAREG_TOP_139	=	0x822c
                    8230   1318 _UPHY14_CMN_ANAREG_TOP_140	=	0x8230
                    8234   1319 _UPHY14_CMN_ANAREG_TOP_141	=	0x8234
                    8238   1320 _UPHY14_CMN_ANAREG_TOP_142	=	0x8238
                    823C   1321 _UPHY14_CMN_ANAREG_TOP_143	=	0x823c
                    8240   1322 _UPHY14_CMN_ANAREG_TOP_144	=	0x8240
                    8244   1323 _UPHY14_CMN_ANAREG_TOP_145	=	0x8244
                    8248   1324 _UPHY14_CMN_ANAREG_TOP_146	=	0x8248
                    824C   1325 _UPHY14_CMN_ANAREG_TOP_147	=	0x824c
                    8250   1326 _UPHY14_CMN_ANAREG_TOP_148	=	0x8250
                    8254   1327 _UPHY14_CMN_ANAREG_TOP_149	=	0x8254
                    8258   1328 _UPHY14_CMN_ANAREG_TOP_150	=	0x8258
                    825C   1329 _UPHY14_CMN_ANAREG_TOP_151	=	0x825c
                    8260   1330 _UPHY14_CMN_ANAREG_TOP_152	=	0x8260
                    8264   1331 _UPHY14_CMN_ANAREG_TOP_153	=	0x8264
                    8268   1332 _UPHY14_CMN_ANAREG_TOP_154	=	0x8268
                    826C   1333 _UPHY14_CMN_ANAREG_TOP_155	=	0x826c
                    8270   1334 _UPHY14_CMN_ANAREG_TOP_156	=	0x8270
                    8274   1335 _UPHY14_CMN_ANAREG_TOP_157	=	0x8274
                    8278   1336 _UPHY14_CMN_ANAREG_TOP_158	=	0x8278
                    827C   1337 _UPHY14_CMN_ANAREG_TOP_159	=	0x827c
                    8280   1338 _UPHY14_CMN_ANAREG_TOP_160	=	0x8280
                    8284   1339 _UPHY14_CMN_ANAREG_TOP_161	=	0x8284
                    8288   1340 _UPHY14_CMN_ANAREG_TOP_162	=	0x8288
                    828C   1341 _UPHY14_CMN_ANAREG_TOP_163	=	0x828c
                    8290   1342 _UPHY14_CMN_ANAREG_TOP_164	=	0x8290
                    8294   1343 _UPHY14_CMN_ANAREG_TOP_165	=	0x8294
                    8298   1344 _UPHY14_CMN_ANAREG_TOP_166	=	0x8298
                    829C   1345 _UPHY14_CMN_ANAREG_TOP_167	=	0x829c
                    82A0   1346 _UPHY14_CMN_ANAREG_TOP_168	=	0x82a0
                    82A4   1347 _UPHY14_CMN_ANAREG_TOP_169	=	0x82a4
                    82A8   1348 _UPHY14_CMN_ANAREG_TOP_170	=	0x82a8
                    82AC   1349 _UPHY14_CMN_ANAREG_TOP_171	=	0x82ac
                    82B0   1350 _UPHY14_CMN_ANAREG_TOP_172	=	0x82b0
                    82B4   1351 _UPHY14_CMN_ANAREG_TOP_173	=	0x82b4
                    82B8   1352 _UPHY14_CMN_ANAREG_TOP_174	=	0x82b8
                    82BC   1353 _UPHY14_CMN_ANAREG_TOP_175	=	0x82bc
                    82C0   1354 _UPHY14_CMN_ANAREG_TOP_176	=	0x82c0
                    82C4   1355 _UPHY14_CMN_ANAREG_TOP_177	=	0x82c4
                    82C8   1356 _UPHY14_CMN_ANAREG_TOP_178	=	0x82c8
                    82CC   1357 _UPHY14_CMN_ANAREG_TOP_179	=	0x82cc
                    82D0   1358 _UPHY14_CMN_ANAREG_TOP_180	=	0x82d0
                    82D4   1359 _UPHY14_CMN_ANAREG_TOP_181	=	0x82d4
                    82D8   1360 _UPHY14_CMN_ANAREG_TOP_182	=	0x82d8
                    82DC   1361 _UPHY14_CMN_ANAREG_TOP_183	=	0x82dc
                    82E0   1362 _UPHY14_CMN_ANAREG_TOP_184	=	0x82e0
                    82E4   1363 _UPHY14_CMN_ANAREG_TOP_185	=	0x82e4
                    82E8   1364 _UPHY14_CMN_ANAREG_TOP_186	=	0x82e8
                    82EC   1365 _UPHY14_CMN_ANAREG_TOP_187	=	0x82ec
                    82F0   1366 _UPHY14_CMN_ANAREG_TOP_188	=	0x82f0
                    82F4   1367 _UPHY14_CMN_ANAREG_TOP_189	=	0x82f4
                    82F8   1368 _UPHY14_CMN_ANAREG_TOP_190	=	0x82f8
                    82FC   1369 _UPHY14_CMN_ANAREG_TOP_191	=	0x82fc
                    8300   1370 _UPHY14_CMN_ANAREG_TOP_192	=	0x8300
                    8304   1371 _UPHY14_CMN_ANAREG_TOP_193	=	0x8304
                    8308   1372 _UPHY14_CMN_ANAREG_TOP_194	=	0x8308
                    830C   1373 _UPHY14_CMN_ANAREG_TOP_195	=	0x830c
                    8310   1374 _UPHY14_CMN_ANAREG_TOP_196	=	0x8310
                    8314   1375 _UPHY14_CMN_ANAREG_TOP_197	=	0x8314
                    8318   1376 _UPHY14_CMN_ANAREG_TOP_198	=	0x8318
                    831C   1377 _UPHY14_CMN_ANAREG_TOP_199	=	0x831c
                    8320   1378 _UPHY14_CMN_ANAREG_TOP_200	=	0x8320
                    8324   1379 _UPHY14_CMN_ANAREG_TOP_201	=	0x8324
                    8328   1380 _UPHY14_CMN_ANAREG_TOP_202	=	0x8328
                    832C   1381 _UPHY14_CMN_ANAREG_TOP_203	=	0x832c
                    8330   1382 _UPHY14_CMN_ANAREG_TOP_204	=	0x8330
                    8334   1383 _UPHY14_CMN_ANAREG_TOP_205	=	0x8334
                    8338   1384 _UPHY14_CMN_ANAREG_TOP_206	=	0x8338
                    833C   1385 _UPHY14_CMN_ANAREG_TOP_207	=	0x833c
                    8340   1386 _UPHY14_CMN_ANAREG_TOP_208	=	0x8340
                    8344   1387 _UPHY14_CMN_ANAREG_TOP_209	=	0x8344
                    8348   1388 _UPHY14_CMN_ANAREG_TOP_210	=	0x8348
                    834C   1389 _UPHY14_CMN_ANAREG_TOP_211	=	0x834c
                    8350   1390 _UPHY14_CMN_ANAREG_TOP_212	=	0x8350
                    8354   1391 _UPHY14_CMN_ANAREG_TOP_213	=	0x8354
                    8358   1392 _UPHY14_CMN_ANAREG_TOP_214	=	0x8358
                    2000   1393 _PM_CTRL_TX_LANE_REG1_LANE	=	0x2000
                    2004   1394 _PM_CTRL_TX_LANE_REG2_LANE	=	0x2004
                    2008   1395 _INPUT_TX_PIN_REG0_LANE	=	0x2008
                    200C   1396 _INPUT_TX_PIN_REG1_LANE	=	0x200c
                    2010   1397 _INPUT_TX_PIN_REG2_LANE	=	0x2010
                    2014   1398 _INPUT_TX_PIN_REG3_LANE	=	0x2014
                    2018   1399 _PM_CTRL_INTERRUPT_REG1_LANE	=	0x2018
                    201C   1400 _PM_CTRL_INTERRUPT_REG2	=	0x201c
                    2020   1401 _CLKGEN_TX_LANE_REG1_LANE	=	0x2020
                    2024   1402 _TX_SPEED_CONVERT_LANE	=	0x2024
                    2028   1403 _SPD_CTRL_INTERRUPT_REG1_LANE	=	0x2028
                    202C   1404 _SPD_CTRL_INTERRUPT_REG2	=	0x202c
                    2030   1405 _SPD_CTRL_TX_LANE_REG1_LANE	=	0x2030
                    2034   1406 _TX_SYSTEM_LANE	=	0x2034
                    203C   1407 _INPUT_TX_PIN_REG4_LANE	=	0x203c
                    2040   1408 _TX_CALIBRATION_LANE	=	0x2040
                    2044   1409 _DIG_TX_RSVD_REG0	=	0x2044
                    2048   1410 _INPUT_TX_PIN_REG5_LANE	=	0x2048
                    204C   1411 __FIELDNAME__LANE	=	0x204c
                    2050   1412 _PM_CTRL_INTERRUPT_ISR_REG1_LANE	=	0x2050
                    2054   1413 _SPD_CTRL_INTERRUPT_CLEAR_REG1_LANE	=	0x2054
                    2058   1414 _ANALOG_TX_REALTIME_REG_1	=	0x2058
                    205C   1415 _MON_TOP	=	0x205c
                    2100   1416 _PM_CTRL_RX_LANE_REG1_LANE	=	0x2100
                    2104   1417 _RX_SYSTEM_LANE	=	0x2104
                    2108   1418 _INPUT_RX_PIN_REG0_LANE	=	0x2108
                    210C   1419 _INPUT_RX_PIN_REG1_LANE	=	0x210c
                    2110   1420 _INPUT_RX_PIN_REG2_LANE	=	0x2110
                    2114   1421 _SPD_CTRL_RX_LANE_REG1_LANE	=	0x2114
                    2118   1422 _DIG_RX_RSVD_REG0	=	0x2118
                    211C   1423 _CLKGEN_RX_LANE_REG1_LANE	=	0x211c
                    2120   1424 _FRAME_SYNC_DET_REG0	=	0x2120
                    2124   1425 _FRAME_SYNC_DET_REG1	=	0x2124
                    2128   1426 _FRAME_SYNC_DET_REG2	=	0x2128
                    212C   1427 _FRAME_SYNC_DET_REG3	=	0x212c
                    2130   1428 _FRAME_SYNC_DET_REG4	=	0x2130
                    2134   1429 _FRAME_SYNC_DET_REG5	=	0x2134
                    2138   1430 _FRAME_SYNC_DET_REG6	=	0x2138
                    213C   1431 _CDR_LOCK_REG	=	0x213c
                    2140   1432 _RX_LANE_INTERRUPT	=	0x2140
                    2144   1433 _RX_LANE_INTERRUPT_MASK	=	0x2144
                    2148   1434 _RX_DATA_PATH_REG	=	0x2148
                    214C   1435 _INPUT_RX_PIN_REG3_LANE	=	0x214c
                    2150   1436 _RX_CALIBRATION_REG	=	0x2150
                    2158   1437 _RX_LANE_INTERRUPT_REG1	=	0x2158
                    2160   1438 _DTL_REG0	=	0x2160
                    2164   1439 _DTL_REG1	=	0x2164
                    2168   1440 _DTL_REG2	=	0x2168
                    216C   1441 _DTL_REG3	=	0x216c
                    2170   1442 _SQ_REG0	=	0x2170
                    4000   1443 _LANE_CFG0	=	0x4000
                    4004   1444 _LANE_STATUS0	=	0x4004
                    4008   1445 _LANE_CFG_STATUS2_LANE	=	0x4008
                    400C   1446 _LANE_CFG2_LANE	=	0x400c
                    4010   1447 _LANE_CFG4	=	0x4010
                    4014   1448 _LANE_CFG_STATUS3_LANE	=	0x4014
                    4018   1449 _LANE_DP_PIE8_CFG0_LANE	=	0x4018
                    401C   1450 _LANE_USB_DP_CFG1_LANE	=	0x401c
                    4020   1451 _LANE_USB_DP_CFG2_LANE	=	0x4020
                    4024   1452 _LANE_EQ_CFG0_LANE	=	0x4024
                    4028   1453 _LANE_EQ_CFG1_LANE	=	0x4028
                    402C   1454 _LANE_PRESET_CFG0_LANE	=	0x402c
                    4030   1455 _LANE_PRESET_CFG2_LANE	=	0x4030
                    4034   1456 _LANE_PRESET_CFG4_LANE	=	0x4034
                    4038   1457 _LANE_PRESET_CFG6_LANE	=	0x4038
                    403C   1458 _LANE_PRESET_CFG8_LANE	=	0x403c
                    4040   1459 _LANE_PRESET_CFG10_LANE	=	0x4040
                    4044   1460 _LANE_PRESET_CFG12_LANE	=	0x4044
                    4048   1461 _LANE_PRESET_CFG14_LANE	=	0x4048
                    404C   1462 _LANE_PRESET_CFG16_LANE	=	0x404c
                    4050   1463 _LANE_COEFF_MAX0_LANE	=	0x4050
                    4054   1464 _LANE_REMOTE_SET_LANE	=	0x4054
                    4058   1465 _LANE_EQ_16G_CFG0_LANE	=	0x4058
                    405C   1466 _LANE_16G_PRESET_CFG0_LANE	=	0x405c
                    4060   1467 _LANE_16G_PRESET_CFG2_LANE	=	0x4060
                    4064   1468 _LANE_16G_PRESET_CFG4_LANE	=	0x4064
                    4068   1469 _LANE_16G_PRESET_CFG6_LANE	=	0x4068
                    406C   1470 _LANE_16G_PRESET_CFG8_LANE	=	0x406c
                    4070   1471 _LANE_16G_PRESET_CFG10_LANE	=	0x4070
                    4074   1472 _LANE_16G_PRESET_CFG12_LANE	=	0x4074
                    4078   1473 _LANE_16G_PRESET_CFG14_LANE	=	0x4078
                    407C   1474 _LANE_16G_PRESET_CFG16_LANE	=	0x407c
                    4080   1475 _LANE_EQ_32G_CFG0_LANE	=	0x4080
                    4084   1476 _LANE_32G_PRESET_CFG0_LANE	=	0x4084
                    4088   1477 _LANE_32G_PRESET_CFG2_LANE	=	0x4088
                    408C   1478 _LANE_32G_PRESET_CFG4_LANE	=	0x408c
                    4090   1479 _LANE_32G_PRESET_CFG6_LANE	=	0x4090
                    4094   1480 _LANE_32G_PRESET_CFG8_LANE	=	0x4094
                    4098   1481 _LANE_32G_PRESET_CFG10_LANE	=	0x4098
                    409C   1482 _LANE_32G_PRESET_CFG12_LANE	=	0x409c
                    40A0   1483 _LANE_32G_PRESET_CFG14_LANE	=	0x40a0
                    40A4   1484 _LANE_32G_PRESET_CFG16_LANE	=	0x40a4
                    2200   1485 _MCU_CONTROL_LANE	=	0x2200
                    2204   1486 _MCU_GPIO	=	0x2204
                    2208   1487 _CACHE_DEBUG0	=	0x2208
                    220C   1488 _CACHE_DEBUG1	=	0x220c
                    2210   1489 _LANE_SYSTEM0	=	0x2210
                    2230   1490 _MCU_STATUS0_LANE	=	0x2230
                    2234   1491 _MCU_STATUS1_LANE	=	0x2234
                    2238   1492 _MCU_STATUS2_LANE	=	0x2238
                    223C   1493 _MCU_STATUS3_LANE	=	0x223c
                    2240   1494 _MCU_INT0_CONTROL	=	0x2240
                    2244   1495 _MCU_INT1_CONTROL	=	0x2244
                    2248   1496 _MCU_INT2_CONTROL	=	0x2248
                    224C   1497 _MCU_INT3_CONTROL	=	0x224c
                    2250   1498 _MCU_INT4_CONTROL	=	0x2250
                    2254   1499 _MCU_INT5_CONTROL	=	0x2254
                    2258   1500 _MCU_INT6_CONTROL	=	0x2258
                    225C   1501 _MCU_INT7_CONTROL	=	0x225c
                    2260   1502 _MCU_INT8_CONTROL	=	0x2260
                    2264   1503 _MCU_INT9_CONTROL	=	0x2264
                    2268   1504 _MCU_INT10_CONTROL	=	0x2268
                    226C   1505 _MCU_INT11_CONTROL	=	0x226c
                    2270   1506 _MCU_INT12_CONTROL	=	0x2270
                    2274   1507 _MCU_TIMER_CONTROL	=	0x2274
                    2278   1508 _MCU_TIMER0_CONTROL	=	0x2278
                    227C   1509 _MCU_TIMER1_CONTROL	=	0x227c
                    2280   1510 _MCU_TIMER2_CONTROL	=	0x2280
                    2284   1511 _MCU_TIMER3_CONTROL	=	0x2284
                    2288   1512 _MCU_IRQ_LANE	=	0x2288
                    228C   1513 _MCU_IRQ_MASK_LANE	=	0x228c
                    2290   1514 _MCU_MEM_REG1_LANE	=	0x2290
                    2294   1515 _MCU_MEM_REG2_LANE	=	0x2294
                    2298   1516 _MCU_TIMER_CTRL_1_LANE	=	0x2298
                    229C   1517 _MCU_TIMER_CTRL_2_LANE	=	0x229c
                    22A0   1518 _MCU_TIMER_CTRL_3_LANE	=	0x22a0
                    22A4   1519 _MCU_TIMER_CTRL_4_LANE	=	0x22a4
                    22A8   1520 _MCU_TIMER_CTRL_5_LANE	=	0x22a8
                    22AC   1521 _MCU_TIMER_CTRL_6_LANE	=	0x22ac
                    22B0   1522 _MCU_TIMER_CTRL_7_LANE	=	0x22b0
                    22B4   1523 _MCU_DEBUG0_LANE	=	0x22b4
                    22B8   1524 _MCU_DEBUG1_LANE	=	0x22b8
                    22BC   1525 _MCU_DEBUG2_LANE	=	0x22bc
                    22C0   1526 _MCU_DEBUG3_LANE	=	0x22c0
                    22C4   1527 _MCU_DEBUG_LANE	=	0x22c4
                    22C8   1528 _EXT_INT_CONTROL	=	0x22c8
                    22CC   1529 _ANA_IF_TRX_REG0	=	0x22cc
                    22D0   1530 _ANA_IF_DFEE_REG0	=	0x22d0
                    22D4   1531 _ANA_IF_DFEO_REG0	=	0x22d4
                    22D8   1532 _MCU_IRQ_ISR_LANE	=	0x22d8
                    22DC   1533 _MCU_WDT_LANE	=	0x22dc
                    22E0   1534 _MCU_INT_CONTROL_13	=	0x22e0
                    22E4   1535 _MCU_COMMAND0	=	0x22e4
                    22F4   1536 _MEM_ECC_ERR_ADDRESS0	=	0x22f4
                    22F8   1537 _XDATA_MEM_CHECKSUM_LANE0	=	0x22f8
                    22FC   1538 _XDATA_MEM_CHECKSUM_LANE1	=	0x22fc
                    2300   1539 _PT_CONTROL0	=	0x2300
                    2304   1540 _PT_CONTROL1	=	0x2304
                    2308   1541 _PT_USER_PATTERN0	=	0x2308
                    230C   1542 _PT_USER_PATTERN1	=	0x230c
                    2310   1543 _PT_USER_PATTERN2	=	0x2310
                    2314   1544 _PT_COUNTER0	=	0x2314
                    2318   1545 _PT_COUNTER1	=	0x2318
                    231C   1546 _PT_COUNTER2	=	0x231c
                    2400   1547 _DFE_CTRL_REG0	=	0x2400
                    2404   1548 _DFE_CTRL_REG1	=	0x2404
                    2408   1549 _DFE_CTRL_REG2	=	0x2408
                    240C   1550 _DFE_CTRL_REG3	=	0x240c
                    2410   1551 _RX_EQ_CLK_CTRL	=	0x2410
                    2414   1552 _DFE_CTRL_REG4	=	0x2414
                    2418   1553 _DFE_ANA_REG0	=	0x2418
                    241C   1554 _DFE_ANA_REG1	=	0x241c
                    2420   1555 _DFE_STEP_REG0	=	0x2420
                    2424   1556 _DFE_STEP_REG1	=	0x2424
                    2430   1557 _DFE_FEN_EVEN_REG	=	0x2430
                    2434   1558 _DFE_FEN_ODD_REG	=	0x2434
                    2438   1559 _DFE_DC_EVEN_REG8	=	0x2438
                    243C   1560 _DFE_DC_ODD_REG8	=	0x243c
                    2440   1561 _DFE_FEXT_EVEN_REG0	=	0x2440
                    2444   1562 _DFE_FEXT_EVEN_REG1	=	0x2444
                    2448   1563 _DFE_FEXT_EVEN_REG2	=	0x2448
                    244C   1564 _DFE_FEXT_EVEN_REG3	=	0x244c
                    2450   1565 _DFE_FEXT_EVEN_REG4	=	0x2450
                    2454   1566 _DFE_FEXT_EVEN_REG5	=	0x2454
                    2458   1567 _DFE_FEXT_EVEN_REG6	=	0x2458
                    245C   1568 _DFE_FEXT_EVEN_REG7	=	0x245c
                    2460   1569 _DFE_FEXT_ODD_REG0	=	0x2460
                    2464   1570 _DFE_FEXT_ODD_REG1	=	0x2464
                    2468   1571 _DFE_FEXT_ODD_REG2	=	0x2468
                    246C   1572 _DFE_FEXT_ODD_REG3	=	0x246c
                    2470   1573 _DFE_FEXT_ODD_REG4	=	0x2470
                    2474   1574 _DFE_FEXT_ODD_REG5	=	0x2474
                    2478   1575 _DFE_FEXT_ODD_REG6	=	0x2478
                    247C   1576 _DFE_FEXT_ODD_REG7	=	0x247c
                    2480   1577 _DFE_READ_EVEN_SM_REG0	=	0x2480
                    2484   1578 _DFE_READ_EVEN_SM_REG1	=	0x2484
                    2488   1579 _DFE_READ_EVEN_SM_REG2	=	0x2488
                    248C   1580 _DFE_READ_EVEN_SM_REG3	=	0x248c
                    2490   1581 _DFE_READ_EVEN_SM_REG4	=	0x2490
                    2494   1582 _DFE_READ_EVEN_SM_REG5	=	0x2494
                    2498   1583 _DFE_READ_EVEN_SM_REG6	=	0x2498
                    249C   1584 _DFE_READ_EVEN_SM_REG7	=	0x249c
                    24A0   1585 _DFE_READ_ODD_SM_REG0	=	0x24a0
                    24A4   1586 _DFE_READ_ODD_SM_REG1	=	0x24a4
                    24A8   1587 _DFE_READ_ODD_SM_REG2	=	0x24a8
                    24AC   1588 _DFE_READ_ODD_SM_REG3	=	0x24ac
                    24B0   1589 _DFE_READ_ODD_SM_REG4	=	0x24b0
                    24B4   1590 _DFE_READ_ODD_SM_REG5	=	0x24b4
                    24B8   1591 _DFE_READ_ODD_SM_REG6	=	0x24b8
                    24BC   1592 _DFE_READ_ODD_SM_REG7	=	0x24bc
                    24C0   1593 _DFE_READ_EVEN_SM_REG8	=	0x24c0
                    24C4   1594 _DFE_READ_ODD_SM_REG8	=	0x24c4
                    24D0   1595 _DFE_READ_EVEN_2C_REG0	=	0x24d0
                    24D4   1596 _DFE_READ_EVEN_2C_REG1	=	0x24d4
                    24D8   1597 _DFE_READ_EVEN_2C_REG2	=	0x24d8
                    24DC   1598 _DFE_READ_EVEN_2C_REG3	=	0x24dc
                    24E0   1599 _DFE_READ_EVEN_2C_REG4	=	0x24e0
                    24E4   1600 _DFE_READ_EVEN_2C_REG5	=	0x24e4
                    24E8   1601 _DFE_READ_EVEN_2C_REG6	=	0x24e8
                    24EC   1602 _DFE_READ_EVEN_2C_REG7	=	0x24ec
                    24F0   1603 _DFE_READ_ODD_2C_REG0	=	0x24f0
                    24F4   1604 _DFE_READ_ODD_2C_REG1	=	0x24f4
                    24F8   1605 _DFE_READ_ODD_2C_REG2	=	0x24f8
                    24FC   1606 _DFE_READ_ODD_2C_REG3	=	0x24fc
                    2500   1607 _DFE_READ_ODD_2C_REG4	=	0x2500
                    2504   1608 _DFE_READ_ODD_2C_REG5	=	0x2504
                    2508   1609 _DFE_READ_ODD_2C_REG6	=	0x2508
                    250C   1610 _DFE_READ_ODD_2C_REG7	=	0x250c
                    2510   1611 _DFE_READ_EVEN_2C_REG8	=	0x2510
                    2514   1612 _DFE_READ_ODD_2C_REG8	=	0x2514
                    2518   1613 _CAL_OFST_REG0	=	0x2518
                    251C   1614 _CAL_OFST_REG1	=	0x251c
                    2520   1615 _CAL_OFST_REG2	=	0x2520
                    2530   1616 _DFE_DCE_REG0	=	0x2530
                    2540   1617 _DFE_STATIC_LANE_REG0	=	0x2540
                    2544   1618 _DFE_STATIC_LANE_REG1	=	0x2544
                    2548   1619 _DFE_STATIC_LANE_REG3	=	0x2548
                    254C   1620 _DFE_STATIC_LANE_REG4	=	0x254c
                    2550   1621 _DFE_STATIC_LANE_REG5	=	0x2550
                    2554   1622 _DFE_STATIC_LANE_REG6	=	0x2554
                    2560   1623 _EOM_VLD_REG0	=	0x2560
                    2564   1624 _EOM_VLD_REG1	=	0x2564
                    2568   1625 _EOM_VLD_REG2	=	0x2568
                    256C   1626 _EOM_VLD_REG3	=	0x256c
                    2570   1627 _EOM_ERR_REG0	=	0x2570
                    2574   1628 _EOM_ERR_REG1	=	0x2574
                    2578   1629 _EOM_ERR_REG2	=	0x2578
                    257C   1630 _EOM_ERR_REG3	=	0x257c
                    2580   1631 _EOM_REG0	=	0x2580
                    25F0   1632 _EOM_VLD_REG4	=	0x25f0
                    25F4   1633 _LANE_MARGIN_REG0	=	0x25f4
                    6000   1634 _CAL_CTRL1_LANE	=	0x6000
                    6004   1635 _CAL_CTRL2_LANE	=	0x6004
                    6008   1636 _CAL_CTRL3_LANE	=	0x6008
                    600C   1637 _CAL_CTRL4_LANE	=	0x600c
                    6010   1638 _CAL_SAVE_DATA1_LANE	=	0x6010
                    6014   1639 _CAL_SAVE_DATA2_LANE	=	0x6014
                    6018   1640 _CAL_SAVE_DATA3_LANE	=	0x6018
                    601C   1641 _PHY_REMOTE_CTRL_COMMAND_LANE	=	0x601c
                    6020   1642 _PHY_REMOTE_CTRL_VALUE_LANE	=	0x6020
                    6024   1643 _PHY_LOCAL_VALUE_LANE	=	0x6024
                    6028   1644 _TRX_TRAIN_IF_TIMERS1_LANE	=	0x6028
                    602C   1645 _TRX_TRAIN_IF_TIMERS2_LANE	=	0x602c
                    6030   1646 _TRX_TRAIN_IF_TIMERS_ENABLE_LANE	=	0x6030
                    6034   1647 _DFE_CONTROL_0	=	0x6034
                    6038   1648 _DFE_CONTROL_1	=	0x6038
                    6040   1649 _DFE_CONTROL_2	=	0x6040
                    6044   1650 _DFE_CONTROL_3	=	0x6044
                    6048   1651 _DFE_CONTROL_4	=	0x6048
                    604C   1652 _DFE_CONTROL_5	=	0x604c
                    6050   1653 _TRAIN_CONTROL_0	=	0x6050
                    6054   1654 _TRAIN_CONTROL_1	=	0x6054
                    6058   1655 _TRAIN_CONTROL_2	=	0x6058
                    605C   1656 _RPTA_CONFIG_0	=	0x605c
                    6060   1657 _RPTA_CONFIG_1	=	0x6060
                    6064   1658 _DLL_CAL	=	0x6064
                    6068   1659 _TRAIN_PARA_0	=	0x6068
                    606C   1660 _TRAIN_PARA_1	=	0x606c
                    6070   1661 _TRAIN_PARA_2	=	0x6070
                    6074   1662 _TRAIN_PARA_3	=	0x6074
                    6078   1663 _DFE_CONTROL_6	=	0x6078
                    607C   1664 _DFE_TEST_0	=	0x607c
                    6080   1665 _DFE_TEST_1	=	0x6080
                    6084   1666 _DFE_TEST_4	=	0x6084
                    6088   1667 _DFE_TEST_5	=	0x6088
                    608C   1668 _DFE_CONTROL_7	=	0x608c
                    6090   1669 _DFE_CONTROL_8	=	0x6090
                    6094   1670 _DFE_CONTROL_9	=	0x6094
                    6098   1671 _DFE_CONTROL_10	=	0x6098
                    609C   1672 _DFE_CONTROL_11	=	0x609c
                    60A0   1673 _CDS_CTRL_REG0	=	0x60a0
                    60A4   1674 _CDS_CTRL_REG1	=	0x60a4
                    60A8   1675 _ESM_POP_P_CNT_LOW_LANE	=	0x60a8
                    60AC   1676 _ESM_ERR_P_CNT_LOW_LANE	=	0x60ac
                    60B0   1677 _ESM_ERR_POP_CNT_HIGH_LANE	=	0x60b0
                    60B4   1678 _TRAIN_CONTROL_3	=	0x60b4
                    60B8   1679 _TRAIN_CONTROL_4	=	0x60b8
                    60BC   1680 _TRAIN_CONTROL_5	=	0x60bc
                    60C0   1681 _TRAIN_CONTROL_6	=	0x60c0
                    60C4   1682 _TRAIN_CONTROL_7	=	0x60c4
                    60C8   1683 _TRAIN_CONTROL_8	=	0x60c8
                    60CC   1684 _TRAIN_CONTROL_9	=	0x60cc
                    60D0   1685 _TRAIN_CONTROL_10	=	0x60d0
                    60D4   1686 _TRAIN_CONTROL_11	=	0x60d4
                    60D8   1687 _TRAIN_CONTROL_12	=	0x60d8
                    60DC   1688 _ESM_POP_N_CNT_LOW_LANE	=	0x60dc
                    60E0   1689 _ESM_ERR_N_CNT_LOW_LANE	=	0x60e0
                    60E4   1690 _TRAIN_CONTROL_13	=	0x60e4
                    60E8   1691 _TRAIN_CONTROL_14	=	0x60e8
                    60EC   1692 _TRAIN_CONTROL_15	=	0x60ec
                    60F0   1693 _TRAIN_CONTROL_16	=	0x60f0
                    60F4   1694 _TRAIN_CONTROL_17	=	0x60f4
                    60F8   1695 _END_XDAT_LANE	=	0x60f8
                    A000   1696 _TX_CMN_REG	=	0xa000
                    A008   1697 _DTX_REG0	=	0xa008
                    A00C   1698 _DTX_REG1	=	0xa00c
                    A010   1699 _DTX_REG2	=	0xa010
                    A014   1700 _DTX_REG3	=	0xa014
                    A018   1701 _DTX_REG4	=	0xa018
                    A01C   1702 _DTX_PHY_ALIGN_REG0	=	0xa01c
                    A024   1703 _DTX_PHY_ALIGN_REG1	=	0xa024
                    A028   1704 _DTX_PHY_ALIGN_REG2	=	0xa028
                    A02C   1705 _SRIS_REG0	=	0xa02c
                    A030   1706 _SRIS_REG1	=	0xa030
                    A100   1707 _RX_CMN_0	=	0xa100
                    A110   1708 _DFE_STATIC_REG0	=	0xa110
                    A114   1709 _DFE_STATIC_REG1	=	0xa114
                    A118   1710 _DFE_STATIC_REG3	=	0xa118
                    A11C   1711 _DFE_STATIC_REG4	=	0xa11c
                    A120   1712 _DFE_STATIC_REG5	=	0xa120
                    A124   1713 _DFE_STATIC_REG6	=	0xa124
                    4200   1714 _GLOB_RST_CLK_CTRL	=	0x4200
                    4204   1715 _GLOB_CLK_SRC_LO	=	0x4204
                    4208   1716 _GLOB_CLK_SRC_HI	=	0x4208
                    420C   1717 _GLOB_MISC_CTRL	=	0x420c
                    4210   1718 _GLOB_DP_SAL_CFG	=	0x4210
                    4214   1719 _GLOB_DP_SAL_CFG1	=	0x4214
                    4218   1720 _GLOB_DP_SAL_CFG3	=	0x4218
                    421C   1721 _GLOB_DP_SAL_CFG5	=	0x421c
                    4220   1722 _GLOB_PM_CFG0	=	0x4220
                    4224   1723 _GLOB_COUNTER_CTRL	=	0x4224
                    4228   1724 _GLOB_COUNTER_HI	=	0x4228
                    422C   1725 _GLOB_PM_DP_CTRL	=	0x422c
                    4230   1726 _GLOB_DP_BAL_CFG0	=	0x4230
                    4234   1727 _GLOB_DP_BAL_CFG2	=	0x4234
                    4238   1728 _GLOB_DP_BAL_CFG4	=	0x4238
                    423C   1729 _GLOB_BIST_CTRL	=	0x423c
                    4240   1730 _GLOB_BIST_LANE_TYPE	=	0x4240
                    4244   1731 _GLOB_BIST_START	=	0x4244
                    4248   1732 _GLOB_BIST_MASK	=	0x4248
                    424C   1733 _GLOB_BIST_RESULT	=	0x424c
                    4250   1734 _GLOB_BIST_SEQR_CFG	=	0x4250
                    4254   1735 _GLOB_BIST_DATA_HI	=	0x4254
                    4258   1736 _GLOB_PIPE_REVISION	=	0x4258
                    425C   1737 _GLOB_L1_SUBSTATES_CFG	=	0x425c
                    A200   1738 _MCU_CONTROL_0	=	0xa200
                    A204   1739 _MCU_CONTROL_1	=	0xa204
                    A208   1740 _MCU_CONTROL_2	=	0xa208
                    A20C   1741 _MCU_CONTROL_3	=	0xa20c
                    A210   1742 _MCU_CONTROL_4	=	0xa210
                    A214   1743 _MCU_DEBUG0	=	0xa214
                    A218   1744 _MCU_DEBUG1	=	0xa218
                    A21C   1745 _MEMORY_CONTROL_0	=	0xa21c
                    A220   1746 _MEMORY_CONTROL_1	=	0xa220
                    A224   1747 _MEMORY_CONTROL_2	=	0xa224
                    A228   1748 _MEMORY_CONTROL_3	=	0xa228
                    A22C   1749 _MEMORY_CONTROL_4	=	0xa22c
                    A234   1750 _MCU_INFO_0	=	0xa234
                    A238   1751 _MCU_INFO_1	=	0xa238
                    A23C   1752 _MCU_INFO_2	=	0xa23c
                    A240   1753 _MCU_INFO_3	=	0xa240
                    A244   1754 _MEM_CMN_ECC_ERR_ADDRESS0	=	0xa244
                    A2E0   1755 _ANA_IF_CMN_REG1	=	0xa2e0
                    A2E4   1756 _MEM_IRQ	=	0xa2e4
                    A2E8   1757 _MEM_IRQ_MASK	=	0xa2e8
                    A2EC   1758 _ANA_IF_CMN_REG0	=	0xa2ec
                    A2F0   1759 _APB_CONTROL_REG	=	0xa2f0
                    A2F4   1760 _MEM_IRQ_CLEAR	=	0xa2f4
                    A2F8   1761 _MCU_SYNC1	=	0xa2f8
                    A2FC   1762 _MCU_SYNC2	=	0xa2fc
                    A300   1763 _TEST0	=	0xa300
                    A304   1764 _TEST1	=	0xa304
                    A308   1765 _TEST2	=	0xa308
                    A30C   1766 _TEST3	=	0xa30c
                    A310   1767 _TEST4	=	0xa310
                    A314   1768 _SYSTEM	=	0xa314
                    A318   1769 _PM_CMN_REG1	=	0xa318
                    A31C   1770 _INPUT_CMN_PIN_REG0	=	0xa31c
                    A320   1771 _INPUT_CMN_PIN_REG1	=	0xa320
                    A324   1772 _INPUT_CMN_PIN_REG2	=	0xa324
                    A328   1773 _ANA_TSEN_CONTROL	=	0xa328
                    A32C   1774 _PLLCAL_REG0	=	0xa32c
                    A330   1775 _PLLCAL_REG1	=	0xa330
                    A334   1776 _CLKGEN_CMN_REG1	=	0xa334
                    A338   1777 _SPD_CMN_REG1	=	0xa338
                    A33C   1778 _OUTPUT_CMN_PIN_REG0	=	0xa33c
                    A340   1779 _CMN_CALIBRATION	=	0xa340
                    A344   1780 __FIELDNAME_	=	0xa344
                    A348   1781 _INPUT_CMN_PIN_REG3	=	0xa348
                    A34C   1782 _PM_CMN_REG2	=	0xa34c
                    A354   1783 _TEST5	=	0xa354
                    A358   1784 _XDATA_MEM_CHECKSUM_CMN_0	=	0xa358
                    A35C   1785 _XDATA_MEM_CHECKSUM_CMN_1	=	0xa35c
                    A360   1786 _XDATA_MEM_CHECKSUM_CMN_2	=	0xa360
                    A364   1787 _MCU_SDT_CMN	=	0xa364
                    A368   1788 _CMN_CACHE_DEBUG0	=	0xa368
                    A36C   1789 _MCU_INT_ADDR	=	0xa36c
                    A370   1790 _CMN_ISR_2	=	0xa370
                    A374   1791 _CMN_ISR_MASK_2	=	0xa374
                    A378   1792 _CMN_ISR_CLEAR_2	=	0xa378
                    A37C   1793 _CMN_MCU_GPIO	=	0xa37c
                    A380   1794 _CMN_CACHE_DEBUG1	=	0xa380
                    A384   1795 _CMN_MCU_TIMER_CONTROL	=	0xa384
                    A388   1796 _CMN_MCU_TIMER_CTRL_2_LANE	=	0xa388
                    A38C   1797 _CMN_MCU_TIMER_CTRL_3_LANE	=	0xa38c
                    A390   1798 _CMN_MCU_TIMER_CTRL_4_LANE	=	0xa390
                    A394   1799 _CMN_MCU_TIMER_CTRL_5_LANE	=	0xa394
                    A398   1800 _CMN_MCU_TIMER0_CONTROL	=	0xa398
                    A39C   1801 _CMN_MCU_TIMER1_CONTROL	=	0xa39c
                    A3A0   1802 _CMN_MCU_TIMER2_CONTROL	=	0xa3a0
                    A3A4   1803 _CMN_MCU_TIMER3_CONTROL	=	0xa3a4
                    A3A8   1804 _CMN_ISR_1	=	0xa3a8
                    A3AC   1805 _CMN_ISR_MASK_1	=	0xa3ac
                    A3B0   1806 _SET_LANE_ISR	=	0xa3b0
                    A3F4   1807 _CMN_MCU_REG	=	0xa3f4
                    A3F8   1808 _CID_REG0	=	0xa3f8
                    A3FC   1809 _CID_REG1	=	0xa3fc
                    E600   1810 _FW_REV	=	0xe600
                    E604   1811 _CONTROL_CONFIG0	=	0xe604
                    E608   1812 _CONTROL_CONFIG1	=	0xe608
                    E60C   1813 _CONTROL_CONFIG2	=	0xe60c
                    E610   1814 _CONTROL_CONFIG3	=	0xe610
                    E614   1815 _CONTROL_CONFIG4	=	0xe614
                    E618   1816 _CONTROL_CONFIG5	=	0xe618
                    E61C   1817 _CONTROL_CONFIG6	=	0xe61c
                    E620   1818 _CONTROL_CONFIG7	=	0xe620
                    E624   1819 _CAL_DATA0	=	0xe624
                    E628   1820 _TRAIN_IF_CONFIG	=	0xe628
                    E62C   1821 _CONTROL_CONFIG8	=	0xe62c
                    E630   1822 _CONTROL_CONFIG9	=	0xe630
                    E634   1823 _CON_CAL_STEP_SIZE1	=	0xe634
                    E638   1824 _CON_CAL_STEP_SIZE2	=	0xe638
                    E63C   1825 _CON_CAL_STEP_SIZE3	=	0xe63c
                    E640   1826 _CON_CAL_STEP_SIZE4	=	0xe640
                    E644   1827 _CON_CAL_STEP_SIZE5	=	0xe644
                    E648   1828 _CAL_TIME_OUT_AND_DIS	=	0xe648
                    E64C   1829 _CAL_STATUS_READ	=	0xe64c
                    E650   1830 _MCU_CONFIG	=	0xe650
                    E654   1831 _CAL_DATA1	=	0xe654
                    E658   1832 _LOOP_CNTS	=	0xe658
                    E65C   1833 _MCU_CONFIG1	=	0xe65c
                    E660   1834 _TIMER_SEL1	=	0xe660
                    E664   1835 _TIMER_SEL2	=	0xe664
                    E668   1836 _TIMER_SEL3	=	0xe668
                    E66C   1837 _G_SELLV_TXCLK	=	0xe66c
                    E670   1838 _G_SELLV_TXDATA	=	0xe670
                    E674   1839 _G_SELLV_TXPRE	=	0xe674
                    E678   1840 _G_SELLV_RXEOMCLK	=	0xe678
                    E67C   1841 _G_SELLV_RXDATACLK	=	0xe67c
                    E680   1842 _G_SELLV_RXSAMPLER	=	0xe680
                    E684   1843 _SAS_PRESET0_TB	=	0xe684
                    E688   1844 _SAS_PRESET1_TB	=	0xe688
                    E68C   1845 _SAS_PRESET2_TB	=	0xe68c
                    E690   1846 _ETH_PRESET0_TB	=	0xe690
                    E694   1847 _ETH_PRESET1_TB	=	0xe694
                    E698   1848 _TX_SAVE_0	=	0xe698
                    E69C   1849 _TX_SAVE_1	=	0xe69c
                    E6A0   1850 _TX_SAVE_2	=	0xe6a0
                    E6A4   1851 _TX_SAVE_3	=	0xe6a4
                    E6A8   1852 _TX_SAVE_4	=	0xe6a8
                    E6AC   1853 _CDS_EYE_CLK_THR	=	0xe6ac
                    E6B0   1854 _SYNC_INFO	=	0xe6b0
                    E6B4   1855 _MCU_INFO_4	=	0xe6b4
                    E6B8   1856 _MCU_INFO_5	=	0xe6b8
                    E6BC   1857 _MCU_INFO_12	=	0xe6bc
                    E6C0   1858 _MCU_INFO_13	=	0xe6c0
                    E6C4   1859 _END_XDAT_CMN	=	0xe6c4
                    2600   1860 _DME_ENC_REG0	=	0x2600
                    2604   1861 _DME_ENC_REG1	=	0x2604
                    2608   1862 _DME_ENC_REG2	=	0x2608
                    260C   1863 _DME_DEC_REG0	=	0x260c
                    2610   1864 _DME_DEC_REG1	=	0x2610
                    2614   1865 _TX_TRAIN_IF_REG0	=	0x2614
                    2618   1866 _TX_TRAIN_IF_REG1	=	0x2618
                    261C   1867 _TX_TRAIN_IF_REG2	=	0x261c
                    2620   1868 _TX_TRAIN_IF_REG3	=	0x2620
                    2624   1869 _TX_TRAIN_PATTTERN_REG0	=	0x2624
                    2628   1870 _TX_TRAIN_DRIVER_REG0	=	0x2628
                    262C   1871 _TX_TRAIN_DRIVER_REG1	=	0x262c
                    2630   1872 _TX_TRAIN_DRIVER_REG2	=	0x2630
                    2634   1873 _TX_TRAIN_DEFAULT_REG0	=	0x2634
                    2638   1874 _TX_TRAIN_DEFAULT_REG1	=	0x2638
                    263C   1875 _TX_TRAIN_DEFAULT_REG2	=	0x263c
                    2640   1876 _TX_TRAIN_DEFAULT_REG3	=	0x2640
                    2644   1877 _TX_TRAIN_DEFAULT_REG4	=	0x2644
                    2648   1878 _TX_TRAIN_DEFAULT_REG5	=	0x2648
                    264C   1879 _TX_EMPH_CTRL_REG0	=	0x264c
                    2650   1880 _LINK_TRAIN_MODE0	=	0x2650
                    2654   1881 _TX_DRV_RD_OUT_REG0	=	0x2654
                    2658   1882 _TX_AMP_CTRL_REG0	=	0x2658
                    265C   1883 _TRX_TRAIN_IF_INTERRUPT_LANE	=	0x265c
                    2660   1884 _TRX_TRAIN_IF_INTERRUPT_MASK0_LANE	=	0x2660
                    2664   1885 _TRX_TRAIN_IF_INTERRUPT_CLEAR_LANE	=	0x2664
                    2668   1886 _TX_TRAIN_IF_REG4	=	0x2668
                    266C   1887 _TX_TRAIN_IF_REG5	=	0x266c
                    2670   1888 _TX_TRAIN_IF_REG6	=	0x2670
                    2674   1889 _TX_TRAIN_IF_REG7	=	0x2674
                    2678   1890 _TX_TRAIN_CTRL_LANE	=	0x2678
                    267C   1891 _TX_TRAIN_IF_REG8	=	0x267c
                    6100   1892 _DFE_READ_EVEN_REG0	=	0x6100
                    6104   1893 _DFE_READ_EVEN_REG1	=	0x6104
                    6108   1894 _DFE_READ_EVEN_REG2	=	0x6108
                    610C   1895 _DFE_READ_EVEN_REG3	=	0x610c
                    6110   1896 _DFE_READ_EVEN_REG4	=	0x6110
                    6114   1897 _DFE_READ_EVEN_REG5	=	0x6114
                    6118   1898 _DFE_READ_EVEN_REG6	=	0x6118
                    611C   1899 _DFE_READ_EVEN_REG7	=	0x611c
                    6120   1900 _DFE_READ_ODD_REG0	=	0x6120
                    6124   1901 _DFE_READ_ODD_REG1	=	0x6124
                    6128   1902 _DFE_READ_ODD_REG2	=	0x6128
                    612C   1903 _DFE_READ_ODD_REG3	=	0x612c
                    6130   1904 _DFE_READ_ODD_REG4	=	0x6130
                    6134   1905 _DFE_READ_ODD_REG5	=	0x6134
                    6138   1906 _DFE_READ_ODD_REG6	=	0x6138
                    613C   1907 _DFE_READ_ODD_REG7	=	0x613c
                    6140   1908 _DFE_READ_EVEN_REG8	=	0x6140
                    6144   1909 _DFE_READ_ODD_REG8	=	0x6144
                    6148   1910 _DFE_READ_F0A_EVEN	=	0x6148
                    614C   1911 _DFE_READ_F0A_ODD	=	0x614c
                    6150   1912 _DFE_READ_F0B_EVEN	=	0x6150
                    6154   1913 _DFE_READ_F0B_ODD	=	0x6154
                    6158   1914 _DFE_READ_F0D_EVEN	=	0x6158
                    615C   1915 _DFE_READ_F0D_ODD	=	0x615c
                    6160   1916 _DFE_READ_F0D_LEFT_EVEN	=	0x6160
                    6164   1917 _DFE_READ_F0D_LEFT_ODD	=	0x6164
                    6168   1918 _DFE_READ_F0D_RIGHT_EVEN	=	0x6168
                    616C   1919 _DFE_READ_F0D_RIGHT_ODD	=	0x616c
                    6170   1920 _CDS_READ_MISC0	=	0x6170
                    6174   1921 _CDS_READ_MISC1	=	0x6174
                    6214   1922 _TXTRAIN_IF_REG0	=	0x6214
                    E000   1923 _lc_speedtable	=	0xe000
                    E1C0   1924 _ring_speedtable	=	0xe1c0
                    E5C0   1925 _phy_mode_cmn_table	=	0xe5c0
                    6300   1926 _max_gen	=	0x6300
                    6301   1927 _min_gen	=	0x6301
                    6304   1928 _speedtable	=	0x6304
                    65D4   1929 _phy_mode_lane_table	=	0x65d4
                    60B4   1930 _rc_save	=	0x60b4
                    60D0   1931 _txffe_save	=	0x60d0
                    60E4   1932 _phase_save	=	0x60e4
                    6030   1933 _train_gn1_index	=	0x6030
                    6031   1934 _train_g1_index	=	0x6031
                    6032   1935 _train_g0_index	=	0x6032
                    E6B0   1936 _local_tx_preset_tb	=	0xe6b0
                    E5C1   1937 _cmx_cal_lcvco_dac	=	0xe5c1
                    E5C1   1938 _cmx_cal_lcvco_dac_lsb	=	0xe5c1
                    E5C4   1939 _cmx_cal_lcvco_dac_msb	=	0xe5c4
                    E5CA   1940 _cmx_cal_lccap_msb	=	0xe5ca
                    E5C8   1941 _cmx_cal_lccap_lsb	=	0xe5c8
                    E5CC   1942 _cmx_cal_plldcc	=	0xe5cc
                    E5D0   1943 _cmx_cal_pll_speed_ring	=	0xe5d0
                    E5D4   1944 _cmx_cal_pll_sllp_dac_coarse_ring	=	0xe5d4
                    E5D8   1945 _cmx_cal_sllp_dac_fine_ring	=	0xe5d8
                    65D4   1946 _lnx_cal_txdcc_pdiv	=	0x65d4
                    65D8   1947 _lnx_cal_txdcc_pdiv_hg	=	0x65d8
                    65DA   1948 _lnx_cal_txdcc	=	0x65da
                    65DE   1949 _lnx_cal_txdcc_hg	=	0x65de
                    65E0   1950 _lnx_cal_rxdcc_dll	=	0x65e0
                    65E4   1951 _lnx_cal_rxdcc_dll_hg	=	0x65e4
                    65E6   1952 _lnx_cal_rxdcc_data	=	0x65e6
                    65F0   1953 _lnx_cal_rxdcc_data_hg	=	0x65f0
                    65F5   1954 _lnx_cal_rxdcc_eom	=	0x65f5
                    65FF   1955 _lnx_cal_rxdcc_eom_hg	=	0x65ff
                    6604   1956 _lnx_cal_dll_gmsel	=	0x6604
                    6606   1957 _lnx_cal_vdda_dll_sel	=	0x6606
                    660A   1958 _lnx_cal_dll_eom_gmsel	=	0x660a
                    660C   1959 _lnx_cal_vdda_dll_eom_sel	=	0x660c
                    6610   1960 _lnx_cal_eom_dpher	=	0x6610
                    6612   1961 _lnx_cal_align90_dummy_clk	=	0x6612
                    661A   1962 _lnx_cal_align90_dac	=	0x661a
                    6622   1963 _lnx_cal_align90_gm	=	0x6622
                    662A   1964 _lnx_cal_sellv_txdata	=	0x662a
                    6634   1965 _lnx_cal_sellv_txclk	=	0x6634
                    663E   1966 _lnx_cal_sellv_rxdataclk	=	0x663e
                    6648   1967 _lnx_cal_sellv_txpre	=	0x6648
                    6652   1968 _lnx_cal_sellv_rxsampler	=	0x6652
                    665C   1969 _lnx_cal_sellv_rxeomclk	=	0x665c
                    6666   1970 _lnx_spdoft_tx_preset_index_lane	=	0x6666
                    6490   1971 _lnx_calx_txdcc_pdiv	=	0x6490
                    6496   1972 _lnx_calx_txdcc_pdiv_hg	=	0x6496
                    6499   1973 _lnx_calx_txdcc	=	0x6499
                    649F   1974 _lnx_calx_txdcc_hg	=	0x649f
                    64A2   1975 _lnx_calx_rxdcc_dll	=	0x64a2
                    64A8   1976 _lnx_calx_rxdcc_dll_hg	=	0x64a8
                    64AB   1977 _lnx_calx_dll_gmsel	=	0x64ab
                    64AE   1978 _lnx_calx_vdda_dll_sel	=	0x64ae
                    64B4   1979 _lnx_calx_dll_eom_gmsel	=	0x64b4
                    64B7   1980 _lnx_calx_vdda_dll_eom_sel	=	0x64b7
                    64BD   1981 _lnx_calx_eom_dpher	=	0x64bd
                    64C0   1982 _lnx_calx_align90_dummy_clk	=	0x64c0
                    64CC   1983 _lnx_calx_align90_dac	=	0x64cc
                    64D8   1984 _lnx_calx_align90_gm	=	0x64d8
                    6100   1985 _cds28	=	0x6100
                    6178   1986 _dfe_sm	=	0x6178
                    61B8   1987 _dfe_sm_dc	=	0x61b8
                    61C0   1988 _dfe_sm_save	=	0x61c0
                    03FC   1989 _UPHY_ANAREG_REV_0	=	0x03fc
                    E684   1990 _tx_tb	=	0xe684
                    E698   1991 _train_save_tb	=	0xe698
                    607C   1992 _sq_thrs_ratio_tb	=	0x607c
                           1993 ;--------------------------------------------------------
                           1994 ; absolute external ram data
                           1995 ;--------------------------------------------------------
                           1996 	.area XABS    (ABS,XDATA)
                           1997 ;--------------------------------------------------------
                           1998 ; external initialized ram data
                           1999 ;--------------------------------------------------------
                           2000 	.area HOME    (CODE)
                           2001 	.area GSINIT0 (CODE)
                           2002 	.area GSINIT1 (CODE)
                           2003 	.area GSINIT2 (CODE)
                           2004 	.area GSINIT3 (CODE)
                           2005 	.area GSINIT4 (CODE)
                           2006 	.area GSINIT5 (CODE)
                           2007 	.area GSINIT  (CODE)
                           2008 	.area GSFINAL (CODE)
                           2009 	.area CSEG    (CODE)
                           2010 ;--------------------------------------------------------
                           2011 ; global & static initialisations
                           2012 ;--------------------------------------------------------
                           2013 	.area HOME    (CODE)
                           2014 	.area GSINIT  (CODE)
                           2015 	.area GSFINAL (CODE)
                           2016 	.area GSINIT  (CODE)
                           2017 ;--------------------------------------------------------
                           2018 ; Home
                           2019 ;--------------------------------------------------------
                           2020 	.area HOME    (CODE)
                           2021 	.area HOME    (CODE)
                           2022 ;--------------------------------------------------------
                           2023 ; code
                           2024 ;--------------------------------------------------------
                           2025 	.area BANK1   (CODE)
                           2026 ;------------------------------------------------------------
                           2027 ;Allocation info for local variables in function 'ring_pll_cal'
                           2028 ;------------------------------------------------------------
                           2029 ;cnt_rdy                   Allocated to registers r7 
                           2030 ;save_FBDIV_h              Allocated to stack - offset 1
                           2031 ;save_FBDIV_l              Allocated to stack - offset 2
                           2032 ;save_FBCK_SEL             Allocated to stack - offset 3
                           2033 ;Fmea                      Allocated to stack - offset 4
                           2034 ;temp                      Allocated to stack - offset 6
                           2035 ;dac_fine_max              Allocated to registers r2 r3 
                           2036 ;dac_fine_min              Allocated to registers r4 r5 
                           2037 ;tmp                       Allocated to registers r2 r3 
                           2038 ;------------------------------------------------------------
                           2039 ;	../../shared/src/ring_pll_cal.c:101: void ring_pll_cal( void ) BANKING_CTRL {
                           2040 ;	-----------------------------------------
                           2041 ;	 function ring_pll_cal
                           2042 ;	-----------------------------------------
   0000                    2043 _ring_pll_cal:
                    0002   2044 	ar2 = 0x02
                    0003   2045 	ar3 = 0x03
                    0004   2046 	ar4 = 0x04
                    0005   2047 	ar5 = 0x05
                    0006   2048 	ar6 = 0x06
                    0007   2049 	ar7 = 0x07
                    0000   2050 	ar0 = 0x00
                    0001   2051 	ar1 = 0x01
   0000 C0*00              2052 	push	_bp
   0002 E5 81              2053 	mov	a,sp
   0004 F5*00              2054 	mov	_bp,a
   0006 24 07              2055 	add	a,#0x07
   0008 F5 81              2056 	mov	sp,a
                           2057 ;	../../shared/src/ring_pll_cal.c:107: PHY_STATUS =  ST_PLL_CAL_RING_CAL;
   000A 90 22 30           2058 	mov	dptr,#_MCU_STATUS0_LANE
   000D 74 36              2059 	mov	a,#0x36
   000F F0                 2060 	movx	@dptr,a
                           2061 ;	../../shared/src/ring_pll_cal.c:110: if(phy_mode == SERDES) {
   0010 90 A3 16           2062 	mov	dptr,#(_SYSTEM + 0x0002)
   0013 E0                 2063 	movx	a,@dptr
   0014 54 07              2064 	anl	a,#0x07
   0016 FA                 2065 	mov	r2,a
   0017 BA 04 1B           2066 	cjne	r2,#0x04,00110$
                           2067 ;	../../shared/src/ring_pll_cal.c:111: while(1) {
   001A                    2068 00107$:
                           2069 ;	../../shared/src/ring_pll_cal.c:112: if(cmx_PLL_CAL_DONE==1) {
   001A 90 E6 4E           2070 	mov	dptr,#(_CAL_STATUS_READ + 0x0002)
   001D E0                 2071 	movx	a,@dptr
   001E 54 01              2072 	anl	a,#0x01
   0020 FA                 2073 	mov	r2,a
   0021 BA 01 F6           2074 	cjne	r2,#0x01,00107$
                           2075 ;	../../shared/src/ring_pll_cal.c:113: if(cmx_PLL_CAL_DONE==1 && reg_PLLCAL_EN==0) break; //wait for LCPLL calibration done
   0024 90 E6 4E           2076 	mov	dptr,#(_CAL_STATUS_READ + 0x0002)
   0027 E0                 2077 	movx	a,@dptr
   0028 54 01              2078 	anl	a,#0x01
   002A FA                 2079 	mov	r2,a
   002B BA 01 EC           2080 	cjne	r2,#0x01,00107$
   002E 90 82 A0           2081 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_168
   0031 E0                 2082 	movx	a,@dptr
   0032 20 E7 E5           2083 	jb	acc.7,00107$
   0035                    2084 00110$:
                           2085 ;	../../shared/src/ring_pll_cal.c:122: cmx_PLL_CAL_RING_DONE = 0;
   0035 90 E6 4F           2086 	mov	dptr,#(_CAL_STATUS_READ + 0x0003)
   0038 E0                 2087 	movx	a,@dptr
   0039 54 FE              2088 	anl	a,#0xfe
   003B F0                 2089 	movx	@dptr,a
                           2090 ;	../../shared/src/ring_pll_cal.c:125: if( cmx_RING_PLL_CAL_EXT_EN /*|| (phy_mode==PCIE && cmx_PLL_CAL_RING_PASS)*/) { //PCIe Link enable/disable test patch
   003C 90 E6 09           2091 	mov	dptr,#(_CONTROL_CONFIG1 + 0x0001)
   003F E0                 2092 	movx	a,@dptr
   0040 30 E0 1A           2093 	jnb	acc.0,00112$
                           2094 ;	../../shared/src/ring_pll_cal.c:126: ringpll_load(PWR);
   0043 75 82 00           2095 	mov	dpl,#0x00
   0046 78r00              2096 	mov	r0,#_ringpll_load
   0048 79s00              2097 	mov	r1,#(_ringpll_load >> 8)
   004A 7As00              2098 	mov	r2,#(_ringpll_load >> 16)
   004C 12s00r00           2099 	lcall	__sdcc_banked_call
                           2100 ;	../../shared/src/ring_pll_cal.c:127: SLLP_DAC_VALID = 1;	SLLP_DAC_VALID = 0;
   004F 90 83 04           2101 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0052 E0                 2102 	movx	a,@dptr
   0053 44 40              2103 	orl	a,#0x40
   0055 F0                 2104 	movx	@dptr,a
   0056 E0                 2105 	movx	a,@dptr
   0057 54 BF              2106 	anl	a,#0xbf
   0059 F0                 2107 	movx	@dptr,a
                           2108 ;	../../shared/src/ring_pll_cal.c:128: goto exit_out;
   005A 02s07r21           2109 	ljmp	00241$
   005D                    2110 00112$:
                           2111 ;	../../shared/src/ring_pll_cal.c:134: cmx_PLL_CAL_RING_PASS = 1;
   005D 90 E6 4D           2112 	mov	dptr,#(_CAL_STATUS_READ + 0x0001)
   0060 E0                 2113 	movx	a,@dptr
   0061 44 08              2114 	orl	a,#0x08
   0063 F0                 2115 	movx	@dptr,a
                           2116 ;	../../shared/src/ring_pll_cal.c:137: timeout=0;
   0064 C2*00              2117 	clr	_timeout
                           2118 ;	../../shared/src/ring_pll_cal.c:138: if(cmx_RINGPLL_CAL_TIMEOUT_DIS==0) {
   0066 90 E6 49           2119 	mov	dptr,#(_CAL_TIME_OUT_AND_DIS + 0x0001)
   0069 E0                 2120 	movx	a,@dptr
   006A 20 E2 0A           2121 	jb	acc.2,00114$
                           2122 ;	../../shared/src/ring_pll_cal.c:139: timeout_start((uint16_t)RINGPLL_TIMEOUT_TIMER);
   006D 75 8B F0           2123 	mov	_TMR1,#0xF0
   0070 75 8D D8           2124 	mov	(_TMR1 >> 8),#0xD8
   0073 D2 8E              2125 	setb	_TR1
   0075 C2*00              2126 	clr	_timeout
   0077                    2127 00114$:
                           2128 ;	../../shared/src/ring_pll_cal.c:143: tmp = read_tsen();
   0077 78r00              2129 	mov	r0,#_read_tsen
   0079 79s00              2130 	mov	r1,#(_read_tsen >> 8)
   007B 7As00              2131 	mov	r2,#(_read_tsen >> 16)
   007D 12s00r00           2132 	lcall	__sdcc_banked_call
   0080 AA 82              2133 	mov	r2,dpl
   0082 AB 83              2134 	mov	r3,dph
                           2135 ;	../../shared/src/ring_pll_cal.c:144: if(tmp > TEMP_85 ) ringpll_dac_fine = 1280;
   0084 C3                 2136 	clr	c
   0085 74 86              2137 	mov	a,#0x86
   0087 9A                 2138 	subb	a,r2
   0088 74 7F              2139 	mov	a,#(0xFF ^ 0x80)
   008A 8B F0              2140 	mov	b,r3
   008C 63 F0 80           2141 	xrl	b,#0x80
   008F 95 F0              2142 	subb	a,b
   0091 50 0B              2143 	jnc	00120$
   0093 90s00r00           2144 	mov	dptr,#_ringpll_dac_fine
   0096 E4                 2145 	clr	a
   0097 F0                 2146 	movx	@dptr,a
   0098 A3                 2147 	inc	dptr
   0099 74 05              2148 	mov	a,#0x05
   009B F0                 2149 	movx	@dptr,a
   009C 80 2E              2150 	sjmp	00121$
   009E                    2151 00120$:
                           2152 ;	../../shared/src/ring_pll_cal.c:145: else if(tmp < TEMP_85 && tmp > TEMP_5 ) ringpll_dac_fine = 1024;
   009E C3                 2153 	clr	c
   009F EA                 2154 	mov	a,r2
   00A0 94 86              2155 	subb	a,#0x86
   00A2 EB                 2156 	mov	a,r3
   00A3 64 80              2157 	xrl	a,#0x80
   00A5 94 7F              2158 	subb	a,#0x7f
   00A7 50 1A              2159 	jnc	00116$
   00A9 C3                 2160 	clr	c
   00AA 74 BF              2161 	mov	a,#0xBF
   00AC 9A                 2162 	subb	a,r2
   00AD 74 7E              2163 	mov	a,#(0xFE ^ 0x80)
   00AF 8B F0              2164 	mov	b,r3
   00B1 63 F0 80           2165 	xrl	b,#0x80
   00B4 95 F0              2166 	subb	a,b
   00B6 50 0B              2167 	jnc	00116$
   00B8 90s00r00           2168 	mov	dptr,#_ringpll_dac_fine
   00BB E4                 2169 	clr	a
   00BC F0                 2170 	movx	@dptr,a
   00BD A3                 2171 	inc	dptr
   00BE 74 04              2172 	mov	a,#0x04
   00C0 F0                 2173 	movx	@dptr,a
   00C1 80 09              2174 	sjmp	00121$
   00C3                    2175 00116$:
                           2176 ;	../../shared/src/ring_pll_cal.c:146: else ringpll_dac_fine = 768; 
   00C3 90s00r00           2177 	mov	dptr,#_ringpll_dac_fine
   00C6 E4                 2178 	clr	a
   00C7 F0                 2179 	movx	@dptr,a
   00C8 A3                 2180 	inc	dptr
   00C9 74 03              2181 	mov	a,#0x03
   00CB F0                 2182 	movx	@dptr,a
   00CC                    2183 00121$:
                           2184 ;	../../shared/src/ring_pll_cal.c:147: dac_fine_min = ringpll_dac_fine-DAC_FINE_DELTA_RANGE;
   00CC 90s00r00           2185 	mov	dptr,#_ringpll_dac_fine
   00CF E0                 2186 	movx	a,@dptr
   00D0 FA                 2187 	mov	r2,a
   00D1 A3                 2188 	inc	dptr
   00D2 E0                 2189 	movx	a,@dptr
   00D3 FB                 2190 	mov	r3,a
   00D4 EA                 2191 	mov	a,r2
   00D5 24 80              2192 	add	a,#0x80
   00D7 FC                 2193 	mov	r4,a
   00D8 EB                 2194 	mov	a,r3
   00D9 34 FF              2195 	addc	a,#0xff
   00DB FD                 2196 	mov	r5,a
                           2197 ;	../../shared/src/ring_pll_cal.c:148: dac_fine_max = ringpll_dac_fine+DAC_FINE_DELTA_RANGE;
   00DC 74 80              2198 	mov	a,#0x80
   00DE 2A                 2199 	add	a,r2
   00DF FA                 2200 	mov	r2,a
   00E0 E4                 2201 	clr	a
   00E1 3B                 2202 	addc	a,r3
   00E2 FB                 2203 	mov	r3,a
                           2204 ;	../../shared/src/ring_pll_cal.c:150: PLL_SPEED_RING = 0;
   00E3 90 83 00           2205 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_192
   00E6 E0                 2206 	movx	a,@dptr
   00E7 54 07              2207 	anl	a,#0x07
   00E9 F0                 2208 	movx	@dptr,a
                           2209 ;	../../shared/src/ring_pll_cal.c:151: SLLP_DAC_COARSE_RING = 0;
   00EA 90 83 04           2210 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   00ED E0                 2211 	movx	a,@dptr
   00EE 54 F0              2212 	anl	a,#0xf0
   00F0 F0                 2213 	movx	@dptr,a
                           2214 ;	../../shared/src/ring_pll_cal.c:152: ringpll_dac_fine_output();
   00F1 C0 02              2215 	push	ar2
   00F3 C0 03              2216 	push	ar3
   00F5 C0 04              2217 	push	ar4
   00F7 C0 05              2218 	push	ar5
   00F9 78r00              2219 	mov	r0,#_ringpll_dac_fine_output
   00FB 79s00              2220 	mov	r1,#(_ringpll_dac_fine_output >> 8)
   00FD 7As00              2221 	mov	r2,#(_ringpll_dac_fine_output >> 16)
   00FF 12s00r00           2222 	lcall	__sdcc_banked_call
                           2223 ;	../../shared/src/ring_pll_cal.c:153: PLL_SHRTR_RING = 1;
   0102 90 83 10           2224 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   0105 E0                 2225 	movx	a,@dptr
   0106 44 40              2226 	orl	a,#0x40
   0108 F0                 2227 	movx	@dptr,a
                           2228 ;	../../shared/src/ring_pll_cal.c:159: delay01(100);
   0109 90 00 64           2229 	mov	dptr,#0x0064
   010C 78r00              2230 	mov	r0,#_delay01
   010E 79s00              2231 	mov	r1,#(_delay01 >> 8)
   0110 7As00              2232 	mov	r2,#(_delay01 >> 16)
   0112 12s00r00           2233 	lcall	__sdcc_banked_call
   0115 D0 05              2234 	pop	ar5
   0117 D0 04              2235 	pop	ar4
   0119 D0 03              2236 	pop	ar3
   011B D0 02              2237 	pop	ar2
                           2238 ;	../../shared/src/ring_pll_cal.c:160: PLL_CAL_EN_RING = 1;
   011D 90 83 10           2239 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   0120 E0                 2240 	movx	a,@dptr
   0121 44 80              2241 	orl	a,#0x80
   0123 F0                 2242 	movx	@dptr,a
                           2243 ;	../../shared/src/ring_pll_cal.c:161: temp = cmx_REFCLK_FREQ_7_0;
   0124 90 E6 2F           2244 	mov	dptr,#(_CONTROL_CONFIG8 + 0x0003)
   0127 E0                 2245 	movx	a,@dptr
   0128 FE                 2246 	mov	r6,a
   0129 E5*00              2247 	mov	a,_bp
   012B 24 06              2248 	add	a,#0x06
   012D F8                 2249 	mov	r0,a
   012E A6 06              2250 	mov	@r0,ar6
   0130 08                 2251 	inc	r0
   0131 76 00              2252 	mov	@r0,#0x00
                           2253 ;	../../shared/src/ring_pll_cal.c:162: temp--;
   0133 E5*00              2254 	mov	a,_bp
   0135 24 06              2255 	add	a,#0x06
   0137 F8                 2256 	mov	r0,a
   0138 16                 2257 	dec	@r0
   0139 B6 FF 02           2258 	cjne	@r0,#0xff,00314$
   013C 08                 2259 	inc	r0
   013D 16                 2260 	dec	@r0
   013E                    2261 00314$:
                           2262 ;	../../shared/src/ring_pll_cal.c:167: reg_FBC_CNT_TIMER_15_0_b0 = (uint8_t)temp;
   013E E5*00              2263 	mov	a,_bp
   0140 24 06              2264 	add	a,#0x06
   0142 F8                 2265 	mov	r0,a
   0143 86 06              2266 	mov	ar6,@r0
   0145 90 A3 2C           2267 	mov	dptr,#_PLLCAL_REG0
   0148 EE                 2268 	mov	a,r6
   0149 F0                 2269 	movx	@dptr,a
                           2270 ;	../../shared/src/ring_pll_cal.c:168: reg_FBC_CNT_TIMER_15_0_b1 = (uint8_t)(temp >> 8);
   014A E5*00              2271 	mov	a,_bp
   014C 24 06              2272 	add	a,#0x06
   014E F8                 2273 	mov	r0,a
   014F 08                 2274 	inc	r0
   0150 86 06              2275 	mov	ar6,@r0
   0152 90 A3 2D           2276 	mov	dptr,#(_PLLCAL_REG0 + 0x0001)
   0155 EE                 2277 	mov	a,r6
   0156 F0                 2278 	movx	@dptr,a
                           2279 ;	../../shared/src/ring_pll_cal.c:170: reg_FBC_PLLCAL_RING_EN = 1;
   0157 90 A3 31           2280 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   015A E0                 2281 	movx	a,@dptr
   015B 44 02              2282 	orl	a,#0x02
   015D F0                 2283 	movx	@dptr,a
                           2284 ;	../../shared/src/ring_pll_cal.c:177: save_FBDIV_h = reg_PLL_FBDIV_RING_9_8;
   015E 90 82 F0           2285 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_188
   0161 E0                 2286 	movx	a,@dptr
   0162 03                 2287 	rr	a
   0163 54 03              2288 	anl	a,#0x03
   0165 FE                 2289 	mov	r6,a
   0166 A8*00              2290 	mov	r0,_bp
   0168 08                 2291 	inc	r0
   0169 A6 06              2292 	mov	@r0,ar6
                           2293 ;	../../shared/src/ring_pll_cal.c:178: save_FBDIV_l = reg_PLL_FBDIV_RING_7_0;
   016B 90 82 F4           2294 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_189
   016E E0                 2295 	movx	a,@dptr
   016F FF                 2296 	mov	r7,a
   0170 A8*00              2297 	mov	r0,_bp
   0172 08                 2298 	inc	r0
   0173 08                 2299 	inc	r0
   0174 A6 07              2300 	mov	@r0,ar7
                           2301 ;	../../shared/src/ring_pll_cal.c:179: save_FBCK_SEL = reg_ANA_FBCK_SEL_RING;
   0176 90 A3 18           2302 	mov	dptr,#_PM_CMN_REG1
   0179 E0                 2303 	movx	a,@dptr
   017A 03                 2304 	rr	a
   017B 03                 2305 	rr	a
   017C 54 01              2306 	anl	a,#0x01
   017E FF                 2307 	mov	r7,a
   017F E5*00              2308 	mov	a,_bp
   0181 24 03              2309 	add	a,#0x03
   0183 F8                 2310 	mov	r0,a
   0184 A6 07              2311 	mov	@r0,ar7
                           2312 ;	../../shared/src/ring_pll_cal.c:182: ringloadSpdtbl_4_fcnt();
   0186 C0 02              2313 	push	ar2
   0188 C0 03              2314 	push	ar3
   018A C0 04              2315 	push	ar4
   018C C0 05              2316 	push	ar5
   018E 12s00r00           2317 	lcall	_ringloadSpdtbl_4_fcnt
                           2318 ;	../../shared/src/ring_pll_cal.c:185: delay01(40);
   0191 90 00 28           2319 	mov	dptr,#0x0028
   0194 78r00              2320 	mov	r0,#_delay01
   0196 79s00              2321 	mov	r1,#(_delay01 >> 8)
   0198 7As00              2322 	mov	r2,#(_delay01 >> 16)
   019A 12s00r00           2323 	lcall	__sdcc_banked_call
   019D D0 05              2324 	pop	ar5
   019F D0 04              2325 	pop	ar4
   01A1 D0 03              2326 	pop	ar3
   01A3 D0 02              2327 	pop	ar2
                           2328 ;	../../shared/src/ring_pll_cal.c:187: do {
   01A5                    2329 00128$:
                           2330 ;	../../shared/src/ring_pll_cal.c:188: if((PLL_VDDVCO_OVERTH_RING==1&&cmx_PLL_VDDVCO_POLARITY_INV==0) ||
   01A5 90 A3 31           2331 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   01A8 E0                 2332 	movx	a,@dptr
   01A9 C4                 2333 	swap	a
   01AA 23                 2334 	rl	a
   01AB 54 01              2335 	anl	a,#0x01
   01AD FF                 2336 	mov	r7,a
   01AE BF 01 07           2337 	cjne	r7,#0x01,00127$
   01B1 90 E6 44           2338 	mov	dptr,#_CON_CAL_STEP_SIZE5
   01B4 E0                 2339 	movx	a,@dptr
   01B5 30 E0 5E           2340 	jnb	acc.0,00164$
   01B8                    2341 00127$:
                           2342 ;	../../shared/src/ring_pll_cal.c:189: (PLL_VDDVCO_OVERTH_RING==0&&cmx_PLL_VDDVCO_POLARITY_INV==1)) break;
   01B8 90 A3 31           2343 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   01BB E0                 2344 	movx	a,@dptr
   01BC 20 E3 0C           2345 	jb	acc.3,00123$
   01BF 90 E6 44           2346 	mov	dptr,#_CON_CAL_STEP_SIZE5
   01C2 E0                 2347 	movx	a,@dptr
   01C3 54 01              2348 	anl	a,#0x01
   01C5 FF                 2349 	mov	r7,a
   01C6 BF 01 02           2350 	cjne	r7,#0x01,00319$
   01C9 80 4B              2351 	sjmp	00164$
   01CB                    2352 00319$:
   01CB                    2353 00123$:
                           2354 ;	../../shared/src/ring_pll_cal.c:190: else SLLP_DAC_COARSE_RING++;
   01CB 90 83 04           2355 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   01CE E0                 2356 	movx	a,@dptr
   01CF 54 0F              2357 	anl	a,#0x0f
   01D1 FF                 2358 	mov	r7,a
   01D2 0F                 2359 	inc	r7
   01D3 90 83 04           2360 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   01D6 EF                 2361 	mov	a,r7
   01D7 54 0F              2362 	anl	a,#0x0f
   01D9 F5 F0              2363 	mov	b,a
   01DB E0                 2364 	movx	a,@dptr
   01DC 54 F0              2365 	anl	a,#0xf0
   01DE 45 F0              2366 	orl	a,b
   01E0 F0                 2367 	movx	@dptr,a
                           2368 ;	../../shared/src/ring_pll_cal.c:191: SLLP_DAC_VALID = 1;	SLLP_DAC_VALID = 0;
   01E1 90 83 04           2369 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   01E4 E0                 2370 	movx	a,@dptr
   01E5 44 40              2371 	orl	a,#0x40
   01E7 F0                 2372 	movx	@dptr,a
   01E8 E0                 2373 	movx	a,@dptr
   01E9 54 BF              2374 	anl	a,#0xbf
   01EB F0                 2375 	movx	@dptr,a
                           2376 ;	../../shared/src/ring_pll_cal.c:192: delay01(40);
   01EC 90 00 28           2377 	mov	dptr,#0x0028
   01EF C0 02              2378 	push	ar2
   01F1 C0 03              2379 	push	ar3
   01F3 C0 04              2380 	push	ar4
   01F5 C0 05              2381 	push	ar5
   01F7 78r00              2382 	mov	r0,#_delay01
   01F9 79s00              2383 	mov	r1,#(_delay01 >> 8)
   01FB 7As00              2384 	mov	r2,#(_delay01 >> 16)
   01FD 12s00r00           2385 	lcall	__sdcc_banked_call
   0200 D0 05              2386 	pop	ar5
   0202 D0 04              2387 	pop	ar4
   0204 D0 03              2388 	pop	ar3
   0206 D0 02              2389 	pop	ar2
                           2390 ;	../../shared/src/ring_pll_cal.c:193: } while(SLLP_DAC_COARSE_RING < DAC_COARSE_MAX);
   0208 90 83 04           2391 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   020B E0                 2392 	movx	a,@dptr
   020C 54 0F              2393 	anl	a,#0x0f
   020E FF                 2394 	mov	r7,a
   020F C3                 2395 	clr	c
   0210 64 80              2396 	xrl	a,#0x80
   0212 94 8F              2397 	subb	a,#0x8f
   0214 40 8F              2398 	jc	00128$
                           2399 ;	../../shared/src/ring_pll_cal.c:197: do {
   0216                    2400 00164$:
                           2401 ;	../../shared/src/ring_pll_cal.c:208: cnt_rdy = reg_FBC_PLLCAL_CNT_READY;
   0216 90 A3 30           2402 	mov	dptr,#_PLLCAL_REG1
   0219 E0                 2403 	movx	a,@dptr
   021A 03                 2404 	rr	a
   021B 54 01              2405 	anl	a,#0x01
   021D FF                 2406 	mov	r7,a
                           2407 ;	../../shared/src/ring_pll_cal.c:209: reg_FBC_CNT_START = 0;
                           2408 ;	../../shared/src/ring_pll_cal.c:210: reg_FBC_CNT_START = 1;
   021E 90 A3 30           2409 	mov	dptr,#_PLLCAL_REG1
   0221 E0                 2410 	movx	a,@dptr
   0222 54 FE              2411 	anl	a,#0xfe
   0224 F0                 2412 	movx	@dptr,a
   0225 E0                 2413 	movx	a,@dptr
   0226 44 01              2414 	orl	a,#0x01
   0228 F0                 2415 	movx	@dptr,a
                           2416 ;	../../shared/src/ring_pll_cal.c:211: if( cnt_rdy ) while(reg_FBC_PLLCAL_CNT_READY && !timeout);
   0229 EF                 2417 	mov	a,r7
   022A 60 0A              2418 	jz	00138$
   022C                    2419 00132$:
   022C 90 A3 30           2420 	mov	dptr,#_PLLCAL_REG1
   022F E0                 2421 	movx	a,@dptr
   0230 30 E1 03           2422 	jnb	acc.1,00138$
   0233 30*00 F6           2423 	jnb	_timeout,00132$
                           2424 ;	../../shared/src/ring_pll_cal.c:212: while(!reg_FBC_PLLCAL_CNT_READY && !timeout);
   0236                    2425 00138$:
   0236 90 A3 30           2426 	mov	dptr,#_PLLCAL_REG1
   0239 E0                 2427 	movx	a,@dptr
   023A 20 E1 03           2428 	jb	acc.1,00140$
   023D 30*00 F6           2429 	jnb	_timeout,00138$
   0240                    2430 00140$:
                           2431 ;	../../shared/src/ring_pll_cal.c:213: reg_FBC_CNT_START = 0;
   0240 90 A3 30           2432 	mov	dptr,#_PLLCAL_REG1
   0243 E0                 2433 	movx	a,@dptr
   0244 54 FE              2434 	anl	a,#0xfe
   0246 F0                 2435 	movx	@dptr,a
                           2436 ;	../../shared/src/ring_pll_cal.c:214: if( timeout ) break;
   0247 30*00 03           2437 	jnb	_timeout,00326$
   024A 02s04r04           2438 	ljmp	00195$
   024D                    2439 00326$:
                           2440 ;	../../shared/src/ring_pll_cal.c:215: Fmea = reg_FBC_PLLCAL_CNT_15_0_b0;
   024D 90 A3 2E           2441 	mov	dptr,#(_PLLCAL_REG0 + 0x0002)
   0250 E0                 2442 	movx	a,@dptr
   0251 FF                 2443 	mov	r7,a
   0252 E5*00              2444 	mov	a,_bp
   0254 24 04              2445 	add	a,#0x04
   0256 F8                 2446 	mov	r0,a
   0257 A6 07              2447 	mov	@r0,ar7
   0259 08                 2448 	inc	r0
   025A 76 00              2449 	mov	@r0,#0x00
                           2450 ;	../../shared/src/ring_pll_cal.c:218: if(Fmea >= Ftarget_ring ) break; 
   025C 90 E6 18           2451 	mov	dptr,#_CONTROL_CONFIG5
   025F E0                 2452 	movx	a,@dptr
   0260 FF                 2453 	mov	r7,a
   0261 A3                 2454 	inc	dptr
   0262 E0                 2455 	movx	a,@dptr
   0263 FE                 2456 	mov	r6,a
   0264 E5*00              2457 	mov	a,_bp
   0266 24 04              2458 	add	a,#0x04
   0268 F8                 2459 	mov	r0,a
   0269 C3                 2460 	clr	c
   026A E6                 2461 	mov	a,@r0
   026B 9F                 2462 	subb	a,r7
   026C 08                 2463 	inc	r0
   026D E6                 2464 	mov	a,@r0
   026E 9E                 2465 	subb	a,r6
   026F 40 03              2466 	jc	00327$
   0271 02s04r04           2467 	ljmp	00195$
   0274                    2468 00327$:
                           2469 ;	../../shared/src/ring_pll_cal.c:221: if(PLL_SPEED_RING == PLL_SPEED_RING_MAX) {
   0274 90 83 00           2470 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_192
   0277 E0                 2471 	movx	a,@dptr
   0278 C4                 2472 	swap	a
   0279 23                 2473 	rl	a
   027A 54 1F              2474 	anl	a,#0x1f
   027C FE                 2475 	mov	r6,a
   027D BE 17 4C           2476 	cjne	r6,#0x17,00146$
                           2477 ;	../../shared/src/ring_pll_cal.c:222: if( SLLP_DAC_COARSE_RING!=DAC_COARSE_MAX) {
   0280 90 83 04           2478 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0283 E0                 2479 	movx	a,@dptr
   0284 54 0F              2480 	anl	a,#0x0f
   0286 FE                 2481 	mov	r6,a
   0287 BE 0F 02           2482 	cjne	r6,#0x0F,00330$
   028A 80 76              2483 	sjmp	00158$
   028C                    2484 00330$:
                           2485 ;	../../shared/src/ring_pll_cal.c:223: SLLP_DAC_COARSE_RING++;
   028C 90 83 04           2486 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   028F E0                 2487 	movx	a,@dptr
   0290 54 0F              2488 	anl	a,#0x0f
   0292 FE                 2489 	mov	r6,a
   0293 0E                 2490 	inc	r6
   0294 90 83 04           2491 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0297 EE                 2492 	mov	a,r6
   0298 54 0F              2493 	anl	a,#0x0f
   029A F5 F0              2494 	mov	b,a
   029C E0                 2495 	movx	a,@dptr
   029D 54 F0              2496 	anl	a,#0xf0
   029F 45 F0              2497 	orl	a,b
   02A1 F0                 2498 	movx	@dptr,a
                           2499 ;	../../shared/src/ring_pll_cal.c:224: SLLP_DAC_VALID = 1;	SLLP_DAC_VALID = 0;
   02A2 90 83 04           2500 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   02A5 E0                 2501 	movx	a,@dptr
   02A6 44 40              2502 	orl	a,#0x40
   02A8 F0                 2503 	movx	@dptr,a
   02A9 E0                 2504 	movx	a,@dptr
   02AA 54 BF              2505 	anl	a,#0xbf
   02AC F0                 2506 	movx	@dptr,a
                           2507 ;	../../shared/src/ring_pll_cal.c:225: delay01(40);
   02AD 90 00 28           2508 	mov	dptr,#0x0028
   02B0 C0 02              2509 	push	ar2
   02B2 C0 03              2510 	push	ar3
   02B4 C0 04              2511 	push	ar4
   02B6 C0 05              2512 	push	ar5
   02B8 78r00              2513 	mov	r0,#_delay01
   02BA 79s00              2514 	mov	r1,#(_delay01 >> 8)
   02BC 7As00              2515 	mov	r2,#(_delay01 >> 16)
   02BE 12s00r00           2516 	lcall	__sdcc_banked_call
   02C1 D0 05              2517 	pop	ar5
   02C3 D0 04              2518 	pop	ar4
   02C5 D0 03              2519 	pop	ar3
   02C7 D0 02              2520 	pop	ar2
                           2521 ;	../../shared/src/ring_pll_cal.c:226: continue;
   02C9 02s03rEC           2522 	ljmp	00165$
   02CC                    2523 00146$:
                           2524 ;	../../shared/src/ring_pll_cal.c:230: PLL_SPEED_RING++;
   02CC 90 83 00           2525 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_192
   02CF E0                 2526 	movx	a,@dptr
   02D0 C4                 2527 	swap	a
   02D1 23                 2528 	rl	a
   02D2 54 1F              2529 	anl	a,#0x1f
   02D4 FE                 2530 	mov	r6,a
   02D5 0E                 2531 	inc	r6
   02D6 90 83 00           2532 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_192
   02D9 EE                 2533 	mov	a,r6
   02DA C4                 2534 	swap	a
   02DB 03                 2535 	rr	a
   02DC 54 F8              2536 	anl	a,#(0xf8&0xf8)
   02DE F5 F0              2537 	mov	b,a
   02E0 E0                 2538 	movx	a,@dptr
   02E1 54 07              2539 	anl	a,#0x07
   02E3 45 F0              2540 	orl	a,b
   02E5 F0                 2541 	movx	@dptr,a
                           2542 ;	../../shared/src/ring_pll_cal.c:231: delay01(20);
   02E6 90 00 14           2543 	mov	dptr,#0x0014
   02E9 C0 02              2544 	push	ar2
   02EB C0 03              2545 	push	ar3
   02ED C0 04              2546 	push	ar4
   02EF C0 05              2547 	push	ar5
   02F1 78r00              2548 	mov	r0,#_delay01
   02F3 79s00              2549 	mov	r1,#(_delay01 >> 8)
   02F5 7As00              2550 	mov	r2,#(_delay01 >> 16)
   02F7 12s00r00           2551 	lcall	__sdcc_banked_call
   02FA D0 05              2552 	pop	ar5
   02FC D0 04              2553 	pop	ar4
   02FE D0 03              2554 	pop	ar3
   0300 D0 02              2555 	pop	ar2
                           2556 ;	../../shared/src/ring_pll_cal.c:234: while(((SLLP_DAC_COARSE_RING<DAC_COARSE_MAX) && \
   0302                    2557 00158$:
   0302 90 83 04           2558 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0305 E0                 2559 	movx	a,@dptr
   0306 54 0F              2560 	anl	a,#0x0f
   0308 FE                 2561 	mov	r6,a
   0309 C3                 2562 	clr	c
   030A 64 80              2563 	xrl	a,#0x80
   030C 94 8F              2564 	subb	a,#0x8f
   030E 50 1C              2565 	jnc	00157$
   0310 90 A3 31           2566 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   0313 E0                 2567 	movx	a,@dptr
   0314 20 E3 07           2568 	jb	acc.3,00155$
   0317 90 E6 44           2569 	mov	dptr,#_CON_CAL_STEP_SIZE5
   031A E0                 2570 	movx	a,@dptr
   031B 30 E0 1F           2571 	jnb	acc.0,00159$
   031E                    2572 00155$:
                           2573 ;	../../shared/src/ring_pll_cal.c:236: (PLL_VDDVCO_OVERTH_RING && cmx_PLL_VDDVCO_POLARITY_INV)))||(PLL_SPEED_RING == PLL_SPEED_RING_MAX)) {
   031E 90 A3 31           2574 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   0321 E0                 2575 	movx	a,@dptr
   0322 30 E3 07           2576 	jnb	acc.3,00157$
   0325 90 E6 44           2577 	mov	dptr,#_CON_CAL_STEP_SIZE5
   0328 E0                 2578 	movx	a,@dptr
   0329 20 E0 11           2579 	jb	acc.0,00159$
   032C                    2580 00157$:
   032C 90 83 00           2581 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_192
   032F E0                 2582 	movx	a,@dptr
   0330 C4                 2583 	swap	a
   0331 23                 2584 	rl	a
   0332 54 1F              2585 	anl	a,#0x1f
   0334 FE                 2586 	mov	r6,a
   0335 BE 17 02           2587 	cjne	r6,#0x17,00336$
   0338 80 03              2588 	sjmp	00337$
   033A                    2589 00336$:
   033A 02s03rD0           2590 	ljmp	00163$
   033D                    2591 00337$:
   033D                    2592 00159$:
                           2593 ;	../../shared/src/ring_pll_cal.c:238: SLLP_DAC_COARSE_RING++;
   033D 90 83 04           2594 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0340 E0                 2595 	movx	a,@dptr
   0341 54 0F              2596 	anl	a,#0x0f
   0343 FE                 2597 	mov	r6,a
   0344 0E                 2598 	inc	r6
   0345 90 83 04           2599 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0348 EE                 2600 	mov	a,r6
   0349 54 0F              2601 	anl	a,#0x0f
   034B F5 F0              2602 	mov	b,a
   034D E0                 2603 	movx	a,@dptr
   034E 54 F0              2604 	anl	a,#0xf0
   0350 45 F0              2605 	orl	a,b
   0352 F0                 2606 	movx	@dptr,a
                           2607 ;	../../shared/src/ring_pll_cal.c:239: SLLP_DAC_VALID = 1;	SLLP_DAC_VALID = 0;
   0353 90 83 04           2608 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0356 E0                 2609 	movx	a,@dptr
   0357 44 40              2610 	orl	a,#0x40
   0359 F0                 2611 	movx	@dptr,a
   035A E0                 2612 	movx	a,@dptr
   035B 54 BF              2613 	anl	a,#0xbf
   035D F0                 2614 	movx	@dptr,a
                           2615 ;	../../shared/src/ring_pll_cal.c:240: delay01(40);
   035E 90 00 28           2616 	mov	dptr,#0x0028
   0361 C0 02              2617 	push	ar2
   0363 C0 03              2618 	push	ar3
   0365 C0 04              2619 	push	ar4
   0367 C0 05              2620 	push	ar5
   0369 78r00              2621 	mov	r0,#_delay01
   036B 79s00              2622 	mov	r1,#(_delay01 >> 8)
   036D 7As00              2623 	mov	r2,#(_delay01 >> 16)
   036F 12s00r00           2624 	lcall	__sdcc_banked_call
   0372 D0 05              2625 	pop	ar5
   0374 D0 04              2626 	pop	ar4
   0376 D0 03              2627 	pop	ar3
   0378 D0 02              2628 	pop	ar2
                           2629 ;	../../shared/src/ring_pll_cal.c:242: if( SLLP_DAC_COARSE_RING>=DAC_COARSE_MAX ) {
   037A 90 83 04           2630 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   037D E0                 2631 	movx	a,@dptr
   037E 54 0F              2632 	anl	a,#0x0f
   0380 FE                 2633 	mov	r6,a
   0381 C3                 2634 	clr	c
   0382 64 80              2635 	xrl	a,#0x80
   0384 94 8F              2636 	subb	a,#0x8f
   0386 50 03              2637 	jnc	00338$
   0388 02s03r02           2638 	ljmp	00158$
   038B                    2639 00338$:
                           2640 ;	../../shared/src/ring_pll_cal.c:243: if( ringpll_dac_fine<dac_fine_max ){
   038B 90s00r00           2641 	mov	dptr,#_ringpll_dac_fine
   038E E0                 2642 	movx	a,@dptr
   038F FE                 2643 	mov	r6,a
   0390 A3                 2644 	inc	dptr
   0391 E0                 2645 	movx	a,@dptr
   0392 FF                 2646 	mov	r7,a
   0393 C3                 2647 	clr	c
   0394 EE                 2648 	mov	a,r6
   0395 9A                 2649 	subb	a,r2
   0396 EF                 2650 	mov	a,r7
   0397 9B                 2651 	subb	a,r3
   0398 40 03              2652 	jc	00339$
   039A 02s05r42           2653 	ljmp	00229$
   039D                    2654 00339$:
                           2655 ;	../../shared/src/ring_pll_cal.c:244: ringpll_dac_fine += PWR_FINE_STEP;
   039D 90s00r00           2656 	mov	dptr,#_ringpll_dac_fine
   03A0 74 20              2657 	mov	a,#0x20
   03A2 2E                 2658 	add	a,r6
   03A3 F0                 2659 	movx	@dptr,a
   03A4 E4                 2660 	clr	a
   03A5 3F                 2661 	addc	a,r7
   03A6 A3                 2662 	inc	dptr
   03A7 F0                 2663 	movx	@dptr,a
                           2664 ;	../../shared/src/ring_pll_cal.c:245: ringpll_dac_fine_output();
   03A8 C0 02              2665 	push	ar2
   03AA C0 03              2666 	push	ar3
   03AC C0 04              2667 	push	ar4
   03AE C0 05              2668 	push	ar5
   03B0 78r00              2669 	mov	r0,#_ringpll_dac_fine_output
   03B2 79s00              2670 	mov	r1,#(_ringpll_dac_fine_output >> 8)
   03B4 7As00              2671 	mov	r2,#(_ringpll_dac_fine_output >> 16)
   03B6 12s00r00           2672 	lcall	__sdcc_banked_call
                           2673 ;	../../shared/src/ring_pll_cal.c:247: delay01(40);
   03B9 90 00 28           2674 	mov	dptr,#0x0028
   03BC 78r00              2675 	mov	r0,#_delay01
   03BE 79s00              2676 	mov	r1,#(_delay01 >> 8)
   03C0 7As00              2677 	mov	r2,#(_delay01 >> 16)
   03C2 12s00r00           2678 	lcall	__sdcc_banked_call
   03C5 D0 05              2679 	pop	ar5
   03C7 D0 04              2680 	pop	ar4
   03C9 D0 03              2681 	pop	ar3
   03CB D0 02              2682 	pop	ar2
                           2683 ;	../../shared/src/ring_pll_cal.c:249: else goto adjust;
   03CD 02s03r02           2684 	ljmp	00158$
   03D0                    2685 00163$:
                           2686 ;	../../shared/src/ring_pll_cal.c:254: delay01(20);
   03D0 90 00 14           2687 	mov	dptr,#0x0014
   03D3 C0 02              2688 	push	ar2
   03D5 C0 03              2689 	push	ar3
   03D7 C0 04              2690 	push	ar4
   03D9 C0 05              2691 	push	ar5
   03DB 78r00              2692 	mov	r0,#_delay01
   03DD 79s00              2693 	mov	r1,#(_delay01 >> 8)
   03DF 7As00              2694 	mov	r2,#(_delay01 >> 16)
   03E1 12s00r00           2695 	lcall	__sdcc_banked_call
   03E4 D0 05              2696 	pop	ar5
   03E6 D0 04              2697 	pop	ar4
   03E8 D0 03              2698 	pop	ar3
   03EA D0 02              2699 	pop	ar2
   03EC                    2700 00165$:
                           2701 ;	../../shared/src/ring_pll_cal.c:256: } while(Fmea < Ftarget_ring);
   03EC 90 E6 18           2702 	mov	dptr,#_CONTROL_CONFIG5
   03EF E0                 2703 	movx	a,@dptr
   03F0 FE                 2704 	mov	r6,a
   03F1 A3                 2705 	inc	dptr
   03F2 E0                 2706 	movx	a,@dptr
   03F3 FF                 2707 	mov	r7,a
   03F4 E5*00              2708 	mov	a,_bp
   03F6 24 04              2709 	add	a,#0x04
   03F8 F8                 2710 	mov	r0,a
   03F9 C3                 2711 	clr	c
   03FA E6                 2712 	mov	a,@r0
   03FB 9E                 2713 	subb	a,r6
   03FC 08                 2714 	inc	r0
   03FD E6                 2715 	mov	a,@r0
   03FE 9F                 2716 	subb	a,r7
   03FF 50 03              2717 	jnc	00340$
   0401 02s02r16           2718 	ljmp	00164$
   0404                    2719 00340$:
                           2720 ;	../../shared/src/ring_pll_cal.c:261: while ( ringpll_dac_fine != 0 ) {
   0404                    2721 00195$:
   0404 90s00r00           2722 	mov	dptr,#_ringpll_dac_fine
   0407 E0                 2723 	movx	a,@dptr
   0408 FE                 2724 	mov	r6,a
   0409 A3                 2725 	inc	dptr
   040A E0                 2726 	movx	a,@dptr
   040B FF                 2727 	mov	r7,a
   040C 4E                 2728 	orl	a,r6
   040D 70 03              2729 	jnz	00341$
   040F 02s05r42           2730 	ljmp	00229$
   0412                    2731 00341$:
                           2732 ;	../../shared/src/ring_pll_cal.c:262: if( timeout ) break;
   0412 30*00 03           2733 	jnb	_timeout,00342$
   0415 02s05r42           2734 	ljmp	00229$
   0418                    2735 00342$:
                           2736 ;	../../shared/src/ring_pll_cal.c:264: ringpll_dac_fine -= PWR_FINE_STEP;
   0418 EE                 2737 	mov	a,r6
   0419 24 E0              2738 	add	a,#0xe0
   041B FE                 2739 	mov	r6,a
   041C EF                 2740 	mov	a,r7
   041D 34 FF              2741 	addc	a,#0xff
   041F FF                 2742 	mov	r7,a
   0420 90s00r00           2743 	mov	dptr,#_ringpll_dac_fine
   0423 EE                 2744 	mov	a,r6
   0424 F0                 2745 	movx	@dptr,a
   0425 A3                 2746 	inc	dptr
   0426 EF                 2747 	mov	a,r7
   0427 F0                 2748 	movx	@dptr,a
                           2749 ;	../../shared/src/ring_pll_cal.c:266: if( SLLP_DAC_COARSE_RING>0 && SLLP_DAC_COARSE_RING<DAC_COARSE_MAX) {
   0428 90 83 04           2750 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   042B E0                 2751 	movx	a,@dptr
   042C 54 0F              2752 	anl	a,#0x0f
   042E 70 03              2753 	jnz	00343$
   0430 02s04rC2           2754 	ljmp	00179$
   0433                    2755 00343$:
   0433 90 83 04           2756 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0436 E0                 2757 	movx	a,@dptr
   0437 54 0F              2758 	anl	a,#0x0f
   0439 FE                 2759 	mov	r6,a
   043A C3                 2760 	clr	c
   043B 64 80              2761 	xrl	a,#0x80
   043D 94 8F              2762 	subb	a,#0x8f
   043F 40 03              2763 	jc	00344$
   0441 02s04rC2           2764 	ljmp	00179$
   0444                    2765 00344$:
                           2766 ;	../../shared/src/ring_pll_cal.c:269: if(ringpll_dac_fine<dac_fine_min) { 
   0444 90s00r00           2767 	mov	dptr,#_ringpll_dac_fine
   0447 E0                 2768 	movx	a,@dptr
   0448 FE                 2769 	mov	r6,a
   0449 A3                 2770 	inc	dptr
   044A E0                 2771 	movx	a,@dptr
   044B FF                 2772 	mov	r7,a
   044C C3                 2773 	clr	c
   044D EE                 2774 	mov	a,r6
   044E 9C                 2775 	subb	a,r4
   044F EF                 2776 	mov	a,r7
   0450 9D                 2777 	subb	a,r5
   0451 50 34              2778 	jnc	00176$
                           2779 ;	../../shared/src/ring_pll_cal.c:270: ringpll_dac_fine += 300; 
   0453 90s00r00           2780 	mov	dptr,#_ringpll_dac_fine
   0456 74 2C              2781 	mov	a,#0x2C
   0458 2E                 2782 	add	a,r6
   0459 F0                 2783 	movx	@dptr,a
   045A 74 01              2784 	mov	a,#0x01
   045C 3F                 2785 	addc	a,r7
   045D A3                 2786 	inc	dptr
   045E F0                 2787 	movx	@dptr,a
                           2788 ;	../../shared/src/ring_pll_cal.c:271: if( SLLP_DAC_COARSE_RING > DAC_COARSE_MIN )
   045F 90 83 04           2789 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0462 E0                 2790 	movx	a,@dptr
   0463 54 0F              2791 	anl	a,#0x0f
   0465 60 5B              2792 	jz	00179$
                           2793 ;	../../shared/src/ring_pll_cal.c:272: SLLP_DAC_COARSE_RING--;
   0467 C0 04              2794 	push	ar4
   0469 C0 05              2795 	push	ar5
   046B 90 83 04           2796 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   046E E0                 2797 	movx	a,@dptr
   046F 54 0F              2798 	anl	a,#0x0f
   0471 FC                 2799 	mov	r4,a
   0472 1C                 2800 	dec	r4
   0473 90 83 04           2801 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0476 EC                 2802 	mov	a,r4
   0477 54 0F              2803 	anl	a,#0x0f
   0479 F5 F0              2804 	mov	b,a
   047B E0                 2805 	movx	a,@dptr
   047C 54 F0              2806 	anl	a,#0xf0
   047E 45 F0              2807 	orl	a,b
   0480 F0                 2808 	movx	@dptr,a
   0481 D0 05              2809 	pop	ar5
   0483 D0 04              2810 	pop	ar4
   0485 80 3B              2811 	sjmp	00179$
   0487                    2812 00176$:
                           2813 ;	../../shared/src/ring_pll_cal.c:274: else if(ringpll_dac_fine>dac_fine_max) { 
   0487 C3                 2814 	clr	c
   0488 EA                 2815 	mov	a,r2
   0489 9E                 2816 	subb	a,r6
   048A EB                 2817 	mov	a,r3
   048B 9F                 2818 	subb	a,r7
   048C 50 34              2819 	jnc	00179$
                           2820 ;	../../shared/src/ring_pll_cal.c:275: ringpll_dac_fine -= 300; 
   048E EE                 2821 	mov	a,r6
   048F 24 D4              2822 	add	a,#0xd4
   0491 FE                 2823 	mov	r6,a
   0492 EF                 2824 	mov	a,r7
   0493 34 FE              2825 	addc	a,#0xfe
   0495 FF                 2826 	mov	r7,a
   0496 90s00r00           2827 	mov	dptr,#_ringpll_dac_fine
   0499 EE                 2828 	mov	a,r6
   049A F0                 2829 	movx	@dptr,a
   049B A3                 2830 	inc	dptr
   049C EF                 2831 	mov	a,r7
   049D F0                 2832 	movx	@dptr,a
                           2833 ;	../../shared/src/ring_pll_cal.c:276: if( SLLP_DAC_COARSE_RING < DAC_COARSE_MAX )
   049E 90 83 04           2834 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   04A1 E0                 2835 	movx	a,@dptr
   04A2 54 0F              2836 	anl	a,#0x0f
   04A4 FE                 2837 	mov	r6,a
   04A5 C3                 2838 	clr	c
   04A6 64 80              2839 	xrl	a,#0x80
   04A8 94 8F              2840 	subb	a,#0x8f
   04AA 50 16              2841 	jnc	00179$
                           2842 ;	../../shared/src/ring_pll_cal.c:277: SLLP_DAC_COARSE_RING++;
   04AC 90 83 04           2843 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   04AF E0                 2844 	movx	a,@dptr
   04B0 54 0F              2845 	anl	a,#0x0f
   04B2 FE                 2846 	mov	r6,a
   04B3 0E                 2847 	inc	r6
   04B4 90 83 04           2848 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   04B7 EE                 2849 	mov	a,r6
   04B8 54 0F              2850 	anl	a,#0x0f
   04BA F5 F0              2851 	mov	b,a
   04BC E0                 2852 	movx	a,@dptr
   04BD 54 F0              2853 	anl	a,#0xf0
   04BF 45 F0              2854 	orl	a,b
   04C1 F0                 2855 	movx	@dptr,a
   04C2                    2856 00179$:
                           2857 ;	../../shared/src/ring_pll_cal.c:281: ringpll_dac_fine_output();
   04C2 C0 02              2858 	push	ar2
   04C4 C0 03              2859 	push	ar3
   04C6 C0 04              2860 	push	ar4
   04C8 C0 05              2861 	push	ar5
   04CA 78r00              2862 	mov	r0,#_ringpll_dac_fine_output
   04CC 79s00              2863 	mov	r1,#(_ringpll_dac_fine_output >> 8)
   04CE 7As00              2864 	mov	r2,#(_ringpll_dac_fine_output >> 16)
   04D0 12s00r00           2865 	lcall	__sdcc_banked_call
                           2866 ;	../../shared/src/ring_pll_cal.c:282: delay01(40);
   04D3 90 00 28           2867 	mov	dptr,#0x0028
   04D6 78r00              2868 	mov	r0,#_delay01
   04D8 79s00              2869 	mov	r1,#(_delay01 >> 8)
   04DA 7As00              2870 	mov	r2,#(_delay01 >> 16)
   04DC 12s00r00           2871 	lcall	__sdcc_banked_call
   04DF D0 05              2872 	pop	ar5
   04E1 D0 04              2873 	pop	ar4
   04E3 D0 03              2874 	pop	ar3
   04E5 D0 02              2875 	pop	ar2
                           2876 ;	../../shared/src/ring_pll_cal.c:293: cnt_rdy = reg_FBC_PLLCAL_CNT_READY;
   04E7 90 A3 30           2877 	mov	dptr,#_PLLCAL_REG1
   04EA E0                 2878 	movx	a,@dptr
   04EB 03                 2879 	rr	a
   04EC 54 01              2880 	anl	a,#0x01
   04EE FE                 2881 	mov	r6,a
   04EF FF                 2882 	mov	r7,a
                           2883 ;	../../shared/src/ring_pll_cal.c:294: reg_FBC_CNT_START = 1;
   04F0 90 A3 30           2884 	mov	dptr,#_PLLCAL_REG1
   04F3 E0                 2885 	movx	a,@dptr
   04F4 44 01              2886 	orl	a,#0x01
   04F6 F0                 2887 	movx	@dptr,a
                           2888 ;	../../shared/src/ring_pll_cal.c:295: if( cnt_rdy ) while(reg_FBC_PLLCAL_CNT_READY && !timeout);
   04F7 EF                 2889 	mov	a,r7
   04F8 60 0A              2890 	jz	00188$
   04FA                    2891 00182$:
   04FA 90 A3 30           2892 	mov	dptr,#_PLLCAL_REG1
   04FD E0                 2893 	movx	a,@dptr
   04FE 30 E1 03           2894 	jnb	acc.1,00188$
   0501 30*00 F6           2895 	jnb	_timeout,00182$
                           2896 ;	../../shared/src/ring_pll_cal.c:296: while(!reg_FBC_PLLCAL_CNT_READY && !timeout );
   0504                    2897 00188$:
   0504 90 A3 30           2898 	mov	dptr,#_PLLCAL_REG1
   0507 E0                 2899 	movx	a,@dptr
   0508 20 E1 03           2900 	jb	acc.1,00190$
   050B 30*00 F6           2901 	jnb	_timeout,00188$
   050E                    2902 00190$:
                           2903 ;	../../shared/src/ring_pll_cal.c:297: reg_FBC_CNT_START = 0;
   050E 90 A3 30           2904 	mov	dptr,#_PLLCAL_REG1
   0511 E0                 2905 	movx	a,@dptr
   0512 54 FE              2906 	anl	a,#0xfe
   0514 F0                 2907 	movx	@dptr,a
                           2908 ;	../../shared/src/ring_pll_cal.c:298: if(timeout) break;
   0515 20*00 2A           2909 	jb	_timeout,00229$
                           2910 ;	../../shared/src/ring_pll_cal.c:299: Fmea = reg_FBC_PLLCAL_CNT_15_0;
   0518 90 A3 2E           2911 	mov	dptr,#(_PLLCAL_REG0 + 0x0002)
   051B E0                 2912 	movx	a,@dptr
   051C FE                 2913 	mov	r6,a
   051D A3                 2914 	inc	dptr
   051E E0                 2915 	movx	a,@dptr
   051F FF                 2916 	mov	r7,a
   0520 E5*00              2917 	mov	a,_bp
   0522 24 04              2918 	add	a,#0x04
   0524 F8                 2919 	mov	r0,a
   0525 A6 06              2920 	mov	@r0,ar6
   0527 08                 2921 	inc	r0
   0528 A6 07              2922 	mov	@r0,ar7
                           2923 ;	../../shared/src/ring_pll_cal.c:302: if(Fmea <= Ftarget_ring ) break;
   052A 90 E6 18           2924 	mov	dptr,#_CONTROL_CONFIG5
   052D E0                 2925 	movx	a,@dptr
   052E FE                 2926 	mov	r6,a
   052F A3                 2927 	inc	dptr
   0530 E0                 2928 	movx	a,@dptr
   0531 FF                 2929 	mov	r7,a
   0532 E5*00              2930 	mov	a,_bp
   0534 24 04              2931 	add	a,#0x04
   0536 F8                 2932 	mov	r0,a
   0537 C3                 2933 	clr	c
   0538 EE                 2934 	mov	a,r6
   0539 96                 2935 	subb	a,@r0
   053A EF                 2936 	mov	a,r7
   053B 08                 2937 	inc	r0
   053C 96                 2938 	subb	a,@r0
   053D 50 03              2939 	jnc	00355$
   053F 02s04r04           2940 	ljmp	00195$
   0542                    2941 00355$:
                           2942 ;	../../shared/src/ring_pll_cal.c:306: do {
   0542                    2943 00229$:
                           2944 ;	../../shared/src/ring_pll_cal.c:307: if( timeout ) break;
   0542 30*00 03           2945 	jnb	_timeout,00356$
   0545 02s06rA1           2946 	ljmp	00231$
   0548                    2947 00356$:
                           2948 ;	../../shared/src/ring_pll_cal.c:318: cnt_rdy = reg_FBC_PLLCAL_CNT_READY;
   0548 90 A3 30           2949 	mov	dptr,#_PLLCAL_REG1
   054B E0                 2950 	movx	a,@dptr
   054C 03                 2951 	rr	a
   054D 54 01              2952 	anl	a,#0x01
   054F FE                 2953 	mov	r6,a
   0550 FF                 2954 	mov	r7,a
                           2955 ;	../../shared/src/ring_pll_cal.c:319: reg_FBC_CNT_START = 1;
   0551 90 A3 30           2956 	mov	dptr,#_PLLCAL_REG1
   0554 E0                 2957 	movx	a,@dptr
   0555 44 01              2958 	orl	a,#0x01
   0557 F0                 2959 	movx	@dptr,a
                           2960 ;	../../shared/src/ring_pll_cal.c:320: if( cnt_rdy ) while(reg_FBC_PLLCAL_CNT_READY && !timeout);
   0558 EF                 2961 	mov	a,r7
   0559 60 0A              2962 	jz	00208$
   055B                    2963 00202$:
   055B 90 A3 30           2964 	mov	dptr,#_PLLCAL_REG1
   055E E0                 2965 	movx	a,@dptr
   055F 30 E1 03           2966 	jnb	acc.1,00208$
   0562 30*00 F6           2967 	jnb	_timeout,00202$
                           2968 ;	../../shared/src/ring_pll_cal.c:321: while(!reg_FBC_PLLCAL_CNT_READY && !timeout);
   0565                    2969 00208$:
   0565 90 A3 30           2970 	mov	dptr,#_PLLCAL_REG1
   0568 E0                 2971 	movx	a,@dptr
   0569 20 E1 03           2972 	jb	acc.1,00210$
   056C 30*00 F6           2973 	jnb	_timeout,00208$
   056F                    2974 00210$:
                           2975 ;	../../shared/src/ring_pll_cal.c:322: reg_FBC_CNT_START = 0;
   056F 90 A3 30           2976 	mov	dptr,#_PLLCAL_REG1
   0572 E0                 2977 	movx	a,@dptr
   0573 54 FE              2978 	anl	a,#0xfe
   0575 F0                 2979 	movx	@dptr,a
                           2980 ;	../../shared/src/ring_pll_cal.c:323: if (timeout) break;
   0576 30*00 03           2981 	jnb	_timeout,00362$
   0579 02s06rA1           2982 	ljmp	00231$
   057C                    2983 00362$:
                           2984 ;	../../shared/src/ring_pll_cal.c:324: Fmea = reg_FBC_PLLCAL_CNT_15_0;
   057C 90 A3 2E           2985 	mov	dptr,#(_PLLCAL_REG0 + 0x0002)
   057F E0                 2986 	movx	a,@dptr
   0580 FE                 2987 	mov	r6,a
   0581 A3                 2988 	inc	dptr
   0582 E0                 2989 	movx	a,@dptr
   0583 FF                 2990 	mov	r7,a
   0584 E5*00              2991 	mov	a,_bp
   0586 24 04              2992 	add	a,#0x04
   0588 F8                 2993 	mov	r0,a
   0589 A6 06              2994 	mov	@r0,ar6
   058B 08                 2995 	inc	r0
   058C A6 07              2996 	mov	@r0,ar7
                           2997 ;	../../shared/src/ring_pll_cal.c:327: if (Fmea == Ftarget_ring) break;
   058E 90 E6 18           2998 	mov	dptr,#_CONTROL_CONFIG5
   0591 E0                 2999 	movx	a,@dptr
   0592 FE                 3000 	mov	r6,a
   0593 A3                 3001 	inc	dptr
   0594 E0                 3002 	movx	a,@dptr
   0595 FF                 3003 	mov	r7,a
   0596 E5*00              3004 	mov	a,_bp
   0598 24 04              3005 	add	a,#0x04
   059A F8                 3006 	mov	r0,a
   059B E6                 3007 	mov	a,@r0
   059C B5 06 08           3008 	cjne	a,ar6,00363$
   059F 08                 3009 	inc	r0
   05A0 E6                 3010 	mov	a,@r0
   05A1 B5 07 03           3011 	cjne	a,ar7,00363$
   05A4 02s06rA1           3012 	ljmp	00231$
   05A7                    3013 00363$:
                           3014 ;	../../shared/src/ring_pll_cal.c:328: else if ( Fmea > Ftarget_ring ) {
   05A7 90 E6 18           3015 	mov	dptr,#_CONTROL_CONFIG5
   05AA E0                 3016 	movx	a,@dptr
   05AB FE                 3017 	mov	r6,a
   05AC A3                 3018 	inc	dptr
   05AD E0                 3019 	movx	a,@dptr
   05AE FF                 3020 	mov	r7,a
   05AF E5*00              3021 	mov	a,_bp
   05B1 24 04              3022 	add	a,#0x04
   05B3 F8                 3023 	mov	r0,a
   05B4 C3                 3024 	clr	c
   05B5 EE                 3025 	mov	a,r6
   05B6 96                 3026 	subb	a,@r0
   05B7 EF                 3027 	mov	a,r7
   05B8 08                 3028 	inc	r0
   05B9 96                 3029 	subb	a,@r0
   05BA 50 1A              3030 	jnc	00214$
                           3031 ;	../../shared/src/ring_pll_cal.c:329: ringpll_dac_fine-=PWR_FINE_STEP;
   05BC 90s00r00           3032 	mov	dptr,#_ringpll_dac_fine
   05BF E0                 3033 	movx	a,@dptr
   05C0 FE                 3034 	mov	r6,a
   05C1 A3                 3035 	inc	dptr
   05C2 E0                 3036 	movx	a,@dptr
   05C3 FF                 3037 	mov	r7,a
   05C4 EE                 3038 	mov	a,r6
   05C5 24 E0              3039 	add	a,#0xe0
   05C7 FE                 3040 	mov	r6,a
   05C8 EF                 3041 	mov	a,r7
   05C9 34 FF              3042 	addc	a,#0xff
   05CB FF                 3043 	mov	r7,a
   05CC 90s00r00           3044 	mov	dptr,#_ringpll_dac_fine
   05CF EE                 3045 	mov	a,r6
   05D0 F0                 3046 	movx	@dptr,a
   05D1 A3                 3047 	inc	dptr
   05D2 EF                 3048 	mov	a,r7
   05D3 F0                 3049 	movx	@dptr,a
   05D4 80 13              3050 	sjmp	00218$
   05D6                    3051 00214$:
                           3052 ;	../../shared/src/ring_pll_cal.c:332: ringpll_dac_fine+=PWR_FINE_STEP;
   05D6 90s00r00           3053 	mov	dptr,#_ringpll_dac_fine
   05D9 E0                 3054 	movx	a,@dptr
   05DA FE                 3055 	mov	r6,a
   05DB A3                 3056 	inc	dptr
   05DC E0                 3057 	movx	a,@dptr
   05DD FF                 3058 	mov	r7,a
   05DE 90s00r00           3059 	mov	dptr,#_ringpll_dac_fine
   05E1 74 20              3060 	mov	a,#0x20
   05E3 2E                 3061 	add	a,r6
   05E4 F0                 3062 	movx	@dptr,a
   05E5 E4                 3063 	clr	a
   05E6 3F                 3064 	addc	a,r7
   05E7 A3                 3065 	inc	dptr
   05E8 F0                 3066 	movx	@dptr,a
   05E9                    3067 00218$:
                           3068 ;	../../shared/src/ring_pll_cal.c:334: if(ringpll_dac_fine<dac_fine_min) { 
   05E9 90s00r00           3069 	mov	dptr,#_ringpll_dac_fine
   05EC E0                 3070 	movx	a,@dptr
   05ED FE                 3071 	mov	r6,a
   05EE A3                 3072 	inc	dptr
   05EF E0                 3073 	movx	a,@dptr
   05F0 FF                 3074 	mov	r7,a
   05F1 C3                 3075 	clr	c
   05F2 EE                 3076 	mov	a,r6
   05F3 9C                 3077 	subb	a,r4
   05F4 EF                 3078 	mov	a,r7
   05F5 9D                 3079 	subb	a,r5
   05F6 50 34              3080 	jnc	00226$
                           3081 ;	../../shared/src/ring_pll_cal.c:335: ringpll_dac_fine += 300; 
   05F8 90s00r00           3082 	mov	dptr,#_ringpll_dac_fine
   05FB 74 2C              3083 	mov	a,#0x2C
   05FD 2E                 3084 	add	a,r6
   05FE F0                 3085 	movx	@dptr,a
   05FF 74 01              3086 	mov	a,#0x01
   0601 3F                 3087 	addc	a,r7
   0602 A3                 3088 	inc	dptr
   0603 F0                 3089 	movx	@dptr,a
                           3090 ;	../../shared/src/ring_pll_cal.c:336: if(SLLP_DAC_COARSE_RING>DAC_COARSE_MIN)	SLLP_DAC_COARSE_RING--;
   0604 90 83 04           3091 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0607 E0                 3092 	movx	a,@dptr
   0608 54 0F              3093 	anl	a,#0x0f
   060A 60 5B              3094 	jz	00227$
   060C C0 04              3095 	push	ar4
   060E C0 05              3096 	push	ar5
   0610 90 83 04           3097 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0613 E0                 3098 	movx	a,@dptr
   0614 54 0F              3099 	anl	a,#0x0f
   0616 FC                 3100 	mov	r4,a
   0617 1C                 3101 	dec	r4
   0618 90 83 04           3102 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   061B EC                 3103 	mov	a,r4
   061C 54 0F              3104 	anl	a,#0x0f
   061E F5 F0              3105 	mov	b,a
   0620 E0                 3106 	movx	a,@dptr
   0621 54 F0              3107 	anl	a,#0xf0
   0623 45 F0              3108 	orl	a,b
   0625 F0                 3109 	movx	@dptr,a
   0626 D0 05              3110 	pop	ar5
   0628 D0 04              3111 	pop	ar4
   062A 80 3B              3112 	sjmp	00227$
   062C                    3113 00226$:
                           3114 ;	../../shared/src/ring_pll_cal.c:338: else if(ringpll_dac_fine>dac_fine_max) { 
   062C C3                 3115 	clr	c
   062D EA                 3116 	mov	a,r2
   062E 9E                 3117 	subb	a,r6
   062F EB                 3118 	mov	a,r3
   0630 9F                 3119 	subb	a,r7
   0631 50 34              3120 	jnc	00227$
                           3121 ;	../../shared/src/ring_pll_cal.c:339: ringpll_dac_fine -= 300; 
   0633 EE                 3122 	mov	a,r6
   0634 24 D4              3123 	add	a,#0xd4
   0636 FE                 3124 	mov	r6,a
   0637 EF                 3125 	mov	a,r7
   0638 34 FE              3126 	addc	a,#0xfe
   063A FF                 3127 	mov	r7,a
   063B 90s00r00           3128 	mov	dptr,#_ringpll_dac_fine
   063E EE                 3129 	mov	a,r6
   063F F0                 3130 	movx	@dptr,a
   0640 A3                 3131 	inc	dptr
   0641 EF                 3132 	mov	a,r7
   0642 F0                 3133 	movx	@dptr,a
                           3134 ;	../../shared/src/ring_pll_cal.c:340: if(SLLP_DAC_COARSE_RING<DAC_COARSE_MAX) SLLP_DAC_COARSE_RING++;
   0643 90 83 04           3135 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0646 E0                 3136 	movx	a,@dptr
   0647 54 0F              3137 	anl	a,#0x0f
   0649 FE                 3138 	mov	r6,a
   064A C3                 3139 	clr	c
   064B 64 80              3140 	xrl	a,#0x80
   064D 94 8F              3141 	subb	a,#0x8f
   064F 50 16              3142 	jnc	00227$
   0651 90 83 04           3143 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   0654 E0                 3144 	movx	a,@dptr
   0655 54 0F              3145 	anl	a,#0x0f
   0657 FE                 3146 	mov	r6,a
   0658 0E                 3147 	inc	r6
   0659 90 83 04           3148 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   065C EE                 3149 	mov	a,r6
   065D 54 0F              3150 	anl	a,#0x0f
   065F F5 F0              3151 	mov	b,a
   0661 E0                 3152 	movx	a,@dptr
   0662 54 F0              3153 	anl	a,#0xf0
   0664 45 F0              3154 	orl	a,b
   0666 F0                 3155 	movx	@dptr,a
   0667                    3156 00227$:
                           3157 ;	../../shared/src/ring_pll_cal.c:343: ringpll_dac_fine_output();
   0667 C0 02              3158 	push	ar2
   0669 C0 03              3159 	push	ar3
   066B C0 04              3160 	push	ar4
   066D C0 05              3161 	push	ar5
   066F 78r00              3162 	mov	r0,#_ringpll_dac_fine_output
   0671 79s00              3163 	mov	r1,#(_ringpll_dac_fine_output >> 8)
   0673 7As00              3164 	mov	r2,#(_ringpll_dac_fine_output >> 16)
   0675 12s00r00           3165 	lcall	__sdcc_banked_call
                           3166 ;	../../shared/src/ring_pll_cal.c:345: delay01(40);
   0678 90 00 28           3167 	mov	dptr,#0x0028
   067B 78r00              3168 	mov	r0,#_delay01
   067D 79s00              3169 	mov	r1,#(_delay01 >> 8)
   067F 7As00              3170 	mov	r2,#(_delay01 >> 16)
   0681 12s00r00           3171 	lcall	__sdcc_banked_call
   0684 D0 05              3172 	pop	ar5
   0686 D0 04              3173 	pop	ar4
   0688 D0 03              3174 	pop	ar3
   068A D0 02              3175 	pop	ar2
                           3176 ;	../../shared/src/ring_pll_cal.c:347: } while ((ringpll_dac_fine>0) && (ringpll_dac_fine<dac_fine_max));
   068C 90s00r00           3177 	mov	dptr,#_ringpll_dac_fine
   068F E0                 3178 	movx	a,@dptr
   0690 FE                 3179 	mov	r6,a
   0691 A3                 3180 	inc	dptr
   0692 E0                 3181 	movx	a,@dptr
   0693 FF                 3182 	mov	r7,a
   0694 4E                 3183 	orl	a,r6
   0695 60 0A              3184 	jz	00231$
   0697 C3                 3185 	clr	c
   0698 EE                 3186 	mov	a,r6
   0699 9A                 3187 	subb	a,r2
   069A EF                 3188 	mov	a,r7
   069B 9B                 3189 	subb	a,r3
   069C 50 03              3190 	jnc	00370$
   069E 02s05r42           3191 	ljmp	00229$
   06A1                    3192 00370$:
   06A1                    3193 00231$:
                           3194 ;	../../shared/src/ring_pll_cal.c:354: reg_PLL_FBDIV_RING_9_8 = save_FBDIV_h;
   06A1 90 82 F0           3195 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_188
   06A4 A8*00              3196 	mov	r0,_bp
   06A6 08                 3197 	inc	r0
   06A7 E6                 3198 	mov	a,@r0
   06A8 25 E0              3199 	add	a,acc
   06AA 54 06              3200 	anl	a,#0x06
   06AC F5 F0              3201 	mov	b,a
   06AE E0                 3202 	movx	a,@dptr
   06AF 54 F9              3203 	anl	a,#0xf9
   06B1 45 F0              3204 	orl	a,b
   06B3 F0                 3205 	movx	@dptr,a
                           3206 ;	../../shared/src/ring_pll_cal.c:355: reg_PLL_FBDIV_RING_7_0 = save_FBDIV_l;
   06B4 90 82 F4           3207 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_189
   06B7 A8*00              3208 	mov	r0,_bp
   06B9 08                 3209 	inc	r0
   06BA 08                 3210 	inc	r0
   06BB E6                 3211 	mov	a,@r0
   06BC F0                 3212 	movx	@dptr,a
                           3213 ;	../../shared/src/ring_pll_cal.c:356: reg_ANA_FBCK_SEL_RING = save_FBCK_SEL;
   06BD 90 A3 18           3214 	mov	dptr,#_PM_CMN_REG1
   06C0 E5*00              3215 	mov	a,_bp
   06C2 24 03              3216 	add	a,#0x03
   06C4 F8                 3217 	mov	r0,a
   06C5 E6                 3218 	mov	a,@r0
   06C6 13                 3219 	rrc	a
   06C7 E0                 3220 	movx	a,@dptr
   06C8 92 E2              3221 	mov	acc.2,c
   06CA F0                 3222 	movx	@dptr,a
                           3223 ;	../../shared/src/ring_pll_cal.c:359: reg_FBC_PLLCAL_RING_EN = 0;
   06CB 90 A3 31           3224 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   06CE E0                 3225 	movx	a,@dptr
   06CF 54 FD              3226 	anl	a,#0xfd
   06D1 F0                 3227 	movx	@dptr,a
                           3228 ;	../../shared/src/ring_pll_cal.c:360: PLL_SHRTR_RING = 0;
   06D2 90 83 10           3229 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   06D5 E0                 3230 	movx	a,@dptr
   06D6 54 BF              3231 	anl	a,#0xbf
   06D8 F0                 3232 	movx	@dptr,a
                           3233 ;	../../shared/src/ring_pll_cal.c:361: PLL_CAL_EN_RING = 0;
   06D9 90 83 10           3234 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   06DC E0                 3235 	movx	a,@dptr
   06DD 54 7F              3236 	anl	a,#0x7f
   06DF F0                 3237 	movx	@dptr,a
                           3238 ;	../../shared/src/ring_pll_cal.c:363: timeout=0;
   06E0 C2*00              3239 	clr	_timeout
                           3240 ;	../../shared/src/ring_pll_cal.c:364: if(cmx_RINGPLL_CAL_TIMEOUT_DIS==0) {
   06E2 90 E6 49           3241 	mov	dptr,#(_CAL_TIME_OUT_AND_DIS + 0x0001)
   06E5 E0                 3242 	movx	a,@dptr
   06E6 20 E2 0A           3243 	jb	acc.2,00235$
                           3244 ;	../../shared/src/ring_pll_cal.c:365: timeout_start((uint16_t)RINGPLL_TIMEOUT_TIMER);
   06E9 75 8B F0           3245 	mov	_TMR1,#0xF0
   06EC 75 8D D8           3246 	mov	(_TMR1 >> 8),#0xD8
   06EF D2 8E              3247 	setb	_TR1
   06F1 C2*00              3248 	clr	_timeout
                           3249 ;	../../shared/src/ring_pll_cal.c:370: while(!reg_ANA_PLL_LOCK_RING_RD && !timeout);
   06F3                    3250 00235$:
   06F3 90 A3 19           3251 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   06F6 E0                 3252 	movx	a,@dptr
   06F7 20 E7 03           3253 	jb	acc.7,00237$
   06FA 30*00 F6           3254 	jnb	_timeout,00235$
   06FD                    3255 00237$:
                           3256 ;	../../shared/src/ring_pll_cal.c:373: if(timeout) {
   06FD 30*00 15           3257 	jnb	_timeout,00239$
                           3258 ;	../../shared/src/ring_pll_cal.c:377: cmx_PLL_CAL_RING_PASS = 0;
   0700 90 E6 4D           3259 	mov	dptr,#(_CAL_STATUS_READ + 0x0001)
   0703 E0                 3260 	movx	a,@dptr
   0704 54 F7              3261 	anl	a,#0xf7
   0706 F0                 3262 	movx	@dptr,a
                           3263 ;	../../shared/src/ring_pll_cal.c:379: ringpll_load(PWR);
   0707 75 82 00           3264 	mov	dpl,#0x00
   070A 78r00              3265 	mov	r0,#_ringpll_load
   070C 79s00              3266 	mov	r1,#(_ringpll_load >> 8)
   070E 7As00              3267 	mov	r2,#(_ringpll_load >> 16)
   0710 12s00r00           3268 	lcall	__sdcc_banked_call
   0713 80 0C              3269 	sjmp	00241$
   0715                    3270 00239$:
                           3271 ;	../../shared/src/ring_pll_cal.c:382: ringpll_save(PWR);
   0715 75 82 00           3272 	mov	dpl,#0x00
   0718 78r00              3273 	mov	r0,#_ringpll_save
   071A 79s00              3274 	mov	r1,#(_ringpll_save >> 8)
   071C 7As00              3275 	mov	r2,#(_ringpll_save >> 16)
   071E 12s00r00           3276 	lcall	__sdcc_banked_call
                           3277 ;	../../shared/src/ring_pll_cal.c:385: exit_out:
   0721                    3278 00241$:
                           3279 ;	../../shared/src/ring_pll_cal.c:386: ringpll_save(CONT);
   0721 75 82 01           3280 	mov	dpl,#0x01
   0724 78r00              3281 	mov	r0,#_ringpll_save
   0726 79s00              3282 	mov	r1,#(_ringpll_save >> 8)
   0728 7As00              3283 	mov	r2,#(_ringpll_save >> 16)
   072A 12s00r00           3284 	lcall	__sdcc_banked_call
                           3285 ;	../../shared/src/ring_pll_cal.c:387: ring_size_counter_mid = (RINGPLL_CAL_COUNTER_SIZE >> 1);   //register give max value, use mid point as start
   072D 90 E6 46           3286 	mov	dptr,#(_CON_CAL_STEP_SIZE5 + 0x0002)
   0730 E0                 3287 	movx	a,@dptr
   0731 C3                 3288 	clr	c
   0732 13                 3289 	rrc	a
   0733 FA                 3290 	mov	r2,a
   0734 90s00r00           3291 	mov	dptr,#_ring_size_counter_mid
   0737 F0                 3292 	movx	@dptr,a
                           3293 ;	../../shared/src/ring_pll_cal.c:388: ring_size_counter = ring_size_counter_mid;
   0738 90s00r00           3294 	mov	dptr,#_ring_size_counter
   073B EA                 3295 	mov	a,r2
   073C F0                 3296 	movx	@dptr,a
                           3297 ;	../../shared/src/ring_pll_cal.c:392: cmx_PLL_CAL_RING_DONE = 1;
   073D 90 E6 4F           3298 	mov	dptr,#(_CAL_STATUS_READ + 0x0003)
   0740 E0                 3299 	movx	a,@dptr
   0741 44 01              3300 	orl	a,#0x01
   0743 F0                 3301 	movx	@dptr,a
   0744 85*00 81           3302 	mov	sp,_bp
   0747 D0*00              3303 	pop	_bp
   0749 02s00r00           3304 	ljmp	__sdcc_banked_ret
                           3305 ;------------------------------------------------------------
                           3306 ;Allocation info for local variables in function 'ring_pll_cont'
                           3307 ;------------------------------------------------------------
                           3308 ;------------------------------------------------------------
                           3309 ;	../../shared/src/ring_pll_cal.c:397: void ring_pll_cont(void) BANKING_CTRL {
                           3310 ;	-----------------------------------------
                           3311 ;	 function ring_pll_cont
                           3312 ;	-----------------------------------------
   074C                    3313 _ring_pll_cont:
                           3314 ;	../../shared/src/ring_pll_cal.c:398: PHY_STATUS =  ST_RING_PLL_CONT;
   074C 90 22 30           3315 	mov	dptr,#_MCU_STATUS0_LANE
   074F 74 3A              3316 	mov	a,#0x3A
   0751 F0                 3317 	movx	@dptr,a
                           3318 ;	../../shared/src/ring_pll_cal.c:407: EA = 0;
   0752 C2 AF              3319 	clr	_EA
                           3320 ;	../../shared/src/ring_pll_cal.c:408: ringpll_dac_fine = cmx_cal_sllp_dac_fine_ring[CONT][rate]; 
   0754 90 E6 1F           3321 	mov	dptr,#(_CONTROL_CONFIG6 + 0x0003)
   0757 E0                 3322 	movx	a,@dptr
   0758 25 E0              3323 	add	a,acc
   075A 24 DC              3324 	add	a,#(_cmx_cal_sllp_dac_fine_ring + 0x0004)
   075C F5 82              3325 	mov	dpl,a
   075E E4                 3326 	clr	a
   075F 34 E5              3327 	addc	a,#((_cmx_cal_sllp_dac_fine_ring + 0x0004) >> 8)
   0761 F5 83              3328 	mov	dph,a
   0763 E0                 3329 	movx	a,@dptr
   0764 FA                 3330 	mov	r2,a
   0765 A3                 3331 	inc	dptr
   0766 E0                 3332 	movx	a,@dptr
   0767 FB                 3333 	mov	r3,a
   0768 90s00r00           3334 	mov	dptr,#_ringpll_dac_fine
   076B EA                 3335 	mov	a,r2
   076C F0                 3336 	movx	@dptr,a
   076D A3                 3337 	inc	dptr
   076E EB                 3338 	mov	a,r3
   076F F0                 3339 	movx	@dptr,a
                           3340 ;	../../shared/src/ring_pll_cal.c:409: SLLP_DAC_FINE_RING_10_8 = (uint8_t)(ringpll_dac_fine>>8); 
   0770 8B 04              3341 	mov	ar4,r3
   0772 90 83 08           3342 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_194
   0775 EC                 3343 	mov	a,r4
   0776 C4                 3344 	swap	a
   0777 23                 3345 	rl	a
   0778 54 E0              3346 	anl	a,#(0xe0&0xe0)
   077A F5 F0              3347 	mov	b,a
   077C E0                 3348 	movx	a,@dptr
   077D 54 1F              3349 	anl	a,#0x1f
   077F 45 F0              3350 	orl	a,b
   0781 F0                 3351 	movx	@dptr,a
                           3352 ;	../../shared/src/ring_pll_cal.c:410: SLLP_DAC_FINE_RING_7_0 = (uint8_t)ringpll_dac_fine;
   0782 8A 04              3353 	mov	ar4,r2
   0784 90 83 0C           3354 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_195
   0787 EC                 3355 	mov	a,r4
   0788 F0                 3356 	movx	@dptr,a
                           3357 ;	../../shared/src/ring_pll_cal.c:411: EA = 1;
   0789 D2 AF              3358 	setb	_EA
                           3359 ;	../../shared/src/ring_pll_cal.c:413: if ((PLL_VCON_OVERTH_RING==0&&cmx_PLL_VCON_POLARITY_INV==0) || (PLL_VCON_OVERTH_RING&&cmx_PLL_VCON_POLARITY_INV) )
   078B 90 A3 31           3360 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   078E E0                 3361 	movx	a,@dptr
   078F 20 E2 07           3362 	jb	acc.2,00106$
   0792 90 E6 44           3363 	mov	dptr,#_CON_CAL_STEP_SIZE5
   0795 E0                 3364 	movx	a,@dptr
   0796 30 E1 0E           3365 	jnb	acc.1,00101$
   0799                    3366 00106$:
   0799 90 A3 31           3367 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   079C E0                 3368 	movx	a,@dptr
   079D 30 E2 10           3369 	jnb	acc.2,00102$
   07A0 90 E6 44           3370 	mov	dptr,#_CON_CAL_STEP_SIZE5
   07A3 E0                 3371 	movx	a,@dptr
   07A4 30 E1 09           3372 	jnb	acc.1,00102$
   07A7                    3373 00101$:
                           3374 ;	../../shared/src/ring_pll_cal.c:414: ring_size_counter ++;
   07A7 90s00r00           3375 	mov	dptr,#_ring_size_counter
   07AA E0                 3376 	movx	a,@dptr
   07AB 24 01              3377 	add	a,#0x01
   07AD F0                 3378 	movx	@dptr,a
   07AE 80 09              3379 	sjmp	00103$
   07B0                    3380 00102$:
                           3381 ;	../../shared/src/ring_pll_cal.c:416: ring_size_counter --;
   07B0 90s00r00           3382 	mov	dptr,#_ring_size_counter
   07B3 E0                 3383 	movx	a,@dptr
   07B4 14                 3384 	dec	a
   07B5 90s00r00           3385 	mov	dptr,#_ring_size_counter
   07B8 F0                 3386 	movx	@dptr,a
   07B9                    3387 00103$:
                           3388 ;	../../shared/src/ring_pll_cal.c:422: if (ring_size_counter >= RINGPLL_CAL_COUNTER_SIZE) {
   07B9 90 E6 46           3389 	mov	dptr,#(_CON_CAL_STEP_SIZE5 + 0x0002)
   07BC E0                 3390 	movx	a,@dptr
   07BD FC                 3391 	mov	r4,a
   07BE 90s00r00           3392 	mov	dptr,#_ring_size_counter
   07C1 E0                 3393 	movx	a,@dptr
   07C2 FD                 3394 	mov	r5,a
   07C3 FE                 3395 	mov	r6,a
   07C4 EE                 3396 	mov	a,r6
   07C5 B5 04 00           3397 	cjne	a,ar4,00132$
   07C8                    3398 00132$:
   07C8 40 32              3399 	jc	00117$
                           3400 ;	../../shared/src/ring_pll_cal.c:423: ring_size_counter = ring_size_counter_mid;
   07CA 90s00r00           3401 	mov	dptr,#_ring_size_counter_mid
   07CD E0                 3402 	movx	a,@dptr
   07CE 90s00r00           3403 	mov	dptr,#_ring_size_counter
   07D1 F0                 3404 	movx	@dptr,a
                           3405 ;	../../shared/src/ring_pll_cal.c:424: if ( ringpll_dac_fine < (dac_fine_max_value - RINGPLL_CAL_FINE_STEP))
   07D2 90 E6 45           3406 	mov	dptr,#(_CON_CAL_STEP_SIZE5 + 0x0001)
   07D5 E0                 3407 	movx	a,@dptr
   07D6 FC                 3408 	mov	r4,a
   07D7 7E 00              3409 	mov	r6,#0x00
   07D9 74 FF              3410 	mov	a,#0xFF
   07DB C3                 3411 	clr	c
   07DC 9C                 3412 	subb	a,r4
   07DD FC                 3413 	mov	r4,a
   07DE 74 07              3414 	mov	a,#0x07
   07E0 9E                 3415 	subb	a,r6
   07E1 FE                 3416 	mov	r6,a
   07E2 C3                 3417 	clr	c
   07E3 EA                 3418 	mov	a,r2
   07E4 9C                 3419 	subb	a,r4
   07E5 EB                 3420 	mov	a,r3
   07E6 9E                 3421 	subb	a,r6
   07E7 50 53              3422 	jnc	00120$
                           3423 ;	../../shared/src/ring_pll_cal.c:425: ringpll_dac_fine += RINGPLL_CAL_FINE_STEP;
   07E9 90 E6 45           3424 	mov	dptr,#(_CON_CAL_STEP_SIZE5 + 0x0001)
   07EC E0                 3425 	movx	a,@dptr
   07ED FC                 3426 	mov	r4,a
   07EE 7E 00              3427 	mov	r6,#0x00
   07F0 90s00r00           3428 	mov	dptr,#_ringpll_dac_fine
   07F3 EC                 3429 	mov	a,r4
   07F4 2A                 3430 	add	a,r2
   07F5 F0                 3431 	movx	@dptr,a
   07F6 EE                 3432 	mov	a,r6
   07F7 3B                 3433 	addc	a,r3
   07F8 A3                 3434 	inc	dptr
   07F9 F0                 3435 	movx	@dptr,a
                           3436 ;	../../shared/src/ring_pll_cal.c:427: goto ringpll_cont_ext0;
   07FA 80 2B              3437 	sjmp	00118$
   07FC                    3438 00117$:
                           3439 ;	../../shared/src/ring_pll_cal.c:429: else if (ring_size_counter == 0) {
   07FC ED                 3440 	mov	a,r5
   07FD 70 3D              3441 	jnz	00120$
                           3442 ;	../../shared/src/ring_pll_cal.c:430: ring_size_counter = ring_size_counter_mid;
   07FF 90s00r00           3443 	mov	dptr,#_ring_size_counter_mid
   0802 E0                 3444 	movx	a,@dptr
   0803 90s00r00           3445 	mov	dptr,#_ring_size_counter
   0806 F0                 3446 	movx	@dptr,a
                           3447 ;	../../shared/src/ring_pll_cal.c:431: if ( ringpll_dac_fine > RINGPLL_CAL_FINE_STEP )
   0807 90 E6 45           3448 	mov	dptr,#(_CON_CAL_STEP_SIZE5 + 0x0001)
   080A E0                 3449 	movx	a,@dptr
   080B FC                 3450 	mov	r4,a
   080C 7D 00              3451 	mov	r5,#0x00
   080E C3                 3452 	clr	c
   080F EC                 3453 	mov	a,r4
   0810 9A                 3454 	subb	a,r2
   0811 ED                 3455 	mov	a,r5
   0812 9B                 3456 	subb	a,r3
   0813 50 27              3457 	jnc	00120$
                           3458 ;	../../shared/src/ring_pll_cal.c:432: ringpll_dac_fine -= RINGPLL_CAL_FINE_STEP;
   0815 90 E6 45           3459 	mov	dptr,#(_CON_CAL_STEP_SIZE5 + 0x0001)
   0818 E0                 3460 	movx	a,@dptr
   0819 FC                 3461 	mov	r4,a
   081A 7D 00              3462 	mov	r5,#0x00
   081C 90s00r00           3463 	mov	dptr,#_ringpll_dac_fine
   081F EA                 3464 	mov	a,r2
   0820 C3                 3465 	clr	c
   0821 9C                 3466 	subb	a,r4
   0822 F0                 3467 	movx	@dptr,a
   0823 EB                 3468 	mov	a,r3
   0824 9D                 3469 	subb	a,r5
   0825 A3                 3470 	inc	dptr
   0826 F0                 3471 	movx	@dptr,a
                           3472 ;	../../shared/src/ring_pll_cal.c:437: goto ringpll_cont_ext0;
   0827                    3473 00118$:
                           3474 ;	../../shared/src/ring_pll_cal.c:439: ringpll_dac_fine_output();
   0827 78r00              3475 	mov	r0,#_ringpll_dac_fine_output
   0829 79s00              3476 	mov	r1,#(_ringpll_dac_fine_output >> 8)
   082B 7As00              3477 	mov	r2,#(_ringpll_dac_fine_output >> 16)
   082D 12s00r00           3478 	lcall	__sdcc_banked_call
                           3479 ;	../../shared/src/ring_pll_cal.c:444: ringpll_save(CONT);
   0830 75 82 01           3480 	mov	dpl,#0x01
   0833 78r00              3481 	mov	r0,#_ringpll_save
   0835 79s00              3482 	mov	r1,#(_ringpll_save >> 8)
   0837 7As00              3483 	mov	r2,#(_ringpll_save >> 16)
   0839 12s00r00           3484 	lcall	__sdcc_banked_call
                           3485 ;	../../shared/src/ring_pll_cal.c:446: ringpll_cont_ext0:
   083C                    3486 00120$:
   083C 02s00r00           3487 	ljmp	__sdcc_banked_ret
                           3488 ;------------------------------------------------------------
                           3489 ;Allocation info for local variables in function 'ring_pll_fast_cal'
                           3490 ;------------------------------------------------------------
                           3491 ;i                         Allocated to stack - offset 1
                           3492 ;cnt_rdy                   Allocated to registers r6 
                           3493 ;save_FBDIV_h              Allocated to registers r6 
                           3494 ;save_FBDIV_l              Allocated to stack - offset 2
                           3495 ;save_FBCK_SEL             Allocated to stack - offset 3
                           3496 ;first_op_ring             Allocated to stack - offset 4
                           3497 ;Fmea                      Allocated to stack - offset 5
                           3498 ;Fmea_prev                 Allocated to stack - offset 7
                           3499 ;Fdiff                     Allocated to stack - offset 9
                           3500 ;delta_code                Allocated to stack - offset 11
                           3501 ;delta_code_first          Allocated to registers r4 r5 
                           3502 ;delta_code_nom            Allocated to registers r2 r3 
                           3503 ;sloc0                     Allocated to stack - offset 13
                           3504 ;------------------------------------------------------------
                           3505 ;	../../shared/src/ring_pll_cal.c:455: void ring_pll_fast_cal(void) BANKING_CTRL {
                           3506 ;	-----------------------------------------
                           3507 ;	 function ring_pll_fast_cal
                           3508 ;	-----------------------------------------
   083F                    3509 _ring_pll_fast_cal:
   083F C0*00              3510 	push	_bp
   0841 E5 81              3511 	mov	a,sp
   0843 F5*00              3512 	mov	_bp,a
   0845 24 0D              3513 	add	a,#0x0d
   0847 F5 81              3514 	mov	sp,a
                           3515 ;	../../shared/src/ring_pll_cal.c:461: Fmea_prev = 0;
   0849 E5*00              3516 	mov	a,_bp
   084B 24 07              3517 	add	a,#0x07
   084D F8                 3518 	mov	r0,a
   084E 76 00              3519 	mov	@r0,#0x00
   0850 08                 3520 	inc	r0
   0851 76 00              3521 	mov	@r0,#0x00
                           3522 ;	../../shared/src/ring_pll_cal.c:463: delta_code_first = 0;
   0853 7C 00              3523 	mov	r4,#0x00
   0855 7D 00              3524 	mov	r5,#0x00
                           3525 ;	../../shared/src/ring_pll_cal.c:471: timeout=0;
   0857 C2*00              3526 	clr	_timeout
                           3527 ;	../../shared/src/ring_pll_cal.c:472: if(cmx_RINGPLL_CAL_TIMEOUT_DIS==0) {
   0859 90 E6 49           3528 	mov	dptr,#(_CAL_TIME_OUT_AND_DIS + 0x0001)
   085C E0                 3529 	movx	a,@dptr
   085D 20 E2 0A           3530 	jb	acc.2,00102$
                           3531 ;	../../shared/src/ring_pll_cal.c:473: timeout_start((uint16_t)RINGPLL_TIMEOUT_TIMER);
   0860 75 8B F0           3532 	mov	_TMR1,#0xF0
   0863 75 8D D8           3533 	mov	(_TMR1 >> 8),#0xD8
   0866 D2 8E              3534 	setb	_TR1
   0868 C2*00              3535 	clr	_timeout
   086A                    3536 00102$:
                           3537 ;	../../shared/src/ring_pll_cal.c:487: if(reg_ANA_PU_PLL_DLY_RING==0) {
   086A 90 A3 4D           3538 	mov	dptr,#(_PM_CMN_REG2 + 0x0001)
   086D E0                 3539 	movx	a,@dptr
   086E 20 E2 35           3540 	jb	acc.2,00104$
                           3541 ;	../../shared/src/ring_pll_cal.c:488: reg_ANA_PU_PLL_RING = 1;
   0871 90 A3 24           3542 	mov	dptr,#_INPUT_CMN_PIN_REG2
   0874 E0                 3543 	movx	a,@dptr
   0875 44 20              3544 	orl	a,#0x20
   0877 F0                 3545 	movx	@dptr,a
                           3546 ;	../../shared/src/ring_pll_cal.c:489: delay01(5);
   0878 90 00 05           3547 	mov	dptr,#0x0005
   087B C0 04              3548 	push	ar4
   087D C0 05              3549 	push	ar5
   087F 78r00              3550 	mov	r0,#_delay01
   0881 79s00              3551 	mov	r1,#(_delay01 >> 8)
   0883 7As00              3552 	mov	r2,#(_delay01 >> 16)
   0885 12s00r00           3553 	lcall	__sdcc_banked_call
                           3554 ;	../../shared/src/ring_pll_cal.c:490: reg_ANA_PU_PLL_DLY_RING = 1;
   0888 90 A3 4D           3555 	mov	dptr,#(_PM_CMN_REG2 + 0x0001)
   088B E0                 3556 	movx	a,@dptr
   088C 44 04              3557 	orl	a,#0x04
   088E F0                 3558 	movx	@dptr,a
                           3559 ;	../../shared/src/ring_pll_cal.c:491: delay01(5);
   088F 90 00 05           3560 	mov	dptr,#0x0005
   0892 78r00              3561 	mov	r0,#_delay01
   0894 79s00              3562 	mov	r1,#(_delay01 >> 8)
   0896 7As00              3563 	mov	r2,#(_delay01 >> 16)
   0898 12s00r00           3564 	lcall	__sdcc_banked_call
   089B D0 05              3565 	pop	ar5
   089D D0 04              3566 	pop	ar4
                           3567 ;	../../shared/src/ring_pll_cal.c:492: reg_RESET_ANA_RING = 0;
   089F 90 A3 33           3568 	mov	dptr,#(_PLLCAL_REG1 + 0x0003)
   08A2 E0                 3569 	movx	a,@dptr
   08A3 54 F7              3570 	anl	a,#0xf7
   08A5 F0                 3571 	movx	@dptr,a
   08A6                    3572 00104$:
                           3573 ;	../../shared/src/ring_pll_cal.c:496: PLL_SHRTR_RING = 1;
   08A6 C0 04              3574 	push	ar4
   08A8 C0 05              3575 	push	ar5
   08AA 90 83 10           3576 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   08AD E0                 3577 	movx	a,@dptr
   08AE 44 40              3578 	orl	a,#0x40
   08B0 F0                 3579 	movx	@dptr,a
                           3580 ;	../../shared/src/ring_pll_cal.c:497: PLL_CAL_EN_RING = 1;
   08B1 90 83 10           3581 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   08B4 E0                 3582 	movx	a,@dptr
   08B5 44 80              3583 	orl	a,#0x80
   08B7 F0                 3584 	movx	@dptr,a
                           3585 ;	../../shared/src/ring_pll_cal.c:498: reg_FBC_CNT_START = 0;
   08B8 90 A3 30           3586 	mov	dptr,#_PLLCAL_REG1
   08BB E0                 3587 	movx	a,@dptr
   08BC 54 FE              3588 	anl	a,#0xfe
   08BE F0                 3589 	movx	@dptr,a
                           3590 ;	../../shared/src/ring_pll_cal.c:505: save_FBDIV_h = reg_PLL_FBDIV_RING_9_8;
   08BF 90 82 F0           3591 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_188
   08C2 E0                 3592 	movx	a,@dptr
   08C3 03                 3593 	rr	a
   08C4 54 03              3594 	anl	a,#0x03
   08C6 FE                 3595 	mov	r6,a
                           3596 ;	../../shared/src/ring_pll_cal.c:506: save_FBDIV_l = reg_PLL_FBDIV_RING_7_0;
   08C7 90 82 F4           3597 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_189
   08CA E0                 3598 	movx	a,@dptr
   08CB FF                 3599 	mov	r7,a
   08CC A8*00              3600 	mov	r0,_bp
   08CE 08                 3601 	inc	r0
   08CF 08                 3602 	inc	r0
   08D0 A6 07              3603 	mov	@r0,ar7
                           3604 ;	../../shared/src/ring_pll_cal.c:507: save_FBCK_SEL = reg_ANA_FBCK_SEL_RING;
   08D2 90 A3 18           3605 	mov	dptr,#_PM_CMN_REG1
   08D5 E0                 3606 	movx	a,@dptr
   08D6 03                 3607 	rr	a
   08D7 03                 3608 	rr	a
   08D8 54 01              3609 	anl	a,#0x01
   08DA FC                 3610 	mov	r4,a
   08DB E5*00              3611 	mov	a,_bp
   08DD 24 03              3612 	add	a,#0x03
   08DF F8                 3613 	mov	r0,a
   08E0 A6 04              3614 	mov	@r0,ar4
                           3615 ;	../../shared/src/ring_pll_cal.c:509: ringloadSpdtbl_4_fcnt();
   08E2 C0 04              3616 	push	ar4
   08E4 C0 05              3617 	push	ar5
   08E6 C0 06              3618 	push	ar6
   08E8 12s00r00           3619 	lcall	_ringloadSpdtbl_4_fcnt
                           3620 ;	../../shared/src/ring_pll_cal.c:511: ringpll_load(CONT);
   08EB 75 82 01           3621 	mov	dpl,#0x01
   08EE 78r00              3622 	mov	r0,#_ringpll_load
   08F0 79s00              3623 	mov	r1,#(_ringpll_load >> 8)
   08F2 7As00              3624 	mov	r2,#(_ringpll_load >> 16)
   08F4 12s00r00           3625 	lcall	__sdcc_banked_call
                           3626 ;	../../shared/src/ring_pll_cal.c:512: SLLP_DAC_VALID = 1;  SLLP_DAC_VALID = 0;
   08F7 90 83 04           3627 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_193
   08FA E0                 3628 	movx	a,@dptr
   08FB 44 40              3629 	orl	a,#0x40
   08FD F0                 3630 	movx	@dptr,a
   08FE E0                 3631 	movx	a,@dptr
   08FF 54 BF              3632 	anl	a,#0xbf
   0901 F0                 3633 	movx	@dptr,a
                           3634 ;	../../shared/src/ring_pll_cal.c:514: delay01(40); //first DAC_VALID need 8uS settling time from next new DAC value
   0902 90 00 28           3635 	mov	dptr,#0x0028
   0905 78r00              3636 	mov	r0,#_delay01
   0907 79s00              3637 	mov	r1,#(_delay01 >> 8)
   0909 7As00              3638 	mov	r2,#(_delay01 >> 16)
   090B 12s00r00           3639 	lcall	__sdcc_banked_call
   090E D0 06              3640 	pop	ar6
   0910 D0 05              3641 	pop	ar5
   0912 D0 04              3642 	pop	ar4
                           3643 ;	../../shared/src/ring_pll_cal.c:516: reg_FBC_PLLCAL_RING_EN = 1;
   0914 90 A3 31           3644 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   0917 E0                 3645 	movx	a,@dptr
   0918 44 02              3646 	orl	a,#0x02
   091A F0                 3647 	movx	@dptr,a
                           3648 ;	../../shared/src/ring_pll_cal.c:518: i = 0;
   091B E5*00              3649 	mov	a,_bp
   091D 24 0D              3650 	add	a,#0x0d
   091F F8                 3651 	mov	r0,a
   0920 76 00              3652 	mov	@r0,#0x00
                           3653 ;	../../shared/src/ring_pll_cal.c:519: first_op_ring = 0;
   0922 E5*00              3654 	mov	a,_bp
   0924 24 04              3655 	add	a,#0x04
   0926 F8                 3656 	mov	r0,a
   0927 76 00              3657 	mov	@r0,#0x00
                           3658 ;	../../shared/src/ring_pll_cal.c:662: pll_clk_ready_ring_1();
   0929 D0 05              3659 	pop	ar5
   092B D0 04              3660 	pop	ar4
                           3661 ;	../../shared/src/ring_pll_cal.c:521: do {
   092D A8*00              3662 	mov	r0,_bp
   092F 08                 3663 	inc	r0
   0930 76 00              3664 	mov	@r0,#0x00
   0932                    3665 00142$:
                           3666 ;	../../shared/src/ring_pll_cal.c:529: cnt_rdy = reg_FBC_PLLCAL_CNT_READY;
   0932 C0 06              3667 	push	ar6
   0934 90 A3 30           3668 	mov	dptr,#_PLLCAL_REG1
   0937 E0                 3669 	movx	a,@dptr
   0938 03                 3670 	rr	a
   0939 54 01              3671 	anl	a,#0x01
   093B FE                 3672 	mov	r6,a
                           3673 ;	../../shared/src/ring_pll_cal.c:530: reg_FBC_CNT_START = 1;
   093C 90 A3 30           3674 	mov	dptr,#_PLLCAL_REG1
   093F E0                 3675 	movx	a,@dptr
   0940 44 01              3676 	orl	a,#0x01
   0942 F0                 3677 	movx	@dptr,a
                           3678 ;	../../shared/src/ring_pll_cal.c:531: if( cnt_rdy ) while(reg_FBC_PLLCAL_CNT_READY && !timeout);
   0943 EE                 3679 	mov	a,r6
   0944 D0 06              3680 	pop	ar6
   0946 60 0A              3681 	jz	00112$
   0948                    3682 00106$:
   0948 90 A3 30           3683 	mov	dptr,#_PLLCAL_REG1
   094B E0                 3684 	movx	a,@dptr
   094C 30 E1 03           3685 	jnb	acc.1,00112$
   094F 30*00 F6           3686 	jnb	_timeout,00106$
                           3687 ;	../../shared/src/ring_pll_cal.c:532: while(!reg_FBC_PLLCAL_CNT_READY && !timeout);
   0952                    3688 00112$:
   0952 90 A3 30           3689 	mov	dptr,#_PLLCAL_REG1
   0955 E0                 3690 	movx	a,@dptr
   0956 20 E1 03           3691 	jb	acc.1,00114$
   0959 30*00 F6           3692 	jnb	_timeout,00112$
   095C                    3693 00114$:
                           3694 ;	../../shared/src/ring_pll_cal.c:533: reg_FBC_CNT_START = 0;
   095C 90 A3 30           3695 	mov	dptr,#_PLLCAL_REG1
   095F E0                 3696 	movx	a,@dptr
   0960 54 FE              3697 	anl	a,#0xfe
   0962 F0                 3698 	movx	@dptr,a
                           3699 ;	../../shared/src/ring_pll_cal.c:535: if(timeout) {
   0963 30*00 03           3700 	jnb	_timeout,00184$
   0966 02s0BrA1           3701 	ljmp	00144$
   0969                    3702 00184$:
                           3703 ;	../../shared/src/ring_pll_cal.c:544: Fmea = reg_FBC_PLLCAL_CNT_15_0;
   0969 C0 06              3704 	push	ar6
   096B 90 A3 2E           3705 	mov	dptr,#(_PLLCAL_REG0 + 0x0002)
   096E E0                 3706 	movx	a,@dptr
   096F FE                 3707 	mov	r6,a
   0970 A3                 3708 	inc	dptr
   0971 E0                 3709 	movx	a,@dptr
   0972 FA                 3710 	mov	r2,a
   0973 E5*00              3711 	mov	a,_bp
   0975 24 05              3712 	add	a,#0x05
   0977 F8                 3713 	mov	r0,a
   0978 A6 06              3714 	mov	@r0,ar6
   097A 08                 3715 	inc	r0
   097B A6 02              3716 	mov	@r0,ar2
                           3717 ;	../../shared/src/ring_pll_cal.c:556: if((Fmea >= (Ftarget_ring-TARGET_RANGE)) && (Fmea <= (Ftarget_ring+TARGET_RANGE))) {
   097D 90 E6 18           3718 	mov	dptr,#_CONTROL_CONFIG5
   0980 E0                 3719 	movx	a,@dptr
   0981 FA                 3720 	mov	r2,a
   0982 A3                 3721 	inc	dptr
   0983 E0                 3722 	movx	a,@dptr
   0984 FB                 3723 	mov	r3,a
   0985 1A                 3724 	dec	r2
   0986 BA FF 01           3725 	cjne	r2,#0xff,00185$
   0989 1B                 3726 	dec	r3
   098A                    3727 00185$:
   098A E5*00              3728 	mov	a,_bp
   098C 24 05              3729 	add	a,#0x05
   098E F8                 3730 	mov	r0,a
   098F C3                 3731 	clr	c
   0990 E6                 3732 	mov	a,@r0
   0991 9A                 3733 	subb	a,r2
   0992 08                 3734 	inc	r0
   0993 E6                 3735 	mov	a,@r0
   0994 9B                 3736 	subb	a,r3
   0995 D0 06              3737 	pop	ar6
   0997 40 35              3738 	jc	00139$
   0999 90 E6 18           3739 	mov	dptr,#_CONTROL_CONFIG5
   099C E0                 3740 	movx	a,@dptr
   099D FA                 3741 	mov	r2,a
   099E A3                 3742 	inc	dptr
   099F E0                 3743 	movx	a,@dptr
   09A0 FB                 3744 	mov	r3,a
   09A1 0A                 3745 	inc	r2
   09A2 BA 00 01           3746 	cjne	r2,#0x00,00187$
   09A5 0B                 3747 	inc	r3
   09A6                    3748 00187$:
   09A6 E5*00              3749 	mov	a,_bp
   09A8 24 05              3750 	add	a,#0x05
   09AA F8                 3751 	mov	r0,a
   09AB C3                 3752 	clr	c
   09AC EA                 3753 	mov	a,r2
   09AD 96                 3754 	subb	a,@r0
   09AE EB                 3755 	mov	a,r3
   09AF 08                 3756 	inc	r0
   09B0 96                 3757 	subb	a,@r0
   09B1 40 1B              3758 	jc	00139$
                           3759 ;	../../shared/src/ring_pll_cal.c:557: if (i == 0)	first_op_ring = 1;
   09B3 A8*00              3760 	mov	r0,_bp
   09B5 08                 3761 	inc	r0
   09B6 E6                 3762 	mov	a,@r0
   09B7 70 07              3763 	jnz	00118$
   09B9 E5*00              3764 	mov	a,_bp
   09BB 24 04              3765 	add	a,#0x04
   09BD F8                 3766 	mov	r0,a
   09BE 76 01              3767 	mov	@r0,#0x01
   09C0                    3768 00118$:
                           3769 ;	../../shared/src/ring_pll_cal.c:558: if (i >= min_step_number) {
   09C0 A8*00              3770 	mov	r0,_bp
   09C2 08                 3771 	inc	r0
   09C3 B6 01 00           3772 	cjne	@r0,#0x01,00190$
   09C6                    3773 00190$:
   09C6 50 03              3774 	jnc	00191$
   09C8 02s0Br82           3775 	ljmp	00140$
   09CB                    3776 00191$:
                           3777 ;	../../shared/src/ring_pll_cal.c:562: break;  //1
   09CB 02s0BrA1           3778 	ljmp	00144$
   09CE                    3779 00139$:
                           3780 ;	../../shared/src/ring_pll_cal.c:567: if((i == 0)||(first_op_ring == 1)) {
   09CE A8*00              3781 	mov	r0,_bp
   09D0 08                 3782 	inc	r0
   09D1 E6                 3783 	mov	a,@r0
   09D2 60 08              3784 	jz	00124$
   09D4 E5*00              3785 	mov	a,_bp
   09D6 24 04              3786 	add	a,#0x04
   09D8 F8                 3787 	mov	r0,a
   09D9 B6 01 4B           3788 	cjne	@r0,#0x01,00125$
   09DC                    3789 00124$:
                           3790 ;	../../shared/src/ring_pll_cal.c:568: first_op_ring = 0;
   09DC C0 06              3791 	push	ar6
   09DE E5*00              3792 	mov	a,_bp
   09E0 24 04              3793 	add	a,#0x04
   09E2 F8                 3794 	mov	r0,a
   09E3 76 00              3795 	mov	@r0,#0x00
                           3796 ;	../../shared/src/ring_pll_cal.c:569: delta_code = (Ftarget_ring - Fmea)<<code_ratio; //5; // * code_ratio;
   09E5 90 E6 18           3797 	mov	dptr,#_CONTROL_CONFIG5
   09E8 E0                 3798 	movx	a,@dptr
   09E9 FA                 3799 	mov	r2,a
   09EA A3                 3800 	inc	dptr
   09EB E0                 3801 	movx	a,@dptr
   09EC FB                 3802 	mov	r3,a
   09ED E5*00              3803 	mov	a,_bp
   09EF 24 05              3804 	add	a,#0x05
   09F1 F8                 3805 	mov	r0,a
   09F2 EA                 3806 	mov	a,r2
   09F3 C3                 3807 	clr	c
   09F4 96                 3808 	subb	a,@r0
   09F5 FA                 3809 	mov	r2,a
   09F6 EB                 3810 	mov	a,r3
   09F7 08                 3811 	inc	r0
   09F8 96                 3812 	subb	a,@r0
   09F9 FB                 3813 	mov	r3,a
   09FA 90 E6 1A           3814 	mov	dptr,#(_CONTROL_CONFIG5 + 0x0002)
   09FD E0                 3815 	movx	a,@dptr
   09FE FE                 3816 	mov	r6,a
   09FF 8E F0              3817 	mov	b,r6
   0A01 05 F0              3818 	inc	b
   0A03 80 06              3819 	sjmp	00196$
   0A05                    3820 00195$:
   0A05 EA                 3821 	mov	a,r2
   0A06 2A                 3822 	add	a,r2
   0A07 FA                 3823 	mov	r2,a
   0A08 EB                 3824 	mov	a,r3
   0A09 33                 3825 	rlc	a
   0A0A FB                 3826 	mov	r3,a
   0A0B                    3827 00196$:
   0A0B D5 F0 F7           3828 	djnz	b,00195$
   0A0E E5*00              3829 	mov	a,_bp
   0A10 24 0B              3830 	add	a,#0x0b
   0A12 F8                 3831 	mov	r0,a
   0A13 A6 02              3832 	mov	@r0,ar2
   0A15 08                 3833 	inc	r0
   0A16 A6 03              3834 	mov	@r0,ar3
                           3835 ;	../../shared/src/ring_pll_cal.c:570: delta_code_first = delta_code;
   0A18 E5*00              3836 	mov	a,_bp
   0A1A 24 0B              3837 	add	a,#0x0b
   0A1C F8                 3838 	mov	r0,a
   0A1D 86 04              3839 	mov	ar4,@r0
   0A1F 08                 3840 	inc	r0
   0A20 86 05              3841 	mov	ar5,@r0
   0A22 D0 06              3842 	pop	ar6
   0A24 02s0ArEC           3843 	ljmp	00126$
   0A27                    3844 00125$:
                           3845 ;	../../shared/src/ring_pll_cal.c:573: Fdiff = Fmea - Fmea_prev;
   0A27 C0 06              3846 	push	ar6
   0A29 E5*00              3847 	mov	a,_bp
   0A2B 24 05              3848 	add	a,#0x05
   0A2D F8                 3849 	mov	r0,a
   0A2E E5*00              3850 	mov	a,_bp
   0A30 24 07              3851 	add	a,#0x07
   0A32 F9                 3852 	mov	r1,a
   0A33 E6                 3853 	mov	a,@r0
   0A34 C3                 3854 	clr	c
   0A35 97                 3855 	subb	a,@r1
   0A36 FA                 3856 	mov	r2,a
   0A37 08                 3857 	inc	r0
   0A38 E6                 3858 	mov	a,@r0
   0A39 09                 3859 	inc	r1
   0A3A 97                 3860 	subb	a,@r1
   0A3B FB                 3861 	mov	r3,a
   0A3C E5*00              3862 	mov	a,_bp
   0A3E 24 09              3863 	add	a,#0x09
   0A40 F8                 3864 	mov	r0,a
   0A41 A6 02              3865 	mov	@r0,ar2
   0A43 08                 3866 	inc	r0
   0A44 A6 03              3867 	mov	@r0,ar3
                           3868 ;	../../shared/src/ring_pll_cal.c:574: delta_code_nom = (Ftarget_ring - Fmea) * delta_code_first;
   0A46 90 E6 18           3869 	mov	dptr,#_CONTROL_CONFIG5
   0A49 E0                 3870 	movx	a,@dptr
   0A4A FE                 3871 	mov	r6,a
   0A4B A3                 3872 	inc	dptr
   0A4C E0                 3873 	movx	a,@dptr
   0A4D FA                 3874 	mov	r2,a
   0A4E E5*00              3875 	mov	a,_bp
   0A50 24 05              3876 	add	a,#0x05
   0A52 F8                 3877 	mov	r0,a
   0A53 EE                 3878 	mov	a,r6
   0A54 C3                 3879 	clr	c
   0A55 96                 3880 	subb	a,@r0
   0A56 FE                 3881 	mov	r6,a
   0A57 EA                 3882 	mov	a,r2
   0A58 08                 3883 	inc	r0
   0A59 96                 3884 	subb	a,@r0
   0A5A FA                 3885 	mov	r2,a
   0A5B 8C 03              3886 	mov	ar3,r4
   0A5D 8D 07              3887 	mov	ar7,r5
   0A5F C0 06              3888 	push	ar6
   0A61 C0 03              3889 	push	ar3
   0A63 C0 07              3890 	push	ar7
   0A65 8E 82              3891 	mov	dpl,r6
   0A67 8A 83              3892 	mov	dph,r2
   0A69 12s00r00           3893 	lcall	__mulint
   0A6C AA 82              3894 	mov	r2,dpl
   0A6E AB 83              3895 	mov	r3,dph
   0A70 15 81              3896 	dec	sp
   0A72 15 81              3897 	dec	sp
   0A74 D0 06              3898 	pop	ar6
                           3899 ;	../../shared/src/ring_pll_cal.c:575: if (Fdiff == 0)
   0A76 D0 06              3900 	pop	ar6
   0A78 E5*00              3901 	mov	a,_bp
   0A7A 24 09              3902 	add	a,#0x09
   0A7C F8                 3903 	mov	r0,a
   0A7D E6                 3904 	mov	a,@r0
   0A7E 08                 3905 	inc	r0
   0A7F 46                 3906 	orl	a,@r0
   0A80 70 37              3907 	jnz	00122$
                           3908 ;	../../shared/src/ring_pll_cal.c:576: delta_code = (Ftarget_ring - Fmea) * fdiff_0;
   0A82 90 E6 18           3909 	mov	dptr,#_CONTROL_CONFIG5
   0A85 E0                 3910 	movx	a,@dptr
   0A86 FA                 3911 	mov	r2,a
   0A87 A3                 3912 	inc	dptr
   0A88 E0                 3913 	movx	a,@dptr
   0A89 FB                 3914 	mov	r3,a
   0A8A E5*00              3915 	mov	a,_bp
   0A8C 24 05              3916 	add	a,#0x05
   0A8E F8                 3917 	mov	r0,a
   0A8F EA                 3918 	mov	a,r2
   0A90 C3                 3919 	clr	c
   0A91 96                 3920 	subb	a,@r0
   0A92 FA                 3921 	mov	r2,a
   0A93 EB                 3922 	mov	a,r3
   0A94 08                 3923 	inc	r0
   0A95 96                 3924 	subb	a,@r0
   0A96 FB                 3925 	mov	r3,a
   0A97 C0 06              3926 	push	ar6
   0A99 C0 02              3927 	push	ar2
   0A9B C0 03              3928 	push	ar3
   0A9D 90 00 14           3929 	mov	dptr,#0x0014
   0AA0 12s00r00           3930 	lcall	__mulint
   0AA3 AA 82              3931 	mov	r2,dpl
   0AA5 AB 83              3932 	mov	r3,dph
   0AA7 15 81              3933 	dec	sp
   0AA9 15 81              3934 	dec	sp
   0AAB D0 06              3935 	pop	ar6
   0AAD E5*00              3936 	mov	a,_bp
   0AAF 24 0B              3937 	add	a,#0x0b
   0AB1 F8                 3938 	mov	r0,a
   0AB2 A6 02              3939 	mov	@r0,ar2
   0AB4 08                 3940 	inc	r0
   0AB5 A6 03              3941 	mov	@r0,ar3
   0AB7 80 29              3942 	sjmp	00123$
   0AB9                    3943 00122$:
                           3944 ;	../../shared/src/ring_pll_cal.c:578: delta_code = delta_code_nom / Fdiff;
   0AB9 C0 06              3945 	push	ar6
   0ABB E5*00              3946 	mov	a,_bp
   0ABD 24 09              3947 	add	a,#0x09
   0ABF F8                 3948 	mov	r0,a
   0AC0 E6                 3949 	mov	a,@r0
   0AC1 C0 E0              3950 	push	acc
   0AC3 08                 3951 	inc	r0
   0AC4 E6                 3952 	mov	a,@r0
   0AC5 C0 E0              3953 	push	acc
   0AC7 8A 82              3954 	mov	dpl,r2
   0AC9 8B 83              3955 	mov	dph,r3
   0ACB 12s00r00           3956 	lcall	__divsint
   0ACE AA 82              3957 	mov	r2,dpl
   0AD0 AB 83              3958 	mov	r3,dph
   0AD2 15 81              3959 	dec	sp
   0AD4 15 81              3960 	dec	sp
   0AD6 D0 06              3961 	pop	ar6
   0AD8 E5*00              3962 	mov	a,_bp
   0ADA 24 0B              3963 	add	a,#0x0b
   0ADC F8                 3964 	mov	r0,a
   0ADD A6 02              3965 	mov	@r0,ar2
   0ADF 08                 3966 	inc	r0
   0AE0 A6 03              3967 	mov	@r0,ar3
   0AE2                    3968 00123$:
                           3969 ;	../../shared/src/ring_pll_cal.c:579: delta_code_first = delta_code;
   0AE2 E5*00              3970 	mov	a,_bp
   0AE4 24 0B              3971 	add	a,#0x0b
   0AE6 F8                 3972 	mov	r0,a
   0AE7 86 04              3973 	mov	ar4,@r0
   0AE9 08                 3974 	inc	r0
   0AEA 86 05              3975 	mov	ar5,@r0
   0AEC                    3976 00126$:
                           3977 ;	../../shared/src/ring_pll_cal.c:582: ringpll_dac_fine = ringpll_dac_fine + delta_code;
   0AEC 90s00r00           3978 	mov	dptr,#_ringpll_dac_fine
   0AEF E0                 3979 	movx	a,@dptr
   0AF0 FA                 3980 	mov	r2,a
   0AF1 A3                 3981 	inc	dptr
   0AF2 E0                 3982 	movx	a,@dptr
   0AF3 FB                 3983 	mov	r3,a
   0AF4 E5*00              3984 	mov	a,_bp
   0AF6 24 0B              3985 	add	a,#0x0b
   0AF8 F8                 3986 	mov	r0,a
   0AF9 90s00r00           3987 	mov	dptr,#_ringpll_dac_fine
   0AFC E6                 3988 	mov	a,@r0
   0AFD 2A                 3989 	add	a,r2
   0AFE F0                 3990 	movx	@dptr,a
   0AFF 08                 3991 	inc	r0
   0B00 E6                 3992 	mov	a,@r0
   0B01 3B                 3993 	addc	a,r3
   0B02 A3                 3994 	inc	dptr
   0B03 F0                 3995 	movx	@dptr,a
                           3996 ;	../../shared/src/ring_pll_cal.c:584: if (ringpll_dac_fine >= dac_fine_max_value) 
   0B04 90s00r00           3997 	mov	dptr,#_ringpll_dac_fine
   0B07 E0                 3998 	movx	a,@dptr
   0B08 FA                 3999 	mov	r2,a
   0B09 A3                 4000 	inc	dptr
   0B0A E0                 4001 	movx	a,@dptr
   0B0B FB                 4002 	mov	r3,a
   0B0C C3                 4003 	clr	c
   0B0D EA                 4004 	mov	a,r2
   0B0E 94 FF              4005 	subb	a,#0xFF
   0B10 EB                 4006 	mov	a,r3
   0B11 94 07              4007 	subb	a,#0x07
   0B13 40 0C              4008 	jc	00131$
                           4009 ;	../../shared/src/ring_pll_cal.c:585: ringpll_dac_fine = dac_fine_max_value;
   0B15 90s00r00           4010 	mov	dptr,#_ringpll_dac_fine
   0B18 74 FF              4011 	mov	a,#0xFF
   0B1A F0                 4012 	movx	@dptr,a
   0B1B A3                 4013 	inc	dptr
   0B1C 74 07              4014 	mov	a,#0x07
   0B1E F0                 4015 	movx	@dptr,a
   0B1F 80 0B              4016 	sjmp	00132$
   0B21                    4017 00131$:
                           4018 ;	../../shared/src/ring_pll_cal.c:586: else if (ringpll_dac_fine <= 0)
   0B21 EA                 4019 	mov	a,r2
   0B22 4B                 4020 	orl	a,r3
   0B23 70 07              4021 	jnz	00132$
                           4022 ;	../../shared/src/ring_pll_cal.c:587: ringpll_dac_fine = 0;
   0B25 90s00r00           4023 	mov	dptr,#_ringpll_dac_fine
   0B28 E4                 4024 	clr	a
   0B29 F0                 4025 	movx	@dptr,a
   0B2A A3                 4026 	inc	dptr
   0B2B F0                 4027 	movx	@dptr,a
   0B2C                    4028 00132$:
                           4029 ;	../../shared/src/ring_pll_cal.c:589: if ((ringpll_dac_fine == dac_fine_max_value) || (ringpll_dac_fine == 0)) {
   0B2C 90s00r00           4030 	mov	dptr,#_ringpll_dac_fine
   0B2F E0                 4031 	movx	a,@dptr
   0B30 FA                 4032 	mov	r2,a
   0B31 A3                 4033 	inc	dptr
   0B32 E0                 4034 	movx	a,@dptr
   0B33 FB                 4035 	mov	r3,a
   0B34 BA FF 05           4036 	cjne	r2,#0xFF,00200$
   0B37 BB 07 02           4037 	cjne	r3,#0x07,00200$
   0B3A 80 04              4038 	sjmp	00135$
   0B3C                    4039 00200$:
   0B3C EA                 4040 	mov	a,r2
   0B3D 4B                 4041 	orl	a,r3
   0B3E 70 11              4042 	jnz	00136$
   0B40                    4043 00135$:
                           4044 ;	../../shared/src/ring_pll_cal.c:590: if (i >= min_step_number) {
   0B40 A8*00              4045 	mov	r0,_bp
   0B42 08                 4046 	inc	r0
   0B43 B6 01 00           4047 	cjne	@r0,#0x01,00202$
   0B46                    4048 00202$:
   0B46 40 09              4049 	jc	00136$
                           4050 ;	../../shared/src/ring_pll_cal.c:594: cmx_PLL_CAL_RING_PASS = 0;
   0B48 90 E6 4D           4051 	mov	dptr,#(_CAL_STATUS_READ + 0x0001)
   0B4B E0                 4052 	movx	a,@dptr
   0B4C 54 F7              4053 	anl	a,#0xf7
   0B4E F0                 4054 	movx	@dptr,a
                           4055 ;	../../shared/src/ring_pll_cal.c:599: break;
   0B4F 80 50              4056 	sjmp	00144$
   0B51                    4057 00136$:
                           4058 ;	../../shared/src/ring_pll_cal.c:603: Fmea_prev = Fmea;
   0B51 E5*00              4059 	mov	a,_bp
   0B53 24 05              4060 	add	a,#0x05
   0B55 F8                 4061 	mov	r0,a
   0B56 E5*00              4062 	mov	a,_bp
   0B58 24 07              4063 	add	a,#0x07
   0B5A F9                 4064 	mov	r1,a
   0B5B E6                 4065 	mov	a,@r0
   0B5C F7                 4066 	mov	@r1,a
   0B5D 08                 4067 	inc	r0
   0B5E 09                 4068 	inc	r1
   0B5F E6                 4069 	mov	a,@r0
   0B60 F7                 4070 	mov	@r1,a
                           4071 ;	../../shared/src/ring_pll_cal.c:604: ringpll_dac_fine_output();
   0B61 C0 04              4072 	push	ar4
   0B63 C0 05              4073 	push	ar5
   0B65 C0 06              4074 	push	ar6
   0B67 78r00              4075 	mov	r0,#_ringpll_dac_fine_output
   0B69 79s00              4076 	mov	r1,#(_ringpll_dac_fine_output >> 8)
   0B6B 7As00              4077 	mov	r2,#(_ringpll_dac_fine_output >> 16)
   0B6D 12s00r00           4078 	lcall	__sdcc_banked_call
                           4079 ;	../../shared/src/ring_pll_cal.c:616: delay01(30); //6uSec settling time required after from second DAC_VALID toggle to new DAC value or SHRTR=0 
   0B70 90 00 1E           4080 	mov	dptr,#0x001E
   0B73 78r00              4081 	mov	r0,#_delay01
   0B75 79s00              4082 	mov	r1,#(_delay01 >> 8)
   0B77 7As00              4083 	mov	r2,#(_delay01 >> 16)
   0B79 12s00r00           4084 	lcall	__sdcc_banked_call
   0B7C D0 06              4085 	pop	ar6
   0B7E D0 05              4086 	pop	ar5
   0B80 D0 04              4087 	pop	ar4
   0B82                    4088 00140$:
                           4089 ;	../../shared/src/ring_pll_cal.c:618: i++;
   0B82 A8*00              4090 	mov	r0,_bp
   0B84 08                 4091 	inc	r0
   0B85 06                 4092 	inc	@r0
   0B86 A8*00              4093 	mov	r0,_bp
   0B88 08                 4094 	inc	r0
   0B89 E5*00              4095 	mov	a,_bp
   0B8B 24 0D              4096 	add	a,#0x0d
   0B8D F9                 4097 	mov	r1,a
   0B8E E6                 4098 	mov	a,@r0
   0B8F F7                 4099 	mov	@r1,a
                           4100 ;	../../shared/src/ring_pll_cal.c:620: } while (i < max_step_number);
   0B90 90 E6 1B           4101 	mov	dptr,#(_CONTROL_CONFIG5 + 0x0003)
   0B93 E0                 4102 	movx	a,@dptr
   0B94 FA                 4103 	mov	r2,a
   0B95 A8*00              4104 	mov	r0,_bp
   0B97 08                 4105 	inc	r0
   0B98 E6                 4106 	mov	a,@r0
   0B99 B5 02 00           4107 	cjne	a,ar2,00204$
   0B9C                    4108 00204$:
   0B9C 50 03              4109 	jnc	00205$
   0B9E 02s09r32           4110 	ljmp	00142$
   0BA1                    4111 00205$:
   0BA1                    4112 00144$:
                           4113 ;	../../shared/src/ring_pll_cal.c:621: reg_MCU_DEBUGF_LANE_7_0 = i; //test
   0BA1 90 22 C3           4114 	mov	dptr,#(_MCU_DEBUG3_LANE + 0x0003)
   0BA4 E5*00              4115 	mov	a,_bp
   0BA6 24 0D              4116 	add	a,#0x0d
   0BA8 F8                 4117 	mov	r0,a
   0BA9 E6                 4118 	mov	a,@r0
   0BAA F0                 4119 	movx	@dptr,a
                           4120 ;	../../shared/src/ring_pll_cal.c:622: reg_FBC_PLLCAL_RING_EN = 0;
   0BAB 90 A3 31           4121 	mov	dptr,#(_PLLCAL_REG1 + 0x0001)
   0BAE E0                 4122 	movx	a,@dptr
   0BAF 54 FD              4123 	anl	a,#0xfd
   0BB1 F0                 4124 	movx	@dptr,a
                           4125 ;	../../shared/src/ring_pll_cal.c:623: ringpll_save(CONT);
   0BB2 75 82 01           4126 	mov	dpl,#0x01
   0BB5 C0 06              4127 	push	ar6
   0BB7 78r00              4128 	mov	r0,#_ringpll_save
   0BB9 79s00              4129 	mov	r1,#(_ringpll_save >> 8)
   0BBB 7As00              4130 	mov	r2,#(_ringpll_save >> 16)
   0BBD 12s00r00           4131 	lcall	__sdcc_banked_call
   0BC0 D0 06              4132 	pop	ar6
                           4133 ;	../../shared/src/ring_pll_cal.c:630: reg_PLL_FBDIV_RING_9_8 = save_FBDIV_h;
   0BC2 90 82 F0           4134 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_188
   0BC5 EE                 4135 	mov	a,r6
   0BC6 2E                 4136 	add	a,r6
   0BC7 54 06              4137 	anl	a,#0x06
   0BC9 F5 F0              4138 	mov	b,a
   0BCB E0                 4139 	movx	a,@dptr
   0BCC 54 F9              4140 	anl	a,#0xf9
   0BCE 45 F0              4141 	orl	a,b
   0BD0 F0                 4142 	movx	@dptr,a
                           4143 ;	../../shared/src/ring_pll_cal.c:631: reg_PLL_FBDIV_RING_7_0 = save_FBDIV_l;
   0BD1 90 82 F4           4144 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_189
   0BD4 A8*00              4145 	mov	r0,_bp
   0BD6 08                 4146 	inc	r0
   0BD7 08                 4147 	inc	r0
   0BD8 E6                 4148 	mov	a,@r0
   0BD9 F0                 4149 	movx	@dptr,a
                           4150 ;	../../shared/src/ring_pll_cal.c:632: reg_ANA_FBCK_SEL_RING = save_FBCK_SEL;
   0BDA 90 A3 18           4151 	mov	dptr,#_PM_CMN_REG1
   0BDD E5*00              4152 	mov	a,_bp
   0BDF 24 03              4153 	add	a,#0x03
   0BE1 F8                 4154 	mov	r0,a
   0BE2 E6                 4155 	mov	a,@r0
   0BE3 13                 4156 	rrc	a
   0BE4 E0                 4157 	movx	a,@dptr
   0BE5 92 E2              4158 	mov	acc.2,c
   0BE7 F0                 4159 	movx	@dptr,a
                           4160 ;	../../shared/src/ring_pll_cal.c:635: ring_size_counter = ring_size_counter_mid;
   0BE8 90s00r00           4161 	mov	dptr,#_ring_size_counter_mid
   0BEB E0                 4162 	movx	a,@dptr
   0BEC FA                 4163 	mov	r2,a
   0BED 90s00r00           4164 	mov	dptr,#_ring_size_counter
   0BF0 F0                 4165 	movx	@dptr,a
                           4166 ;	../../shared/src/ring_pll_cal.c:637: PLL_CAL_EN_RING = 0;
   0BF1 90 83 10           4167 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   0BF4 E0                 4168 	movx	a,@dptr
   0BF5 54 7F              4169 	anl	a,#0x7f
   0BF7 F0                 4170 	movx	@dptr,a
                           4171 ;	../../shared/src/ring_pll_cal.c:638: PLL_SHRTR_RING = 0;
   0BF8 90 83 10           4172 	mov	dptr,#_UPHY14_CMN_ANAREG_TOP_196
   0BFB E0                 4173 	movx	a,@dptr
   0BFC 54 BF              4174 	anl	a,#0xbf
   0BFE F0                 4175 	movx	@dptr,a
                           4176 ;	../../shared/src/ring_pll_cal.c:643: while(!reg_ANA_PLL_LOCK_RING_RD && !timeout);
   0BFF                    4177 00146$:
   0BFF 90 A3 19           4178 	mov	dptr,#(_PM_CMN_REG1 + 0x0001)
   0C02 E0                 4179 	movx	a,@dptr
   0C03 20 E7 03           4180 	jb	acc.7,00148$
   0C06 30*00 F6           4181 	jnb	_timeout,00146$
   0C09                    4182 00148$:
                           4183 ;	../../shared/src/ring_pll_cal.c:649: if(timeout) cmx_PLL_CAL_RING_PASS = 0;
   0C09 30*00 07           4184 	jnb	_timeout,00150$
   0C0C 90 E6 4D           4185 	mov	dptr,#(_CAL_STATUS_READ + 0x0001)
   0C0F E0                 4186 	movx	a,@dptr
   0C10 54 F7              4187 	anl	a,#0xf7
   0C12 F0                 4188 	movx	@dptr,a
   0C13                    4189 00150$:
                           4190 ;	../../shared/src/ring_pll_cal.c:658: if(PHY_STATUS != ST_SPDCHG) {
   0C13 90 22 30           4191 	mov	dptr,#_MCU_STATUS0_LANE
   0C16 E0                 4192 	movx	a,@dptr
   0C17 FA                 4193 	mov	r2,a
   0C18 BA 19 02           4194 	cjne	r2,#0x19,00209$
   0C1B 80 0C              4195 	sjmp	00152$
   0C1D                    4196 00209$:
                           4197 ;	../../shared/src/ring_pll_cal.c:659: delay01(200);	//delay 20usec for glitch
   0C1D 90 00 C8           4198 	mov	dptr,#0x00C8
   0C20 78r00              4199 	mov	r0,#_delay01
   0C22 79s00              4200 	mov	r1,#(_delay01 >> 8)
   0C24 7As00              4201 	mov	r2,#(_delay01 >> 16)
   0C26 12s00r00           4202 	lcall	__sdcc_banked_call
   0C29                    4203 00152$:
                           4204 ;	../../shared/src/ring_pll_cal.c:662: pll_clk_ready_ring_1();
   0C29 78r00              4205 	mov	r0,#_pll_clk_ready_ring_1
   0C2B 79s00              4206 	mov	r1,#(_pll_clk_ready_ring_1 >> 8)
   0C2D 7As00              4207 	mov	r2,#(_pll_clk_ready_ring_1 >> 16)
   0C2F 12s00r00           4208 	lcall	__sdcc_banked_call
   0C32 85*00 81           4209 	mov	sp,_bp
   0C35 D0*00              4210 	pop	_bp
   0C37 02s00r00           4211 	ljmp	__sdcc_banked_ret
                           4212 	.area CSEG    (CODE)
                           4213 	.area BANK1   (CODE)
                           4214 	.area CABS    (ABS,CODE)
